{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "credentials",
        "type",
        "version"
      ],
      "properties": {
        "additionalMongodConfig": {
          "description": "AdditionalMongodConfig is additional configuration that can be passed to\neach data-bearing mongod at runtime. Uses the same structure as the mongod\nconfiguration file:\nhttps://docs.mongodb.com/manual/reference/configuration-options/",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "agent": {
          "type": "object",
          "properties": {
            "backupAgent": {
              "type": "object",
              "properties": {
                "logRotate": {
                  "description": "LogRotate configures log rotation for the BackupAgent processes",
                  "type": "object",
                  "properties": {
                    "sizeThresholdMB": {
                      "description": "Maximum size for an individual log file before rotation.\nOM only supports ints",
                      "type": "integer"
                    },
                    "timeThresholdHrs": {
                      "description": "Number of hours after which this MongoDB Agent rotates the log file.",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "logLevel": {
              "type": "string"
            },
            "logRotate": {
              "description": "DEPRECATED please use mongod.logRotate",
              "type": "object",
              "required": [
                "sizeThresholdMB",
                "timeThresholdHrs"
              ],
              "properties": {
                "includeAuditLogsWithMongoDBLogs": {
                  "description": "set to 'true' to have the Automation Agent rotate the audit files along\nwith mongodb log files",
                  "type": "boolean"
                },
                "numTotal": {
                  "description": "maximum number of log files to have total",
                  "type": "integer"
                },
                "numUncompressed": {
                  "description": "maximum number of log files to leave uncompressed",
                  "type": "integer"
                },
                "percentOfDiskspace": {
                  "description": "Maximum percentage of the total disk space these log files should take up.\nThe string needs to be able to be converted to float64",
                  "type": "string"
                },
                "sizeThresholdMB": {
                  "description": "Maximum size for an individual log file before rotation.\nThe string needs to be able to be converted to float64.\nFractional values of MB are supported.",
                  "type": "string"
                },
                "timeThresholdHrs": {
                  "description": "maximum hours for an individual log file before rotation",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "maxLogFileDurationHours": {
              "type": "integer"
            },
            "mongod": {
              "description": "AgentLoggingMongodConfig contain settings for the mongodb processes configured by the agent",
              "type": "object",
              "properties": {
                "auditlogRotate": {
                  "description": "LogRotate configures audit log rotation for the mongodb processes",
                  "type": "object",
                  "required": [
                    "sizeThresholdMB",
                    "timeThresholdHrs"
                  ],
                  "properties": {
                    "includeAuditLogsWithMongoDBLogs": {
                      "description": "set to 'true' to have the Automation Agent rotate the audit files along\nwith mongodb log files",
                      "type": "boolean"
                    },
                    "numTotal": {
                      "description": "maximum number of log files to have total",
                      "type": "integer"
                    },
                    "numUncompressed": {
                      "description": "maximum number of log files to leave uncompressed",
                      "type": "integer"
                    },
                    "percentOfDiskspace": {
                      "description": "Maximum percentage of the total disk space these log files should take up.\nThe string needs to be able to be converted to float64",
                      "type": "string"
                    },
                    "sizeThresholdMB": {
                      "description": "Maximum size for an individual log file before rotation.\nThe string needs to be able to be converted to float64.\nFractional values of MB are supported.",
                      "type": "string"
                    },
                    "timeThresholdHrs": {
                      "description": "maximum hours for an individual log file before rotation",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                "logRotate": {
                  "description": "LogRotate configures log rotation for the mongodb processes",
                  "type": "object",
                  "required": [
                    "sizeThresholdMB",
                    "timeThresholdHrs"
                  ],
                  "properties": {
                    "includeAuditLogsWithMongoDBLogs": {
                      "description": "set to 'true' to have the Automation Agent rotate the audit files along\nwith mongodb log files",
                      "type": "boolean"
                    },
                    "numTotal": {
                      "description": "maximum number of log files to have total",
                      "type": "integer"
                    },
                    "numUncompressed": {
                      "description": "maximum number of log files to leave uncompressed",
                      "type": "integer"
                    },
                    "percentOfDiskspace": {
                      "description": "Maximum percentage of the total disk space these log files should take up.\nThe string needs to be able to be converted to float64",
                      "type": "string"
                    },
                    "sizeThresholdMB": {
                      "description": "Maximum size for an individual log file before rotation.\nThe string needs to be able to be converted to float64.\nFractional values of MB are supported.",
                      "type": "string"
                    },
                    "timeThresholdHrs": {
                      "description": "maximum hours for an individual log file before rotation",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                },
                "systemLog": {
                  "description": "SystemLog configures system log of mongod",
                  "type": "object",
                  "required": [
                    "destination",
                    "logAppend",
                    "path"
                  ],
                  "properties": {
                    "destination": {
                      "type": "string"
                    },
                    "logAppend": {
                      "type": "boolean"
                    },
                    "path": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "monitoringAgent": {
              "type": "object",
              "properties": {
                "logRotate": {
                  "description": "LogRotate configures log rotation for the BackupAgent processes",
                  "type": "object",
                  "properties": {
                    "sizeThresholdMB": {
                      "description": "Maximum size for an individual log file before rotation.\nOM only supports ints",
                      "type": "integer"
                    },
                    "timeThresholdHrs": {
                      "description": "Number of hours after which this MongoDB Agent rotates the log file.",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "readinessProbe": {
              "type": "object",
              "properties": {
                "environmentVariables": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "startupOptions": {
              "description": "StartupParameters can be used to configure the startup parameters with which the agent starts. That also contains\nlog rotation settings as defined here:",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "systemLog": {
              "description": "DEPRECATED please use mongod.systemLog",
              "type": "object",
              "required": [
                "destination",
                "logAppend",
                "path"
              ],
              "properties": {
                "destination": {
                  "type": "string"
                },
                "logAppend": {
                  "type": "boolean"
                },
                "path": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "backup": {
          "description": "Backup contains configuration options for configuring\nbackup for this MongoDB resource",
          "type": "object",
          "properties": {
            "assignmentLabels": {
              "description": "Assignment Labels set in the Ops Manager",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "autoTerminateOnDeletion": {
              "description": "AutoTerminateOnDeletion indicates if the Operator should stop and terminate the Backup before the cleanup,\nwhen the MongoDB CR is deleted",
              "type": "boolean"
            },
            "encryption": {
              "description": "Encryption settings",
              "type": "object",
              "properties": {
                "kmip": {
                  "description": "Kmip corresponds to the KMIP configuration assigned to the Ops Manager Project's configuration.",
                  "type": "object",
                  "required": [
                    "client"
                  ],
                  "properties": {
                    "client": {
                      "description": "KMIP Client configuration",
                      "type": "object",
                      "properties": {
                        "clientCertificatePrefix": {
                          "description": "A prefix used to construct KMIP client certificate (and corresponding password) Secret names.\nThe names are generated using the following pattern:\nKMIP Client Certificate (TLS Secret):\n  \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client\nKMIP Client Certificate Password:\n  \u003cclientCertificatePrefix\u003e-\u003cCR Name\u003e-kmip-client-password\n  The expected key inside is called \"password\".",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "type": "string",
              "enum": [
                "enabled",
                "disabled",
                "terminated"
              ]
            },
            "snapshotSchedule": {
              "type": "object",
              "properties": {
                "clusterCheckpointIntervalMin": {
                  "type": "integer",
                  "enum": [
                    15,
                    30,
                    60
                  ]
                },
                "dailySnapshotRetentionDays": {
                  "description": "Number of days to retain daily snapshots. Setting 0 will disable this rule.",
                  "type": "integer",
                  "maximum": 365,
                  "minimum": 0
                },
                "fullIncrementalDayOfWeek": {
                  "description": "Day of the week when Ops Manager takes a full snapshot. This ensures a recent complete backup. Ops Manager sets the default value to SUNDAY.",
                  "type": "string",
                  "enum": [
                    "SUNDAY",
                    "MONDAY",
                    "TUESDAY",
                    "WEDNESDAY",
                    "THURSDAY",
                    "FRIDAY",
                    "SATURDAY"
                  ]
                },
                "monthlySnapshotRetentionMonths": {
                  "description": "Number of months to retain weekly snapshots. Setting 0 will disable this rule.",
                  "type": "integer",
                  "maximum": 36,
                  "minimum": 0
                },
                "pointInTimeWindowHours": {
                  "description": "Number of hours in the past for which a point-in-time snapshot can be created.",
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    15,
                    30,
                    60,
                    90,
                    120,
                    180,
                    360
                  ]
                },
                "referenceHourOfDay": {
                  "description": "Hour of the day to schedule snapshots using a 24-hour clock, in UTC.",
                  "type": "integer",
                  "maximum": 23,
                  "minimum": 0
                },
                "referenceMinuteOfHour": {
                  "description": "Minute of the hour to schedule snapshots, in UTC.",
                  "type": "integer",
                  "maximum": 59,
                  "minimum": 0
                },
                "snapshotIntervalHours": {
                  "description": "Number of hours between snapshots.",
                  "type": "integer",
                  "enum": [
                    6,
                    8,
                    12,
                    24
                  ]
                },
                "snapshotRetentionDays": {
                  "description": "Number of days to keep recent snapshots.",
                  "type": "integer",
                  "maximum": 365,
                  "minimum": 1
                },
                "weeklySnapshotRetentionWeeks": {
                  "description": "Number of weeks to retain weekly snapshots. Setting 0 will disable this rule",
                  "type": "integer",
                  "maximum": 365,
                  "minimum": 0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "cloudManager": {
          "type": "object",
          "properties": {
            "configMapRef": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "clusterDomain": {
          "type": "string",
          "format": "hostname"
        },
        "clusterSpecList": {
          "type": "array",
          "items": {
            "description": "ClusterSpecItem is the mongodb multi-cluster spec that is specific to a\nparticular Kubernetes cluster, this maps to the statefulset created in each cluster",
            "type": "object",
            "required": [
              "members"
            ],
            "properties": {
              "clusterName": {
                "description": "ClusterName is name of the cluster where the MongoDB Statefulset will be scheduled, the\nname should have a one on one mapping with the service-account created in the central cluster\nto talk to the workload clusters.",
                "type": "string"
              },
              "externalAccess": {
                "description": "ExternalAccessConfiguration provides external access configuration for Multi-Cluster.",
                "type": "object",
                "properties": {
                  "externalDomain": {
                    "description": "An external domain that is used for exposing MongoDB to the outside world.",
                    "type": "string"
                  },
                  "externalService": {
                    "description": "Provides a way to override the default (NodePort) Service",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "description": "A map of annotations that shall be added to the externally available Service.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "spec": {
                        "description": "A wrapper for the Service spec object.",
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "memberConfig": {
                "description": "MemberConfig allows to specify votes, priorities and tags for each of the mongodb process.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "priority": {
                      "type": "string"
                    },
                    "tags": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "votes": {
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "members": {
                "description": "Amount of members for this MongoDB Replica Set",
                "type": "integer"
              },
              "podSpec": {
                "type": "object",
                "properties": {
                  "persistence": {
                    "description": "Note, that this field is used by MongoDB resources only, let's keep it here for simplicity",
                    "type": "object",
                    "properties": {
                      "multiple": {
                        "type": "object",
                        "properties": {
                          "data": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "storage": {
                                "type": "string"
                              },
                              "storageClass": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "journal": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "storage": {
                                "type": "string"
                              },
                              "storageClass": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "logs": {
                            "type": "object",
                            "properties": {
                              "labelSelector": {
                                "type": "object",
                                "x-kubernetes-preserve-unknown-fields": true
                              },
                              "storage": {
                                "type": "string"
                              },
                              "storageClass": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "single": {
                        "type": "object",
                        "properties": {
                          "labelSelector": {
                            "type": "object",
                            "x-kubernetes-preserve-unknown-fields": true
                          },
                          "storage": {
                            "type": "string"
                          },
                          "storageClass": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "podTemplate": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "additionalProperties": false
              },
              "service": {
                "description": "this is an optional service, it will get the name \"\u003crsName\u003e-service\" in case not provided",
                "type": "string"
              },
              "statefulSet": {
                "description": "StatefulSetConfiguration holds the optional custom StatefulSet\nthat should be merged into the operator created one.",
                "type": "object",
                "required": [
                  "spec"
                ],
                "properties": {
                  "metadata": {
                    "description": "StatefulSetMetadataWrapper is a wrapper around Labels and Annotations",
                    "type": "object",
                    "properties": {
                      "annotations": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "spec": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "connectivity": {
          "type": "object",
          "properties": {
            "replicaSetHorizons": {
              "description": "ReplicaSetHorizons holds list of maps of horizons to be configured in each of MongoDB processes.\nHorizons map horizon names to the node addresses for each process in the replicaset, e.g.:\n [\n   {\n     \"internal\": \"my-rs-0.my-internal-domain.com:31843\",\n     \"external\": \"my-rs-0.my-external-domain.com:21467\"\n   },\n   {\n     \"internal\": \"my-rs-1.my-internal-domain.com:31843\",\n     \"external\": \"my-rs-1.my-external-domain.com:21467\"\n   },\n   ...\n ]\nThe key of each item in the map is an arbitrary, user-chosen string that\nrepresents the name of the horizon. The value of the item is the host and,\noptionally, the port that this mongod node will be connected to from.",
              "type": "array",
              "items": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        "credentials": {
          "description": "Name of the Secret holding credentials information",
          "type": "string"
        },
        "duplicateServiceObjects": {
          "description": "In few service mesh options for ex: Istio, by default we would need to duplicate the\nservice objects created per pod in all the clusters to enable DNS resolution. Users can\nhowever configure their ServiceMesh with DNS proxy(https://istio.io/latest/docs/ops/configuration/traffic-management/dns-proxy/)\nenabled in which case the operator doesn't need to create the service objects per cluster. This options tells the operator\nwhether it should create the service objects in all the clusters or not. By default, if not specified the operator would create the duplicate svc objects.",
          "type": "boolean"
        },
        "externalAccess": {
          "description": "ExternalAccessConfiguration provides external access configuration.",
          "type": "object",
          "properties": {
            "externalDomain": {
              "description": "An external domain that is used for exposing MongoDB to the outside world.",
              "type": "string"
            },
            "externalService": {
              "description": "Provides a way to override the default (NodePort) Service",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "A map of annotations that shall be added to the externally available Service.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "spec": {
                  "description": "A wrapper for the Service spec object.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "featureCompatibilityVersion": {
          "type": "string"
        },
        "logLevel": {
          "type": "string",
          "enum": [
            "DEBUG",
            "INFO",
            "WARN",
            "ERROR",
            "FATAL"
          ]
        },
        "opsManager": {
          "type": "object",
          "properties": {
            "configMapRef": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "persistent": {
          "type": "boolean"
        },
        "prometheus": {
          "description": "Prometheus configurations.",
          "type": "object",
          "required": [
            "passwordSecretRef",
            "username"
          ],
          "properties": {
            "metricsPath": {
              "description": "Indicates path to the metrics endpoint.",
              "type": "string",
              "pattern": "^\\/[a-z0-9]+$"
            },
            "passwordSecretRef": {
              "description": "Name of a Secret containing a HTTP Basic Auth Password.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "key": {
                  "description": "Key is the key in the secret storing this password. Defaults to \"password\"",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the name of the secret storing this user's password",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "port": {
              "description": "Port where metrics endpoint will bind to. Defaults to 9216.",
              "type": "integer"
            },
            "tlsSecretKeyRef": {
              "description": "Name of a Secret (type kubernetes.io/tls) holding the certificates to use in the\nPrometheus endpoint.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "key": {
                  "description": "Key is the key in the secret storing this password. Defaults to \"password\"",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the name of the secret storing this user's password",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "username": {
              "description": "HTTP Basic Auth Username for metrics endpoint.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "security": {
          "type": "object",
          "properties": {
            "authentication": {
              "description": "Authentication holds various authentication related settings that affect\nthis MongoDB resource.",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "agents": {
                  "description": "Agents contains authentication configuration properties for the agents",
                  "type": "object",
                  "required": [
                    "mode"
                  ],
                  "properties": {
                    "automationLdapGroupDN": {
                      "type": "string"
                    },
                    "automationPasswordSecretRef": {
                      "description": "SecretKeySelector selects a key of a Secret.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "automationUserName": {
                      "type": "string"
                    },
                    "clientCertificateSecretRef": {
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "mode": {
                      "description": "Mode is the desired Authentication mode that the agents will use",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "enabled": {
                  "type": "boolean"
                },
                "ignoreUnknownUsers": {
                  "description": "IgnoreUnknownUsers maps to the inverse of auth.authoritativeSet",
                  "type": "boolean"
                },
                "internalCluster": {
                  "type": "string"
                },
                "ldap": {
                  "description": "LDAP Configuration",
                  "type": "object",
                  "properties": {
                    "authzQueryTemplate": {
                      "type": "string"
                    },
                    "bindQueryPasswordSecretRef": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "bindQueryUser": {
                      "type": "string"
                    },
                    "caConfigMapRef": {
                      "description": "Allows to point at a ConfigMap/key with a CA file to mount on the Pod",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nTODO: Add other useful fields. apiVersion, kind, uid?\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Drop `kubebuilder:default` when controller-gen doesn't need it https://github.com/kubernetes-sigs/kubebuilder/issues/3896.",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "servers": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "timeoutMS": {
                      "type": "integer"
                    },
                    "transportSecurity": {
                      "type": "string",
                      "enum": [
                        "tls",
                        "none"
                      ]
                    },
                    "userCacheInvalidationInterval": {
                      "type": "integer"
                    },
                    "userToDNMapping": {
                      "type": "string"
                    },
                    "validateLDAPServerConfig": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "modes": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": [
                      "X509",
                      "SCRAM",
                      "SCRAM-SHA-1",
                      "MONGODB-CR",
                      "SCRAM-SHA-256",
                      "LDAP"
                    ]
                  }
                },
                "requireClientTLSAuthentication": {
                  "description": "Clients should present valid TLS certificates",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "certsSecretPrefix": {
              "type": "string"
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "db",
                  "role"
                ],
                "properties": {
                  "authenticationRestrictions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientSource": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "serverAddress": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "db": {
                    "type": "string"
                  },
                  "privileges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "actions",
                        "resource"
                      ],
                      "properties": {
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "resource": {
                          "type": "object",
                          "properties": {
                            "cluster": {
                              "type": "boolean"
                            },
                            "collection": {
                              "type": "string"
                            },
                            "db": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "role": {
                    "type": "string"
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "db",
                        "role"
                      ],
                      "properties": {
                        "db": {
                          "type": "string"
                        },
                        "role": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "tls": {
              "type": "object",
              "properties": {
                "additionalCertificateDomains": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "ca": {
                  "description": "CA corresponds to a ConfigMap containing an entry for the CA certificate (ca.pem)\nused to validate the certificates created already.",
                  "type": "string"
                },
                "enabled": {
                  "description": "DEPRECATED please enable TLS by setting `security.certsSecretPrefix` or `security.tls.secretRef.prefix`.\nEnables TLS for this resource. This will make the operator try to mount a\nSecret with a defined name (\u003cresource-name\u003e-cert).\nThis is only used when enabling TLS on a MongoDB resource, and not on the\nAppDB, where TLS is configured by setting `secretRef.Name`.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "statefulSet": {
          "description": "StatefulSetConfiguration provides the statefulset override for each of the cluster's statefulset\nif \"StatefulSetConfiguration\" is specified at cluster level under \"clusterSpecList\" that takes precedence over\nthe global one",
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "metadata": {
              "description": "StatefulSetMetadataWrapper is a wrapper around Labels and Annotations",
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalProperties": false
        },
        "topology": {
          "description": "Topology sets the desired cluster topology of MongoDB resources\nIt defaults (if empty or not set) to SingleCluster. If MultiCluster specified,\nthen clusterSpecList field is mandatory and at least one member cluster has to be specified.",
          "type": "string",
          "enum": [
            "SingleCluster",
            "MultiCluster"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "Standalone",
            "ReplicaSet",
            "ShardedCluster"
          ]
        },
        "version": {
          "type": "string",
          "pattern": "^[0-9]+.[0-9]+.[0-9]+(-.+)?$|^$"
        }
      },
      "additionalProperties": false,
      "x-kubernetes-preserve-unknown-fields": true
    },
    "status": {
      "type": "object",
      "required": [
        "phase",
        "version"
      ],
      "properties": {
        "backup": {
          "type": "object",
          "required": [
            "statusName"
          ],
          "properties": {
            "statusName": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "clusterStatusList": {
          "description": "ClusterStatusList holds a list of clusterStatuses corresponding to each cluster",
          "type": "object",
          "properties": {
            "clusterStatuses": {
              "type": "array",
              "items": {
                "description": "ClusterStatusItem is the mongodb multi-cluster spec that is specific to a\nparticular Kubernetes cluster, this maps to the statefulset created in each cluster",
                "type": "object",
                "required": [
                  "phase"
                ],
                "properties": {
                  "clusterName": {
                    "description": "ClusterName is name of the cluster where the MongoDB Statefulset will be scheduled, the\nname should have a one on one mapping with the service-account created in the central cluster\nto talk to the workload clusters.",
                    "type": "string"
                  },
                  "lastTransition": {
                    "type": "string"
                  },
                  "members": {
                    "type": "integer"
                  },
                  "message": {
                    "type": "string"
                  },
                  "observedGeneration": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "phase": {
                    "type": "string"
                  },
                  "pvc": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "phase",
                        "statefulsetName"
                      ],
                      "properties": {
                        "phase": {
                          "type": "string"
                        },
                        "statefulsetName": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "resourcesNotReady": {
                    "type": "array",
                    "items": {
                      "description": "ResourceNotReady describes the dependent resource which is not ready yet",
                      "type": "object",
                      "required": [
                        "kind",
                        "name"
                      ],
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              },
                              "reason": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "kind": {
                          "description": "ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource",
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "warnings": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "featureCompatibilityVersion": {
          "type": "string"
        },
        "lastTransition": {
          "type": "string"
        },
        "link": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "type": "string"
        },
        "pvc": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "phase",
              "statefulsetName"
            ],
            "properties": {
              "phase": {
                "type": "string"
              },
              "statefulsetName": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "resourcesNotReady": {
          "type": "array",
          "items": {
            "description": "ResourceNotReady describes the dependent resource which is not ready yet",
            "type": "object",
            "required": [
              "kind",
              "name"
            ],
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "kind": {
                "description": "ResourceKind specifies a kind of a Kubernetes resource. Used in status of a Custom Resource",
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "version": {
          "type": "string"
        },
        "warnings": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  }
}
