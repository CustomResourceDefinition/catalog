{
  "description": "Rule is the Schema for the Rules API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "RuleSpec defines the desired state of Rule.\n\nContains information about a rule in Amazon EventBridge.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "description": {
          "description": "A description of the rule.",
          "type": "string"
        },
        "eventBusName": {
          "description": "The name or ARN of the event bus to associate with this rule. If you omit\nthis, the default event bus is used.\n\nRegex Pattern: `^(arn:aws[\\w-]*:events:[a-z]{2}-[a-z]+-[\\w-]+:[0-9]{12}:event-bus\\/)?[/\\.\\-_A-Za-z0-9]+$`",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "eventBusRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api",
          "type": "object",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "eventPattern": {
          "description": "The event pattern. For more information, see Amazon EventBridge event patterns\n(https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html)\nin the Amazon EventBridge User Guide .",
          "type": "string"
        },
        "name": {
          "description": "The name of the rule that you are creating or updating.\n\nRegex Pattern: `^[\\.\\-_A-Za-z0-9]+$`",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "roleARN": {
          "description": "The Amazon Resource Name (ARN) of the IAM role associated with the rule.\n\nIf you're setting an event bus in another account as the target and that\naccount granted permission to your account through an organization instead\nof directly by the account ID, you must specify a RoleArn with proper permissions\nin the Target structure, instead of here in this parameter.",
          "type": "string"
        },
        "scheduleExpression": {
          "description": "The scheduling expression. For example, \"cron(0 20 * * ? *)\" or \"rate(5 minutes)\".",
          "type": "string"
        },
        "state": {
          "description": "The state of the rule.\n\nValid values include:\n\n   * DISABLED: The rule is disabled. EventBridge does not match any events\n   against the rule.\n\n   * ENABLED: The rule is enabled. EventBridge matches events against the\n   rule, except for Amazon Web Services management events delivered through\n   CloudTrail.\n\n   * ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS: The rule is enabled for\n   all events, including Amazon Web Services management events delivered\n   through CloudTrail. Management events provide visibility into management\n   operations that are performed on resources in your Amazon Web Services\n   account. These are also known as control plane operations. For more information,\n   see Logging management events (https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-management-events-with-cloudtrail.html#logging-management-events)\n   in the CloudTrail User Guide, and Filtering management events from Amazon\n   Web Services services (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-service-event.html#eb-service-event-cloudtrail)\n   in the Amazon EventBridge User Guide . This value is only valid for rules\n   on the default (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is-how-it-works-concepts.html#eb-bus-concepts-buses)\n   event bus or custom event buses (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-create-event-bus.html).\n   It does not apply to partner event buses (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-saas.html).",
          "type": "string"
        },
        "tags": {
          "description": "The list of key-value pairs to associate with the rule.",
          "type": "array",
          "items": {
            "description": "A key-value pair associated with an Amazon Web Services resource. In EventBridge,\nrules and event buses support tagging.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "targets": {
          "type": "array",
          "items": {
            "description": "Targets are the resources to be invoked when a rule is triggered. For a complete\nlist of services and resources that can be set as a target, see PutTargets\n(https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutTargets.html).\n\nIf you are setting the event bus of another account as the target, and that\naccount granted permission to your account through an organization instead\nof directly by the account ID, then you must specify a RoleArn with proper\npermissions in the Target structure. For more information, see Sending and\nReceiving Events Between Amazon Web Services Accounts (https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-cross-account-event-delivery.html)\nin the Amazon EventBridge User Guide.",
            "type": "object",
            "properties": {
              "arn": {
                "type": "string"
              },
              "batchParameters": {
                "description": "The custom parameters to be used when the target is an Batch job.",
                "type": "object",
                "properties": {
                  "arrayProperties": {
                    "description": "The array properties for the submitted job, such as the size of the array.\nThe array size can be between 2 and 10,000. If you specify array properties\nfor a job, it becomes an array job. This parameter is used only if the target\nis an Batch job.",
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "additionalProperties": false
                  },
                  "jobDefinition": {
                    "type": "string"
                  },
                  "jobName": {
                    "type": "string"
                  },
                  "retryStrategy": {
                    "description": "The retry strategy to use for failed jobs, if the target is an Batch job.\nIf you specify a retry strategy here, it overrides the retry strategy defined\nin the job definition.",
                    "type": "object",
                    "properties": {
                      "attempts": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "deadLetterConfig": {
                "description": "Configuration details of the Amazon SQS queue for EventBridge to use as a\ndead-letter queue (DLQ).\n\nFor more information, see Using dead-letter queues to process undelivered\nevents (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-rule-event-delivery.html#eb-rule-dlq)\nin the EventBridge User Guide.",
                "type": "object",
                "properties": {
                  "arn": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "ecsParameters": {
                "description": "The custom parameters to be used when the target is an Amazon ECS task.",
                "type": "object",
                "properties": {
                  "capacityProviderStrategy": {
                    "type": "array",
                    "items": {
                      "description": "The details of a capacity provider strategy. To learn more, see CapacityProviderStrategyItem\n(https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html)\nin the Amazon ECS API Reference.",
                      "type": "object",
                      "properties": {
                        "base": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "capacityProvider": {
                          "type": "string"
                        },
                        "weight": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "enableECSManagedTags": {
                    "type": "boolean"
                  },
                  "enableExecuteCommand": {
                    "type": "boolean"
                  },
                  "group": {
                    "type": "string"
                  },
                  "launchType": {
                    "type": "string"
                  },
                  "networkConfiguration": {
                    "description": "This structure specifies the network configuration for an ECS task.",
                    "type": "object",
                    "properties": {
                      "awsVPCConfiguration": {
                        "description": "This structure specifies the VPC subnets and security groups for the task,\nand whether a public IP address is to be used. This structure is relevant\nonly for ECS tasks that use the awsvpc network mode.",
                        "type": "object",
                        "properties": {
                          "assignPublicIP": {
                            "type": "string"
                          },
                          "securityGroups": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "subnets": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "placementConstraints": {
                    "type": "array",
                    "items": {
                      "description": "An object representing a constraint on task placement. To learn more, see\nTask Placement Constraints (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html)\nin the Amazon Elastic Container Service Developer Guide.",
                      "type": "object",
                      "properties": {
                        "expression": {
                          "type": "string"
                        },
                        "type_": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "placementStrategy": {
                    "type": "array",
                    "items": {
                      "description": "The task placement strategy for a task or service. To learn more, see Task\nPlacement Strategies (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html)\nin the Amazon Elastic Container Service Service Developer Guide.",
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        },
                        "type_": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "platformVersion": {
                    "type": "string"
                  },
                  "propagateTags": {
                    "type": "string"
                  },
                  "referenceID": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "description": "A key-value pair associated with an Amazon Web Services resource. In EventBridge,\nrules and event buses support tagging.",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "taskCount": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "taskDefinitionARN": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "httpParameters": {
                "description": "These are custom parameter to be used when the target is an API Gateway APIs\nor EventBridge ApiDestinations. In the latter case, these are merged with\nany InvocationParameters specified on the Connection, with any values from\nthe Connection taking precedence.",
                "type": "object",
                "properties": {
                  "headerParameters": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "pathParameterValues": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "queryStringParameters": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "id": {
                "type": "string"
              },
              "input": {
                "type": "string"
              },
              "inputPath": {
                "type": "string"
              },
              "inputTransformer": {
                "description": "Contains the parameters needed for you to provide custom input to a target\nbased on one or more pieces of data extracted from the event.",
                "type": "object",
                "properties": {
                  "inputPathsMap": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "inputTemplate": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "kinesisParameters": {
                "description": "This object enables you to specify a JSON path to extract from the event\nand use as the partition key for the Amazon Kinesis data stream, so that\nyou can control the shard to which the event goes. If you do not include\nthis parameter, the default is to use the eventId as the partition key.",
                "type": "object",
                "properties": {
                  "partitionKeyPath": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "redshiftDataParameters": {
                "description": "These are custom parameters to be used when the target is a Amazon Redshift\ncluster to invoke the Amazon Redshift Data API ExecuteStatement based on\nEventBridge events.",
                "type": "object",
                "properties": {
                  "database": {
                    "description": "Redshift Database",
                    "type": "string"
                  },
                  "dbUser": {
                    "description": "Database user name",
                    "type": "string"
                  },
                  "secretManagerARN": {
                    "description": "Optional SecretManager ARN which stores the database credentials",
                    "type": "string"
                  },
                  "sql": {
                    "description": "A single Redshift SQL",
                    "type": "string"
                  },
                  "sqls": {
                    "description": "A list of SQLs.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "statementName": {
                    "description": "A name for Redshift DataAPI statement which can be used as filter of ListStatement.",
                    "type": "string"
                  },
                  "withEvent": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "retryPolicy": {
                "description": "A RetryPolicy object that includes information about the retry policy settings.",
                "type": "object",
                "properties": {
                  "maximumEventAgeInSeconds": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "maximumRetryAttempts": {
                    "type": "integer",
                    "format": "int64"
                  }
                },
                "additionalProperties": false
              },
              "roleARN": {
                "type": "string"
              },
              "runCommandParameters": {
                "description": "This parameter contains the criteria (either InstanceIds or a tag) used to\nspecify which EC2 instances are to be sent the command.",
                "type": "object",
                "properties": {
                  "runCommandTargets": {
                    "type": "array",
                    "items": {
                      "description": "Information about the EC2 instances that are to be sent the command, specified\nas key-value pairs. Each RunCommandTarget block can include only one key,\nbut this key may specify multiple values.",
                      "type": "object",
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "values": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "sageMakerPipelineParameters": {
                "description": "These are custom parameters to use when the target is a SageMaker Model Building\nPipeline that starts based on EventBridge events.",
                "type": "object",
                "properties": {
                  "pipelineParameterList": {
                    "type": "array",
                    "items": {
                      "description": "Name/Value pair of a parameter to start execution of a SageMaker Model Building\nPipeline.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "sqsParameters": {
                "description": "This structure includes the custom parameter to be used when the target is\nan SQS FIFO queue.",
                "type": "object",
                "properties": {
                  "messageGroupID": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "RuleStatus defines the observed state of Rule",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
