{
  "description": "EventBus is the Schema for the EventBuses API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EventBusSpec defines the desired state of EventBus.\n\nAn event bus receives events from a source, uses rules to evaluate them,\napplies any configured input transformation, and routes them to the appropriate\ntarget(s). Your account's default event bus receives events from Amazon Web\nServices services. A custom event bus can receive events from your custom\napplications and services. A partner event bus receives events from an event\nsource created by an SaaS partner. These events come from the partners services\nor applications.",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "eventSourceName": {
          "description": "If you are creating a partner event bus, this specifies the partner event\nsource that the new event bus will be matched with.\n\nRegex Pattern: `^aws\\.partner(/[\\.\\-_A-Za-z0-9]+){2,}$`",
          "type": "string"
        },
        "name": {
          "description": "The name of the new event bus.\n\nCustom event bus names can't contain the / character, but you can use the\n/ character in partner event bus names. In addition, for partner event buses,\nthe name must exactly match the name of the partner event source that this\nevent bus is matched to.\n\nYou can't use the name default for a custom event bus, as this name is already\nused for your account's default event bus.\n\nRegex Pattern: `^[/\\.\\-_A-Za-z0-9]+$`",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable once set"
            }
          ]
        },
        "tags": {
          "description": "Tags to associate with the event bus.",
          "type": "array",
          "items": {
            "description": "A key-value pair associated with an Amazon Web Services resource. In EventBridge,\nrules and event buses support tagging.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "EventBusStatus defines the observed state of EventBus",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
