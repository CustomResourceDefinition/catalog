{
  "description": "ContentKeyPolicy is the Schema for the ContentKeyPolicys API. Manages a Content Key Policy.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ContentKeyPolicySpec defines the desired state of ContentKeyPolicy",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "description": {
              "description": "A description for the Policy.",
              "type": "string"
            },
            "mediaServicesAccountName": {
              "description": "The Media Services account name. Changing this forces a new Content Key Policy to be created.",
              "type": "string"
            },
            "mediaServicesAccountNameRef": {
              "description": "Reference to a ServicesAccount in media to populate mediaServicesAccountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "mediaServicesAccountNameSelector": {
              "description": "Selector for a ServicesAccount in media to populate mediaServicesAccountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "policyOption": {
              "description": "One or more policy_option blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clearKeyConfigurationEnabled": {
                    "description": "Enable a configuration for non-DRM keys.",
                    "type": "boolean"
                  },
                  "fairplayConfiguration": {
                    "description": "A fairplay_configuration block as defined above. Check license requirements here https://docs.microsoft.com/azure/media-services/latest/fairplay-license-overview.",
                    "type": "object",
                    "properties": {
                      "askSecretRef": {
                        "description": "The key that must be used as FairPlay Application Secret key.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "offlineRentalConfiguration": {
                        "description": "A offline_rental_configuration block as defined below.",
                        "type": "object",
                        "properties": {
                          "playbackDurationSeconds": {
                            "description": "Playback duration.",
                            "type": "number"
                          },
                          "storageDurationSeconds": {
                            "description": "Storage duration.",
                            "type": "number"
                          }
                        },
                        "additionalProperties": false
                      },
                      "pfxPasswordSecretRef": {
                        "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "pfxSecretRef": {
                        "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "rentalAndLeaseKeyType": {
                        "description": "The rental and lease key type. Supported values are DualExpiry, PersistentLimited, PersistentUnlimited or Undefined.",
                        "type": "string"
                      },
                      "rentalDurationSeconds": {
                        "description": "The rental duration. Must be greater than 0.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "The name which should be used for this Policy Option.",
                    "type": "string"
                  },
                  "openRestrictionEnabled": {
                    "description": "Enable an open restriction. License or key will be delivered on every request.",
                    "type": "boolean"
                  },
                  "playreadyConfigurationLicense": {
                    "description": "One or more playready_configuration_license blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowTestDevices": {
                          "description": "A flag indicating whether test devices can use the license.",
                          "type": "boolean"
                        },
                        "beginDate": {
                          "description": "The begin date of license.",
                          "type": "string"
                        },
                        "contentKeyLocationFromHeaderEnabled": {
                          "description": "Specifies that the content key ID is in the PlayReady header.",
                          "type": "boolean"
                        },
                        "contentKeyLocationFromKeyId": {
                          "description": "The content key ID. Specifies that the content key ID is specified in the PlayReady configuration.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The PlayReady content type. Supported values are UltraVioletDownload, UltraVioletStreaming or Unspecified.",
                          "type": "string"
                        },
                        "expirationDate": {
                          "description": "The expiration date of license.",
                          "type": "string"
                        },
                        "gracePeriodSecretRef": {
                          "description": "The grace period of license.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "licenseType": {
                          "description": "The license type. Supported values are NonPersistent or Persistent.",
                          "type": "string"
                        },
                        "playRight": {
                          "description": "A play_right block as defined above.",
                          "type": "object",
                          "properties": {
                            "agcAndColorStripeRestriction": {
                              "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
                              "type": "number"
                            },
                            "allowPassingVideoContentToUnknownOutput": {
                              "description": "Configures Unknown output handling settings of the license. Supported values are Allowed, AllowedWithVideoConstriction or NotAllowed.",
                              "type": "string"
                            },
                            "analogVideoOpl": {
                              "description": "Specifies the output protection level for compressed digital audio. Supported values are 100, 150 or 200.",
                              "type": "number"
                            },
                            "compressedDigitalAudioOpl": {
                              "description": "Specifies the output protection level for compressed digital audio.Supported values are 100, 150, 200, 250 or 300.",
                              "type": "number"
                            },
                            "compressedDigitalVideoOpl": {
                              "description": "Specifies the output protection level for compressed digital video. Supported values are 400 or 500.",
                              "type": "number"
                            },
                            "digitalVideoOnlyContentRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "explicitAnalogTelevisionOutputRestriction": {
                              "description": "An explicit_analog_television_output_restriction block as defined above.",
                              "type": "object",
                              "properties": {
                                "bestEffortEnforced": {
                                  "description": "Indicates whether this restriction is enforced on a best effort basis. Possible values are true or false. Defaults to false.",
                                  "type": "boolean"
                                },
                                "controlBits": {
                                  "description": "The restriction control bits. Possible value is integer between 0 and 3 inclusive.",
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "firstPlayExpiration": {
                              "description": "The amount of time that the license is valid after the license is first used to play content.",
                              "type": "string"
                            },
                            "imageConstraintForAnalogComponentVideoRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "imageConstraintForAnalogComputerMonitorRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "scmsRestriction": {
                              "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
                              "type": "number"
                            },
                            "uncompressedDigitalAudioOpl": {
                              "description": "Specifies the output protection level for uncompressed digital audio. Supported values are 100, 150, 200, 250 or 300.",
                              "type": "number"
                            },
                            "uncompressedDigitalVideoOpl": {
                              "description": "Specifies the output protection level for uncompressed digital video. Supported values are 100, 250, 270 or 300.",
                              "type": "number"
                            }
                          },
                          "additionalProperties": false
                        },
                        "relativeBeginDate": {
                          "description": "The relative begin date of license.",
                          "type": "string"
                        },
                        "relativeExpirationDate": {
                          "description": "The relative expiration date of license.",
                          "type": "string"
                        },
                        "securityLevel": {
                          "description": "The security level of the PlayReady license. Possible values are SL150, SL2000 and SL3000. Please see this document for more information about security level. See this document for more information about SL3000 support.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "playreadyResponseCustomData": {
                    "description": "The custom response data of the PlayReady configuration. This only applies when playready_configuration_license is specified.",
                    "type": "string"
                  },
                  "tokenRestriction": {
                    "description": "A token_restriction block as defined below.",
                    "type": "object",
                    "properties": {
                      "alternateKey": {
                        "description": "One or more alternate_key block as defined above.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rsaTokenKeyExponentSecretRef": {
                              "description": "The RSA parameter exponent.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "rsaTokenKeyModulusSecretRef": {
                              "description": "The RSA parameter modulus.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "symmetricTokenKeySecretRef": {
                              "description": "The key value of the key. Specifies a symmetric key for token validation.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x509TokenKeyRawSecretRef": {
                              "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "audience": {
                        "description": "The audience for the token.",
                        "type": "string"
                      },
                      "issuer": {
                        "description": "The token issuer.",
                        "type": "string"
                      },
                      "openIdConnectDiscoveryDocument": {
                        "description": "The OpenID connect discovery document.",
                        "type": "string"
                      },
                      "primaryRsaTokenKeyExponentSecretRef": {
                        "description": "The RSA parameter exponent.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "primaryRsaTokenKeyModulusSecretRef": {
                        "description": "The RSA parameter modulus.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "primarySymmetricTokenKeySecretRef": {
                        "description": "The key value of the key. Specifies a symmetric key for token validation.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "primaryX509TokenKeyRawSecretRef": {
                        "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "requiredClaim": {
                        "description": "One or more required_claim blocks as defined above.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Token claim type.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Token claim value.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "tokenType": {
                        "description": "The type of token. Supported values are Jwt or Swt.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "widevineConfigurationTemplate": {
                    "description": "The Widevine template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Content Key Policy should exist. Changing this forces a new Content Key Policy to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "description": {
              "description": "A description for the Policy.",
              "type": "string"
            },
            "policyOption": {
              "description": "One or more policy_option blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clearKeyConfigurationEnabled": {
                    "description": "Enable a configuration for non-DRM keys.",
                    "type": "boolean"
                  },
                  "fairplayConfiguration": {
                    "description": "A fairplay_configuration block as defined above. Check license requirements here https://docs.microsoft.com/azure/media-services/latest/fairplay-license-overview.",
                    "type": "object",
                    "properties": {
                      "askSecretRef": {
                        "description": "The key that must be used as FairPlay Application Secret key.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "offlineRentalConfiguration": {
                        "description": "A offline_rental_configuration block as defined below.",
                        "type": "object",
                        "properties": {
                          "playbackDurationSeconds": {
                            "description": "Playback duration.",
                            "type": "number"
                          },
                          "storageDurationSeconds": {
                            "description": "Storage duration.",
                            "type": "number"
                          }
                        },
                        "additionalProperties": false
                      },
                      "pfxPasswordSecretRef": {
                        "description": "The password encrypting FairPlay certificate in PKCS 12 (pfx) format.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "pfxSecretRef": {
                        "description": "The Base64 representation of FairPlay certificate in PKCS 12 (pfx) format (including private key).",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "rentalAndLeaseKeyType": {
                        "description": "The rental and lease key type. Supported values are DualExpiry, PersistentLimited, PersistentUnlimited or Undefined.",
                        "type": "string"
                      },
                      "rentalDurationSeconds": {
                        "description": "The rental duration. Must be greater than 0.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "The name which should be used for this Policy Option.",
                    "type": "string"
                  },
                  "openRestrictionEnabled": {
                    "description": "Enable an open restriction. License or key will be delivered on every request.",
                    "type": "boolean"
                  },
                  "playreadyConfigurationLicense": {
                    "description": "One or more playready_configuration_license blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowTestDevices": {
                          "description": "A flag indicating whether test devices can use the license.",
                          "type": "boolean"
                        },
                        "beginDate": {
                          "description": "The begin date of license.",
                          "type": "string"
                        },
                        "contentKeyLocationFromHeaderEnabled": {
                          "description": "Specifies that the content key ID is in the PlayReady header.",
                          "type": "boolean"
                        },
                        "contentKeyLocationFromKeyId": {
                          "description": "The content key ID. Specifies that the content key ID is specified in the PlayReady configuration.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The PlayReady content type. Supported values are UltraVioletDownload, UltraVioletStreaming or Unspecified.",
                          "type": "string"
                        },
                        "expirationDate": {
                          "description": "The expiration date of license.",
                          "type": "string"
                        },
                        "gracePeriodSecretRef": {
                          "description": "The grace period of license.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "licenseType": {
                          "description": "The license type. Supported values are NonPersistent or Persistent.",
                          "type": "string"
                        },
                        "playRight": {
                          "description": "A play_right block as defined above.",
                          "type": "object",
                          "properties": {
                            "agcAndColorStripeRestriction": {
                              "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
                              "type": "number"
                            },
                            "allowPassingVideoContentToUnknownOutput": {
                              "description": "Configures Unknown output handling settings of the license. Supported values are Allowed, AllowedWithVideoConstriction or NotAllowed.",
                              "type": "string"
                            },
                            "analogVideoOpl": {
                              "description": "Specifies the output protection level for compressed digital audio. Supported values are 100, 150 or 200.",
                              "type": "number"
                            },
                            "compressedDigitalAudioOpl": {
                              "description": "Specifies the output protection level for compressed digital audio.Supported values are 100, 150, 200, 250 or 300.",
                              "type": "number"
                            },
                            "compressedDigitalVideoOpl": {
                              "description": "Specifies the output protection level for compressed digital video. Supported values are 400 or 500.",
                              "type": "number"
                            },
                            "digitalVideoOnlyContentRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "explicitAnalogTelevisionOutputRestriction": {
                              "description": "An explicit_analog_television_output_restriction block as defined above.",
                              "type": "object",
                              "properties": {
                                "bestEffortEnforced": {
                                  "description": "Indicates whether this restriction is enforced on a best effort basis. Possible values are true or false. Defaults to false.",
                                  "type": "boolean"
                                },
                                "controlBits": {
                                  "description": "The restriction control bits. Possible value is integer between 0 and 3 inclusive.",
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "firstPlayExpiration": {
                              "description": "The amount of time that the license is valid after the license is first used to play content.",
                              "type": "string"
                            },
                            "imageConstraintForAnalogComponentVideoRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "imageConstraintForAnalogComputerMonitorRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "scmsRestriction": {
                              "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
                              "type": "number"
                            },
                            "uncompressedDigitalAudioOpl": {
                              "description": "Specifies the output protection level for uncompressed digital audio. Supported values are 100, 150, 200, 250 or 300.",
                              "type": "number"
                            },
                            "uncompressedDigitalVideoOpl": {
                              "description": "Specifies the output protection level for uncompressed digital video. Supported values are 100, 250, 270 or 300.",
                              "type": "number"
                            }
                          },
                          "additionalProperties": false
                        },
                        "relativeBeginDate": {
                          "description": "The relative begin date of license.",
                          "type": "string"
                        },
                        "relativeExpirationDate": {
                          "description": "The relative expiration date of license.",
                          "type": "string"
                        },
                        "securityLevel": {
                          "description": "The security level of the PlayReady license. Possible values are SL150, SL2000 and SL3000. Please see this document for more information about security level. See this document for more information about SL3000 support.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "playreadyResponseCustomData": {
                    "description": "The custom response data of the PlayReady configuration. This only applies when playready_configuration_license is specified.",
                    "type": "string"
                  },
                  "tokenRestriction": {
                    "description": "A token_restriction block as defined below.",
                    "type": "object",
                    "properties": {
                      "alternateKey": {
                        "description": "One or more alternate_key block as defined above.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rsaTokenKeyExponentSecretRef": {
                              "description": "The RSA parameter exponent.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "rsaTokenKeyModulusSecretRef": {
                              "description": "The RSA parameter modulus.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "symmetricTokenKeySecretRef": {
                              "description": "The key value of the key. Specifies a symmetric key for token validation.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x509TokenKeyRawSecretRef": {
                              "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "audience": {
                        "description": "The audience for the token.",
                        "type": "string"
                      },
                      "issuer": {
                        "description": "The token issuer.",
                        "type": "string"
                      },
                      "openIdConnectDiscoveryDocument": {
                        "description": "The OpenID connect discovery document.",
                        "type": "string"
                      },
                      "primaryRsaTokenKeyExponentSecretRef": {
                        "description": "The RSA parameter exponent.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "primaryRsaTokenKeyModulusSecretRef": {
                        "description": "The RSA parameter modulus.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "primarySymmetricTokenKeySecretRef": {
                        "description": "The key value of the key. Specifies a symmetric key for token validation.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "primaryX509TokenKeyRawSecretRef": {
                        "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "requiredClaim": {
                        "description": "One or more required_claim blocks as defined above.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Token claim type.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Token claim value.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "tokenType": {
                        "description": "The type of token. Supported values are Jwt or Swt.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "widevineConfigurationTemplate": {
                    "description": "The Widevine template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.policyOption) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.policyOption))",
          "message": "spec.forProvider.policyOption is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ContentKeyPolicyStatus defines the observed state of ContentKeyPolicy.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "description": {
              "description": "A description for the Policy.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Content Key Policy.",
              "type": "string"
            },
            "mediaServicesAccountName": {
              "description": "The Media Services account name. Changing this forces a new Content Key Policy to be created.",
              "type": "string"
            },
            "policyOption": {
              "description": "One or more policy_option blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clearKeyConfigurationEnabled": {
                    "description": "Enable a configuration for non-DRM keys.",
                    "type": "boolean"
                  },
                  "fairplayConfiguration": {
                    "description": "A fairplay_configuration block as defined above. Check license requirements here https://docs.microsoft.com/azure/media-services/latest/fairplay-license-overview.",
                    "type": "object",
                    "properties": {
                      "offlineRentalConfiguration": {
                        "description": "A offline_rental_configuration block as defined below.",
                        "type": "object",
                        "properties": {
                          "playbackDurationSeconds": {
                            "description": "Playback duration.",
                            "type": "number"
                          },
                          "storageDurationSeconds": {
                            "description": "Storage duration.",
                            "type": "number"
                          }
                        },
                        "additionalProperties": false
                      },
                      "rentalAndLeaseKeyType": {
                        "description": "The rental and lease key type. Supported values are DualExpiry, PersistentLimited, PersistentUnlimited or Undefined.",
                        "type": "string"
                      },
                      "rentalDurationSeconds": {
                        "description": "The rental duration. Must be greater than 0.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "The name which should be used for this Policy Option.",
                    "type": "string"
                  },
                  "openRestrictionEnabled": {
                    "description": "Enable an open restriction. License or key will be delivered on every request.",
                    "type": "boolean"
                  },
                  "playreadyConfigurationLicense": {
                    "description": "One or more playready_configuration_license blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowTestDevices": {
                          "description": "A flag indicating whether test devices can use the license.",
                          "type": "boolean"
                        },
                        "beginDate": {
                          "description": "The begin date of license.",
                          "type": "string"
                        },
                        "contentKeyLocationFromHeaderEnabled": {
                          "description": "Specifies that the content key ID is in the PlayReady header.",
                          "type": "boolean"
                        },
                        "contentKeyLocationFromKeyId": {
                          "description": "The content key ID. Specifies that the content key ID is specified in the PlayReady configuration.",
                          "type": "string"
                        },
                        "contentType": {
                          "description": "The PlayReady content type. Supported values are UltraVioletDownload, UltraVioletStreaming or Unspecified.",
                          "type": "string"
                        },
                        "expirationDate": {
                          "description": "The expiration date of license.",
                          "type": "string"
                        },
                        "licenseType": {
                          "description": "The license type. Supported values are NonPersistent or Persistent.",
                          "type": "string"
                        },
                        "playRight": {
                          "description": "A play_right block as defined above.",
                          "type": "object",
                          "properties": {
                            "agcAndColorStripeRestriction": {
                              "description": "Configures Automatic Gain Control (AGC) and Color Stripe in the license. Must be between 0 and 3 inclusive.",
                              "type": "number"
                            },
                            "allowPassingVideoContentToUnknownOutput": {
                              "description": "Configures Unknown output handling settings of the license. Supported values are Allowed, AllowedWithVideoConstriction or NotAllowed.",
                              "type": "string"
                            },
                            "analogVideoOpl": {
                              "description": "Specifies the output protection level for compressed digital audio. Supported values are 100, 150 or 200.",
                              "type": "number"
                            },
                            "compressedDigitalAudioOpl": {
                              "description": "Specifies the output protection level for compressed digital audio.Supported values are 100, 150, 200, 250 or 300.",
                              "type": "number"
                            },
                            "compressedDigitalVideoOpl": {
                              "description": "Specifies the output protection level for compressed digital video. Supported values are 400 or 500.",
                              "type": "number"
                            },
                            "digitalVideoOnlyContentRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "explicitAnalogTelevisionOutputRestriction": {
                              "description": "An explicit_analog_television_output_restriction block as defined above.",
                              "type": "object",
                              "properties": {
                                "bestEffortEnforced": {
                                  "description": "Indicates whether this restriction is enforced on a best effort basis. Possible values are true or false. Defaults to false.",
                                  "type": "boolean"
                                },
                                "controlBits": {
                                  "description": "The restriction control bits. Possible value is integer between 0 and 3 inclusive.",
                                  "type": "number"
                                }
                              },
                              "additionalProperties": false
                            },
                            "firstPlayExpiration": {
                              "description": "The amount of time that the license is valid after the license is first used to play content.",
                              "type": "string"
                            },
                            "imageConstraintForAnalogComponentVideoRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "imageConstraintForAnalogComputerMonitorRestriction": {
                              "description": "Enables the Image Constraint For Analog Component Video Restriction in the license.",
                              "type": "boolean"
                            },
                            "scmsRestriction": {
                              "description": "Configures the Serial Copy Management System (SCMS) in the license. Must be between 0 and 3 inclusive.",
                              "type": "number"
                            },
                            "uncompressedDigitalAudioOpl": {
                              "description": "Specifies the output protection level for uncompressed digital audio. Supported values are 100, 150, 200, 250 or 300.",
                              "type": "number"
                            },
                            "uncompressedDigitalVideoOpl": {
                              "description": "Specifies the output protection level for uncompressed digital video. Supported values are 100, 250, 270 or 300.",
                              "type": "number"
                            }
                          },
                          "additionalProperties": false
                        },
                        "relativeBeginDate": {
                          "description": "The relative begin date of license.",
                          "type": "string"
                        },
                        "relativeExpirationDate": {
                          "description": "The relative expiration date of license.",
                          "type": "string"
                        },
                        "securityLevel": {
                          "description": "The security level of the PlayReady license. Possible values are SL150, SL2000 and SL3000. Please see this document for more information about security level. See this document for more information about SL3000 support.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "playreadyResponseCustomData": {
                    "description": "The custom response data of the PlayReady configuration. This only applies when playready_configuration_license is specified.",
                    "type": "string"
                  },
                  "tokenRestriction": {
                    "description": "A token_restriction block as defined below.",
                    "type": "object",
                    "properties": {
                      "alternateKey": {
                        "description": "One or more alternate_key block as defined above.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rsaTokenKeyExponentSecretRef": {
                              "description": "The RSA parameter exponent.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "rsaTokenKeyModulusSecretRef": {
                              "description": "The RSA parameter modulus.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "symmetricTokenKeySecretRef": {
                              "description": "The key value of the key. Specifies a symmetric key for token validation.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x509TokenKeyRawSecretRef": {
                              "description": "The raw data field of a certificate in PKCS 12 format (X509Certificate2 in .NET). Specifies a certificate for token validation.",
                              "type": "object",
                              "required": [
                                "key",
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "audience": {
                        "description": "The audience for the token.",
                        "type": "string"
                      },
                      "issuer": {
                        "description": "The token issuer.",
                        "type": "string"
                      },
                      "openIdConnectDiscoveryDocument": {
                        "description": "The OpenID connect discovery document.",
                        "type": "string"
                      },
                      "requiredClaim": {
                        "description": "One or more required_claim blocks as defined above.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Token claim type.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Token claim value.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "tokenType": {
                        "description": "The type of token. Supported values are Jwt or Swt.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "widevineConfigurationTemplate": {
                    "description": "The Widevine template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Content Key Policy should exist. Changing this forces a new Content Key Policy to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
