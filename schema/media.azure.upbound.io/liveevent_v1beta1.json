{
  "description": "LiveEvent is the Schema for the LiveEvents API. Manages a Live Event.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LiveEventSpec defines the desired state of LiveEvent",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "autoStartEnabled": {
              "description": "The flag indicates if the resource should be automatically started on creation. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "crossSiteAccessPolicy": {
              "description": "A cross_site_access_policy block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientAccessPolicy": {
                    "description": "The content of clientaccesspolicy.xml used by Silverlight.",
                    "type": "string"
                  },
                  "crossDomainPolicy": {
                    "description": "The content of the Cross Domain Policy (crossdomain.xml).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "A description for the live event.",
              "type": "string"
            },
            "encoding": {
              "description": "A encoding block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyFrameInterval": {
                    "description": "Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for the video and audio tracks of an encoding live event. For example, use PT2S to indicate 2 seconds. For the video track it also defines the key frame interval, or the length of a GoP (group of pictures). The value cannot be set for pass-through live events. Defaults to PT2S.",
                    "type": "string"
                  },
                  "presetName": {
                    "description": "The optional encoding preset name, used when type is not None. If the type is set to Standard, then the default preset name is Default720p. Else if the type is set to Premium1080p, Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "stretchMode": {
                    "description": "Specifies how the input video will be resized to fit the desired output resolution(s). Allowed values are None, AutoFit or AutoSize. Default is None.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Live event type. Possible values are None, Premium1080p, PassthroughBasic, PassthroughStandard and Standard. When set to None, the service simply passes through the incoming video and audio layer(s) to the output. When type is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers. Defaults to None. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "hostnamePrefix": {
              "description": "When use_static_hostname is set to true, the hostname_prefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center.",
              "type": "string"
            },
            "input": {
              "description": "A input block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accessToken": {
                    "description": "A UUID in string form to uniquely identify the stream. If omitted, the service will generate a unique value. Changing this forces a new value to be created.",
                    "type": "string"
                  },
                  "ipAccessControlAllow": {
                    "description": "One or more ip_access_control_allow blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The IP address or CIDR range.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Live Event. Changing this forces a new Live Event to be created.",
                          "type": "string"
                        },
                        "subnetPrefixLength": {
                          "description": "The subnet mask prefix length (see CIDR notation).",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "keyFrameIntervalDuration": {
                    "description": "ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. This field cannot be set when type is set to Encoding.",
                    "type": "string"
                  },
                  "streamingProtocol": {
                    "description": "The input protocol for the live event. Allowed values are FragmentedMP4 and RTMP. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "The Azure Region where the Live Event should exist. Changing this forces a new Live Event to be created.",
              "type": "string"
            },
            "mediaServicesAccountName": {
              "description": "The Media Services account name. Changing this forces a new Live Event to be created.",
              "type": "string"
            },
            "mediaServicesAccountNameRef": {
              "description": "Reference to a ServicesAccount in media to populate mediaServicesAccountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "mediaServicesAccountNameSelector": {
              "description": "Selector for a ServicesAccount in media to populate mediaServicesAccountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "preview": {
              "description": "A preview block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alternativeMediaId": {
                    "description": "An alternative media identifier associated with the streaming locator created for the preview. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the Streaming Policy specified in the streaming_policy_name field.",
                    "type": "string"
                  },
                  "ipAccessControlAllow": {
                    "description": "One or more ip_access_control_allow blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The IP address or CIDR range.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Live Event. Changing this forces a new Live Event to be created.",
                          "type": "string"
                        },
                        "subnetPrefixLength": {
                          "description": "The subnet mask prefix length (see CIDR notation).",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "previewLocator": {
                    "description": "The identifier of the preview locator in GUID format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "streamingPolicyName": {
                    "description": "The name of streaming policy used for the live event preview. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Live Event should exist. Changing this forces a new Live Event to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "streamOptions": {
              "description": "A list of options to use for the LiveEvent. Possible values are Default, LowLatency, LowLatencyV2. Please see more at this document. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Live Event.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "transcriptionLanguages": {
              "description": "Specifies a list of languages (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: en-US). See the Microsoft Documentation for more information about the live transcription feature and the list of supported languages.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "useStaticHostname": {
              "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. Changing this forces a new Live Event to be created.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "autoStartEnabled": {
              "description": "The flag indicates if the resource should be automatically started on creation. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "crossSiteAccessPolicy": {
              "description": "A cross_site_access_policy block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientAccessPolicy": {
                    "description": "The content of clientaccesspolicy.xml used by Silverlight.",
                    "type": "string"
                  },
                  "crossDomainPolicy": {
                    "description": "The content of the Cross Domain Policy (crossdomain.xml).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "A description for the live event.",
              "type": "string"
            },
            "encoding": {
              "description": "A encoding block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyFrameInterval": {
                    "description": "Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for the video and audio tracks of an encoding live event. For example, use PT2S to indicate 2 seconds. For the video track it also defines the key frame interval, or the length of a GoP (group of pictures). The value cannot be set for pass-through live events. Defaults to PT2S.",
                    "type": "string"
                  },
                  "presetName": {
                    "description": "The optional encoding preset name, used when type is not None. If the type is set to Standard, then the default preset name is Default720p. Else if the type is set to Premium1080p, Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "stretchMode": {
                    "description": "Specifies how the input video will be resized to fit the desired output resolution(s). Allowed values are None, AutoFit or AutoSize. Default is None.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Live event type. Possible values are None, Premium1080p, PassthroughBasic, PassthroughStandard and Standard. When set to None, the service simply passes through the incoming video and audio layer(s) to the output. When type is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers. Defaults to None. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "hostnamePrefix": {
              "description": "When use_static_hostname is set to true, the hostname_prefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center.",
              "type": "string"
            },
            "input": {
              "description": "A input block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accessToken": {
                    "description": "A UUID in string form to uniquely identify the stream. If omitted, the service will generate a unique value. Changing this forces a new value to be created.",
                    "type": "string"
                  },
                  "ipAccessControlAllow": {
                    "description": "One or more ip_access_control_allow blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The IP address or CIDR range.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Live Event. Changing this forces a new Live Event to be created.",
                          "type": "string"
                        },
                        "subnetPrefixLength": {
                          "description": "The subnet mask prefix length (see CIDR notation).",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "keyFrameIntervalDuration": {
                    "description": "ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. This field cannot be set when type is set to Encoding.",
                    "type": "string"
                  },
                  "streamingProtocol": {
                    "description": "The input protocol for the live event. Allowed values are FragmentedMP4 and RTMP. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "The Azure Region where the Live Event should exist. Changing this forces a new Live Event to be created.",
              "type": "string"
            },
            "preview": {
              "description": "A preview block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alternativeMediaId": {
                    "description": "An alternative media identifier associated with the streaming locator created for the preview. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the Streaming Policy specified in the streaming_policy_name field.",
                    "type": "string"
                  },
                  "ipAccessControlAllow": {
                    "description": "One or more ip_access_control_allow blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The IP address or CIDR range.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Live Event. Changing this forces a new Live Event to be created.",
                          "type": "string"
                        },
                        "subnetPrefixLength": {
                          "description": "The subnet mask prefix length (see CIDR notation).",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "previewLocator": {
                    "description": "The identifier of the preview locator in GUID format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "streamingPolicyName": {
                    "description": "The name of streaming policy used for the live event preview. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "streamOptions": {
              "description": "A list of options to use for the LiveEvent. Possible values are Default, LowLatency, LowLatencyV2. Please see more at this document. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Live Event.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "transcriptionLanguages": {
              "description": "Specifies a list of languages (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: en-US). See the Microsoft Documentation for more information about the live transcription feature and the list of supported languages.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "useStaticHostname": {
              "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. Changing this forces a new Live Event to be created.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.input) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.input))",
          "message": "spec.forProvider.input is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LiveEventStatus defines the observed state of LiveEvent.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "autoStartEnabled": {
              "description": "The flag indicates if the resource should be automatically started on creation. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "crossSiteAccessPolicy": {
              "description": "A cross_site_access_policy block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientAccessPolicy": {
                    "description": "The content of clientaccesspolicy.xml used by Silverlight.",
                    "type": "string"
                  },
                  "crossDomainPolicy": {
                    "description": "The content of the Cross Domain Policy (crossdomain.xml).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "A description for the live event.",
              "type": "string"
            },
            "encoding": {
              "description": "A encoding block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyFrameInterval": {
                    "description": "Use an ISO 8601 time value between 0.5 to 20 seconds to specify the output fragment length for the video and audio tracks of an encoding live event. For example, use PT2S to indicate 2 seconds. For the video track it also defines the key frame interval, or the length of a GoP (group of pictures). The value cannot be set for pass-through live events. Defaults to PT2S.",
                    "type": "string"
                  },
                  "presetName": {
                    "description": "The optional encoding preset name, used when type is not None. If the type is set to Standard, then the default preset name is Default720p. Else if the type is set to Premium1080p, Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "stretchMode": {
                    "description": "Specifies how the input video will be resized to fit the desired output resolution(s). Allowed values are None, AutoFit or AutoSize. Default is None.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Live event type. Possible values are None, Premium1080p, PassthroughBasic, PassthroughStandard and Standard. When set to None, the service simply passes through the incoming video and audio layer(s) to the output. When type is set to Standard or Premium1080p, a live encoder transcodes the incoming stream into multiple bitrates or layers. Defaults to None. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "hostnamePrefix": {
              "description": "When use_static_hostname is set to true, the hostname_prefix specifies the first part of the hostname assigned to the live event preview and ingest endpoints. The final hostname would be a combination of this prefix, the media service account name and a short code for the Azure Media Services data center.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Live Event.",
              "type": "string"
            },
            "input": {
              "description": "A input block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accessToken": {
                    "description": "A UUID in string form to uniquely identify the stream. If omitted, the service will generate a unique value. Changing this forces a new value to be created.",
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ipAccessControlAllow": {
                    "description": "One or more ip_access_control_allow blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The IP address or CIDR range.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Live Event. Changing this forces a new Live Event to be created.",
                          "type": "string"
                        },
                        "subnetPrefixLength": {
                          "description": "The subnet mask prefix length (see CIDR notation).",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "keyFrameIntervalDuration": {
                    "description": "ISO 8601 time duration of the key frame interval duration of the input. This value sets the EXT-X-TARGETDURATION property in the HLS output. For example, use PT2S to indicate 2 seconds. This field cannot be set when type is set to Encoding.",
                    "type": "string"
                  },
                  "streamingProtocol": {
                    "description": "The input protocol for the live event. Allowed values are FragmentedMP4 and RTMP. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "The Azure Region where the Live Event should exist. Changing this forces a new Live Event to be created.",
              "type": "string"
            },
            "mediaServicesAccountName": {
              "description": "The Media Services account name. Changing this forces a new Live Event to be created.",
              "type": "string"
            },
            "preview": {
              "description": "A preview block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alternativeMediaId": {
                    "description": "An alternative media identifier associated with the streaming locator created for the preview. The identifier can be used in the CustomLicenseAcquisitionUrlTemplate or the CustomKeyAcquisitionUrlTemplate of the Streaming Policy specified in the streaming_policy_name field.",
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ipAccessControlAllow": {
                    "description": "One or more ip_access_control_allow blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "The IP address or CIDR range.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Live Event. Changing this forces a new Live Event to be created.",
                          "type": "string"
                        },
                        "subnetPrefixLength": {
                          "description": "The subnet mask prefix length (see CIDR notation).",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "previewLocator": {
                    "description": "The identifier of the preview locator in GUID format. Specifying this at creation time allows the caller to know the preview locator url before the event is created. If omitted, the service will generate a random identifier. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "streamingPolicyName": {
                    "description": "The name of streaming policy used for the live event preview. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Live Event should exist. Changing this forces a new Live Event to be created.",
              "type": "string"
            },
            "streamOptions": {
              "description": "A list of options to use for the LiveEvent. Possible values are Default, LowLatency, LowLatencyV2. Please see more at this document. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Live Event.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "transcriptionLanguages": {
              "description": "Specifies a list of languages (locale) to be used for speech-to-text transcription – it should match the spoken language in the audio track. The value should be in BCP-47 format (e.g: en-US). See the Microsoft Documentation for more information about the live transcription feature and the list of supported languages.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "useStaticHostname": {
              "description": "Specifies whether a static hostname would be assigned to the live event preview and ingest endpoints. Changing this forces a new Live Event to be created.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
