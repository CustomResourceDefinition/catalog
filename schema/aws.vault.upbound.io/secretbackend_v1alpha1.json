{
  "description": "SecretBackend is the Schema for the SecretBackends API. Creates an AWS secret backend for Vault.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecretBackendSpec defines the desired state of SecretBackend",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "accessKeySecretRef": {
              "description": "The AWS Access Key ID this backend should use to\nissue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.\nThe AWS Access Key ID to use when generating new credentials.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "allowedManagedKeys": {
              "description": "Set of managed key registry entry names that the mount in question is allowed to access\nList of managed key registry entry names that the mount in question is allowed to access",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "allowedResponseHeaders": {
              "description": "List of headers to allow, allowing a plugin to include\nthem in the response.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacRequestKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacResponseKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultLeaseTtlSeconds": {
              "description": "Default lease duration for tokens and secrets in seconds\nDefault lease duration for secrets in seconds",
              "type": "number"
            },
            "delegatedAuthAccessors": {
              "description": "List of allowed authentication mount accessors the\nbackend can request delegated authentication for.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "description": "Human-friendly description of the mount\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "externalEntropyAccess": {
              "description": "Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source\nEnable the secrets engine to access Vault's external entropy source",
              "type": "boolean"
            },
            "forceNoCache": {
              "description": "If set to true, disables caching.",
              "type": "boolean"
            },
            "iamEndpoint": {
              "description": "Specifies a custom HTTP IAM endpoint to use.\nSpecifies a custom HTTP IAM endpoint to use.",
              "type": "string"
            },
            "identityTokenAudience": {
              "description": "The audience claim value. Requires Vault 1.16+.\nThe audience claim value.",
              "type": "string"
            },
            "identityTokenKey": {
              "description": "The key to use for signing plugin workload identity tokens. If\nnot provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.\nThe key to use for signing identity tokens.",
              "type": "string"
            },
            "identityTokenTtl": {
              "description": "The TTL of generated identity tokens in seconds. Requires Vault 1.16+.\nThe TTL of generated identity tokens in seconds.",
              "type": "number"
            },
            "listingVisibility": {
              "description": "Specifies whether to show this mount in the UI-specific\nlisting endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.\nSpecifies whether to show this mount in the UI-specific listing endpoint",
              "type": "string"
            },
            "local": {
              "description": "Boolean flag that can be explicitly set to true to enforce local mount in HA environment\nSpecifies if the secret backend is local only",
              "type": "boolean"
            },
            "maxLeaseTtlSeconds": {
              "description": "Maximum possible lease duration for tokens and secrets in seconds\nMaximum possible lease duration for secrets in seconds",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "Specifies mount type specific options that are passed to the backend\nSpecifies mount type specific options that are passed to the backend",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "passthroughRequestHeaders": {
              "description": "List of headers to allow and pass from the request to\nthe plugin.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "path": {
              "description": "The unique path this backend should be mounted at. Must\nnot begin or end with a /. Defaults to aws.\nPath to mount the backend at.",
              "type": "string"
            },
            "pluginVersion": {
              "description": "Specifies the semantic version of the plugin to use, e.g. \"v1.0.0\".\nIf unspecified, the server will select any matching unversioned plugin that may have been\nregistered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.\nSpecifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
              "type": "string"
            },
            "region": {
              "description": "The AWS region for API calls. Defaults to us-east-1.\nThe AWS region to make API calls against. Defaults to us-east-1.",
              "type": "string"
            },
            "roleArn": {
              "description": "Role ARN to assume for plugin identity token federation. Requires Vault 1.16+.\nRole ARN to assume for plugin identity token federation.",
              "type": "string"
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "sealWrap": {
              "description": "Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability\nEnable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
              "type": "boolean"
            },
            "secretKeySecretRef": {
              "description": "The AWS Secret Key this backend should use to\nissue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.\nThe AWS Secret Access Key to use when generating new credentials.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "stsEndpoint": {
              "description": "Specifies a custom HTTP STS endpoint to use.\nSpecifies a custom HTTP STS endpoint to use.",
              "type": "string"
            },
            "stsFallbackEndpoints": {
              "description": "Ordered list of sts_endpoints to try if the defined one fails. Requires Vault 1.19+\nSpecifies a list of custom STS fallback endpoints to use (in order).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stsFallbackRegions": {
              "description": "Ordered list of sts_regions matching the fallback endpoints. Should correspond in order with those endpoints. Requires Vault 1.19+\nSpecifies a list of custom STS fallback regions to use (in order).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stsRegion": {
              "description": "Specifies the region of the STS endpoint. Should be included if sts_endpoint is supplied. Requires Vault 1.19+\nSpecifies a custom STS region to use.",
              "type": "string"
            },
            "usernameTemplate": {
              "description": "Template describing how dynamic usernames are generated. The username template is used to generate both IAM usernames (capped at 64 characters) and STS usernames (capped at 32 characters). If no template is provided the field defaults to the template:\nTemplate describing how dynamic usernames are generated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "accessKeySecretRef": {
              "description": "The AWS Access Key ID this backend should use to\nissue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.\nThe AWS Access Key ID to use when generating new credentials.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "allowedManagedKeys": {
              "description": "Set of managed key registry entry names that the mount in question is allowed to access\nList of managed key registry entry names that the mount in question is allowed to access",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "allowedResponseHeaders": {
              "description": "List of headers to allow, allowing a plugin to include\nthem in the response.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacRequestKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacResponseKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultLeaseTtlSeconds": {
              "description": "Default lease duration for tokens and secrets in seconds\nDefault lease duration for secrets in seconds",
              "type": "number"
            },
            "delegatedAuthAccessors": {
              "description": "List of allowed authentication mount accessors the\nbackend can request delegated authentication for.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "description": "Human-friendly description of the mount\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "externalEntropyAccess": {
              "description": "Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source\nEnable the secrets engine to access Vault's external entropy source",
              "type": "boolean"
            },
            "forceNoCache": {
              "description": "If set to true, disables caching.",
              "type": "boolean"
            },
            "iamEndpoint": {
              "description": "Specifies a custom HTTP IAM endpoint to use.\nSpecifies a custom HTTP IAM endpoint to use.",
              "type": "string"
            },
            "identityTokenAudience": {
              "description": "The audience claim value. Requires Vault 1.16+.\nThe audience claim value.",
              "type": "string"
            },
            "identityTokenKey": {
              "description": "The key to use for signing plugin workload identity tokens. If\nnot provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.\nThe key to use for signing identity tokens.",
              "type": "string"
            },
            "identityTokenTtl": {
              "description": "The TTL of generated identity tokens in seconds. Requires Vault 1.16+.\nThe TTL of generated identity tokens in seconds.",
              "type": "number"
            },
            "listingVisibility": {
              "description": "Specifies whether to show this mount in the UI-specific\nlisting endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.\nSpecifies whether to show this mount in the UI-specific listing endpoint",
              "type": "string"
            },
            "local": {
              "description": "Boolean flag that can be explicitly set to true to enforce local mount in HA environment\nSpecifies if the secret backend is local only",
              "type": "boolean"
            },
            "maxLeaseTtlSeconds": {
              "description": "Maximum possible lease duration for tokens and secrets in seconds\nMaximum possible lease duration for secrets in seconds",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "Specifies mount type specific options that are passed to the backend\nSpecifies mount type specific options that are passed to the backend",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "passthroughRequestHeaders": {
              "description": "List of headers to allow and pass from the request to\nthe plugin.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "path": {
              "description": "The unique path this backend should be mounted at. Must\nnot begin or end with a /. Defaults to aws.\nPath to mount the backend at.",
              "type": "string"
            },
            "pluginVersion": {
              "description": "Specifies the semantic version of the plugin to use, e.g. \"v1.0.0\".\nIf unspecified, the server will select any matching unversioned plugin that may have been\nregistered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.\nSpecifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
              "type": "string"
            },
            "region": {
              "description": "The AWS region for API calls. Defaults to us-east-1.\nThe AWS region to make API calls against. Defaults to us-east-1.",
              "type": "string"
            },
            "roleArn": {
              "description": "Role ARN to assume for plugin identity token federation. Requires Vault 1.16+.\nRole ARN to assume for plugin identity token federation.",
              "type": "string"
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "sealWrap": {
              "description": "Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability\nEnable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
              "type": "boolean"
            },
            "secretKeySecretRef": {
              "description": "The AWS Secret Key this backend should use to\nissue new credentials. Vault uses the official AWS SDK to authenticate, and thus can also use standard AWS environment credentials, shared file credentials or IAM role/ECS task credentials.\nThe AWS Secret Access Key to use when generating new credentials.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "stsEndpoint": {
              "description": "Specifies a custom HTTP STS endpoint to use.\nSpecifies a custom HTTP STS endpoint to use.",
              "type": "string"
            },
            "stsFallbackEndpoints": {
              "description": "Ordered list of sts_endpoints to try if the defined one fails. Requires Vault 1.19+\nSpecifies a list of custom STS fallback endpoints to use (in order).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stsFallbackRegions": {
              "description": "Ordered list of sts_regions matching the fallback endpoints. Should correspond in order with those endpoints. Requires Vault 1.19+\nSpecifies a list of custom STS fallback regions to use (in order).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stsRegion": {
              "description": "Specifies the region of the STS endpoint. Should be included if sts_endpoint is supplied. Requires Vault 1.19+\nSpecifies a custom STS region to use.",
              "type": "string"
            },
            "usernameTemplate": {
              "description": "Template describing how dynamic usernames are generated. The username template is used to generate both IAM usernames (capped at 64 characters) and STS usernames (capped at 32 characters). If no template is provided the field defaults to the template:\nTemplate describing how dynamic usernames are generated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SecretBackendStatus defines the observed state of SecretBackend.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accessor": {
              "description": "Accessor of the mount",
              "type": "string"
            },
            "allowedManagedKeys": {
              "description": "Set of managed key registry entry names that the mount in question is allowed to access\nList of managed key registry entry names that the mount in question is allowed to access",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "allowedResponseHeaders": {
              "description": "List of headers to allow, allowing a plugin to include\nthem in the response.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacRequestKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacResponseKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "defaultLeaseTtlSeconds": {
              "description": "Default lease duration for tokens and secrets in seconds\nDefault lease duration for secrets in seconds",
              "type": "number"
            },
            "delegatedAuthAccessors": {
              "description": "List of allowed authentication mount accessors the\nbackend can request delegated authentication for.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "description": "Human-friendly description of the mount\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "externalEntropyAccess": {
              "description": "Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source\nEnable the secrets engine to access Vault's external entropy source",
              "type": "boolean"
            },
            "forceNoCache": {
              "description": "If set to true, disables caching.",
              "type": "boolean"
            },
            "iamEndpoint": {
              "description": "Specifies a custom HTTP IAM endpoint to use.\nSpecifies a custom HTTP IAM endpoint to use.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "identityTokenAudience": {
              "description": "The audience claim value. Requires Vault 1.16+.\nThe audience claim value.",
              "type": "string"
            },
            "identityTokenKey": {
              "description": "The key to use for signing plugin workload identity tokens. If\nnot provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.\nThe key to use for signing identity tokens.",
              "type": "string"
            },
            "identityTokenTtl": {
              "description": "The TTL of generated identity tokens in seconds. Requires Vault 1.16+.\nThe TTL of generated identity tokens in seconds.",
              "type": "number"
            },
            "listingVisibility": {
              "description": "Specifies whether to show this mount in the UI-specific\nlisting endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.\nSpecifies whether to show this mount in the UI-specific listing endpoint",
              "type": "string"
            },
            "local": {
              "description": "Boolean flag that can be explicitly set to true to enforce local mount in HA environment\nSpecifies if the secret backend is local only",
              "type": "boolean"
            },
            "maxLeaseTtlSeconds": {
              "description": "Maximum possible lease duration for tokens and secrets in seconds\nMaximum possible lease duration for secrets in seconds",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "Specifies mount type specific options that are passed to the backend\nSpecifies mount type specific options that are passed to the backend",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "passthroughRequestHeaders": {
              "description": "List of headers to allow and pass from the request to\nthe plugin.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "path": {
              "description": "The unique path this backend should be mounted at. Must\nnot begin or end with a /. Defaults to aws.\nPath to mount the backend at.",
              "type": "string"
            },
            "pluginVersion": {
              "description": "Specifies the semantic version of the plugin to use, e.g. \"v1.0.0\".\nIf unspecified, the server will select any matching unversioned plugin that may have been\nregistered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.\nSpecifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
              "type": "string"
            },
            "region": {
              "description": "The AWS region for API calls. Defaults to us-east-1.\nThe AWS region to make API calls against. Defaults to us-east-1.",
              "type": "string"
            },
            "roleArn": {
              "description": "Role ARN to assume for plugin identity token federation. Requires Vault 1.16+.\nRole ARN to assume for plugin identity token federation.",
              "type": "string"
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "sealWrap": {
              "description": "Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability\nEnable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
              "type": "boolean"
            },
            "stsEndpoint": {
              "description": "Specifies a custom HTTP STS endpoint to use.\nSpecifies a custom HTTP STS endpoint to use.",
              "type": "string"
            },
            "stsFallbackEndpoints": {
              "description": "Ordered list of sts_endpoints to try if the defined one fails. Requires Vault 1.19+\nSpecifies a list of custom STS fallback endpoints to use (in order).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stsFallbackRegions": {
              "description": "Ordered list of sts_regions matching the fallback endpoints. Should correspond in order with those endpoints. Requires Vault 1.19+\nSpecifies a list of custom STS fallback regions to use (in order).",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "stsRegion": {
              "description": "Specifies the region of the STS endpoint. Should be included if sts_endpoint is supplied. Requires Vault 1.19+\nSpecifies a custom STS region to use.",
              "type": "string"
            },
            "usernameTemplate": {
              "description": "Template describing how dynamic usernames are generated. The username template is used to generate both IAM usernames (capped at 64 characters) and STS usernames (capped at 32 characters). If no template is provided the field defaults to the template:\nTemplate describing how dynamic usernames are generated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
