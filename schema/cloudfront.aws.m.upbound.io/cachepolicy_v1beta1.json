{
  "description": "CachePolicy is the Schema for the CachePolicys API. Use the",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CachePolicySpec defines the desired state of CachePolicy",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "comment": {
              "description": "Description for the cache policy.",
              "type": "string"
            },
            "defaultTtl": {
              "description": "Amount of time, in seconds, that objects are allowed to remain in the CloudFront cache before CloudFront sends a new request to the origin server to check if the object has been updated.",
              "type": "number"
            },
            "maxTtl": {
              "description": "Maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.",
              "type": "number"
            },
            "minTtl": {
              "description": "Minimum amount of time, in seconds, that objects should remain in the CloudFront cache before a new request is sent to the origin to check for updates.",
              "type": "number"
            },
            "name": {
              "description": "Unique name used to identify the cache policy.",
              "type": "string"
            },
            "parametersInCacheKeyAndForwardedToOrigin": {
              "description": "Configuration for including HTTP headers, cookies, and URL query strings in the cache key. For more information, refer to the Parameters In Cache Key And Forwarded To Origin section.",
              "type": "object",
              "properties": {
                "cookiesConfig": {
                  "description": "Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.",
                  "type": "object",
                  "properties": {
                    "cookieBehavior": {
                      "description": "Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for cookie_behavior are none, whitelist, allExcept, and all.",
                      "type": "string"
                    },
                    "cookies": {
                      "description": "Object that contains a list of cookie names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "enableAcceptEncodingBrotli": {
                  "description": "Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.",
                  "type": "boolean"
                },
                "enableAcceptEncodingGzip": {
                  "description": "Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.",
                  "type": "boolean"
                },
                "headersConfig": {
                  "description": "Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.",
                  "type": "object",
                  "properties": {
                    "headerBehavior": {
                      "description": "Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for header_behavior are none and whitelist.",
                      "type": "string"
                    },
                    "headers": {
                      "description": "Object contains a list of header names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "queryStringsConfig": {
                  "description": "Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.",
                  "type": "object",
                  "properties": {
                    "queryStringBehavior": {
                      "description": "Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for query_string_behavior are none, whitelist, allExcept, and all.",
                      "type": "string"
                    },
                    "queryStrings": {
                      "description": "Configuration parameter that contains a list of query string names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "comment": {
              "description": "Description for the cache policy.",
              "type": "string"
            },
            "defaultTtl": {
              "description": "Amount of time, in seconds, that objects are allowed to remain in the CloudFront cache before CloudFront sends a new request to the origin server to check if the object has been updated.",
              "type": "number"
            },
            "maxTtl": {
              "description": "Maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.",
              "type": "number"
            },
            "minTtl": {
              "description": "Minimum amount of time, in seconds, that objects should remain in the CloudFront cache before a new request is sent to the origin to check for updates.",
              "type": "number"
            },
            "name": {
              "description": "Unique name used to identify the cache policy.",
              "type": "string"
            },
            "parametersInCacheKeyAndForwardedToOrigin": {
              "description": "Configuration for including HTTP headers, cookies, and URL query strings in the cache key. For more information, refer to the Parameters In Cache Key And Forwarded To Origin section.",
              "type": "object",
              "properties": {
                "cookiesConfig": {
                  "description": "Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.",
                  "type": "object",
                  "properties": {
                    "cookieBehavior": {
                      "description": "Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for cookie_behavior are none, whitelist, allExcept, and all.",
                      "type": "string"
                    },
                    "cookies": {
                      "description": "Object that contains a list of cookie names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "enableAcceptEncodingBrotli": {
                  "description": "Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.",
                  "type": "boolean"
                },
                "enableAcceptEncodingGzip": {
                  "description": "Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.",
                  "type": "boolean"
                },
                "headersConfig": {
                  "description": "Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.",
                  "type": "object",
                  "properties": {
                    "headerBehavior": {
                      "description": "Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for header_behavior are none and whitelist.",
                      "type": "string"
                    },
                    "headers": {
                      "description": "Object contains a list of header names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "queryStringsConfig": {
                  "description": "Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.",
                  "type": "object",
                  "properties": {
                    "queryStringBehavior": {
                      "description": "Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for query_string_behavior are none, whitelist, allExcept, and all.",
                      "type": "string"
                    },
                    "queryStrings": {
                      "description": "Configuration parameter that contains a list of query string names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.parametersInCacheKeyAndForwardedToOrigin) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.parametersInCacheKeyAndForwardedToOrigin))",
          "message": "spec.forProvider.parametersInCacheKeyAndForwardedToOrigin is a required parameter"
        }
      ]
    },
    "status": {
      "description": "CachePolicyStatus defines the observed state of CachePolicy.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The cache policy ARN.",
              "type": "string"
            },
            "comment": {
              "description": "Description for the cache policy.",
              "type": "string"
            },
            "defaultTtl": {
              "description": "Amount of time, in seconds, that objects are allowed to remain in the CloudFront cache before CloudFront sends a new request to the origin server to check if the object has been updated.",
              "type": "number"
            },
            "etag": {
              "description": "Current version of the cache policy.",
              "type": "string"
            },
            "id": {
              "description": "Identifier for the cache policy.",
              "type": "string"
            },
            "maxTtl": {
              "description": "Maximum amount of time, in seconds, that objects stay in the CloudFront cache before CloudFront sends another request to the origin to see if the object has been updated.",
              "type": "number"
            },
            "minTtl": {
              "description": "Minimum amount of time, in seconds, that objects should remain in the CloudFront cache before a new request is sent to the origin to check for updates.",
              "type": "number"
            },
            "name": {
              "description": "Unique name used to identify the cache policy.",
              "type": "string"
            },
            "parametersInCacheKeyAndForwardedToOrigin": {
              "description": "Configuration for including HTTP headers, cookies, and URL query strings in the cache key. For more information, refer to the Parameters In Cache Key And Forwarded To Origin section.",
              "type": "object",
              "properties": {
                "cookiesConfig": {
                  "description": "Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Cookies Config for more information.",
                  "type": "object",
                  "properties": {
                    "cookieBehavior": {
                      "description": "Whether any cookies in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for cookie_behavior are none, whitelist, allExcept, and all.",
                      "type": "string"
                    },
                    "cookies": {
                      "description": "Object that contains a list of cookie names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "enableAcceptEncodingBrotli": {
                  "description": "Flag determines whether the Accept-Encoding HTTP header is included in the cache key and in requests that CloudFront sends to the origin.",
                  "type": "boolean"
                },
                "enableAcceptEncodingGzip": {
                  "description": "Whether the Accept-Encoding HTTP header is included in the cache key and in requests sent to the origin by CloudFront.",
                  "type": "boolean"
                },
                "headersConfig": {
                  "description": "Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. See Headers Config for more information.",
                  "type": "object",
                  "properties": {
                    "headerBehavior": {
                      "description": "Whether any HTTP headers are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for header_behavior are none and whitelist.",
                      "type": "string"
                    },
                    "headers": {
                      "description": "Object contains a list of header names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "queryStringsConfig": {
                  "description": "Whether any URL query strings in viewer requests are included in the cache key. It also automatically includes these query strings in requests that CloudFront sends to the origin. Please refer to the Query String Config for more information.",
                  "type": "object",
                  "properties": {
                    "queryStringBehavior": {
                      "description": "Whether URL query strings in viewer requests are included in the cache key and automatically included in requests that CloudFront sends to the origin. Valid values for query_string_behavior are none, whitelist, allExcept, and all.",
                      "type": "string"
                    },
                    "queryStrings": {
                      "description": "Configuration parameter that contains a list of query string names. See Items for more information.",
                      "type": "object",
                      "properties": {
                        "items": {
                          "description": "List of item names, such as cookies, headers, or query strings.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
