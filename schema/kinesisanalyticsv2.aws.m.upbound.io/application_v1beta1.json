{
  "description": "Application is the Schema for the Applications API. Manages a Kinesis Analytics v2 Application.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ApplicationSpec defines the desired state of Application",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "applicationConfiguration": {
              "description": "The application's configuration",
              "type": "object",
              "properties": {
                "applicationCodeConfiguration": {
                  "description": "The code location and type parameters for the application.",
                  "type": "object",
                  "properties": {
                    "codeContent": {
                      "description": "The location and type of the application code.",
                      "type": "object",
                      "properties": {
                        "s3ContentLocation": {
                          "description": "Information about the Amazon S3 bucket containing the application code.",
                          "type": "object",
                          "properties": {
                            "bucketArn": {
                              "description": "The ARN for the S3 bucket containing the application code.",
                              "type": "string"
                            },
                            "bucketArnRef": {
                              "description": "Reference to a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "bucketArnSelector": {
                              "description": "Selector for a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "fileKey": {
                              "description": "The file key for the object containing the application code.",
                              "type": "string"
                            },
                            "fileKeyRef": {
                              "description": "Reference to a Object in s3 to populate fileKey.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "fileKeySelector": {
                              "description": "Selector for a Object in s3 to populate fileKey.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "objectVersion": {
                              "description": "The version of the object containing the application code.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "textContent": {
                          "description": "The text-format code for the application.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "codeContentType": {
                      "description": "Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationSnapshotConfiguration": {
                  "description": "Describes whether snapshots are enabled for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "snapshotsEnabled": {
                      "description": "Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "environmentProperties": {
                  "description": "Describes execution properties for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "propertyGroup": {
                      "description": "Describes the execution property groups.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "propertyGroupId": {
                            "description": "The key of the application execution property key-value map.",
                            "type": "string"
                          },
                          "propertyMap": {
                            "description": "Application execution property key-value map.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-kubernetes-map-type": "granular"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "flinkApplicationConfiguration": {
                  "description": "The configuration of a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "checkpointConfiguration": {
                      "description": "Describes an application's checkpointing configuration.",
                      "type": "object",
                      "properties": {
                        "checkpointInterval": {
                          "description": "Describes the interval in milliseconds between checkpoint operations.",
                          "type": "number"
                        },
                        "checkpointingEnabled": {
                          "description": "Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.",
                          "type": "boolean"
                        },
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "minPauseBetweenCheckpoints": {
                          "description": "Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "monitoringConfiguration": {
                      "description": "Describes configuration parameters for CloudWatch logging for an application.",
                      "type": "object",
                      "properties": {
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "logLevel": {
                          "description": "Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.",
                          "type": "string"
                        },
                        "metricsLevel": {
                          "description": "Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "parallelismConfiguration": {
                      "description": "Describes parameters for how an application executes multiple tasks simultaneously.",
                      "type": "object",
                      "properties": {
                        "autoScalingEnabled": {
                          "description": "Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.",
                          "type": "boolean"
                        },
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "parallelism": {
                          "description": "Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.",
                          "type": "number"
                        },
                        "parallelismPerKpu": {
                          "description": "Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "runConfiguration": {
                  "description": "Describes the starting properties for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "applicationRestoreConfiguration": {
                      "description": "The restore behavior of a restarting application.",
                      "type": "object",
                      "properties": {
                        "applicationRestoreType": {
                          "description": "Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.",
                          "type": "string"
                        },
                        "snapshotName": {
                          "description": "The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "flinkRunConfiguration": {
                      "description": "The starting parameters for a Flink-based Kinesis Data Analytics application.",
                      "type": "object",
                      "properties": {
                        "allowNonRestoredState": {
                          "description": "When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sqlApplicationConfiguration": {
                  "description": "The configuration of a SQL-based application.",
                  "type": "object",
                  "properties": {
                    "input": {
                      "description": "The input stream used by the application.",
                      "type": "object",
                      "properties": {
                        "inputParallelism": {
                          "description": "Describes the number of in-application streams to create.",
                          "type": "object",
                          "properties": {
                            "count": {
                              "description": "The number of in-application streams to create.",
                              "type": "number"
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputProcessingConfiguration": {
                          "description": "The input processing configuration for the input.\nAn input processor transforms records as they are received from the stream, before the application's SQL code executes.",
                          "type": "object",
                          "properties": {
                            "inputLambdaProcessor": {
                              "description": "Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.",
                              "type": "object",
                              "properties": {
                                "resourceArn": {
                                  "description": "The ARN of the Lambda function that operates on records in the stream.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputSchema": {
                          "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.",
                          "type": "object",
                          "properties": {
                            "recordColumn": {
                              "description": "Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "mapping": {
                                    "description": "A reference to the data element in the streaming input or the reference data source.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the application.",
                                    "type": "string"
                                  },
                                  "sqlType": {
                                    "description": "The type of column created in the in-application input stream or reference table.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "recordEncoding": {
                              "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8.",
                              "type": "string"
                            },
                            "recordFormat": {
                              "description": "Specifies the format of the records on the streaming source.",
                              "type": "object",
                              "properties": {
                                "mappingParameters": {
                                  "description": "Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.",
                                  "type": "object",
                                  "properties": {
                                    "csvMappingParameters": {
                                      "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV).",
                                      "type": "object",
                                      "properties": {
                                        "recordColumnDelimiter": {
                                          "description": "The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.",
                                          "type": "string"
                                        },
                                        "recordRowDelimiter": {
                                          "description": "The row delimiter. For example, in a CSV format, \\n is the typical row delimiter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "jsonMappingParameters": {
                                      "description": "Provides additional mapping information when JSON is the record format on the streaming source.",
                                      "type": "object",
                                      "properties": {
                                        "recordRowPath": {
                                          "description": "The path to the top-level parent that contains the records.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "recordFormatType": {
                                  "description": "The type of record format. Valid values: CSV, JSON.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputStartingPositionConfiguration": {
                          "description": "The point at which the application starts processing records from the streaming source.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "inputStartingPosition": {
                                "description": "The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "kinesisFirehoseInput": {
                          "description": "If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.",
                          "type": "object",
                          "properties": {
                            "resourceArn": {
                              "description": "The ARN of the Lambda function that operates on records in the stream.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "kinesisStreamsInput": {
                          "description": "If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).",
                          "type": "object",
                          "properties": {
                            "resourceArn": {
                              "description": "The ARN of the Lambda function that operates on records in the stream.",
                              "type": "string"
                            },
                            "resourceArnRef": {
                              "description": "Reference to a Stream in kinesis to populate resourceArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "resourceArnSelector": {
                              "description": "Selector for a Stream in kinesis to populate resourceArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "namePrefix": {
                          "description": "The name prefix to use when creating an in-application stream.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "output": {
                      "description": "The destination streams used by the application.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "destinationSchema": {
                            "description": "Describes the data format when records are written to the destination.",
                            "type": "object",
                            "properties": {
                              "recordFormatType": {
                                "description": "The type of record format. Valid values: CSV, JSON.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kinesisFirehoseOutput": {
                            "description": "Identifies a Kinesis Data Firehose delivery stream as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              },
                              "resourceArnRef": {
                                "description": "Reference to a DeliveryStream in firehose to populate resourceArn.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the referenced object",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "resourceArnSelector": {
                                "description": "Selector for a DeliveryStream in firehose to populate resourceArn.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "namespace": {
                                    "description": "Namespace for the selector",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "kinesisStreamsOutput": {
                            "description": "Identifies a Kinesis data stream as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "lambdaOutput": {
                            "description": "Identifies a Lambda function as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              },
                              "resourceArnRef": {
                                "description": "Reference to a Function in lambda to populate resourceArn.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the referenced object",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "resourceArnSelector": {
                                "description": "Selector for a Function in lambda to populate resourceArn.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "namespace": {
                                    "description": "Namespace for the selector",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "The name of the application.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "referenceDataSource": {
                      "description": "The reference data source used by the application.",
                      "type": "object",
                      "properties": {
                        "referenceSchema": {
                          "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.",
                          "type": "object",
                          "properties": {
                            "recordColumn": {
                              "description": "Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "mapping": {
                                    "description": "A reference to the data element in the streaming input or the reference data source.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the application.",
                                    "type": "string"
                                  },
                                  "sqlType": {
                                    "description": "The type of column created in the in-application input stream or reference table.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "recordEncoding": {
                              "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8.",
                              "type": "string"
                            },
                            "recordFormat": {
                              "description": "Specifies the format of the records on the streaming source.",
                              "type": "object",
                              "properties": {
                                "mappingParameters": {
                                  "description": "Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.",
                                  "type": "object",
                                  "properties": {
                                    "csvMappingParameters": {
                                      "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV).",
                                      "type": "object",
                                      "properties": {
                                        "recordColumnDelimiter": {
                                          "description": "The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.",
                                          "type": "string"
                                        },
                                        "recordRowDelimiter": {
                                          "description": "The row delimiter. For example, in a CSV format, \\n is the typical row delimiter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "jsonMappingParameters": {
                                      "description": "Provides additional mapping information when JSON is the record format on the streaming source.",
                                      "type": "object",
                                      "properties": {
                                        "recordRowPath": {
                                          "description": "The path to the top-level parent that contains the records.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "recordFormatType": {
                                  "description": "The type of record format. Valid values: CSV, JSON.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "s3ReferenceDataSource": {
                          "description": "Identifies the S3 bucket and object that contains the reference data.",
                          "type": "object",
                          "properties": {
                            "bucketArn": {
                              "description": "The ARN for the S3 bucket containing the application code.",
                              "type": "string"
                            },
                            "bucketArnRef": {
                              "description": "Reference to a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "bucketArnSelector": {
                              "description": "Selector for a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "fileKey": {
                              "description": "The file key for the object containing the application code.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "tableName": {
                          "description": "The name of the in-application table to create.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "vpcConfiguration": {
                  "description": "The VPC configuration of a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "securityGroupIds": {
                      "description": "The Security Group IDs used by the VPC configuration.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "securityGroupIdsRefs": {
                      "description": "References to SecurityGroup in ec2 to populate securityGroupIds.",
                      "type": "array",
                      "items": {
                        "description": "A NamespacedReference to a named object.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referenced object",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "securityGroupIdsSelector": {
                      "description": "Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIds": {
                      "description": "The Subnet IDs used by the VPC configuration.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetIdsRefs": {
                      "description": "References to Subnet in ec2 to populate subnetIds.",
                      "type": "array",
                      "items": {
                        "description": "A NamespacedReference to a named object.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referenced object",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "subnetIdsSelector": {
                      "description": "Selector for a list of Subnet in ec2 to populate subnetIds.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "applicationMode": {
              "description": "The application's mode. Valid values are STREAMING, INTERACTIVE.",
              "type": "string"
            },
            "cloudwatchLoggingOptions": {
              "description": "A CloudWatch log stream to monitor application configuration errors.",
              "type": "object",
              "properties": {
                "logStreamArn": {
                  "description": "The ARN of the CloudWatch log stream to receive application messages.",
                  "type": "string"
                },
                "logStreamArnRef": {
                  "description": "Reference to a Stream in cloudwatchlogs to populate logStreamArn.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "logStreamArnSelector": {
                  "description": "Selector for a Stream in cloudwatchlogs to populate logStreamArn.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "A summary description of the application.",
              "type": "string"
            },
            "forceStop": {
              "description": "Whether to force stop an unresponsive Flink-based application.",
              "type": "boolean"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "runtimeEnvironment": {
              "description": "The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18, FLINK-1_19.",
              "type": "string"
            },
            "serviceExecutionRole": {
              "description": "The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.",
              "type": "string"
            },
            "serviceExecutionRoleRef": {
              "description": "Reference to a Role in iam to populate serviceExecutionRole.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceExecutionRoleSelector": {
              "description": "Selector for a Role in iam to populate serviceExecutionRole.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "startApplication": {
              "description": "Whether to start or stop the application.",
              "type": "boolean"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "applicationConfiguration": {
              "description": "The application's configuration",
              "type": "object",
              "properties": {
                "applicationCodeConfiguration": {
                  "description": "The code location and type parameters for the application.",
                  "type": "object",
                  "properties": {
                    "codeContent": {
                      "description": "The location and type of the application code.",
                      "type": "object",
                      "properties": {
                        "s3ContentLocation": {
                          "description": "Information about the Amazon S3 bucket containing the application code.",
                          "type": "object",
                          "properties": {
                            "bucketArn": {
                              "description": "The ARN for the S3 bucket containing the application code.",
                              "type": "string"
                            },
                            "bucketArnRef": {
                              "description": "Reference to a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "bucketArnSelector": {
                              "description": "Selector for a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "fileKey": {
                              "description": "The file key for the object containing the application code.",
                              "type": "string"
                            },
                            "fileKeyRef": {
                              "description": "Reference to a Object in s3 to populate fileKey.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "fileKeySelector": {
                              "description": "Selector for a Object in s3 to populate fileKey.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "objectVersion": {
                              "description": "The version of the object containing the application code.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "textContent": {
                          "description": "The text-format code for the application.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "codeContentType": {
                      "description": "Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationSnapshotConfiguration": {
                  "description": "Describes whether snapshots are enabled for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "snapshotsEnabled": {
                      "description": "Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "environmentProperties": {
                  "description": "Describes execution properties for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "propertyGroup": {
                      "description": "Describes the execution property groups.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "propertyGroupId": {
                            "description": "The key of the application execution property key-value map.",
                            "type": "string"
                          },
                          "propertyMap": {
                            "description": "Application execution property key-value map.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-kubernetes-map-type": "granular"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "flinkApplicationConfiguration": {
                  "description": "The configuration of a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "checkpointConfiguration": {
                      "description": "Describes an application's checkpointing configuration.",
                      "type": "object",
                      "properties": {
                        "checkpointInterval": {
                          "description": "Describes the interval in milliseconds between checkpoint operations.",
                          "type": "number"
                        },
                        "checkpointingEnabled": {
                          "description": "Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.",
                          "type": "boolean"
                        },
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "minPauseBetweenCheckpoints": {
                          "description": "Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "monitoringConfiguration": {
                      "description": "Describes configuration parameters for CloudWatch logging for an application.",
                      "type": "object",
                      "properties": {
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "logLevel": {
                          "description": "Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.",
                          "type": "string"
                        },
                        "metricsLevel": {
                          "description": "Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "parallelismConfiguration": {
                      "description": "Describes parameters for how an application executes multiple tasks simultaneously.",
                      "type": "object",
                      "properties": {
                        "autoScalingEnabled": {
                          "description": "Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.",
                          "type": "boolean"
                        },
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "parallelism": {
                          "description": "Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.",
                          "type": "number"
                        },
                        "parallelismPerKpu": {
                          "description": "Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "runConfiguration": {
                  "description": "Describes the starting properties for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "applicationRestoreConfiguration": {
                      "description": "The restore behavior of a restarting application.",
                      "type": "object",
                      "properties": {
                        "applicationRestoreType": {
                          "description": "Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.",
                          "type": "string"
                        },
                        "snapshotName": {
                          "description": "The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "flinkRunConfiguration": {
                      "description": "The starting parameters for a Flink-based Kinesis Data Analytics application.",
                      "type": "object",
                      "properties": {
                        "allowNonRestoredState": {
                          "description": "When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sqlApplicationConfiguration": {
                  "description": "The configuration of a SQL-based application.",
                  "type": "object",
                  "properties": {
                    "input": {
                      "description": "The input stream used by the application.",
                      "type": "object",
                      "properties": {
                        "inputParallelism": {
                          "description": "Describes the number of in-application streams to create.",
                          "type": "object",
                          "properties": {
                            "count": {
                              "description": "The number of in-application streams to create.",
                              "type": "number"
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputProcessingConfiguration": {
                          "description": "The input processing configuration for the input.\nAn input processor transforms records as they are received from the stream, before the application's SQL code executes.",
                          "type": "object",
                          "properties": {
                            "inputLambdaProcessor": {
                              "description": "Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.",
                              "type": "object",
                              "properties": {
                                "resourceArn": {
                                  "description": "The ARN of the Lambda function that operates on records in the stream.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputSchema": {
                          "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.",
                          "type": "object",
                          "properties": {
                            "recordColumn": {
                              "description": "Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "mapping": {
                                    "description": "A reference to the data element in the streaming input or the reference data source.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the application.",
                                    "type": "string"
                                  },
                                  "sqlType": {
                                    "description": "The type of column created in the in-application input stream or reference table.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "recordEncoding": {
                              "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8.",
                              "type": "string"
                            },
                            "recordFormat": {
                              "description": "Specifies the format of the records on the streaming source.",
                              "type": "object",
                              "properties": {
                                "mappingParameters": {
                                  "description": "Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.",
                                  "type": "object",
                                  "properties": {
                                    "csvMappingParameters": {
                                      "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV).",
                                      "type": "object",
                                      "properties": {
                                        "recordColumnDelimiter": {
                                          "description": "The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.",
                                          "type": "string"
                                        },
                                        "recordRowDelimiter": {
                                          "description": "The row delimiter. For example, in a CSV format, \\n is the typical row delimiter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "jsonMappingParameters": {
                                      "description": "Provides additional mapping information when JSON is the record format on the streaming source.",
                                      "type": "object",
                                      "properties": {
                                        "recordRowPath": {
                                          "description": "The path to the top-level parent that contains the records.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "recordFormatType": {
                                  "description": "The type of record format. Valid values: CSV, JSON.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputStartingPositionConfiguration": {
                          "description": "The point at which the application starts processing records from the streaming source.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "inputStartingPosition": {
                                "description": "The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "kinesisFirehoseInput": {
                          "description": "If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.",
                          "type": "object",
                          "properties": {
                            "resourceArn": {
                              "description": "The ARN of the Lambda function that operates on records in the stream.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "kinesisStreamsInput": {
                          "description": "If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).",
                          "type": "object",
                          "properties": {
                            "resourceArn": {
                              "description": "The ARN of the Lambda function that operates on records in the stream.",
                              "type": "string"
                            },
                            "resourceArnRef": {
                              "description": "Reference to a Stream in kinesis to populate resourceArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "resourceArnSelector": {
                              "description": "Selector for a Stream in kinesis to populate resourceArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "namePrefix": {
                          "description": "The name prefix to use when creating an in-application stream.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "output": {
                      "description": "The destination streams used by the application.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "destinationSchema": {
                            "description": "Describes the data format when records are written to the destination.",
                            "type": "object",
                            "properties": {
                              "recordFormatType": {
                                "description": "The type of record format. Valid values: CSV, JSON.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kinesisFirehoseOutput": {
                            "description": "Identifies a Kinesis Data Firehose delivery stream as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              },
                              "resourceArnRef": {
                                "description": "Reference to a DeliveryStream in firehose to populate resourceArn.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the referenced object",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "resourceArnSelector": {
                                "description": "Selector for a DeliveryStream in firehose to populate resourceArn.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "namespace": {
                                    "description": "Namespace for the selector",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "kinesisStreamsOutput": {
                            "description": "Identifies a Kinesis data stream as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "lambdaOutput": {
                            "description": "Identifies a Lambda function as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              },
                              "resourceArnRef": {
                                "description": "Reference to a Function in lambda to populate resourceArn.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the referenced object",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "resourceArnSelector": {
                                "description": "Selector for a Function in lambda to populate resourceArn.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "namespace": {
                                    "description": "Namespace for the selector",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "The name of the application.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "referenceDataSource": {
                      "description": "The reference data source used by the application.",
                      "type": "object",
                      "properties": {
                        "referenceSchema": {
                          "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.",
                          "type": "object",
                          "properties": {
                            "recordColumn": {
                              "description": "Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "mapping": {
                                    "description": "A reference to the data element in the streaming input or the reference data source.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the application.",
                                    "type": "string"
                                  },
                                  "sqlType": {
                                    "description": "The type of column created in the in-application input stream or reference table.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "recordEncoding": {
                              "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8.",
                              "type": "string"
                            },
                            "recordFormat": {
                              "description": "Specifies the format of the records on the streaming source.",
                              "type": "object",
                              "properties": {
                                "mappingParameters": {
                                  "description": "Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.",
                                  "type": "object",
                                  "properties": {
                                    "csvMappingParameters": {
                                      "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV).",
                                      "type": "object",
                                      "properties": {
                                        "recordColumnDelimiter": {
                                          "description": "The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.",
                                          "type": "string"
                                        },
                                        "recordRowDelimiter": {
                                          "description": "The row delimiter. For example, in a CSV format, \\n is the typical row delimiter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "jsonMappingParameters": {
                                      "description": "Provides additional mapping information when JSON is the record format on the streaming source.",
                                      "type": "object",
                                      "properties": {
                                        "recordRowPath": {
                                          "description": "The path to the top-level parent that contains the records.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "recordFormatType": {
                                  "description": "The type of record format. Valid values: CSV, JSON.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "s3ReferenceDataSource": {
                          "description": "Identifies the S3 bucket and object that contains the reference data.",
                          "type": "object",
                          "properties": {
                            "bucketArn": {
                              "description": "The ARN for the S3 bucket containing the application code.",
                              "type": "string"
                            },
                            "bucketArnRef": {
                              "description": "Reference to a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "bucketArnSelector": {
                              "description": "Selector for a Bucket in s3 to populate bucketArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "fileKey": {
                              "description": "The file key for the object containing the application code.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "tableName": {
                          "description": "The name of the in-application table to create.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "vpcConfiguration": {
                  "description": "The VPC configuration of a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "securityGroupIds": {
                      "description": "The Security Group IDs used by the VPC configuration.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "securityGroupIdsRefs": {
                      "description": "References to SecurityGroup in ec2 to populate securityGroupIds.",
                      "type": "array",
                      "items": {
                        "description": "A NamespacedReference to a named object.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referenced object",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "securityGroupIdsSelector": {
                      "description": "Selector for a list of SecurityGroup in ec2 to populate securityGroupIds.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIds": {
                      "description": "The Subnet IDs used by the VPC configuration.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetIdsRefs": {
                      "description": "References to Subnet in ec2 to populate subnetIds.",
                      "type": "array",
                      "items": {
                        "description": "A NamespacedReference to a named object.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referenced object",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "subnetIdsSelector": {
                      "description": "Selector for a list of Subnet in ec2 to populate subnetIds.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "applicationMode": {
              "description": "The application's mode. Valid values are STREAMING, INTERACTIVE.",
              "type": "string"
            },
            "cloudwatchLoggingOptions": {
              "description": "A CloudWatch log stream to monitor application configuration errors.",
              "type": "object",
              "properties": {
                "logStreamArn": {
                  "description": "The ARN of the CloudWatch log stream to receive application messages.",
                  "type": "string"
                },
                "logStreamArnRef": {
                  "description": "Reference to a Stream in cloudwatchlogs to populate logStreamArn.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "logStreamArnSelector": {
                  "description": "Selector for a Stream in cloudwatchlogs to populate logStreamArn.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "A summary description of the application.",
              "type": "string"
            },
            "forceStop": {
              "description": "Whether to force stop an unresponsive Flink-based application.",
              "type": "boolean"
            },
            "runtimeEnvironment": {
              "description": "The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18, FLINK-1_19.",
              "type": "string"
            },
            "serviceExecutionRole": {
              "description": "The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.",
              "type": "string"
            },
            "serviceExecutionRoleRef": {
              "description": "Reference to a Role in iam to populate serviceExecutionRole.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceExecutionRoleSelector": {
              "description": "Selector for a Role in iam to populate serviceExecutionRole.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "startApplication": {
              "description": "Whether to start or stop the application.",
              "type": "boolean"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.runtimeEnvironment) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.runtimeEnvironment))",
          "message": "spec.forProvider.runtimeEnvironment is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ApplicationStatus defines the observed state of Application.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "applicationConfiguration": {
              "description": "The application's configuration",
              "type": "object",
              "properties": {
                "applicationCodeConfiguration": {
                  "description": "The code location and type parameters for the application.",
                  "type": "object",
                  "properties": {
                    "codeContent": {
                      "description": "The location and type of the application code.",
                      "type": "object",
                      "properties": {
                        "s3ContentLocation": {
                          "description": "Information about the Amazon S3 bucket containing the application code.",
                          "type": "object",
                          "properties": {
                            "bucketArn": {
                              "description": "The ARN for the S3 bucket containing the application code.",
                              "type": "string"
                            },
                            "fileKey": {
                              "description": "The file key for the object containing the application code.",
                              "type": "string"
                            },
                            "objectVersion": {
                              "description": "The version of the object containing the application code.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "textContent": {
                          "description": "The text-format code for the application.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "codeContentType": {
                      "description": "Specifies whether the code content is in text or zip format. Valid values: PLAINTEXT, ZIPFILE.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationSnapshotConfiguration": {
                  "description": "Describes whether snapshots are enabled for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "snapshotsEnabled": {
                      "description": "Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "environmentProperties": {
                  "description": "Describes execution properties for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "propertyGroup": {
                      "description": "Describes the execution property groups.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "propertyGroupId": {
                            "description": "The key of the application execution property key-value map.",
                            "type": "string"
                          },
                          "propertyMap": {
                            "description": "Application execution property key-value map.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "x-kubernetes-map-type": "granular"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "flinkApplicationConfiguration": {
                  "description": "The configuration of a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "checkpointConfiguration": {
                      "description": "Describes an application's checkpointing configuration.",
                      "type": "object",
                      "properties": {
                        "checkpointInterval": {
                          "description": "Describes the interval in milliseconds between checkpoint operations.",
                          "type": "number"
                        },
                        "checkpointingEnabled": {
                          "description": "Describes whether checkpointing is enabled for a Flink-based Kinesis Data Analytics application.",
                          "type": "boolean"
                        },
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "minPauseBetweenCheckpoints": {
                          "description": "Describes the minimum time in milliseconds after a checkpoint operation completes that a new checkpoint operation can start.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    },
                    "monitoringConfiguration": {
                      "description": "Describes configuration parameters for CloudWatch logging for an application.",
                      "type": "object",
                      "properties": {
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "logLevel": {
                          "description": "Describes the verbosity of the CloudWatch Logs for an application. Valid values: DEBUG, ERROR, INFO, WARN.",
                          "type": "string"
                        },
                        "metricsLevel": {
                          "description": "Describes the granularity of the CloudWatch Logs for an application. Valid values: APPLICATION, OPERATOR, PARALLELISM, TASK.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "parallelismConfiguration": {
                      "description": "Describes parameters for how an application executes multiple tasks simultaneously.",
                      "type": "object",
                      "properties": {
                        "autoScalingEnabled": {
                          "description": "Describes whether the Kinesis Data Analytics service can increase the parallelism of the application in response to increased throughput.",
                          "type": "boolean"
                        },
                        "configurationType": {
                          "description": "Describes whether the application uses Kinesis Data Analytics' default checkpointing behavior. Valid values: CUSTOM, DEFAULT. Set this attribute to CUSTOM in order for any specified checkpointing_enabled, checkpoint_interval, or min_pause_between_checkpoints attribute values to be effective. If this attribute is set to DEFAULT, the application will always use the following values:",
                          "type": "string"
                        },
                        "parallelism": {
                          "description": "Describes the initial number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform.",
                          "type": "number"
                        },
                        "parallelismPerKpu": {
                          "description": "Describes the number of parallel tasks that a Flink-based Kinesis Data Analytics application can perform per Kinesis Processing Unit (KPU) used by the application.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "runConfiguration": {
                  "description": "Describes the starting properties for a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "applicationRestoreConfiguration": {
                      "description": "The restore behavior of a restarting application.",
                      "type": "object",
                      "properties": {
                        "applicationRestoreType": {
                          "description": "Specifies how the application should be restored. Valid values: RESTORE_FROM_CUSTOM_SNAPSHOT, RESTORE_FROM_LATEST_SNAPSHOT, SKIP_RESTORE_FROM_SNAPSHOT.",
                          "type": "string"
                        },
                        "snapshotName": {
                          "description": "The identifier of an existing snapshot of application state to use to restart an application. The application uses this value if RESTORE_FROM_CUSTOM_SNAPSHOT is specified for application_restore_type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "flinkRunConfiguration": {
                      "description": "The starting parameters for a Flink-based Kinesis Data Analytics application.",
                      "type": "object",
                      "properties": {
                        "allowNonRestoredState": {
                          "description": "When restoring from a snapshot, specifies whether the runtime is allowed to skip a state that cannot be mapped to the new program. Default is false.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sqlApplicationConfiguration": {
                  "description": "The configuration of a SQL-based application.",
                  "type": "object",
                  "properties": {
                    "input": {
                      "description": "The input stream used by the application.",
                      "type": "object",
                      "properties": {
                        "inAppStreamNames": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "inputId": {
                          "description": "The application identifier.",
                          "type": "string"
                        },
                        "inputParallelism": {
                          "description": "Describes the number of in-application streams to create.",
                          "type": "object",
                          "properties": {
                            "count": {
                              "description": "The number of in-application streams to create.",
                              "type": "number"
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputProcessingConfiguration": {
                          "description": "The input processing configuration for the input.\nAn input processor transforms records as they are received from the stream, before the application's SQL code executes.",
                          "type": "object",
                          "properties": {
                            "inputLambdaProcessor": {
                              "description": "Describes the Lambda function that is used to preprocess the records in the stream before being processed by your application code.",
                              "type": "object",
                              "properties": {
                                "resourceArn": {
                                  "description": "The ARN of the Lambda function that operates on records in the stream.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputSchema": {
                          "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns in the in-application stream that is being created.",
                          "type": "object",
                          "properties": {
                            "recordColumn": {
                              "description": "Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "mapping": {
                                    "description": "A reference to the data element in the streaming input or the reference data source.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the application.",
                                    "type": "string"
                                  },
                                  "sqlType": {
                                    "description": "The type of column created in the in-application input stream or reference table.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "recordEncoding": {
                              "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8.",
                              "type": "string"
                            },
                            "recordFormat": {
                              "description": "Specifies the format of the records on the streaming source.",
                              "type": "object",
                              "properties": {
                                "mappingParameters": {
                                  "description": "Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.",
                                  "type": "object",
                                  "properties": {
                                    "csvMappingParameters": {
                                      "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV).",
                                      "type": "object",
                                      "properties": {
                                        "recordColumnDelimiter": {
                                          "description": "The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.",
                                          "type": "string"
                                        },
                                        "recordRowDelimiter": {
                                          "description": "The row delimiter. For example, in a CSV format, \\n is the typical row delimiter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "jsonMappingParameters": {
                                      "description": "Provides additional mapping information when JSON is the record format on the streaming source.",
                                      "type": "object",
                                      "properties": {
                                        "recordRowPath": {
                                          "description": "The path to the top-level parent that contains the records.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "recordFormatType": {
                                  "description": "The type of record format. Valid values: CSV, JSON.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "inputStartingPositionConfiguration": {
                          "description": "The point at which the application starts processing records from the streaming source.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "inputStartingPosition": {
                                "description": "The starting position on the stream. Valid values: LAST_STOPPED_POINT, NOW, TRIM_HORIZON.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "kinesisFirehoseInput": {
                          "description": "If the streaming source is a Kinesis Data Firehose delivery stream, identifies the delivery stream's ARN.",
                          "type": "object",
                          "properties": {
                            "resourceArn": {
                              "description": "The ARN of the Lambda function that operates on records in the stream.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "kinesisStreamsInput": {
                          "description": "If the streaming source is a Kinesis data stream, identifies the stream's Amazon Resource Name (ARN).",
                          "type": "object",
                          "properties": {
                            "resourceArn": {
                              "description": "The ARN of the Lambda function that operates on records in the stream.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "namePrefix": {
                          "description": "The name prefix to use when creating an in-application stream.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "output": {
                      "description": "The destination streams used by the application.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "destinationSchema": {
                            "description": "Describes the data format when records are written to the destination.",
                            "type": "object",
                            "properties": {
                              "recordFormatType": {
                                "description": "The type of record format. Valid values: CSV, JSON.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kinesisFirehoseOutput": {
                            "description": "Identifies a Kinesis Data Firehose delivery stream as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kinesisStreamsOutput": {
                            "description": "Identifies a Kinesis data stream as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "lambdaOutput": {
                            "description": "Identifies a Lambda function as the destination.",
                            "type": "object",
                            "properties": {
                              "resourceArn": {
                                "description": "The ARN of the Lambda function that operates on records in the stream.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "The name of the application.",
                            "type": "string"
                          },
                          "outputId": {
                            "description": "The application identifier.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "referenceDataSource": {
                      "description": "The reference data source used by the application.",
                      "type": "object",
                      "properties": {
                        "referenceId": {
                          "description": "The application identifier.",
                          "type": "string"
                        },
                        "referenceSchema": {
                          "description": "Describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.",
                          "type": "object",
                          "properties": {
                            "recordColumn": {
                              "description": "Describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "mapping": {
                                    "description": "A reference to the data element in the streaming input or the reference data source.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name of the application.",
                                    "type": "string"
                                  },
                                  "sqlType": {
                                    "description": "The type of column created in the in-application input stream or reference table.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "recordEncoding": {
                              "description": "Specifies the encoding of the records in the streaming source. For example, UTF-8.",
                              "type": "string"
                            },
                            "recordFormat": {
                              "description": "Specifies the format of the records on the streaming source.",
                              "type": "object",
                              "properties": {
                                "mappingParameters": {
                                  "description": "Provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.",
                                  "type": "object",
                                  "properties": {
                                    "csvMappingParameters": {
                                      "description": "Provides additional mapping information when the record format uses delimiters (for example, CSV).",
                                      "type": "object",
                                      "properties": {
                                        "recordColumnDelimiter": {
                                          "description": "The column delimiter. For example, in a CSV format, a comma (,) is the typical column delimiter.",
                                          "type": "string"
                                        },
                                        "recordRowDelimiter": {
                                          "description": "The row delimiter. For example, in a CSV format, \\n is the typical row delimiter.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "jsonMappingParameters": {
                                      "description": "Provides additional mapping information when JSON is the record format on the streaming source.",
                                      "type": "object",
                                      "properties": {
                                        "recordRowPath": {
                                          "description": "The path to the top-level parent that contains the records.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "recordFormatType": {
                                  "description": "The type of record format. Valid values: CSV, JSON.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "s3ReferenceDataSource": {
                          "description": "Identifies the S3 bucket and object that contains the reference data.",
                          "type": "object",
                          "properties": {
                            "bucketArn": {
                              "description": "The ARN for the S3 bucket containing the application code.",
                              "type": "string"
                            },
                            "fileKey": {
                              "description": "The file key for the object containing the application code.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "tableName": {
                          "description": "The name of the in-application table to create.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "vpcConfiguration": {
                  "description": "The VPC configuration of a Flink-based application.",
                  "type": "object",
                  "properties": {
                    "securityGroupIds": {
                      "description": "The Security Group IDs used by the VPC configuration.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetIds": {
                      "description": "The Subnet IDs used by the VPC configuration.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "vpcConfigurationId": {
                      "description": "The application identifier.",
                      "type": "string"
                    },
                    "vpcId": {
                      "description": "The application identifier.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "applicationMode": {
              "description": "The application's mode. Valid values are STREAMING, INTERACTIVE.",
              "type": "string"
            },
            "arn": {
              "description": "The ARN of the application.",
              "type": "string"
            },
            "cloudwatchLoggingOptions": {
              "description": "A CloudWatch log stream to monitor application configuration errors.",
              "type": "object",
              "properties": {
                "cloudwatchLoggingOptionId": {
                  "description": "The application identifier.",
                  "type": "string"
                },
                "logStreamArn": {
                  "description": "The ARN of the CloudWatch log stream to receive application messages.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "createTimestamp": {
              "description": "The current timestamp when the application was created.",
              "type": "string"
            },
            "description": {
              "description": "A summary description of the application.",
              "type": "string"
            },
            "forceStop": {
              "description": "Whether to force stop an unresponsive Flink-based application.",
              "type": "boolean"
            },
            "id": {
              "description": "The application identifier.",
              "type": "string"
            },
            "lastUpdateTimestamp": {
              "description": "The current timestamp when the application was last updated.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "runtimeEnvironment": {
              "description": "The runtime environment for the application. Valid values: SQL-1_0, FLINK-1_6, FLINK-1_8, FLINK-1_11, FLINK-1_13, FLINK-1_15, FLINK-1_18, FLINK-1_19.",
              "type": "string"
            },
            "serviceExecutionRole": {
              "description": "The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.",
              "type": "string"
            },
            "startApplication": {
              "description": "Whether to start or stop the application.",
              "type": "boolean"
            },
            "status": {
              "description": "The status of the application.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "versionId": {
              "description": "The current application version. Kinesis Data Analytics updates the version_id each time the application is updated.",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
