{
  "description": "Context is the schema for the context type",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ContextSpec defines the desired state for a context",
      "type": "object",
      "required": [
        "variables"
      ],
      "properties": {
        "variables": {
          "description": "Variables is a list of variables which can be used globally by Context resources.\nThe structure of the variables is a map of key/value pairs, which MUST have both\na description and a value.",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ContextStatus defines the observed state of a terraform",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represents the observations of the resource's current state.",
          "type": "array",
          "items": {
            "description": "Condition is the current observed condition of some aspect of a resource",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "name",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "detail": {
                "description": "Detail is any additional human-readable detail to understand this condition, for example,\nthe full underlying error which caused an issue",
                "type": "string"
              },
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "name": {
                "description": "Name is a human-readable name for this condition.",
                "type": "string",
                "minLength": 1
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "Reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "lastReconcile": {
          "description": "LastReconcile describes the generation and time of the last reconciliation",
          "type": "object",
          "properties": {
            "generation": {
              "description": "Generation is the generation reconciled on the last reconciliation",
              "type": "integer",
              "format": "int64"
            },
            "time": {
              "description": "Time is the last time the resource was reconciled",
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        },
        "lastSuccess": {
          "description": "LastSuccess descibes the generation and time of the last reconciliation which resulted in\na Success status",
          "type": "object",
          "properties": {
            "generation": {
              "description": "Generation is the generation reconciled on the last reconciliation",
              "type": "integer",
              "format": "int64"
            },
            "time": {
              "description": "Time is the last time the resource was reconciled",
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
