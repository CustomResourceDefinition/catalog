{
  "description": "Agent is the Schema for the Agents API.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AgentSpec defines the desired state of Agent",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "agentCollaboration": {
              "description": "Agents collaboration role. Valid values: SUPERVISOR, SUPERVISOR_ROUTER, DISABLED.",
              "type": "string"
            },
            "agentName": {
              "description": "Name of the agent.",
              "type": "string"
            },
            "agentResourceRoleArn": {
              "description": "ARN of the IAM role with permissions to invoke API operations on the agent.",
              "type": "string"
            },
            "agentResourceRoleArnRef": {
              "description": "Reference to a Role in iam to populate agentResourceRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "agentResourceRoleArnSelector": {
              "description": "Selector for a Role in iam to populate agentResourceRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "customerEncryptionKeyArn": {
              "description": "ARN of the AWS KMS key that encrypts the agent.",
              "type": "string"
            },
            "description": {
              "description": "Description of the agent.",
              "type": "string"
            },
            "foundationModel": {
              "description": "Foundation model used for orchestration by the agent.",
              "type": "string"
            },
            "guardrailConfiguration": {
              "description": "Details about the guardrail associated with the agent. See guardrail_configuration Block for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "guardrailIdentifier": {
                    "description": "Unique identifier of the guardrail.",
                    "type": "string"
                  },
                  "guardrailVersion": {
                    "description": "Version of the guardrail.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "idleSessionTtlInSeconds": {
              "description": "Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.",
              "type": "number"
            },
            "instruction": {
              "description": "Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 20000 characters.",
              "type": "string"
            },
            "memoryConfiguration": {
              "description": "Configurations for the agent's ability to retain the conversational context.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabledMemoryTypes": {
                    "description": "The type of memory being stored by the agent. See AWS API documentation for possible values.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storageDays": {
                    "description": "The number of days the agent is configured to retain the conversational context. Minimum value of 0, maximum value of 30.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "prepareAgent": {
              "description": "Whether to prepare the agent after creation or modification. Defaults to true.",
              "type": "boolean"
            },
            "promptOverrideConfiguration": {
              "description": "Configurations to override prompt templates in different parts of an agent sequence. For more information, see Advanced prompts. See prompt_override_configuration Block for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "overrideLambda": {
                    "description": "ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the prompt_configurations block must contain a parser_mode value that is set to OVERRIDDEN.",
                    "type": "string"
                  },
                  "promptConfigurations": {
                    "description": "Configurations to override a prompt template in one part of an agent sequence. See prompt_configurations Block for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basePromptTemplate": {
                          "description": "prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see Prompt template placeholder variables.",
                          "type": "string"
                        },
                        "inferenceConfiguration": {
                          "description": "Inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the prompt_type. For more information, see Inference parameters for foundation models. See inference_configuration Block for details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "maxLength": {
                                "description": "Maximum number of tokens to allow in the generated response.",
                                "type": "number"
                              },
                              "stopSequences": {
                                "description": "List of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "temperature": {
                                "description": "Likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.",
                                "type": "number"
                              },
                              "topK": {
                                "description": "Number of top most-likely candidates, between 0 and 500, from which the model chooses the next token in the sequence.",
                                "type": "number"
                              },
                              "topP": {
                                "description": "Top percentage of the probability distribution of next tokens, between 0 and 1 (denoting 0% and 100%), from which the model chooses the next token in the sequence.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "parserMode": {
                          "description": "Whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the prompt_type. If you set the argument as OVERRIDDEN, the override_lambda argument in the prompt_override_configuration block must be specified with the ARN of a Lambda function. Valid values: DEFAULT, OVERRIDDEN.",
                          "type": "string"
                        },
                        "promptCreationMode": {
                          "description": "Whether to override the default prompt template for this prompt_type. Set this argument to OVERRIDDEN to use the prompt that you provide in the base_prompt_template. If you leave it as DEFAULT, the agent uses a default prompt template. Valid values: DEFAULT, OVERRIDDEN.",
                          "type": "string"
                        },
                        "promptState": {
                          "description": "Whether to allow the agent to carry out the step specified in the prompt_type. If you set this argument to DISABLED, the agent skips that step. Valid Values: ENABLED, DISABLED.",
                          "type": "string"
                        },
                        "promptType": {
                          "description": "Step in the agent sequence that this prompt configuration applies to. Valid values: PRE_PROCESSING, ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "skipResourceInUseCheck": {
              "description": "Whether the in-use check is skipped when deleting the agent.",
              "type": "boolean"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "agentCollaboration": {
              "description": "Agents collaboration role. Valid values: SUPERVISOR, SUPERVISOR_ROUTER, DISABLED.",
              "type": "string"
            },
            "agentName": {
              "description": "Name of the agent.",
              "type": "string"
            },
            "agentResourceRoleArn": {
              "description": "ARN of the IAM role with permissions to invoke API operations on the agent.",
              "type": "string"
            },
            "agentResourceRoleArnRef": {
              "description": "Reference to a Role in iam to populate agentResourceRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "agentResourceRoleArnSelector": {
              "description": "Selector for a Role in iam to populate agentResourceRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "customerEncryptionKeyArn": {
              "description": "ARN of the AWS KMS key that encrypts the agent.",
              "type": "string"
            },
            "description": {
              "description": "Description of the agent.",
              "type": "string"
            },
            "foundationModel": {
              "description": "Foundation model used for orchestration by the agent.",
              "type": "string"
            },
            "guardrailConfiguration": {
              "description": "Details about the guardrail associated with the agent. See guardrail_configuration Block for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "guardrailIdentifier": {
                    "description": "Unique identifier of the guardrail.",
                    "type": "string"
                  },
                  "guardrailVersion": {
                    "description": "Version of the guardrail.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "idleSessionTtlInSeconds": {
              "description": "Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.",
              "type": "number"
            },
            "instruction": {
              "description": "Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 20000 characters.",
              "type": "string"
            },
            "memoryConfiguration": {
              "description": "Configurations for the agent's ability to retain the conversational context.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabledMemoryTypes": {
                    "description": "The type of memory being stored by the agent. See AWS API documentation for possible values.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storageDays": {
                    "description": "The number of days the agent is configured to retain the conversational context. Minimum value of 0, maximum value of 30.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "prepareAgent": {
              "description": "Whether to prepare the agent after creation or modification. Defaults to true.",
              "type": "boolean"
            },
            "promptOverrideConfiguration": {
              "description": "Configurations to override prompt templates in different parts of an agent sequence. For more information, see Advanced prompts. See prompt_override_configuration Block for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "overrideLambda": {
                    "description": "ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the prompt_configurations block must contain a parser_mode value that is set to OVERRIDDEN.",
                    "type": "string"
                  },
                  "promptConfigurations": {
                    "description": "Configurations to override a prompt template in one part of an agent sequence. See prompt_configurations Block for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basePromptTemplate": {
                          "description": "prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see Prompt template placeholder variables.",
                          "type": "string"
                        },
                        "inferenceConfiguration": {
                          "description": "Inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the prompt_type. For more information, see Inference parameters for foundation models. See inference_configuration Block for details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "maxLength": {
                                "description": "Maximum number of tokens to allow in the generated response.",
                                "type": "number"
                              },
                              "stopSequences": {
                                "description": "List of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "temperature": {
                                "description": "Likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.",
                                "type": "number"
                              },
                              "topK": {
                                "description": "Number of top most-likely candidates, between 0 and 500, from which the model chooses the next token in the sequence.",
                                "type": "number"
                              },
                              "topP": {
                                "description": "Top percentage of the probability distribution of next tokens, between 0 and 1 (denoting 0% and 100%), from which the model chooses the next token in the sequence.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "parserMode": {
                          "description": "Whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the prompt_type. If you set the argument as OVERRIDDEN, the override_lambda argument in the prompt_override_configuration block must be specified with the ARN of a Lambda function. Valid values: DEFAULT, OVERRIDDEN.",
                          "type": "string"
                        },
                        "promptCreationMode": {
                          "description": "Whether to override the default prompt template for this prompt_type. Set this argument to OVERRIDDEN to use the prompt that you provide in the base_prompt_template. If you leave it as DEFAULT, the agent uses a default prompt template. Valid values: DEFAULT, OVERRIDDEN.",
                          "type": "string"
                        },
                        "promptState": {
                          "description": "Whether to allow the agent to carry out the step specified in the prompt_type. If you set this argument to DISABLED, the agent skips that step. Valid Values: ENABLED, DISABLED.",
                          "type": "string"
                        },
                        "promptType": {
                          "description": "Step in the agent sequence that this prompt configuration applies to. Valid values: PRE_PROCESSING, ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "skipResourceInUseCheck": {
              "description": "Whether the in-use check is skipped when deleting the agent.",
              "type": "boolean"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.agentName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.agentName))",
          "message": "spec.forProvider.agentName is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.foundationModel) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.foundationModel))",
          "message": "spec.forProvider.foundationModel is a required parameter"
        }
      ]
    },
    "status": {
      "description": "AgentStatus defines the observed state of Agent.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "agentArn": {
              "description": "ARN of the agent.",
              "type": "string"
            },
            "agentCollaboration": {
              "description": "Agents collaboration role. Valid values: SUPERVISOR, SUPERVISOR_ROUTER, DISABLED.",
              "type": "string"
            },
            "agentId": {
              "description": "Unique identifier of the agent.",
              "type": "string"
            },
            "agentName": {
              "description": "Name of the agent.",
              "type": "string"
            },
            "agentResourceRoleArn": {
              "description": "ARN of the IAM role with permissions to invoke API operations on the agent.",
              "type": "string"
            },
            "agentVersion": {
              "description": "Version of the agent.",
              "type": "string"
            },
            "customerEncryptionKeyArn": {
              "description": "ARN of the AWS KMS key that encrypts the agent.",
              "type": "string"
            },
            "description": {
              "description": "Description of the agent.",
              "type": "string"
            },
            "foundationModel": {
              "description": "Foundation model used for orchestration by the agent.",
              "type": "string"
            },
            "guardrailConfiguration": {
              "description": "Details about the guardrail associated with the agent. See guardrail_configuration Block for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "guardrailIdentifier": {
                    "description": "Unique identifier of the guardrail.",
                    "type": "string"
                  },
                  "guardrailVersion": {
                    "description": "Version of the guardrail.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "Unique identifier of the agent.",
              "type": "string"
            },
            "idleSessionTtlInSeconds": {
              "description": "Number of seconds for which Amazon Bedrock keeps information about a user's conversation with the agent. A user interaction remains active for the amount of time specified. If no conversation occurs during this time, the session expires and Amazon Bedrock deletes any data provided before the timeout.",
              "type": "number"
            },
            "instruction": {
              "description": "Instructions that tell the agent what it should do and how it should interact with users. The valid range is 40 - 20000 characters.",
              "type": "string"
            },
            "memoryConfiguration": {
              "description": "Configurations for the agent's ability to retain the conversational context.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabledMemoryTypes": {
                    "description": "The type of memory being stored by the agent. See AWS API documentation for possible values.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storageDays": {
                    "description": "The number of days the agent is configured to retain the conversational context. Minimum value of 0, maximum value of 30.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "prepareAgent": {
              "description": "Whether to prepare the agent after creation or modification. Defaults to true.",
              "type": "boolean"
            },
            "preparedAt": {
              "description": "Timestamp of when the agent was last prepared.",
              "type": "string"
            },
            "promptOverrideConfiguration": {
              "description": "Configurations to override prompt templates in different parts of an agent sequence. For more information, see Advanced prompts. See prompt_override_configuration Block for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "overrideLambda": {
                    "description": "ARN of the Lambda function to use when parsing the raw foundation model output in parts of the agent sequence. If you specify this field, at least one of the prompt_configurations block must contain a parser_mode value that is set to OVERRIDDEN.",
                    "type": "string"
                  },
                  "promptConfigurations": {
                    "description": "Configurations to override a prompt template in one part of an agent sequence. See prompt_configurations Block for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "basePromptTemplate": {
                          "description": "prompt template with which to replace the default prompt template. You can use placeholder variables in the base prompt template to customize the prompt. For more information, see Prompt template placeholder variables.",
                          "type": "string"
                        },
                        "inferenceConfiguration": {
                          "description": "Inference parameters to use when the agent invokes a foundation model in the part of the agent sequence defined by the prompt_type. For more information, see Inference parameters for foundation models. See inference_configuration Block for details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "maxLength": {
                                "description": "Maximum number of tokens to allow in the generated response.",
                                "type": "number"
                              },
                              "stopSequences": {
                                "description": "List of stop sequences. A stop sequence is a sequence of characters that causes the model to stop generating the response.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "temperature": {
                                "description": "Likelihood of the model selecting higher-probability options while generating a response. A lower value makes the model more likely to choose higher-probability options, while a higher value makes the model more likely to choose lower-probability options.",
                                "type": "number"
                              },
                              "topK": {
                                "description": "Number of top most-likely candidates, between 0 and 500, from which the model chooses the next token in the sequence.",
                                "type": "number"
                              },
                              "topP": {
                                "description": "Top percentage of the probability distribution of next tokens, between 0 and 1 (denoting 0% and 100%), from which the model chooses the next token in the sequence.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "parserMode": {
                          "description": "Whether to override the default parser Lambda function when parsing the raw foundation model output in the part of the agent sequence defined by the prompt_type. If you set the argument as OVERRIDDEN, the override_lambda argument in the prompt_override_configuration block must be specified with the ARN of a Lambda function. Valid values: DEFAULT, OVERRIDDEN.",
                          "type": "string"
                        },
                        "promptCreationMode": {
                          "description": "Whether to override the default prompt template for this prompt_type. Set this argument to OVERRIDDEN to use the prompt that you provide in the base_prompt_template. If you leave it as DEFAULT, the agent uses a default prompt template. Valid values: DEFAULT, OVERRIDDEN.",
                          "type": "string"
                        },
                        "promptState": {
                          "description": "Whether to allow the agent to carry out the step specified in the prompt_type. If you set this argument to DISABLED, the agent skips that step. Valid Values: ENABLED, DISABLED.",
                          "type": "string"
                        },
                        "promptType": {
                          "description": "Step in the agent sequence that this prompt configuration applies to. Valid values: PRE_PROCESSING, ORCHESTRATION, POST_PROCESSING, KNOWLEDGE_BASE_RESPONSE_GENERATION.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "skipResourceInUseCheck": {
              "description": "Whether the in-use check is skipped when deleting the agent.",
              "type": "boolean"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
