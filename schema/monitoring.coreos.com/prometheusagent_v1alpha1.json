{
  "description": "The `PrometheusAgent` custom resource definition (CRD) defines a desired [Prometheus Agent](https://prometheus.io/blog/2021/11/16/agent/) setup to run in a Kubernetes cluster.\n\nThe CRD is very similar to the `Prometheus` CRD except for features which aren't available in agent mode like rule evaluation, persistent storage and Thanos sidecar.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "spec defines the specification of the desired behavior of the Prometheus agent. More info:\nhttps://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "object",
      "properties": {
        "additionalArgs": {
          "description": "additionalArgs allows setting additional arguments for the 'prometheus' container.\n\nIt is intended for e.g. activating hidden flags which are not supported by\nthe dedicated configuration options yet. The arguments are passed as-is to the\nPrometheus container which may cause issues if they are invalid or not supported\nby the given Prometheus version.\n\nIn case of an argument conflict (e.g. an argument which is already set by the\noperator itself) or when providing an invalid argument, the reconciliation will\nfail and an error will be logged.",
          "type": "array",
          "items": {
            "description": "Argument as part of the AdditionalArgs list.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "name of the argument, e.g. \"scrape.discovery-reload-interval\".",
                "type": "string",
                "minLength": 1
              },
              "value": {
                "description": "value defines the argument value, e.g. 30s. Can be empty for name-only arguments (e.g. --storage.tsdb.no-lockfile)",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalScrapeConfigs": {
          "description": "additionalScrapeConfigs allows specifying a key of a Secret containing\nadditional Prometheus scrape configurations. Scrape configurations\nspecified are appended to the configurations generated by the Prometheus\nOperator. Job configurations specified must have the form as specified\nin the official Prometheus documentation:\nhttps://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config.\nAs scrape configs are appended, the user is responsible to make sure it\nis valid. Note that using this feature may expose the possibility to\nbreak upgrades of Prometheus. It is advised to review Prometheus release\nnotes to ensure that no incompatible scrape configs are going to break\nPrometheus after the upgrade.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "description": "The key of the secret to select from.  Must be a valid secret key.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string",
              "default": ""
            },
            "optional": {
              "description": "Specify whether the Secret or its key must be defined",
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "affinity": {
          "description": "affinity defines the Pods' affinity scheduling rules if specified.",
          "type": "object",
          "properties": {
            "nodeAffinity": {
              "description": "Describes node affinity scheduling rules for the pod.",
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node matches the corresponding matchExpressions; the\nnode(s) with the highest sum are the most preferred.",
                  "type": "array",
                  "items": {
                    "description": "An empty preferred scheduling term matches all objects with implicit weight 0\n(i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).",
                    "type": "object",
                    "required": [
                      "preference",
                      "weight"
                    ],
                    "properties": {
                      "preference": {
                        "description": "A node selector term, associated with the corresponding weight.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "A list of node selector requirements by node's labels.",
                            "type": "array",
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchFields": {
                            "description": "A list of node selector requirements by node's fields.",
                            "type": "array",
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "weight": {
                        "description": "Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to an update), the system\nmay or may not try to eventually evict the pod from its node.",
                  "type": "object",
                  "required": [
                    "nodeSelectorTerms"
                  ],
                  "properties": {
                    "nodeSelectorTerms": {
                      "description": "Required. A list of node selector terms. The terms are ORed.",
                      "type": "array",
                      "items": {
                        "description": "A null or empty node selector term matches no objects. The requirements of\nthem are ANDed.\nThe TopologySelectorTerm type implements a subset of the NodeSelectorTerm.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "A list of node selector requirements by node's labels.",
                            "type": "array",
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchFields": {
                            "description": "A list of node selector requirements by node's fields.",
                            "type": "array",
                            "items": {
                              "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "podAffinity": {
              "description": "Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).",
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and adding\n\"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                  "type": "array",
                  "items": {
                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                    "type": "object",
                    "required": [
                      "podAffinityTerm",
                      "weight"
                    ],
                    "properties": {
                      "podAffinityTerm": {
                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                        "type": "object",
                        "required": [
                          "topologyKey"
                        ],
                        "properties": {
                          "labelSelector": {
                            "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "matchLabelKeys": {
                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "mismatchLabelKeys": {
                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "namespaceSelector": {
                            "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "namespaces": {
                            "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "topologyKey": {
                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "weight": {
                        "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "description": "If the affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                  "type": "array",
                  "items": {
                    "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                    "type": "object",
                    "required": [
                      "topologyKey"
                    ],
                    "properties": {
                      "labelSelector": {
                        "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "matchLabelKeys": {
                        "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "mismatchLabelKeys": {
                        "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "namespaceSelector": {
                        "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "namespaces": {
                        "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "topologyKey": {
                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "podAntiAffinity": {
              "description": "Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).",
              "type": "object",
              "properties": {
                "preferredDuringSchedulingIgnoredDuringExecution": {
                  "description": "The scheduler will prefer to schedule pods to nodes that satisfy\nthe anti-affinity expressions specified by this field, but it may choose\na node that violates one or more of the expressions. The node that is\nmost preferred is the one with the greatest sum of weights, i.e.\nfor each node that meets all of the scheduling requirements (resource\nrequest, requiredDuringScheduling anti-affinity expressions, etc.),\ncompute a sum by iterating through the elements of this field and subtracting\n\"weight\" from the sum if the node has pods which matches the corresponding podAffinityTerm; the\nnode(s) with the highest sum are the most preferred.",
                  "type": "array",
                  "items": {
                    "description": "The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)",
                    "type": "object",
                    "required": [
                      "podAffinityTerm",
                      "weight"
                    ],
                    "properties": {
                      "podAffinityTerm": {
                        "description": "Required. A pod affinity term, associated with the corresponding weight.",
                        "type": "object",
                        "required": [
                          "topologyKey"
                        ],
                        "properties": {
                          "labelSelector": {
                            "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "matchLabelKeys": {
                            "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "mismatchLabelKeys": {
                            "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "namespaceSelector": {
                            "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "namespaces": {
                            "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "topologyKey": {
                            "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "weight": {
                        "description": "weight associated with matching the corresponding podAffinityTerm,\nin the range 1-100.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "requiredDuringSchedulingIgnoredDuringExecution": {
                  "description": "If the anti-affinity requirements specified by this field are not met at\nscheduling time, the pod will not be scheduled onto the node.\nIf the anti-affinity requirements specified by this field cease to be met\nat some point during pod execution (e.g. due to a pod label update), the\nsystem may or may not try to eventually evict the pod from its node.\nWhen there are multiple elements, the lists of nodes corresponding to each\npodAffinityTerm are intersected, i.e. all terms must be satisfied.",
                  "type": "array",
                  "items": {
                    "description": "Defines a set of pods (namely those matching the labelSelector\nrelative to the given namespace(s)) that this pod should be\nco-located (affinity) or not co-located (anti-affinity) with,\nwhere co-located is defined as running on a node whose value of\nthe label with key \u003ctopologyKey\u003e matches that of any node on which\na pod of the set of pods is running",
                    "type": "object",
                    "required": [
                      "topologyKey"
                    ],
                    "properties": {
                      "labelSelector": {
                        "description": "A label query over a set of resources, in this case pods.\nIf it's null, this PodAffinityTerm matches with no Pods.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "matchLabelKeys": {
                        "description": "MatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key in (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both matchLabelKeys and labelSelector.\nAlso, matchLabelKeys cannot be set when labelSelector isn't set.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "mismatchLabelKeys": {
                        "description": "MismatchLabelKeys is a set of pod label keys to select which pods will\nbe taken into consideration. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are merged with `labelSelector` as `key notin (value)`\nto select the group of existing pods which pods will be taken into consideration\nfor the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming\npod labels will be ignored. The default value is empty.\nThe same key is forbidden to exist in both mismatchLabelKeys and labelSelector.\nAlso, mismatchLabelKeys cannot be set when labelSelector isn't set.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "namespaceSelector": {
                        "description": "A label query over the set of namespaces that the term applies to.\nThe term is applied to the union of the namespaces selected by this field\nand the ones listed in the namespaces field.\nnull selector and null or empty namespaces list means \"this pod's namespace\".\nAn empty selector ({}) matches all namespaces.",
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "namespaces": {
                        "description": "namespaces specifies a static list of namespace names that the term applies to.\nThe term is applied to the union of the namespaces listed in this field\nand the ones selected by namespaceSelector.\nnull or empty namespaces list and null namespaceSelector means \"this pod's namespace\".",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "topologyKey": {
                        "description": "This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching\nthe labelSelector in the specified namespaces, where co-located is defined as running on a node\nwhose value of the label with key topologyKey matches that of any node on which any of the\nselected pods is running.\nEmpty topologyKey is not allowed.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "apiserverConfig": {
          "description": "apiserverConfig allows specifying a host and auth methods to access the\nKuberntees API server.\nIf null, Prometheus is assumed to run inside of the cluster: it will\ndiscover the API servers automatically and use the Pod's CA certificate\nand bearer token file at /var/run/secrets/kubernetes.io/serviceaccount/.",
          "type": "object",
          "required": [
            "host"
          ],
          "properties": {
            "authorization": {
              "description": "authorization section for the API server.\n\nCannot be set at the same time as `basicAuth`, `bearerToken`, or\n`bearerTokenFile`.",
              "type": "object",
              "properties": {
                "credentials": {
                  "description": "credentials defines a key of a Secret in the namespace that contains the credentials for authentication.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "credentialsFile": {
                  "description": "credentialsFile defines the file to read a secret from, mutually exclusive with `credentials`.",
                  "type": "string"
                },
                "type": {
                  "description": "type defines the authentication type. The value is case-insensitive.\n\n\"Basic\" is not a supported value.\n\nDefault: \"Bearer\"",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "basicAuth": {
              "description": "basicAuth configuration for the API server.\n\nCannot be set at the same time as `authorization`, `bearerToken`, or\n`bearerTokenFile`.",
              "type": "object",
              "properties": {
                "password": {
                  "description": "password defines a key of a Secret containing the password for\nauthentication.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "username": {
                  "description": "username defines a key of a Secret containing the username for\nauthentication.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "bearerToken": {
              "description": "bearerToken is deprecated: this will be removed in a future release.\n *Warning: this field shouldn't be used because the token value appears\nin clear-text. Prefer using `authorization`.*",
              "type": "string"
            },
            "bearerTokenFile": {
              "description": "bearerTokenFile defines the file to read bearer token for accessing apiserver.\n\nCannot be set at the same time as `basicAuth`, `authorization`, or `bearerToken`.\n\nDeprecated: this will be removed in a future release. Prefer using `authorization`.",
              "type": "string"
            },
            "host": {
              "description": "host defines the Kubernetes API address consisting of a hostname or IP address followed\nby an optional port number.",
              "type": "string"
            },
            "noProxy": {
              "description": "noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "string"
            },
            "proxyConnectHeader": {
              "description": "proxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "description": "SecretKeySelector selects a key of a Secret.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "proxyFromEnvironment": {
              "description": "proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "boolean"
            },
            "proxyUrl": {
              "description": "proxyUrl defines the HTTP proxy server to use.",
              "type": "string",
              "pattern": "^(http|https|socks5)://.+$"
            },
            "tlsConfig": {
              "description": "tlsConfig to use for the API server.",
              "type": "object",
              "properties": {
                "ca": {
                  "description": "ca defines the Certificate authority used when verifying server certificates.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "configMap defines the ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "secret defines the Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "caFile": {
                  "description": "caFile defines the path to the CA cert in the Prometheus container to use for the targets.",
                  "type": "string"
                },
                "cert": {
                  "description": "cert defines the Client certificate to present when doing client-authentication.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "configMap defines the ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "secret defines the Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "certFile": {
                  "description": "certFile defines the path to the client cert file in the Prometheus container for the targets.",
                  "type": "string"
                },
                "insecureSkipVerify": {
                  "description": "insecureSkipVerify defines how to disable target certificate validation.",
                  "type": "boolean"
                },
                "keyFile": {
                  "description": "keyFile defines the path to the client key file in the Prometheus container for the targets.",
                  "type": "string"
                },
                "keySecret": {
                  "description": "keySecret defines the Secret containing the client key file for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "maxVersion": {
                  "description": "maxVersion defines the maximum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.41.0 or Thanos \u003e= v0.31.0.",
                  "type": "string",
                  "enum": [
                    "TLS10",
                    "TLS11",
                    "TLS12",
                    "TLS13"
                  ]
                },
                "minVersion": {
                  "description": "minVersion defines the minimum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.35.0 or Thanos \u003e= v0.28.0.",
                  "type": "string",
                  "enum": [
                    "TLS10",
                    "TLS11",
                    "TLS12",
                    "TLS13"
                  ]
                },
                "serverName": {
                  "description": "serverName is used to verify the hostname for the targets.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "arbitraryFSAccessThroughSMs": {
          "description": "arbitraryFSAccessThroughSMs when true, ServiceMonitor, PodMonitor and Probe object are forbidden to\nreference arbitrary files on the file system of the 'prometheus'\ncontainer.\nWhen a ServiceMonitor's endpoint specifies a `bearerTokenFile` value\n(e.g.  '/var/run/secrets/kubernetes.io/serviceaccount/token'), a\nmalicious target can get access to the Prometheus service account's\ntoken in the Prometheus' scrape request. Setting\n`spec.arbitraryFSAccessThroughSM` to 'true' would prevent the attack.\nUsers should instead provide the credentials using the\n`spec.bearerTokenSecret` field.",
          "type": "object",
          "properties": {
            "deny": {
              "description": "deny prevents service monitors from accessing arbitrary files on the file system.\nWhen true, service monitors cannot use file-based configurations like BearerTokenFile\nthat could potentially access sensitive files. When false (default), such access is allowed.\nSetting this to true enhances security by preventing potential credential theft attacks.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "automountServiceAccountToken": {
          "description": "automountServiceAccountToken defines whether a service account token should be automatically mounted in the pod.\nIf the field isn't set, the operator mounts the service account token by default.\n\n**Warning:** be aware that by default, Prometheus requires the service account token for Kubernetes service discovery.\nIt is possible to use strategic merge patch to project the service account token into the 'prometheus' container.",
          "type": "boolean"
        },
        "bodySizeLimit": {
          "description": "bodySizeLimit defines per-scrape on response body size.\nOnly valid in Prometheus versions 2.45.0 and newer.\n\nNote that the global limit only applies to scrape objects that don't specify an explicit limit value.\nIf you want to enforce a maximum limit for all scrape objects, refer to enforcedBodySizeLimit.",
          "type": "string",
          "pattern": "(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$"
        },
        "configMaps": {
          "description": "configMaps defines a list of ConfigMaps in the same namespace as the Prometheus\nobject, which shall be mounted into the Prometheus Pods.\nEach ConfigMap is added to the StatefulSet definition as a volume named `configmap-\u003cconfigmap-name\u003e`.\nThe ConfigMaps are mounted into /etc/prometheus/configmaps/\u003cconfigmap-name\u003e in the 'prometheus' container.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "containers": {
          "description": "containers allows injecting additional containers or modifying operator\ngenerated containers. This can be used to allow adding an authentication\nproxy to the Pods or to change the behavior of an operator generated\ncontainer. Containers described here modify an operator generated\ncontainer if they share the same name and modifications are done via a\nstrategic merge patch.\n\nThe names of containers managed by the operator are:\n* `prometheus`\n* `config-reloader`\n* `thanos-sidecar`\n\nOverriding containers is entirely outside the scope of what the\nmaintainers will support and by doing so, you accept that this behaviour\nmay break at any time without notice.",
          "type": "array",
          "items": {
            "description": "A single application container that you want to run within a pod.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "args": {
                "description": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              },
              "command": {
                "description": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              },
              "env": {
                "description": "List of environment variables to set in the container.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "EnvVar represents an environment variable present in a Container.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the environment variable.\nMay consist of any printable ASCII characters except '='.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                      "type": "object",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Selects a key of a ConfigMap.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "fieldRef": {
                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                          "type": "object",
                          "required": [
                            "fieldPath"
                          ],
                          "properties": {
                            "apiVersion": {
                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "Path of the field to select in the specified API version.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "fileKeyRef": {
                          "description": "FileKeyRef selects a key of the env file.\nRequires the EnvFiles feature gate to be enabled.",
                          "type": "object",
                          "required": [
                            "key",
                            "path",
                            "volumeName"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key within the env file. An invalid key will prevent the pod from starting.\nThe keys defined within a source may consist of any printable ASCII characters except '='.\nDuring Alpha stage of the EnvFiles feature gate, the key size is limited to 128 characters.",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the file or its key must be defined. If the file or key\ndoes not exist, then the env var is not published.\nIf optional is set to true and the specified key does not exist,\nthe environment variable will not be set in the Pod's containers.\n\nIf optional is set to false and the specified key does not exist,\nan error will be returned during Pod creation.",
                              "type": "boolean",
                              "default": false
                            },
                            "path": {
                              "description": "The path within the volume from which to select the file.\nMust be relative and may not contain the '..' path or start with '..'.",
                              "type": "string"
                            },
                            "volumeName": {
                              "description": "The name of the volume mount containing the env file.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "resourceFieldRef": {
                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                          "type": "object",
                          "required": [
                            "resource"
                          ],
                          "properties": {
                            "containerName": {
                              "description": "Container name: required for volumes, optional for env vars",
                              "type": "string"
                            },
                            "divisor": {
                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "resource": {
                              "description": "Required: resource to select",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "secretKeyRef": {
                          "description": "Selects a key of a secret in the pod's namespace",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "envFrom": {
                "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source may consist of any printable ASCII characters except '='.\nWhen a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "EnvFromSource represents the source of a set of ConfigMaps or Secrets",
                  "type": "object",
                  "properties": {
                    "configMapRef": {
                      "description": "The ConfigMap to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "prefix": {
                      "description": "Optional text to prepend to the name of each environment variable.\nMay consist of any printable ASCII characters except '='.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "The Secret to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "image": {
                "description": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                "type": "string"
              },
              "imagePullPolicy": {
                "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                "type": "string"
              },
              "lifecycle": {
                "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                "type": "object",
                "properties": {
                  "postStart": {
                    "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies a command to execute in the container.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies an HTTP GET request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sleep": {
                        "description": "Sleep represents a duration that the container should sleep.",
                        "type": "object",
                        "required": [
                          "seconds"
                        ],
                        "properties": {
                          "seconds": {
                            "description": "Seconds is the number of seconds to sleep.",
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tcpSocket": {
                        "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "preStop": {
                    "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies a command to execute in the container.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies an HTTP GET request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sleep": {
                        "description": "Sleep represents a duration that the container should sleep.",
                        "type": "object",
                        "required": [
                          "seconds"
                        ],
                        "properties": {
                          "seconds": {
                            "description": "Seconds is the number of seconds to sleep.",
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tcpSocket": {
                        "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "stopSignal": {
                    "description": "StopSignal defines which signal will be sent to a container when it is being stopped.\nIf not specified, the default is defined by the container runtime in use.\nStopSignal can only be set for Pods with a non-empty .spec.os.name",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "livenessProbe": {
                "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies a command to execute in the container.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies a GRPC HealthCheckRequest.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies a connection to a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated.",
                "type": "string"
              },
              "ports": {
                "description": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "ContainerPort represents a network port in a single container.",
                  "type": "object",
                  "required": [
                    "containerPort"
                  ],
                  "properties": {
                    "containerPort": {
                      "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "hostIP": {
                      "description": "What host IP to bind the external port to.",
                      "type": "string"
                    },
                    "hostPort": {
                      "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                      "type": "string"
                    },
                    "protocol": {
                      "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                      "type": "string",
                      "default": "TCP"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "containerPort",
                  "protocol"
                ],
                "x-kubernetes-list-type": "map"
              },
              "readinessProbe": {
                "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies a command to execute in the container.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies a GRPC HealthCheckRequest.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies a connection to a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "resizePolicy": {
                "description": "Resources resize policy for the container.",
                "type": "array",
                "items": {
                  "description": "ContainerResizePolicy represents resource resize policy for the container.",
                  "type": "object",
                  "required": [
                    "resourceName",
                    "restartPolicy"
                  ],
                  "properties": {
                    "resourceName": {
                      "description": "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory.",
                      "type": "string"
                    },
                    "restartPolicy": {
                      "description": "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "resources": {
                "description": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                "type": "object",
                "properties": {
                  "claims": {
                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis field depends on the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                    "type": "array",
                    "items": {
                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                          "type": "string"
                        },
                        "request": {
                          "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-map-keys": [
                      "name"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "additionalProperties": false
              },
              "restartPolicy": {
                "description": "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis overrides the pod-level restart policy. When this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nAdditionally, setting the RestartPolicy as \"Always\" for the init container will\nhave the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted.",
                "type": "string"
              },
              "restartPolicyRules": {
                "description": "Represents a list of rules to be checked to determine if the\ncontainer should be restarted on exit. The rules are evaluated in\norder. Once a rule matches a container exit condition, the remaining\nrules are ignored. If no rule matches the container exit condition,\nthe Container-level restart policy determines the whether the container\nis restarted or not. Constraints on the rules:\n- At most 20 rules are allowed.\n- Rules can have the same action.\n- Identical rules are not forbidden in validations.\nWhen rules are specified, container MUST set RestartPolicy explicitly\neven it if matches the Pod's RestartPolicy.",
                "type": "array",
                "items": {
                  "description": "ContainerRestartRule describes how a container exit is handled.",
                  "type": "object",
                  "required": [
                    "action"
                  ],
                  "properties": {
                    "action": {
                      "description": "Specifies the action taken on a container exit if the requirements\nare satisfied. The only possible value is \"Restart\" to restart the\ncontainer.",
                      "type": "string"
                    },
                    "exitCodes": {
                      "description": "Represents the exit codes to check on container exits.",
                      "type": "object",
                      "required": [
                        "operator"
                      ],
                      "properties": {
                        "operator": {
                          "description": "Represents the relationship between the container exit code(s) and the\nspecified values. Possible values are:\n- In: the requirement is satisfied if the container exit code is in the\n  set of specified values.\n- NotIn: the requirement is satisfied if the container exit code is\n  not in the set of specified values.",
                          "type": "string"
                        },
                        "values": {
                          "description": "Specifies the set of values to check for container exit codes.\nAt most 255 elements are allowed.",
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "securityContext": {
                "description": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                "type": "object",
                "properties": {
                  "allowPrivilegeEscalation": {
                    "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "appArmorProfile": {
                    "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "capabilities": {
                    "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "add": {
                        "description": "Added capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "drop": {
                        "description": "Removed capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "privileged": {
                    "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "procMount": {
                    "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "string"
                  },
                  "readOnlyRootFilesystem": {
                    "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                  },
                  "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "seLinuxOptions": {
                    "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "level": {
                        "description": "Level is SELinux level label that applies to the container.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Role is a SELinux role label that applies to the container.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type is a SELinux type label that applies to the container.",
                        "type": "string"
                      },
                      "user": {
                        "description": "User is a SELinux user label that applies to the container.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "seccompProfile": {
                    "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "windowsOptions": {
                    "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                    "type": "object",
                    "properties": {
                      "gmsaCredentialSpec": {
                        "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                        "type": "string"
                      },
                      "gmsaCredentialSpecName": {
                        "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                        "type": "string"
                      },
                      "hostProcess": {
                        "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                        "type": "boolean"
                      },
                      "runAsUserName": {
                        "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "startupProbe": {
                "description": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies a command to execute in the container.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies a GRPC HealthCheckRequest.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies a connection to a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "stdin": {
                "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.",
                "type": "boolean"
              },
              "stdinOnce": {
                "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false",
                "type": "boolean"
              },
              "terminationMessagePath": {
                "description": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.",
                "type": "string"
              },
              "terminationMessagePolicy": {
                "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.",
                "type": "string"
              },
              "tty": {
                "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.",
                "type": "boolean"
              },
              "volumeDevices": {
                "description": "volumeDevices is the list of block devices to be used by the container.",
                "type": "array",
                "items": {
                  "description": "volumeDevice describes a mapping of a raw block device within a container.",
                  "type": "object",
                  "required": [
                    "devicePath",
                    "name"
                  ],
                  "properties": {
                    "devicePath": {
                      "description": "devicePath is the path inside of the container that the device will be mapped to.",
                      "type": "string"
                    },
                    "name": {
                      "description": "name must match the name of a persistentVolumeClaim in the pod",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "devicePath"
                ],
                "x-kubernetes-list-type": "map"
              },
              "volumeMounts": {
                "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "VolumeMount describes a mounting of a Volume within a container.",
                  "type": "object",
                  "required": [
                    "mountPath",
                    "name"
                  ],
                  "properties": {
                    "mountPath": {
                      "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                      "type": "string"
                    },
                    "mountPropagation": {
                      "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                      "type": "string"
                    },
                    "name": {
                      "description": "This must match the Name of a Volume.",
                      "type": "string"
                    },
                    "readOnly": {
                      "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                      "type": "boolean"
                    },
                    "recursiveReadOnly": {
                      "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                      "type": "string"
                    },
                    "subPath": {
                      "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                      "type": "string"
                    },
                    "subPathExpr": {
                      "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "mountPath"
                ],
                "x-kubernetes-list-type": "map"
              },
              "workingDir": {
                "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "convertClassicHistogramsToNHCB": {
          "description": "convertClassicHistogramsToNHCB defines whether to convert all scraped classic histograms into a native\nhistogram with custom buckets.\n\nIt requires Prometheus \u003e= v3.4.0.",
          "type": "boolean"
        },
        "dnsConfig": {
          "description": "dnsConfig defines the DNS configuration for the pods.",
          "type": "object",
          "properties": {
            "nameservers": {
              "description": "nameservers defines the list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.",
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "x-kubernetes-list-type": "set"
            },
            "options": {
              "description": "options defines the list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nResolution options given in Options\nwill override those that appear in the base DNSPolicy.",
              "type": "array",
              "items": {
                "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "name is required and must be unique.",
                    "type": "string",
                    "minLength": 1
                  },
                  "value": {
                    "description": "value is optional.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "searches": {
              "description": "searches defines the list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.",
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "x-kubernetes-list-type": "set"
            }
          },
          "additionalProperties": false
        },
        "dnsPolicy": {
          "description": "dnsPolicy defines the DNS policy for the pods.",
          "type": "string",
          "enum": [
            "ClusterFirstWithHostNet",
            "ClusterFirst",
            "Default",
            "None"
          ]
        },
        "enableFeatures": {
          "description": "enableFeatures enables access to Prometheus feature flags. By default, no features are enabled.\n\nEnabling features which are disabled by default is entirely outside the\nscope of what the maintainers will support and by doing so, you accept\nthat this behaviour may break at any time without notice.\n\nFor more information see https://prometheus.io/docs/prometheus/latest/feature_flags/",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          },
          "x-kubernetes-list-type": "set"
        },
        "enableOTLPReceiver": {
          "description": "enableOTLPReceiver defines the Prometheus to be used as a receiver for the OTLP Metrics protocol.\n\nNote that the OTLP receiver endpoint is automatically enabled if `.spec.otlpConfig` is defined.\n\nIt requires Prometheus \u003e= v2.47.0.",
          "type": "boolean"
        },
        "enableRemoteWriteReceiver": {
          "description": "enableRemoteWriteReceiver defines the Prometheus to be used as a receiver for the Prometheus remote\nwrite protocol.\n\nWARNING: This is not considered an efficient way of ingesting samples.\nUse it with caution for specific low-volume use cases.\nIt is not suitable for replacing the ingestion via scraping and turning\nPrometheus into a push-based metrics collection system.\nFor more information see https://prometheus.io/docs/prometheus/latest/querying/api/#remote-write-receiver\n\nIt requires Prometheus \u003e= v2.33.0.",
          "type": "boolean"
        },
        "enableServiceLinks": {
          "description": "enableServiceLinks defines whether information about services should be injected into pod's environment variables",
          "type": "boolean"
        },
        "enforcedBodySizeLimit": {
          "description": "enforcedBodySizeLimit when defined specifies a global limit on the size\nof uncompressed response body that will be accepted by Prometheus.\nTargets responding with a body larger than this many bytes will cause\nthe scrape to fail.\n\nIt requires Prometheus \u003e= v2.28.0.\n\nWhen both `enforcedBodySizeLimit` and `bodySizeLimit` are defined and greater than zero, the following rules apply:\n* Scrape objects without a defined bodySizeLimit value will inherit the global bodySizeLimit value (Prometheus \u003e= 2.45.0) or the enforcedBodySizeLimit value (Prometheus \u003c v2.45.0).\n  If Prometheus version is \u003e= 2.45.0 and the `enforcedBodySizeLimit` is greater than the `bodySizeLimit`, the `bodySizeLimit` will be set to `enforcedBodySizeLimit`.\n* Scrape objects with a bodySizeLimit value less than or equal to enforcedBodySizeLimit keep their specific value.\n* Scrape objects with a bodySizeLimit value greater than enforcedBodySizeLimit are set to enforcedBodySizeLimit.",
          "type": "string",
          "pattern": "(^0|([0-9]*[.])?[0-9]+((K|M|G|T|E|P)i?)?B)$"
        },
        "enforcedKeepDroppedTargets": {
          "description": "enforcedKeepDroppedTargets when defined specifies a global limit on the number of targets\ndropped by relabeling that will be kept in memory. The value overrides\nany `spec.keepDroppedTargets` set by\nServiceMonitor, PodMonitor, Probe objects unless `spec.keepDroppedTargets` is\ngreater than zero and less than `spec.enforcedKeepDroppedTargets`.\n\nIt requires Prometheus \u003e= v2.47.0.\n\nWhen both `enforcedKeepDroppedTargets` and `keepDroppedTargets` are defined and greater than zero, the following rules apply:\n* Scrape objects without a defined keepDroppedTargets value will inherit the global keepDroppedTargets value (Prometheus \u003e= 2.45.0) or the enforcedKeepDroppedTargets value (Prometheus \u003c v2.45.0).\n  If Prometheus version is \u003e= 2.45.0 and the `enforcedKeepDroppedTargets` is greater than the `keepDroppedTargets`, the `keepDroppedTargets` will be set to `enforcedKeepDroppedTargets`.\n* Scrape objects with a keepDroppedTargets value less than or equal to enforcedKeepDroppedTargets keep their specific value.\n* Scrape objects with a keepDroppedTargets value greater than enforcedKeepDroppedTargets are set to enforcedKeepDroppedTargets.",
          "type": "integer",
          "format": "int64"
        },
        "enforcedLabelLimit": {
          "description": "enforcedLabelLimit when defined specifies a global limit on the number\nof labels per sample. The value overrides any `spec.labelLimit` set by\nServiceMonitor, PodMonitor, Probe objects unless `spec.labelLimit` is\ngreater than zero and less than `spec.enforcedLabelLimit`.\n\nIt requires Prometheus \u003e= v2.27.0.\n\nWhen both `enforcedLabelLimit` and `labelLimit` are defined and greater than zero, the following rules apply:\n* Scrape objects without a defined labelLimit value will inherit the global labelLimit value (Prometheus \u003e= 2.45.0) or the enforcedLabelLimit value (Prometheus \u003c v2.45.0).\n  If Prometheus version is \u003e= 2.45.0 and the `enforcedLabelLimit` is greater than the `labelLimit`, the `labelLimit` will be set to `enforcedLabelLimit`.\n* Scrape objects with a labelLimit value less than or equal to enforcedLabelLimit keep their specific value.\n* Scrape objects with a labelLimit value greater than enforcedLabelLimit are set to enforcedLabelLimit.",
          "type": "integer",
          "format": "int64"
        },
        "enforcedLabelNameLengthLimit": {
          "description": "enforcedLabelNameLengthLimit when defined specifies a global limit on the length\nof labels name per sample. The value overrides any `spec.labelNameLengthLimit` set by\nServiceMonitor, PodMonitor, Probe objects unless `spec.labelNameLengthLimit` is\ngreater than zero and less than `spec.enforcedLabelNameLengthLimit`.\n\nIt requires Prometheus \u003e= v2.27.0.\n\nWhen both `enforcedLabelNameLengthLimit` and `labelNameLengthLimit` are defined and greater than zero, the following rules apply:\n* Scrape objects without a defined labelNameLengthLimit value will inherit the global labelNameLengthLimit value (Prometheus \u003e= 2.45.0) or the enforcedLabelNameLengthLimit value (Prometheus \u003c v2.45.0).\n  If Prometheus version is \u003e= 2.45.0 and the `enforcedLabelNameLengthLimit` is greater than the `labelNameLengthLimit`, the `labelNameLengthLimit` will be set to `enforcedLabelNameLengthLimit`.\n* Scrape objects with a labelNameLengthLimit value less than or equal to enforcedLabelNameLengthLimit keep their specific value.\n* Scrape objects with a labelNameLengthLimit value greater than enforcedLabelNameLengthLimit are set to enforcedLabelNameLengthLimit.",
          "type": "integer",
          "format": "int64"
        },
        "enforcedLabelValueLengthLimit": {
          "description": "enforcedLabelValueLengthLimit when not null defines a global limit on the length\nof labels value per sample. The value overrides any `spec.labelValueLengthLimit` set by\nServiceMonitor, PodMonitor, Probe objects unless `spec.labelValueLengthLimit` is\ngreater than zero and less than `spec.enforcedLabelValueLengthLimit`.\n\nIt requires Prometheus \u003e= v2.27.0.\n\nWhen both `enforcedLabelValueLengthLimit` and `labelValueLengthLimit` are defined and greater than zero, the following rules apply:\n* Scrape objects without a defined labelValueLengthLimit value will inherit the global labelValueLengthLimit value (Prometheus \u003e= 2.45.0) or the enforcedLabelValueLengthLimit value (Prometheus \u003c v2.45.0).\n  If Prometheus version is \u003e= 2.45.0 and the `enforcedLabelValueLengthLimit` is greater than the `labelValueLengthLimit`, the `labelValueLengthLimit` will be set to `enforcedLabelValueLengthLimit`.\n* Scrape objects with a labelValueLengthLimit value less than or equal to enforcedLabelValueLengthLimit keep their specific value.\n* Scrape objects with a labelValueLengthLimit value greater than enforcedLabelValueLengthLimit are set to enforcedLabelValueLengthLimit.",
          "type": "integer",
          "format": "int64"
        },
        "enforcedNamespaceLabel": {
          "description": "enforcedNamespaceLabel when not empty, a label will be added to:\n\n1. All metrics scraped from `ServiceMonitor`, `PodMonitor`, `Probe` and `ScrapeConfig` objects.\n2. All metrics generated from recording rules defined in `PrometheusRule` objects.\n3. All alerts generated from alerting rules defined in `PrometheusRule` objects.\n4. All vector selectors of PromQL expressions defined in `PrometheusRule` objects.\n\nThe label will not added for objects referenced in `spec.excludedFromEnforcement`.\n\nThe label's name is this field's value.\nThe label's value is the namespace of the `ServiceMonitor`,\n`PodMonitor`, `Probe`, `PrometheusRule` or `ScrapeConfig` object.",
          "type": "string"
        },
        "enforcedSampleLimit": {
          "description": "enforcedSampleLimit when defined specifies a global limit on the number\nof scraped samples that will be accepted. This overrides any\n`spec.sampleLimit` set by ServiceMonitor, PodMonitor, Probe objects\nunless `spec.sampleLimit` is greater than zero and less than\n`spec.enforcedSampleLimit`.\n\nIt is meant to be used by admins to keep the overall number of\nsamples/series under a desired limit.\n\nWhen both `enforcedSampleLimit` and `sampleLimit` are defined and greater than zero, the following rules apply:\n* Scrape objects without a defined sampleLimit value will inherit the global sampleLimit value (Prometheus \u003e= 2.45.0) or the enforcedSampleLimit value (Prometheus \u003c v2.45.0).\n  If Prometheus version is \u003e= 2.45.0 and the `enforcedSampleLimit` is greater than the `sampleLimit`, the `sampleLimit` will be set to `enforcedSampleLimit`.\n* Scrape objects with a sampleLimit value less than or equal to enforcedSampleLimit keep their specific value.\n* Scrape objects with a sampleLimit value greater than enforcedSampleLimit are set to enforcedSampleLimit.",
          "type": "integer",
          "format": "int64"
        },
        "enforcedTargetLimit": {
          "description": "enforcedTargetLimit when defined specifies a global limit on the number\nof scraped targets. The value overrides any `spec.targetLimit` set by\nServiceMonitor, PodMonitor, Probe objects unless `spec.targetLimit` is\ngreater than zero and less than `spec.enforcedTargetLimit`.\n\nIt is meant to be used by admins to to keep the overall number of\ntargets under a desired limit.\n\nWhen both `enforcedTargetLimit` and `targetLimit` are defined and greater than zero, the following rules apply:\n* Scrape objects without a defined targetLimit value will inherit the global targetLimit value (Prometheus \u003e= 2.45.0) or the enforcedTargetLimit value (Prometheus \u003c v2.45.0).\n  If Prometheus version is \u003e= 2.45.0 and the `enforcedTargetLimit` is greater than the `targetLimit`, the `targetLimit` will be set to `enforcedTargetLimit`.\n* Scrape objects with a targetLimit value less than or equal to enforcedTargetLimit keep their specific value.\n* Scrape objects with a targetLimit value greater than enforcedTargetLimit are set to enforcedTargetLimit.",
          "type": "integer",
          "format": "int64"
        },
        "excludedFromEnforcement": {
          "description": "excludedFromEnforcement defines the list of references to PodMonitor, ServiceMonitor, Probe and PrometheusRule objects\nto be excluded from enforcing a namespace label of origin.\n\nIt is only applicable if `spec.enforcedNamespaceLabel` set to true.",
          "type": "array",
          "items": {
            "description": "ObjectReference references a PodMonitor, ServiceMonitor, Probe or PrometheusRule object.",
            "type": "object",
            "required": [
              "namespace",
              "resource"
            ],
            "properties": {
              "group": {
                "description": "group of the referent. When not specified, it defaults to `monitoring.coreos.com`",
                "type": "string",
                "default": "monitoring.coreos.com",
                "enum": [
                  "monitoring.coreos.com"
                ]
              },
              "name": {
                "description": "name of the referent. When not set, all resources in the namespace are matched.",
                "type": "string"
              },
              "namespace": {
                "description": "namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                "type": "string",
                "minLength": 1
              },
              "resource": {
                "description": "resource of the referent.",
                "type": "string",
                "enum": [
                  "prometheusrules",
                  "servicemonitors",
                  "podmonitors",
                  "probes",
                  "scrapeconfigs"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "externalLabels": {
          "description": "externalLabels defines the labels to add to any time series or alerts when communicating with\nexternal systems (federation, remote storage, Alertmanager).\nLabels defined by `spec.replicaExternalLabelName` and\n`spec.prometheusExternalLabelName` take precedence over this list.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "externalUrl": {
          "description": "externalUrl defines the external URL under which the Prometheus service is externally\navailable. This is necessary to generate correct URLs (for instance if\nPrometheus is accessible behind an Ingress resource).",
          "type": "string"
        },
        "hostAliases": {
          "description": "hostAliases defines the optional list of hosts and IPs that will be injected into the Pod's\nhosts file if specified.",
          "type": "array",
          "items": {
            "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
            "type": "object",
            "required": [
              "hostnames",
              "ip"
            ],
            "properties": {
              "hostnames": {
                "description": "hostnames defines hostnames for the above IP address.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ip": {
                "description": "ip defines the IP address of the host file entry.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "ip"
          ],
          "x-kubernetes-list-type": "map"
        },
        "hostNetwork": {
          "description": "hostNetwork defines the host's network namespace if true.\n\nMake sure to understand the security implications if you want to enable\nit (https://kubernetes.io/docs/concepts/configuration/overview/ ).\n\nWhen hostNetwork is enabled, this will set the DNS policy to\n`ClusterFirstWithHostNet` automatically (unless `.spec.DNSPolicy` is set\nto a different value).",
          "type": "boolean"
        },
        "hostUsers": {
          "description": "hostUsers supports the user space in Kubernetes.\n\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/user-namespaces/\n\nThe feature requires at least Kubernetes 1.28 with the `UserNamespacesSupport` feature gate enabled.\nStarting Kubernetes 1.33, the feature is enabled by default.",
          "type": "boolean"
        },
        "ignoreNamespaceSelectors": {
          "description": "ignoreNamespaceSelectors when true, `spec.namespaceSelector` from all PodMonitor, ServiceMonitor\nand Probe objects will be ignored. They will only discover targets\nwithin the namespace of the PodMonitor, ServiceMonitor and Probe\nobject.",
          "type": "boolean"
        },
        "image": {
          "description": "image defines the container image name for Prometheus. If specified, it takes precedence\nover the `spec.baseImage`, `spec.tag` and `spec.sha` fields.\n\nSpecifying `spec.version` is still necessary to ensure the Prometheus\nOperator knows which version of Prometheus is being configured.\n\nIf neither `spec.image` nor `spec.baseImage` are defined, the operator\nwill use the latest upstream version of Prometheus available at the time\nwhen the operator was released.",
          "type": "string"
        },
        "imagePullPolicy": {
          "description": "imagePullPolicy defines the image pull policy for the 'prometheus', 'init-config-reloader' and 'config-reloader' containers.\nSee https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy for more details.",
          "type": "string",
          "enum": [
            "",
            "Always",
            "Never",
            "IfNotPresent"
          ]
        },
        "imagePullSecrets": {
          "description": "imagePullSecrets defines an optional list of references to Secrets in the same namespace\nto use for pulling images from registries.\nSee http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod",
          "type": "array",
          "items": {
            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": "string",
                "default": ""
              }
            },
            "additionalProperties": false,
            "x-kubernetes-map-type": "atomic"
          }
        },
        "initContainers": {
          "description": "initContainers allows injecting initContainers to the Pod definition. Those\ncan be used to e.g.  fetch secrets for injection into the Prometheus\nconfiguration from external sources. Any errors during the execution of\nan initContainer will lead to a restart of the Pod. More info:\nhttps://kubernetes.io/docs/concepts/workloads/pods/init-containers/\nInitContainers described here modify an operator generated init\ncontainers if they share the same name and modifications are done via a\nstrategic merge patch.\n\nThe names of init container name managed by the operator are:\n* `init-config-reloader`.\n\nOverriding init containers is entirely outside the scope of what the\nmaintainers will support and by doing so, you accept that this behaviour\nmay break at any time without notice.",
          "type": "array",
          "items": {
            "description": "A single application container that you want to run within a pod.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "args": {
                "description": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              },
              "command": {
                "description": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              },
              "env": {
                "description": "List of environment variables to set in the container.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "EnvVar represents an environment variable present in a Container.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the environment variable.\nMay consist of any printable ASCII characters except '='.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                      "type": "object",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Selects a key of a ConfigMap.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "fieldRef": {
                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                          "type": "object",
                          "required": [
                            "fieldPath"
                          ],
                          "properties": {
                            "apiVersion": {
                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "Path of the field to select in the specified API version.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "fileKeyRef": {
                          "description": "FileKeyRef selects a key of the env file.\nRequires the EnvFiles feature gate to be enabled.",
                          "type": "object",
                          "required": [
                            "key",
                            "path",
                            "volumeName"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key within the env file. An invalid key will prevent the pod from starting.\nThe keys defined within a source may consist of any printable ASCII characters except '='.\nDuring Alpha stage of the EnvFiles feature gate, the key size is limited to 128 characters.",
                              "type": "string"
                            },
                            "optional": {
                              "description": "Specify whether the file or its key must be defined. If the file or key\ndoes not exist, then the env var is not published.\nIf optional is set to true and the specified key does not exist,\nthe environment variable will not be set in the Pod's containers.\n\nIf optional is set to false and the specified key does not exist,\nan error will be returned during Pod creation.",
                              "type": "boolean",
                              "default": false
                            },
                            "path": {
                              "description": "The path within the volume from which to select the file.\nMust be relative and may not contain the '..' path or start with '..'.",
                              "type": "string"
                            },
                            "volumeName": {
                              "description": "The name of the volume mount containing the env file.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "resourceFieldRef": {
                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                          "type": "object",
                          "required": [
                            "resource"
                          ],
                          "properties": {
                            "containerName": {
                              "description": "Container name: required for volumes, optional for env vars",
                              "type": "string"
                            },
                            "divisor": {
                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "resource": {
                              "description": "Required: resource to select",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "secretKeyRef": {
                          "description": "Selects a key of a secret in the pod's namespace",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "name"
                ],
                "x-kubernetes-list-type": "map"
              },
              "envFrom": {
                "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source may consist of any printable ASCII characters except '='.\nWhen a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "EnvFromSource represents the source of a set of ConfigMaps or Secrets",
                  "type": "object",
                  "properties": {
                    "configMapRef": {
                      "description": "The ConfigMap to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "prefix": {
                      "description": "Optional text to prepend to the name of each environment variable.\nMay consist of any printable ASCII characters except '='.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "The Secret to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "image": {
                "description": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                "type": "string"
              },
              "imagePullPolicy": {
                "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                "type": "string"
              },
              "lifecycle": {
                "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                "type": "object",
                "properties": {
                  "postStart": {
                    "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies a command to execute in the container.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies an HTTP GET request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sleep": {
                        "description": "Sleep represents a duration that the container should sleep.",
                        "type": "object",
                        "required": [
                          "seconds"
                        ],
                        "properties": {
                          "seconds": {
                            "description": "Seconds is the number of seconds to sleep.",
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tcpSocket": {
                        "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "preStop": {
                    "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                    "type": "object",
                    "properties": {
                      "exec": {
                        "description": "Exec specifies a command to execute in the container.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "httpGet": {
                        "description": "HTTPGet specifies an HTTP GET request to perform.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                            "type": "string"
                          },
                          "httpHeaders": {
                            "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                            "type": "array",
                            "items": {
                              "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                              "type": "object",
                              "required": [
                                "name",
                                "value"
                              ],
                              "properties": {
                                "name": {
                                  "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "The header field value",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "path": {
                            "description": "Path to access on the HTTP server.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "scheme": {
                            "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "sleep": {
                        "description": "Sleep represents a duration that the container should sleep.",
                        "type": "object",
                        "required": [
                          "seconds"
                        ],
                        "properties": {
                          "seconds": {
                            "description": "Seconds is the number of seconds to sleep.",
                            "type": "integer",
                            "format": "int64"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tcpSocket": {
                        "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "host": {
                            "description": "Optional: Host name to connect to, defaults to the pod IP.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "stopSignal": {
                    "description": "StopSignal defines which signal will be sent to a container when it is being stopped.\nIf not specified, the default is defined by the container runtime in use.\nStopSignal can only be set for Pods with a non-empty .spec.os.name",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "livenessProbe": {
                "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies a command to execute in the container.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies a GRPC HealthCheckRequest.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies a connection to a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated.",
                "type": "string"
              },
              "ports": {
                "description": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "ContainerPort represents a network port in a single container.",
                  "type": "object",
                  "required": [
                    "containerPort"
                  ],
                  "properties": {
                    "containerPort": {
                      "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "hostIP": {
                      "description": "What host IP to bind the external port to.",
                      "type": "string"
                    },
                    "hostPort": {
                      "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                      "type": "string"
                    },
                    "protocol": {
                      "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                      "type": "string",
                      "default": "TCP"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "containerPort",
                  "protocol"
                ],
                "x-kubernetes-list-type": "map"
              },
              "readinessProbe": {
                "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies a command to execute in the container.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies a GRPC HealthCheckRequest.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies a connection to a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "resizePolicy": {
                "description": "Resources resize policy for the container.",
                "type": "array",
                "items": {
                  "description": "ContainerResizePolicy represents resource resize policy for the container.",
                  "type": "object",
                  "required": [
                    "resourceName",
                    "restartPolicy"
                  ],
                  "properties": {
                    "resourceName": {
                      "description": "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory.",
                      "type": "string"
                    },
                    "restartPolicy": {
                      "description": "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "resources": {
                "description": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                "type": "object",
                "properties": {
                  "claims": {
                    "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis field depends on the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                    "type": "array",
                    "items": {
                      "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                          "type": "string"
                        },
                        "request": {
                          "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-map-keys": [
                      "name"
                    ],
                    "x-kubernetes-list-type": "map"
                  },
                  "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  }
                },
                "additionalProperties": false
              },
              "restartPolicy": {
                "description": "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis overrides the pod-level restart policy. When this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nAdditionally, setting the RestartPolicy as \"Always\" for the init container will\nhave the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted.",
                "type": "string"
              },
              "restartPolicyRules": {
                "description": "Represents a list of rules to be checked to determine if the\ncontainer should be restarted on exit. The rules are evaluated in\norder. Once a rule matches a container exit condition, the remaining\nrules are ignored. If no rule matches the container exit condition,\nthe Container-level restart policy determines the whether the container\nis restarted or not. Constraints on the rules:\n- At most 20 rules are allowed.\n- Rules can have the same action.\n- Identical rules are not forbidden in validations.\nWhen rules are specified, container MUST set RestartPolicy explicitly\neven it if matches the Pod's RestartPolicy.",
                "type": "array",
                "items": {
                  "description": "ContainerRestartRule describes how a container exit is handled.",
                  "type": "object",
                  "required": [
                    "action"
                  ],
                  "properties": {
                    "action": {
                      "description": "Specifies the action taken on a container exit if the requirements\nare satisfied. The only possible value is \"Restart\" to restart the\ncontainer.",
                      "type": "string"
                    },
                    "exitCodes": {
                      "description": "Represents the exit codes to check on container exits.",
                      "type": "object",
                      "required": [
                        "operator"
                      ],
                      "properties": {
                        "operator": {
                          "description": "Represents the relationship between the container exit code(s) and the\nspecified values. Possible values are:\n- In: the requirement is satisfied if the container exit code is in the\n  set of specified values.\n- NotIn: the requirement is satisfied if the container exit code is\n  not in the set of specified values.",
                          "type": "string"
                        },
                        "values": {
                          "description": "Specifies the set of values to check for container exit codes.\nAt most 255 elements are allowed.",
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "securityContext": {
                "description": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                "type": "object",
                "properties": {
                  "allowPrivilegeEscalation": {
                    "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "appArmorProfile": {
                    "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "capabilities": {
                    "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "add": {
                        "description": "Added capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "drop": {
                        "description": "Removed capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "privileged": {
                    "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "procMount": {
                    "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "string"
                  },
                  "readOnlyRootFilesystem": {
                    "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                  },
                  "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "seLinuxOptions": {
                    "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "level": {
                        "description": "Level is SELinux level label that applies to the container.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Role is a SELinux role label that applies to the container.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type is a SELinux type label that applies to the container.",
                        "type": "string"
                      },
                      "user": {
                        "description": "User is a SELinux user label that applies to the container.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "seccompProfile": {
                    "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "windowsOptions": {
                    "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                    "type": "object",
                    "properties": {
                      "gmsaCredentialSpec": {
                        "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                        "type": "string"
                      },
                      "gmsaCredentialSpecName": {
                        "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                        "type": "string"
                      },
                      "hostProcess": {
                        "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                        "type": "boolean"
                      },
                      "runAsUserName": {
                        "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "startupProbe": {
                "description": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies a command to execute in the container.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies a GRPC HealthCheckRequest.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies a connection to a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "stdin": {
                "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.",
                "type": "boolean"
              },
              "stdinOnce": {
                "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false",
                "type": "boolean"
              },
              "terminationMessagePath": {
                "description": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.",
                "type": "string"
              },
              "terminationMessagePolicy": {
                "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.",
                "type": "string"
              },
              "tty": {
                "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.",
                "type": "boolean"
              },
              "volumeDevices": {
                "description": "volumeDevices is the list of block devices to be used by the container.",
                "type": "array",
                "items": {
                  "description": "volumeDevice describes a mapping of a raw block device within a container.",
                  "type": "object",
                  "required": [
                    "devicePath",
                    "name"
                  ],
                  "properties": {
                    "devicePath": {
                      "description": "devicePath is the path inside of the container that the device will be mapped to.",
                      "type": "string"
                    },
                    "name": {
                      "description": "name must match the name of a persistentVolumeClaim in the pod",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "devicePath"
                ],
                "x-kubernetes-list-type": "map"
              },
              "volumeMounts": {
                "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                "type": "array",
                "items": {
                  "description": "VolumeMount describes a mounting of a Volume within a container.",
                  "type": "object",
                  "required": [
                    "mountPath",
                    "name"
                  ],
                  "properties": {
                    "mountPath": {
                      "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                      "type": "string"
                    },
                    "mountPropagation": {
                      "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                      "type": "string"
                    },
                    "name": {
                      "description": "This must match the Name of a Volume.",
                      "type": "string"
                    },
                    "readOnly": {
                      "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                      "type": "boolean"
                    },
                    "recursiveReadOnly": {
                      "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                      "type": "string"
                    },
                    "subPath": {
                      "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                      "type": "string"
                    },
                    "subPathExpr": {
                      "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "mountPath"
                ],
                "x-kubernetes-list-type": "map"
              },
              "workingDir": {
                "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "keepDroppedTargets": {
          "description": "keepDroppedTargets defines the per-scrape limit on the number of targets dropped by relabeling\nthat will be kept in memory. 0 means no limit.\n\nIt requires Prometheus \u003e= v2.47.0.\n\nNote that the global limit only applies to scrape objects that don't specify an explicit limit value.\nIf you want to enforce a maximum limit for all scrape objects, refer to enforcedKeepDroppedTargets.",
          "type": "integer",
          "format": "int64"
        },
        "labelLimit": {
          "description": "labelLimit defines per-scrape limit on number of labels that will be accepted for a sample.\nOnly valid in Prometheus versions 2.45.0 and newer.\n\nNote that the global limit only applies to scrape objects that don't specify an explicit limit value.\nIf you want to enforce a maximum limit for all scrape objects, refer to enforcedLabelLimit.",
          "type": "integer",
          "format": "int64"
        },
        "labelNameLengthLimit": {
          "description": "labelNameLengthLimit defines the per-scrape limit on length of labels name that will be accepted for a sample.\nOnly valid in Prometheus versions 2.45.0 and newer.\n\nNote that the global limit only applies to scrape objects that don't specify an explicit limit value.\nIf you want to enforce a maximum limit for all scrape objects, refer to enforcedLabelNameLengthLimit.",
          "type": "integer",
          "format": "int64"
        },
        "labelValueLengthLimit": {
          "description": "labelValueLengthLimit defines the per-scrape limit on length of labels value that will be accepted for a sample.\nOnly valid in Prometheus versions 2.45.0 and newer.\n\nNote that the global limit only applies to scrape objects that don't specify an explicit limit value.\nIf you want to enforce a maximum limit for all scrape objects, refer to enforcedLabelValueLengthLimit.",
          "type": "integer",
          "format": "int64"
        },
        "listenLocal": {
          "description": "listenLocal when true, the Prometheus server listens on the loopback address\ninstead of the Pod IP's address.",
          "type": "boolean"
        },
        "logFormat": {
          "description": "logFormat for Log level for Prometheus and the config-reloader sidecar.",
          "type": "string",
          "enum": [
            "",
            "logfmt",
            "json"
          ]
        },
        "logLevel": {
          "description": "logLevel for Prometheus and the config-reloader sidecar.",
          "type": "string",
          "enum": [
            "",
            "debug",
            "info",
            "warn",
            "error"
          ]
        },
        "maximumStartupDurationSeconds": {
          "description": "maximumStartupDurationSeconds defines the maximum time that the `prometheus` container's startup probe will wait before being considered failed. The startup probe will return success after the WAL replay is complete.\nIf set, the value should be greater than 60 (seconds). Otherwise it will be equal to 900 seconds (15 minutes).",
          "type": "integer",
          "format": "int32",
          "minimum": 60
        },
        "minReadySeconds": {
          "description": "minReadySeconds defines the minimum number of seconds for which a newly created Pod should be ready\nwithout any of its container crashing for it to be considered available.\n\nIf unset, pods will be considered available as soon as they are ready.",
          "type": "integer",
          "format": "int32",
          "minimum": 0
        },
        "mode": {
          "description": "mode defines how the Prometheus operator deploys the PrometheusAgent pod(s).\n\n(Alpha) Using this field requires the `PrometheusAgentDaemonSet` feature gate to be enabled.",
          "type": "string",
          "enum": [
            "StatefulSet",
            "DaemonSet"
          ]
        },
        "nameEscapingScheme": {
          "description": "nameEscapingScheme defines the character escaping scheme that will be requested when scraping\nfor metric and label names that do not conform to the legacy Prometheus\ncharacter set.\n\nIt requires Prometheus \u003e= v3.4.0.",
          "type": "string",
          "enum": [
            "AllowUTF8",
            "Underscores",
            "Dots",
            "Values"
          ]
        },
        "nameValidationScheme": {
          "description": "nameValidationScheme defines the validation scheme for metric and label names.\n\nIt requires Prometheus \u003e= v2.55.0.",
          "type": "string",
          "enum": [
            "UTF8",
            "Legacy"
          ]
        },
        "nodeSelector": {
          "description": "nodeSelector defines on which Nodes the Pods are scheduled.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "otlp": {
          "description": "otlp defines the settings related to the OTLP receiver feature.\nIt requires Prometheus \u003e= v2.55.0.",
          "type": "object",
          "properties": {
            "convertHistogramsToNHCB": {
              "description": "convertHistogramsToNHCB defines optional translation of OTLP explicit bucket histograms into native histograms with custom buckets.\nIt requires Prometheus \u003e= v3.4.0.",
              "type": "boolean"
            },
            "ignoreResourceAttributes": {
              "description": "ignoreResourceAttributes defines the list of OpenTelemetry resource attributes to ignore when `promoteAllResourceAttributes` is true.\n\nIt requires `promoteAllResourceAttributes` to be true.\nIt requires Prometheus \u003e= v3.5.0.",
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "minLength": 1
              },
              "x-kubernetes-list-type": "set"
            },
            "keepIdentifyingResourceAttributes": {
              "description": "keepIdentifyingResourceAttributes enables adding `service.name`, `service.namespace` and `service.instance.id`\nresource attributes to the `target_info` metric, on top of converting them into the `instance` and `job` labels.\n\nIt requires Prometheus \u003e= v3.1.0.",
              "type": "boolean"
            },
            "promoteAllResourceAttributes": {
              "description": "promoteAllResourceAttributes promotes all resource attributes to metric labels except the ones defined in `ignoreResourceAttributes`.\n\nCannot be true when `promoteResourceAttributes` is defined.\nIt requires Prometheus \u003e= v3.5.0.",
              "type": "boolean"
            },
            "promoteResourceAttributes": {
              "description": "promoteResourceAttributes defines the list of OpenTelemetry Attributes that should be promoted to metric labels, defaults to none.\nCannot be defined when `promoteAllResourceAttributes` is true.",
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string",
                "minLength": 1
              },
              "x-kubernetes-list-type": "set"
            },
            "promoteScopeMetadata": {
              "description": "promoteScopeMetadata controls whether to promote OpenTelemetry scope metadata (i.e. name, version, schema URL, and attributes) to metric labels.\nAs per the OpenTelemetry specification, the aforementioned scope metadata should be identifying, i.e. made into metric labels.\nIt requires Prometheus \u003e= v3.6.0.",
              "type": "boolean"
            },
            "translationStrategy": {
              "description": "translationStrategy defines how the OTLP receiver endpoint translates the incoming metrics.\n\nIt requires Prometheus \u003e= v3.0.0.",
              "type": "string",
              "enum": [
                "NoUTF8EscapingWithSuffixes",
                "UnderscoreEscapingWithSuffixes",
                "NoTranslation",
                "UnderscoreEscapingWithoutSuffixes"
              ]
            }
          },
          "additionalProperties": false
        },
        "overrideHonorLabels": {
          "description": "overrideHonorLabels when true, Prometheus resolves label conflicts by renaming the labels in the scraped data\n to “exported_” for all targets created from ServiceMonitor, PodMonitor and\nScrapeConfig objects. Otherwise the HonorLabels field of the service or pod monitor applies.\nIn practice,`OverrideHonorLabels:true` enforces `honorLabels:false`\nfor all ServiceMonitor, PodMonitor and ScrapeConfig objects.",
          "type": "boolean"
        },
        "overrideHonorTimestamps": {
          "description": "overrideHonorTimestamps when true, Prometheus ignores the timestamps for all the targets created\nfrom service and pod monitors.\nOtherwise the HonorTimestamps field of the service or pod monitor applies.",
          "type": "boolean"
        },
        "paused": {
          "description": "paused defines when a Prometheus deployment is paused, no actions except for deletion\nwill be performed on the underlying objects.",
          "type": "boolean"
        },
        "persistentVolumeClaimRetentionPolicy": {
          "description": "persistentVolumeClaimRetentionPolicy defines the field controls if and how PVCs are deleted during the lifecycle of a StatefulSet.\nThe default behavior is all PVCs are retained.\nThis is an alpha field from kubernetes 1.23 until 1.26 and a beta field from 1.26.\nIt requires enabling the StatefulSetAutoDeletePVC feature gate.",
          "type": "object",
          "properties": {
            "whenDeleted": {
              "description": "WhenDeleted specifies what happens to PVCs created from StatefulSet\nVolumeClaimTemplates when the StatefulSet is deleted. The default policy\nof `Retain` causes PVCs to not be affected by StatefulSet deletion. The\n`Delete` policy causes those PVCs to be deleted.",
              "type": "string"
            },
            "whenScaled": {
              "description": "WhenScaled specifies what happens to PVCs created from StatefulSet\nVolumeClaimTemplates when the StatefulSet is scaled down. The default\npolicy of `Retain` causes PVCs to not be affected by a scaledown. The\n`Delete` policy causes the associated PVCs for any excess pods above\nthe replica count to be deleted.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "podMetadata": {
          "description": "podMetadata defines labels and annotations which are propagated to the Prometheus pods.\n\nThe following items are reserved and cannot be overridden:\n* \"prometheus\" label, set to the name of the Prometheus object.\n* \"app.kubernetes.io/instance\" label, set to the name of the Prometheus object.\n* \"app.kubernetes.io/managed-by\" label, set to \"prometheus-operator\".\n* \"app.kubernetes.io/name\" label, set to \"prometheus\".\n* \"app.kubernetes.io/version\" label, set to the Prometheus version.\n* \"operator.prometheus.io/name\" label, set to the name of the Prometheus object.\n* \"operator.prometheus.io/shard\" label, set to the shard number of the Prometheus object.\n* \"kubectl.kubernetes.io/default-container\" annotation, set to \"prometheus\".",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "annotations defines an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "description": "labels define the map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "name": {
              "description": "name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "podMonitorNamespaceSelector": {
          "description": "podMonitorNamespaceSelector defines the namespaces to match for PodMonitors discovery. An empty label selector\nmatches all namespaces. A null label selector (default value) matches the current\nnamespace only.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "podMonitorSelector": {
          "description": "podMonitorSelector defines the podMonitors to be selected for target discovery. An empty label selector\nmatches all objects. A null label selector matches no objects.\n\nIf `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector`\nand `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged.\nThe Prometheus operator will ensure that the Prometheus configuration's\nSecret exists, but it is the responsibility of the user to provide the raw\ngzipped Prometheus configuration under the `prometheus.yaml.gz` key.\nThis behavior is *deprecated* and will be removed in the next major version\nof the custom resource definition. It is recommended to use\n`spec.additionalScrapeConfigs` instead.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "podTargetLabels": {
          "description": "podTargetLabels are appended to the `spec.podTargetLabels` field of all\nPodMonitor and ServiceMonitor objects.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "portName": {
          "description": "portName used for the pods and governing service.\nDefault: \"web\"",
          "type": "string",
          "default": "web"
        },
        "priorityClassName": {
          "description": "priorityClassName assigned to the Pods.",
          "type": "string"
        },
        "probeNamespaceSelector": {
          "description": "probeNamespaceSelector defines the namespaces to match for Probe discovery. An empty label\nselector matches all namespaces. A null label selector matches the\ncurrent namespace only.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "probeSelector": {
          "description": "probeSelector defines the probes to be selected for target discovery. An empty label selector\nmatches all objects. A null label selector matches no objects.\n\nIf `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector`\nand `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged.\nThe Prometheus operator will ensure that the Prometheus configuration's\nSecret exists, but it is the responsibility of the user to provide the raw\ngzipped Prometheus configuration under the `prometheus.yaml.gz` key.\nThis behavior is *deprecated* and will be removed in the next major version\nof the custom resource definition. It is recommended to use\n`spec.additionalScrapeConfigs` instead.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "prometheusExternalLabelName": {
          "description": "prometheusExternalLabelName defines the name of Prometheus external label used to denote the Prometheus instance\nname. The external label will _not_ be added when the field is set to\nthe empty string (`\"\"`).\n\nDefault: \"prometheus\"",
          "type": "string"
        },
        "reloadStrategy": {
          "description": "reloadStrategy defines the strategy used to reload the Prometheus configuration.\nIf not specified, the configuration is reloaded using the /-/reload HTTP endpoint.",
          "type": "string",
          "enum": [
            "HTTP",
            "ProcessSignal"
          ]
        },
        "remoteWrite": {
          "description": "remoteWrite defines the list of remote write configurations.",
          "type": "array",
          "items": {
            "description": "RemoteWriteSpec defines the configuration to write samples from Prometheus\nto a remote endpoint.",
            "type": "object",
            "required": [
              "url"
            ],
            "properties": {
              "authorization": {
                "description": "authorization section for the URL.\n\nIt requires Prometheus \u003e= v2.26.0 or Thanos \u003e= v0.24.0.\n\nCannot be set at the same time as `sigv4`, `basicAuth`, `oauth2`, or `azureAd`.",
                "type": "object",
                "properties": {
                  "credentials": {
                    "description": "credentials defines a key of a Secret in the namespace that contains the credentials for authentication.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "credentialsFile": {
                    "description": "credentialsFile defines the file to read a secret from, mutually exclusive with `credentials`.",
                    "type": "string"
                  },
                  "type": {
                    "description": "type defines the authentication type. The value is case-insensitive.\n\n\"Basic\" is not a supported value.\n\nDefault: \"Bearer\"",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "azureAd": {
                "description": "azureAd for the URL.\n\nIt requires Prometheus \u003e= v2.45.0 or Thanos \u003e= v0.31.0.\n\nCannot be set at the same time as `authorization`, `basicAuth`, `oauth2`, or `sigv4`.",
                "type": "object",
                "properties": {
                  "cloud": {
                    "description": "cloud defines the Azure Cloud. Options are 'AzurePublic', 'AzureChina', or 'AzureGovernment'.",
                    "type": "string",
                    "enum": [
                      "AzureChina",
                      "AzureGovernment",
                      "AzurePublic"
                    ]
                  },
                  "managedIdentity": {
                    "description": "managedIdentity defines the Azure User-assigned Managed identity.\nCannot be set at the same time as `oauth` or `sdk`.",
                    "type": "object",
                    "required": [
                      "clientId"
                    ],
                    "properties": {
                      "clientId": {
                        "description": "clientId defines defines the Azure User-assigned Managed identity.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "oauth": {
                    "description": "oauth defines the oauth config that is being used to authenticate.\nCannot be set at the same time as `managedIdentity` or `sdk`.\n\nIt requires Prometheus \u003e= v2.48.0 or Thanos \u003e= v0.31.0.",
                    "type": "object",
                    "required": [
                      "clientId",
                      "clientSecret",
                      "tenantId"
                    ],
                    "properties": {
                      "clientId": {
                        "description": "clientId defines the clientId of the Azure Active Directory application that is being used to authenticate.",
                        "type": "string",
                        "minLength": 1
                      },
                      "clientSecret": {
                        "description": "clientSecret specifies a key of a Secret containing the client secret of the Azure Active Directory application that is being used to authenticate.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "tenantId": {
                        "description": "tenantId is the tenant ID of the Azure Active Directory application that is being used to authenticate.",
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[0-9a-zA-Z-.]+$"
                      }
                    },
                    "additionalProperties": false
                  },
                  "sdk": {
                    "description": "sdk defines the Azure SDK config that is being used to authenticate.\nSee https://learn.microsoft.com/en-us/azure/developer/go/azure-sdk-authentication\nCannot be set at the same time as `oauth` or `managedIdentity`.\n\nIt requires Prometheus \u003e= v2.52.0 or Thanos \u003e= v0.36.0.",
                    "type": "object",
                    "properties": {
                      "tenantId": {
                        "description": "tenantId defines the tenant ID of the azure active directory application that is being used to authenticate.",
                        "type": "string",
                        "pattern": "^[0-9a-zA-Z-.]+$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "basicAuth": {
                "description": "basicAuth configuration for the URL.\n\nCannot be set at the same time as `sigv4`, `authorization`, `oauth2`, or `azureAd`.",
                "type": "object",
                "properties": {
                  "password": {
                    "description": "password defines a key of a Secret containing the password for\nauthentication.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "username": {
                    "description": "username defines a key of a Secret containing the username for\nauthentication.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "bearerToken": {
                "description": "bearerToken is deprecated: this will be removed in a future release.\n*Warning: this field shouldn't be used because the token value appears\nin clear-text. Prefer using `authorization`.*",
                "type": "string"
              },
              "bearerTokenFile": {
                "description": "bearerTokenFile defines the file from which to read bearer token for the URL.\n\nDeprecated: this will be removed in a future release. Prefer using `authorization`.",
                "type": "string"
              },
              "enableHTTP2": {
                "description": "enableHTTP2 defines whether to enable HTTP2.",
                "type": "boolean"
              },
              "followRedirects": {
                "description": "followRedirects defines whether HTTP requests follow HTTP 3xx redirects.\n\nIt requires Prometheus \u003e= v2.26.0 or Thanos \u003e= v0.24.0.",
                "type": "boolean"
              },
              "headers": {
                "description": "headers defines the custom HTTP headers to be sent along with each remote write request.\nBe aware that headers that are set by Prometheus itself can't be overwritten.\n\nIt requires Prometheus \u003e= v2.25.0 or Thanos \u003e= v0.24.0.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "messageVersion": {
                "description": "messageVersion defines the Remote Write message's version to use when writing to the endpoint.\n\n`Version1.0` corresponds to the `prometheus.WriteRequest` protobuf message introduced in Remote Write 1.0.\n`Version2.0` corresponds to the `io.prometheus.write.v2.Request` protobuf message introduced in Remote Write 2.0.\n\nWhen `Version2.0` is selected, Prometheus will automatically be\nconfigured to append the metadata of scraped metrics to the WAL.\n\nBefore setting this field, consult with your remote storage provider\nwhat message version it supports.\n\nIt requires Prometheus \u003e= v2.54.0 or Thanos \u003e= v0.37.0.",
                "type": "string",
                "enum": [
                  "V1.0",
                  "V2.0"
                ]
              },
              "metadataConfig": {
                "description": "metadataConfig defines how to send a series metadata to the remote storage.",
                "type": "object",
                "properties": {
                  "maxSamplesPerSend": {
                    "description": "maxSamplesPerSend defines the maximum number of metadata samples per send.\n\nIt requires Prometheus \u003e= v2.29.0.",
                    "type": "integer",
                    "format": "int32",
                    "minimum": -1
                  },
                  "send": {
                    "description": "send defines whether metric metadata is sent to the remote storage or not.",
                    "type": "boolean"
                  },
                  "sendInterval": {
                    "description": "sendInterval defines how frequently metric metadata is sent to the remote storage.",
                    "type": "string",
                    "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "name of the remote write queue, it must be unique if specified. The\nname is used in metrics and logging in order to differentiate queues.\n\nIt requires Prometheus \u003e= v2.15.0 or Thanos \u003e= 0.24.0.",
                "type": "string"
              },
              "noProxy": {
                "description": "noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
                "type": "string"
              },
              "oauth2": {
                "description": "oauth2 configuration for the URL.\n\nIt requires Prometheus \u003e= v2.27.0 or Thanos \u003e= v0.24.0.\n\nCannot be set at the same time as `sigv4`, `authorization`, `basicAuth`, or `azureAd`.",
                "type": "object",
                "required": [
                  "clientId",
                  "clientSecret",
                  "tokenUrl"
                ],
                "properties": {
                  "clientId": {
                    "description": "clientId defines a key of a Secret or ConfigMap containing the\nOAuth2 client's ID.",
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "configMap defines the ConfigMap containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "secret defines the Secret containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "clientSecret": {
                    "description": "clientSecret defines a key of a Secret containing the OAuth2\nclient's secret.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "endpointParams": {
                    "description": "endpointParams configures the HTTP parameters to append to the token\nURL.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "noProxy": {
                    "description": "noProxy defines a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
                    "type": "string"
                  },
                  "proxyConnectHeader": {
                    "description": "proxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "description": "SecretKeySelector selects a key of a Secret.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  },
                  "proxyFromEnvironment": {
                    "description": "proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
                    "type": "boolean"
                  },
                  "proxyUrl": {
                    "description": "proxyUrl defines the HTTP proxy server to use.",
                    "type": "string",
                    "pattern": "^(http|https|socks5)://.+$"
                  },
                  "scopes": {
                    "description": "scopes defines the OAuth2 scopes used for the token request.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tlsConfig": {
                    "description": "tlsConfig defines the TLS configuration to use when connecting to the OAuth2 server.\nIt requires Prometheus \u003e= v2.43.0.",
                    "type": "object",
                    "properties": {
                      "ca": {
                        "description": "ca defines the Certificate authority used when verifying server certificates.",
                        "type": "object",
                        "properties": {
                          "configMap": {
                            "description": "configMap defines the ConfigMap containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secret": {
                            "description": "secret defines the Secret containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "cert": {
                        "description": "cert defines the Client certificate to present when doing client-authentication.",
                        "type": "object",
                        "properties": {
                          "configMap": {
                            "description": "configMap defines the ConfigMap containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secret": {
                            "description": "secret defines the Secret containing data to use for the targets.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "insecureSkipVerify": {
                        "description": "insecureSkipVerify defines how to disable target certificate validation.",
                        "type": "boolean"
                      },
                      "keySecret": {
                        "description": "keySecret defines the Secret containing the client key file for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "maxVersion": {
                        "description": "maxVersion defines the maximum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.41.0 or Thanos \u003e= v0.31.0.",
                        "type": "string",
                        "enum": [
                          "TLS10",
                          "TLS11",
                          "TLS12",
                          "TLS13"
                        ]
                      },
                      "minVersion": {
                        "description": "minVersion defines the minimum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.35.0 or Thanos \u003e= v0.28.0.",
                        "type": "string",
                        "enum": [
                          "TLS10",
                          "TLS11",
                          "TLS12",
                          "TLS13"
                        ]
                      },
                      "serverName": {
                        "description": "serverName is used to verify the hostname for the targets.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tokenUrl": {
                    "description": "tokenUrl defines the URL to fetch the token from.",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "additionalProperties": false
              },
              "proxyConnectHeader": {
                "description": "proxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "description": "SecretKeySelector selects a key of a Secret.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "proxyFromEnvironment": {
                "description": "proxyFromEnvironment defines whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
                "type": "boolean"
              },
              "proxyUrl": {
                "description": "proxyUrl defines the HTTP proxy server to use.",
                "type": "string",
                "pattern": "^(http|https|socks5)://.+$"
              },
              "queueConfig": {
                "description": "queueConfig allows tuning of the remote write queue parameters.",
                "type": "object",
                "properties": {
                  "batchSendDeadline": {
                    "description": "batchSendDeadline defines the maximum time a sample will wait in buffer.",
                    "type": "string",
                    "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                  },
                  "capacity": {
                    "description": "capacity defines the number of samples to buffer per shard before we start\ndropping them.",
                    "type": "integer"
                  },
                  "maxBackoff": {
                    "description": "maxBackoff defines the maximum retry delay.",
                    "type": "string",
                    "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                  },
                  "maxRetries": {
                    "description": "maxRetries defines the maximum number of times to retry a batch on recoverable errors.",
                    "type": "integer"
                  },
                  "maxSamplesPerSend": {
                    "description": "maxSamplesPerSend defines the maximum number of samples per send.",
                    "type": "integer"
                  },
                  "maxShards": {
                    "description": "maxShards defines the maximum number of shards, i.e. amount of concurrency.",
                    "type": "integer"
                  },
                  "minBackoff": {
                    "description": "minBackoff defines the initial retry delay. Gets doubled for every retry.",
                    "type": "string",
                    "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                  },
                  "minShards": {
                    "description": "minShards defines the minimum number of shards, i.e. amount of concurrency.",
                    "type": "integer"
                  },
                  "retryOnRateLimit": {
                    "description": "retryOnRateLimit defines the retry upon receiving a 429 status code from the remote-write storage.\n\nThis is an *experimental feature*, it may change in any upcoming release\nin a breaking way.",
                    "type": "boolean"
                  },
                  "sampleAgeLimit": {
                    "description": "sampleAgeLimit drops samples older than the limit.\nIt requires Prometheus \u003e= v2.50.0 or Thanos \u003e= v0.32.0.",
                    "type": "string",
                    "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
                  }
                },
                "additionalProperties": false
              },
              "remoteTimeout": {
                "description": "remoteTimeout defines the timeout for requests to the remote write endpoint.",
                "type": "string",
                "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
              },
              "roundRobinDNS": {
                "description": "roundRobinDNS controls the DNS resolution behavior for remote-write connections.\nWhen enabled:\n  - The remote-write mechanism will resolve the hostname via DNS.\n  - It will randomly select one of the resolved IP addresses and connect to it.\n\nWhen disabled (default behavior):\n  - The Go standard library will handle hostname resolution.\n  - It will attempt connections to each resolved IP address sequentially.\n\nNote: The connection timeout applies to the entire resolution and connection process.\n\n\tIf disabled, the timeout is distributed across all connection attempts.\n\nIt requires Prometheus \u003e= v3.1.0 or Thanos \u003e= v0.38.0.",
                "type": "boolean"
              },
              "sendExemplars": {
                "description": "sendExemplars enables sending of exemplars over remote write. Note that\nexemplar-storage itself must be enabled using the `spec.enableFeatures`\noption for exemplars to be scraped in the first place.\n\nIt requires Prometheus \u003e= v2.27.0 or Thanos \u003e= v0.24.0.",
                "type": "boolean"
              },
              "sendNativeHistograms": {
                "description": "sendNativeHistograms enables sending of native histograms, also known as sparse histograms\nover remote write.\n\nIt requires Prometheus \u003e= v2.40.0 or Thanos \u003e= v0.30.0.",
                "type": "boolean"
              },
              "sigv4": {
                "description": "sigv4 defines the AWS's Signature Verification 4 for the URL.\n\nIt requires Prometheus \u003e= v2.26.0 or Thanos \u003e= v0.24.0.\n\nCannot be set at the same time as `authorization`, `basicAuth`, `oauth2`, or `azureAd`.",
                "type": "object",
                "properties": {
                  "accessKey": {
                    "description": "accessKey defines the AWS API key. If not specified, the environment variable\n`AWS_ACCESS_KEY_ID` is used.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "profile": {
                    "description": "profile defines the named AWS profile used to authenticate.",
                    "type": "string"
                  },
                  "region": {
                    "description": "region defines the AWS region. If blank, the region from the default credentials chain used.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "roleArn defines the named AWS profile used to authenticate.",
                    "type": "string"
                  },
                  "secretKey": {
                    "description": "secretKey defines the AWS API secret. If not specified, the environment\nvariable `AWS_SECRET_ACCESS_KEY` is used.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "useFIPSSTSEndpoint": {
                    "description": "useFIPSSTSEndpoint defines FIPS mode for AWS STS endpoint.\nIt requires Prometheus \u003e= v2.54.0.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "tlsConfig": {
                "description": "tlsConfig to use for the URL.",
                "type": "object",
                "properties": {
                  "ca": {
                    "description": "ca defines the Certificate authority used when verifying server certificates.",
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "configMap defines the ConfigMap containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "secret defines the Secret containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "caFile": {
                    "description": "caFile defines the path to the CA cert in the Prometheus container to use for the targets.",
                    "type": "string"
                  },
                  "cert": {
                    "description": "cert defines the Client certificate to present when doing client-authentication.",
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "configMap defines the ConfigMap containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "secret defines the Secret containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "certFile": {
                    "description": "certFile defines the path to the client cert file in the Prometheus container for the targets.",
                    "type": "string"
                  },
                  "insecureSkipVerify": {
                    "description": "insecureSkipVerify defines how to disable target certificate validation.",
                    "type": "boolean"
                  },
                  "keyFile": {
                    "description": "keyFile defines the path to the client key file in the Prometheus container for the targets.",
                    "type": "string"
                  },
                  "keySecret": {
                    "description": "keySecret defines the Secret containing the client key file for the targets.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "maxVersion": {
                    "description": "maxVersion defines the maximum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.41.0 or Thanos \u003e= v0.31.0.",
                    "type": "string",
                    "enum": [
                      "TLS10",
                      "TLS11",
                      "TLS12",
                      "TLS13"
                    ]
                  },
                  "minVersion": {
                    "description": "minVersion defines the minimum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.35.0 or Thanos \u003e= v0.28.0.",
                    "type": "string",
                    "enum": [
                      "TLS10",
                      "TLS11",
                      "TLS12",
                      "TLS13"
                    ]
                  },
                  "serverName": {
                    "description": "serverName is used to verify the hostname for the targets.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "url": {
                "description": "url defines the URL of the endpoint to send samples to.",
                "type": "string",
                "minLength": 1
              },
              "writeRelabelConfigs": {
                "description": "writeRelabelConfigs defines the list of remote write relabel configurations.",
                "type": "array",
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus \u003e= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus \u003e= v2.41.0.\n\nDefault: \"Replace\"",
                      "type": "string",
                      "default": "replace",
                      "enum": [
                        "replace",
                        "Replace",
                        "keep",
                        "Keep",
                        "drop",
                        "Drop",
                        "hashmod",
                        "HashMod",
                        "labelmap",
                        "LabelMap",
                        "labeldrop",
                        "LabelDrop",
                        "labelkeep",
                        "LabelKeep",
                        "lowercase",
                        "Lowercase",
                        "uppercase",
                        "Uppercase",
                        "keepequal",
                        "KeepEqual",
                        "dropequal",
                        "DropEqual"
                      ]
                    },
                    "modulus": {
                      "description": "modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "regex": {
                      "description": "regex defines the regular expression against which the extracted value is matched.",
                      "type": "string"
                    },
                    "replacement": {
                      "description": "replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                      "type": "string"
                    },
                    "separator": {
                      "description": "separator defines the string between concatenated SourceLabels.",
                      "type": "string"
                    },
                    "sourceLabels": {
                      "description": "sourceLabels defines the source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                      "type": "array",
                      "items": {
                        "description": "LabelName is a valid Prometheus label name.\nFor Prometheus 3.x, a label name is valid if it contains UTF-8 characters.\nFor Prometheus 2.x, a label name is only valid if it contains ASCII characters, letters, numbers, as well as underscores.",
                        "type": "string"
                      }
                    },
                    "targetLabel": {
                      "description": "targetLabel defines the label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "remoteWriteReceiverMessageVersions": {
          "description": "remoteWriteReceiverMessageVersions list of the protobuf message versions to accept when receiving the\nremote writes.\n\nIt requires Prometheus \u003e= v2.54.0.",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "string",
            "enum": [
              "V1.0",
              "V2.0"
            ]
          },
          "x-kubernetes-list-type": "set"
        },
        "replicaExternalLabelName": {
          "description": "replicaExternalLabelName defines the name of Prometheus external label used to denote the replica name.\nThe external label will _not_ be added when the field is set to the\nempty string (`\"\"`).\n\nDefault: \"prometheus_replica\"",
          "type": "string"
        },
        "replicas": {
          "description": "replicas defines the number of replicas of each shard to deploy for a Prometheus deployment.\n`spec.replicas` multiplied by `spec.shards` is the total number of Pods\ncreated.\n\nDefault: 1",
          "type": "integer",
          "format": "int32"
        },
        "resources": {
          "description": "resources defines the resources requests and limits of the 'prometheus' container.",
          "type": "object",
          "properties": {
            "claims": {
              "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis field depends on the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
              "type": "array",
              "items": {
                "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                    "type": "string"
                  },
                  "request": {
                    "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-map-keys": [
                "name"
              ],
              "x-kubernetes-list-type": "map"
            },
            "limits": {
              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              }
            },
            "requests": {
              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              }
            }
          },
          "additionalProperties": false
        },
        "routePrefix": {
          "description": "routePrefix defines the route prefix Prometheus registers HTTP handlers for.\n\nThis is useful when using `spec.externalURL`, and a proxy is rewriting\nHTTP routes of a request, and the actual ExternalURL is still true, but\nthe server serves requests under a different route prefix. For example\nfor use with `kubectl proxy`.",
          "type": "string"
        },
        "runtime": {
          "description": "runtime defines the values for the Prometheus process behavior",
          "type": "object",
          "properties": {
            "goGC": {
              "description": "goGC defines the Go garbage collection target percentage. Lowering this number may increase the CPU usage.\nSee: https://tip.golang.org/doc/gc-guide#GOGC",
              "type": "integer",
              "format": "int32",
              "minimum": -1
            }
          },
          "additionalProperties": false
        },
        "sampleLimit": {
          "description": "sampleLimit defines per-scrape limit on number of scraped samples that will be accepted.\nOnly valid in Prometheus versions 2.45.0 and newer.\n\nNote that the global limit only applies to scrape objects that don't specify an explicit limit value.\nIf you want to enforce a maximum limit for all scrape objects, refer to enforcedSampleLimit.",
          "type": "integer",
          "format": "int64"
        },
        "scrapeClasses": {
          "description": "scrapeClasses defines the list of scrape classes to expose to scraping objects such as\nPodMonitors, ServiceMonitors, Probes and ScrapeConfigs.\n\nThis is an *experimental feature*, it may change in any upcoming release\nin a breaking way.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "attachMetadata": {
                "description": "attachMetadata defines additional metadata to the discovered targets.\nWhen the scrape object defines its own configuration, it takes\nprecedence over the scrape class configuration.",
                "type": "object",
                "properties": {
                  "node": {
                    "description": "node when set to true, Prometheus attaches node metadata to the discovered\ntargets.\n\nThe Prometheus service account must have the `list` and `watch`\npermissions on the `Nodes` objects.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "authorization": {
                "description": "authorization section for the ScrapeClass.\nIt will only apply if the scrape resource doesn't specify any Authorization.",
                "type": "object",
                "properties": {
                  "credentials": {
                    "description": "credentials defines a key of a Secret in the namespace that contains the credentials for authentication.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "credentialsFile": {
                    "description": "credentialsFile defines the file to read a secret from, mutually exclusive with `credentials`.",
                    "type": "string"
                  },
                  "type": {
                    "description": "type defines the authentication type. The value is case-insensitive.\n\n\"Basic\" is not a supported value.\n\nDefault: \"Bearer\"",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "default": {
                "description": "default defines that the scrape applies to all scrape objects that\ndon't configure an explicit scrape class name.\n\nOnly one scrape class can be set as the default.",
                "type": "boolean"
              },
              "fallbackScrapeProtocol": {
                "description": "fallbackScrapeProtocol defines the protocol to use if a scrape returns blank, unparseable, or otherwise invalid Content-Type.\nIt will only apply if the scrape resource doesn't specify any FallbackScrapeProtocol\n\nIt requires Prometheus \u003e= v3.0.0.",
                "type": "string",
                "enum": [
                  "PrometheusProto",
                  "OpenMetricsText0.0.1",
                  "OpenMetricsText1.0.0",
                  "PrometheusText0.0.4",
                  "PrometheusText1.0.0"
                ]
              },
              "metricRelabelings": {
                "description": "metricRelabelings defines the relabeling rules to apply to all samples before ingestion.\n\nThe Operator adds the scrape class metric relabelings defined here.\nThen the Operator adds the target-specific metric relabelings defined in ServiceMonitors, PodMonitors, Probes and ScrapeConfigs.\nThen the Operator adds namespace enforcement relabeling rule, specified in '.spec.enforcedNamespaceLabel'.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs",
                "type": "array",
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus \u003e= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus \u003e= v2.41.0.\n\nDefault: \"Replace\"",
                      "type": "string",
                      "default": "replace",
                      "enum": [
                        "replace",
                        "Replace",
                        "keep",
                        "Keep",
                        "drop",
                        "Drop",
                        "hashmod",
                        "HashMod",
                        "labelmap",
                        "LabelMap",
                        "labeldrop",
                        "LabelDrop",
                        "labelkeep",
                        "LabelKeep",
                        "lowercase",
                        "Lowercase",
                        "uppercase",
                        "Uppercase",
                        "keepequal",
                        "KeepEqual",
                        "dropequal",
                        "DropEqual"
                      ]
                    },
                    "modulus": {
                      "description": "modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "regex": {
                      "description": "regex defines the regular expression against which the extracted value is matched.",
                      "type": "string"
                    },
                    "replacement": {
                      "description": "replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                      "type": "string"
                    },
                    "separator": {
                      "description": "separator defines the string between concatenated SourceLabels.",
                      "type": "string"
                    },
                    "sourceLabels": {
                      "description": "sourceLabels defines the source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                      "type": "array",
                      "items": {
                        "description": "LabelName is a valid Prometheus label name.\nFor Prometheus 3.x, a label name is valid if it contains UTF-8 characters.\nFor Prometheus 2.x, a label name is only valid if it contains ASCII characters, letters, numbers, as well as underscores.",
                        "type": "string"
                      }
                    },
                    "targetLabel": {
                      "description": "targetLabel defines the label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "name of the scrape class.",
                "type": "string",
                "minLength": 1
              },
              "relabelings": {
                "description": "relabelings defines the relabeling rules to apply to all scrape targets.\n\nThe Operator automatically adds relabelings for a few standard Kubernetes fields\nlike `__meta_kubernetes_namespace` and `__meta_kubernetes_service_name`.\nThen the Operator adds the scrape class relabelings defined here.\nThen the Operator adds the target-specific relabelings defined in the scrape object.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                "type": "array",
                "items": {
                  "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": "object",
                  "properties": {
                    "action": {
                      "description": "action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus \u003e= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus \u003e= v2.41.0.\n\nDefault: \"Replace\"",
                      "type": "string",
                      "default": "replace",
                      "enum": [
                        "replace",
                        "Replace",
                        "keep",
                        "Keep",
                        "drop",
                        "Drop",
                        "hashmod",
                        "HashMod",
                        "labelmap",
                        "LabelMap",
                        "labeldrop",
                        "LabelDrop",
                        "labelkeep",
                        "LabelKeep",
                        "lowercase",
                        "Lowercase",
                        "uppercase",
                        "Uppercase",
                        "keepequal",
                        "KeepEqual",
                        "dropequal",
                        "DropEqual"
                      ]
                    },
                    "modulus": {
                      "description": "modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "regex": {
                      "description": "regex defines the regular expression against which the extracted value is matched.",
                      "type": "string"
                    },
                    "replacement": {
                      "description": "replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                      "type": "string"
                    },
                    "separator": {
                      "description": "separator defines the string between concatenated SourceLabels.",
                      "type": "string"
                    },
                    "sourceLabels": {
                      "description": "sourceLabels defines the source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                      "type": "array",
                      "items": {
                        "description": "LabelName is a valid Prometheus label name.\nFor Prometheus 3.x, a label name is valid if it contains UTF-8 characters.\nFor Prometheus 2.x, a label name is only valid if it contains ASCII characters, letters, numbers, as well as underscores.",
                        "type": "string"
                      }
                    },
                    "targetLabel": {
                      "description": "targetLabel defines the label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "tlsConfig": {
                "description": "tlsConfig defines the TLS settings to use for the scrape. When the\nscrape objects define their own CA, certificate and/or key, they take\nprecedence over the corresponding scrape class fields.\n\nFor now only the `caFile`, `certFile` and `keyFile` fields are supported.",
                "type": "object",
                "properties": {
                  "ca": {
                    "description": "ca defines the Certificate authority used when verifying server certificates.",
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "configMap defines the ConfigMap containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "secret defines the Secret containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "caFile": {
                    "description": "caFile defines the path to the CA cert in the Prometheus container to use for the targets.",
                    "type": "string"
                  },
                  "cert": {
                    "description": "cert defines the Client certificate to present when doing client-authentication.",
                    "type": "object",
                    "properties": {
                      "configMap": {
                        "description": "configMap defines the ConfigMap containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secret": {
                        "description": "secret defines the Secret containing data to use for the targets.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "certFile": {
                    "description": "certFile defines the path to the client cert file in the Prometheus container for the targets.",
                    "type": "string"
                  },
                  "insecureSkipVerify": {
                    "description": "insecureSkipVerify defines how to disable target certificate validation.",
                    "type": "boolean"
                  },
                  "keyFile": {
                    "description": "keyFile defines the path to the client key file in the Prometheus container for the targets.",
                    "type": "string"
                  },
                  "keySecret": {
                    "description": "keySecret defines the Secret containing the client key file for the targets.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "maxVersion": {
                    "description": "maxVersion defines the maximum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.41.0 or Thanos \u003e= v0.31.0.",
                    "type": "string",
                    "enum": [
                      "TLS10",
                      "TLS11",
                      "TLS12",
                      "TLS13"
                    ]
                  },
                  "minVersion": {
                    "description": "minVersion defines the minimum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.35.0 or Thanos \u003e= v0.28.0.",
                    "type": "string",
                    "enum": [
                      "TLS10",
                      "TLS11",
                      "TLS12",
                      "TLS13"
                    ]
                  },
                  "serverName": {
                    "description": "serverName is used to verify the hostname for the targets.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "scrapeClassicHistograms": {
          "description": "scrapeClassicHistograms defines whether to scrape a classic histogram that is also exposed as a native histogram.\n\nNotice: `scrapeClassicHistograms` corresponds to the `always_scrape_classic_histograms` field in the Prometheus configuration.\n\nIt requires Prometheus \u003e= v3.5.0.",
          "type": "boolean"
        },
        "scrapeConfigNamespaceSelector": {
          "description": "scrapeConfigNamespaceSelector defines the namespaces to match for ScrapeConfig discovery. An empty label selector\nmatches all namespaces. A null label selector matches the current\nnamespace only.\n\nNote that the ScrapeConfig custom resource definition is currently at Alpha level.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "scrapeConfigSelector": {
          "description": "scrapeConfigSelector defines the scrapeConfigs to be selected for target discovery. An empty label\nselector matches all objects. A null label selector matches no objects.\n\nIf `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector`\nand `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged.\nThe Prometheus operator will ensure that the Prometheus configuration's\nSecret exists, but it is the responsibility of the user to provide the raw\ngzipped Prometheus configuration under the `prometheus.yaml.gz` key.\nThis behavior is *deprecated* and will be removed in the next major version\nof the custom resource definition. It is recommended to use\n`spec.additionalScrapeConfigs` instead.\n\nNote that the ScrapeConfig custom resource definition is currently at Alpha level.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "scrapeFailureLogFile": {
          "description": "scrapeFailureLogFile defines the file to which scrape failures are logged.\nReloading the configuration will reopen the file.\n\nIf the filename has an empty path, e.g. 'file.log', The Prometheus Pods\nwill mount the file into an emptyDir volume at `/var/log/prometheus`.\nIf a full path is provided, e.g. '/var/log/prometheus/file.log', you\nmust mount a volume in the specified directory and it must be writable.\nIt requires Prometheus \u003e= v2.55.0.",
          "type": "string",
          "minLength": 1
        },
        "scrapeInterval": {
          "description": "scrapeInterval defines interval between consecutive scrapes.\n\nDefault: \"30s\"",
          "type": "string",
          "default": "30s",
          "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
        },
        "scrapeProtocols": {
          "description": "scrapeProtocols defines the protocols to negotiate during a scrape. It tells clients the\nprotocols supported by Prometheus in order of preference (from most to least preferred).\n\nIf unset, Prometheus uses its default value.\n\nIt requires Prometheus \u003e= v2.49.0.\n\n`PrometheusText1.0.0` requires Prometheus \u003e= v3.0.0.",
          "type": "array",
          "items": {
            "description": "ScrapeProtocol represents a protocol used by Prometheus for scraping metrics.\nSupported values are:\n* `OpenMetricsText0.0.1`\n* `OpenMetricsText1.0.0`\n* `PrometheusProto`\n* `PrometheusText0.0.4`\n* `PrometheusText1.0.0`",
            "type": "string",
            "enum": [
              "PrometheusProto",
              "OpenMetricsText0.0.1",
              "OpenMetricsText1.0.0",
              "PrometheusText0.0.4",
              "PrometheusText1.0.0"
            ]
          },
          "x-kubernetes-list-type": "set"
        },
        "scrapeTimeout": {
          "description": "scrapeTimeout defines the number of seconds to wait until a scrape request times out.\nThe value cannot be greater than the scrape interval otherwise the operator will reject the resource.",
          "type": "string",
          "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
        },
        "secrets": {
          "description": "secrets defines a list of Secrets in the same namespace as the Prometheus\nobject, which shall be mounted into the Prometheus Pods.\nEach Secret is added to the StatefulSet definition as a volume named `secret-\u003csecret-name\u003e`.\nThe Secrets are mounted into /etc/prometheus/secrets/\u003csecret-name\u003e in the 'prometheus' container.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-kubernetes-list-type": "set"
        },
        "securityContext": {
          "description": "securityContext holds pod-level security attributes and common container settings.\nThis defaults to the default PodSecurityContext.",
          "type": "object",
          "properties": {
            "appArmorProfile": {
              "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "fsGroup": {
              "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "integer",
              "format": "int64"
            },
            "fsGroupChangePolicy": {
              "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "string"
            },
            "runAsGroup": {
              "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "integer",
              "format": "int64"
            },
            "runAsNonRoot": {
              "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
              "type": "boolean"
            },
            "runAsUser": {
              "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "integer",
              "format": "int64"
            },
            "seLinuxChangePolicy": {
              "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "string"
            },
            "seLinuxOptions": {
              "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "object",
              "properties": {
                "level": {
                  "description": "Level is SELinux level label that applies to the container.",
                  "type": "string"
                },
                "role": {
                  "description": "Role is a SELinux role label that applies to the container.",
                  "type": "string"
                },
                "type": {
                  "description": "Type is a SELinux type label that applies to the container.",
                  "type": "string"
                },
                "user": {
                  "description": "User is a SELinux user label that applies to the container.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "seccompProfile": {
              "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "object",
              "required": [
                "type"
              ],
              "properties": {
                "localhostProfile": {
                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                  "type": "string"
                },
                "type": {
                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "supplementalGroups": {
              "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "x-kubernetes-list-type": "atomic"
            },
            "supplementalGroupsPolicy": {
              "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "string"
            },
            "sysctls": {
              "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
              "type": "array",
              "items": {
                "description": "Sysctl defines a kernel parameter to be set",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of a property to set",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of a property to set",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "windowsOptions": {
              "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
              "type": "object",
              "properties": {
                "gmsaCredentialSpec": {
                  "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                  "type": "string"
                },
                "gmsaCredentialSpecName": {
                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                  "type": "string"
                },
                "hostProcess": {
                  "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                  "type": "boolean"
                },
                "runAsUserName": {
                  "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "serviceAccountName": {
          "description": "serviceAccountName is the name of the ServiceAccount to use to run the\nPrometheus Pods.",
          "type": "string"
        },
        "serviceDiscoveryRole": {
          "description": "serviceDiscoveryRole defines the service discovery role used to discover targets from\n`ServiceMonitor` objects and Alertmanager endpoints.\n\nIf set, the value should be either \"Endpoints\" or \"EndpointSlice\".\nIf unset, the operator assumes the \"Endpoints\" role.",
          "type": "string",
          "enum": [
            "Endpoints",
            "EndpointSlice"
          ]
        },
        "serviceMonitorNamespaceSelector": {
          "description": "serviceMonitorNamespaceSelector defines the namespaces to match for ServicedMonitors discovery. An empty label selector\nmatches all namespaces. A null label selector (default value) matches the current\nnamespace only.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "serviceMonitorSelector": {
          "description": "serviceMonitorSelector defines the serviceMonitors to be selected for target discovery. An empty label\nselector matches all objects. A null label selector matches no objects.\n\nIf `spec.serviceMonitorSelector`, `spec.podMonitorSelector`, `spec.probeSelector`\nand `spec.scrapeConfigSelector` are null, the Prometheus configuration is unmanaged.\nThe Prometheus operator will ensure that the Prometheus configuration's\nSecret exists, but it is the responsibility of the user to provide the raw\ngzipped Prometheus configuration under the `prometheus.yaml.gz` key.\nThis behavior is *deprecated* and will be removed in the next major version\nof the custom resource definition. It is recommended to use\n`spec.additionalScrapeConfigs` instead.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-type": "atomic"
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "serviceName": {
          "description": "serviceName defines the name of the service name used by the underlying StatefulSet(s) as the governing service.\nIf defined, the Service  must be created before the Prometheus/PrometheusAgent resource in the same namespace and it must define a selector that matches the pod labels.\nIf empty, the operator will create and manage a headless service named `prometheus-operated` for Prometheus resources,\nor `prometheus-agent-operated` for PrometheusAgent resources.\nWhen deploying multiple Prometheus/PrometheusAgent resources in the same namespace, it is recommended to specify a different value for each.\nSee https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#stable-network-id for more details.",
          "type": "string",
          "minLength": 1
        },
        "shards": {
          "description": "shards defines the number of shards to distribute the scraped targets onto.\n\n`spec.replicas` multiplied by `spec.shards` is the total number of Pods\nbeing created.\n\nWhen not defined, the operator assumes only one shard.\n\nNote that scaling down shards will not reshard data onto the remaining\ninstances, it must be manually moved. Increasing shards will not reshard\ndata either but it will continue to be available from the same\ninstances. To query globally, use either\n* Thanos sidecar + querier for query federation and Thanos Ruler for rules.\n* Remote-write to send metrics to a central location.\n\nBy default, the sharding of targets is performed on:\n* The `__address__` target's metadata label for PodMonitor,\nServiceMonitor and ScrapeConfig resources.\n* The `__param_target__` label for Probe resources.\n\nUsers can define their own sharding implementation by setting the\n`__tmp_hash` label during the target discovery with relabeling\nconfiguration (either in the monitoring resources or via scrape class).\n\nYou can also disable sharding on a specific target by setting the\n`__tmp_disable_sharding` label with relabeling configuration. When\nthe label value isn't empty, all Prometheus shards will scrape the target.",
          "type": "integer",
          "format": "int32"
        },
        "storage": {
          "description": "storage defines the storage used by Prometheus.",
          "type": "object",
          "properties": {
            "disableMountSubPath": {
              "description": "disableMountSubPath deprecated: subPath usage will be removed in a future release.",
              "type": "boolean"
            },
            "emptyDir": {
              "description": "emptyDir to be used by the StatefulSet.\nIf specified, it takes precedence over `ephemeral` and `volumeClaimTemplate`.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
              "type": "object",
              "properties": {
                "medium": {
                  "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                  "type": "string"
                },
                "sizeLimit": {
                  "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "additionalProperties": false
            },
            "ephemeral": {
              "description": "ephemeral to be used by the StatefulSet.\nThis is a beta field in k8s 1.21 and GA in 1.15.\nFor lower versions, starting with k8s 1.19, it requires enabling the GenericEphemeralVolume feature gate.\nMore info: https://kubernetes.io/docs/concepts/storage/ephemeral-volumes/#generic-ephemeral-volumes",
              "type": "object",
              "properties": {
                "volumeClaimTemplate": {
                  "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                  "type": "object",
                  "required": [
                    "spec"
                  ],
                  "properties": {
                    "metadata": {
                      "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                      "type": "object"
                    },
                    "spec": {
                      "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                      "type": "object",
                      "properties": {
                        "accessModes": {
                          "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "dataSource": {
                          "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                          "type": "object",
                          "required": [
                            "kind",
                            "name"
                          ],
                          "properties": {
                            "apiGroup": {
                              "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is the type of resource being referenced",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the name of resource being referenced",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "dataSourceRef": {
                          "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                          "type": "object",
                          "required": [
                            "kind",
                            "name"
                          ],
                          "properties": {
                            "apiGroup": {
                              "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is the type of resource being referenced",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the name of resource being referenced",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "resources": {
                          "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                          "type": "object",
                          "properties": {
                            "limits": {
                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "requests": {
                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                              "type": "object",
                              "additionalProperties": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            }
                          },
                          "additionalProperties": false
                        },
                        "selector": {
                          "description": "selector is a label query over volumes to consider for binding.",
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                              "type": "array",
                              "items": {
                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the label key that the selector applies to.",
                                    "type": "string"
                                  },
                                  "operator": {
                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                    "type": "string"
                                  },
                                  "values": {
                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "matchLabels": {
                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "storageClassName": {
                          "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                          "type": "string"
                        },
                        "volumeAttributesClassName": {
                          "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string or nil value indicates that no\nVolumeAttributesClass will be applied to the claim. If the claim enters an Infeasible error state,\nthis field can be reset to its previous value (including nil) to cancel the modification.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/",
                          "type": "string"
                        },
                        "volumeMode": {
                          "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                          "type": "string"
                        },
                        "volumeName": {
                          "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "volumeClaimTemplate": {
              "description": "volumeClaimTemplate defines the PVC spec to be used by the Prometheus StatefulSets.\nThe easiest way to use a volume that cannot be automatically provisioned\nis to use a label selector alongside manually created PersistentVolumes.",
              "type": "object",
              "properties": {
                "apiVersion": {
                  "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "metadata": {
                  "description": "metadata defines EmbeddedMetadata contains metadata relevant to an EmbeddedResource.",
                  "type": "object",
                  "properties": {
                    "annotations": {
                      "description": "annotations defines an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labels": {
                      "description": "labels define the map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "description": "name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "spec": {
                  "description": "spec defines the specification of the  characteristics of a volume requested by a pod author.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                  "type": "object",
                  "properties": {
                    "accessModes": {
                      "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "dataSource": {
                      "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                      "type": "object",
                      "required": [
                        "kind",
                        "name"
                      ],
                      "properties": {
                        "apiGroup": {
                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the type of resource being referenced",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of resource being referenced",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "dataSourceRef": {
                      "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                      "type": "object",
                      "required": [
                        "kind",
                        "name"
                      ],
                      "properties": {
                        "apiGroup": {
                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the type of resource being referenced",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of resource being referenced",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "resources": {
                      "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "selector": {
                      "description": "selector is a label query over volumes to consider for binding.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "storageClassName": {
                      "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                      "type": "string"
                    },
                    "volumeAttributesClassName": {
                      "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string or nil value indicates that no\nVolumeAttributesClass will be applied to the claim. If the claim enters an Infeasible error state,\nthis field can be reset to its previous value (including nil) to cancel the modification.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/",
                      "type": "string"
                    },
                    "volumeMode": {
                      "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                      "type": "string"
                    },
                    "volumeName": {
                      "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "status": {
                  "description": "status is deprecated: this field is never set.",
                  "type": "object",
                  "properties": {
                    "accessModes": {
                      "description": "accessModes contains the actual access modes the volume backing the PVC has.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "allocatedResourceStatuses": {
                      "description": "allocatedResourceStatuses stores status of resource being resized for the given PVC.\nKey names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered\nreserved and hence may not be used.\n\nClaimResourceStatus can be in any of following states:\n\t- ControllerResizeInProgress:\n\t\tState set when resize controller starts resizing the volume in control-plane.\n\t- ControllerResizeFailed:\n\t\tState set when resize has failed in resize controller with a terminal error.\n\t- NodeResizePending:\n\t\tState set when resize controller has finished resizing the volume but further resizing of\n\t\tvolume is needed on the node.\n\t- NodeResizeInProgress:\n\t\tState set when kubelet starts resizing the volume.\n\t- NodeResizeFailed:\n\t\tState set when resizing has failed in kubelet with a terminal error. Transient errors don't set\n\t\tNodeResizeFailed.\nFor example: if expanding a PVC for more capacity - this field can be one of the following states:\n\t- pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"ControllerResizeFailed\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizePending\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeInProgress\"\n     - pvc.status.allocatedResourceStatus['storage'] = \"NodeResizeFailed\"\nWhen this field is not set, it means that no resize operation is in progress for the given PVC.\n\nA controller that receives PVC update with previously unknown resourceName or ClaimResourceStatus\nshould ignore the update for the purpose it was designed. For example - a controller that\nonly is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid\nresources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "When a controller receives persistentvolume claim update with ClaimResourceStatus for a resource\nthat it does not recognizes, then it should ignore that update and let other controllers\nhandle it.",
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "allocatedResources": {
                      "description": "allocatedResources tracks the resources allocated to a PVC including its capacity.\nKey names follow standard Kubernetes label syntax. Valid values are either:\n\t* Un-prefixed keys:\n\t\t- storage - the capacity of the volume.\n\t* Custom resources must use implementation-defined prefixed names such as \"example.com/my-custom-resource\"\nApart from above values - keys that are unprefixed or have kubernetes.io prefix are considered\nreserved and hence may not be used.\n\nCapacity reported here may be larger than the actual capacity when a volume expansion operation\nis requested.\nFor storage quota, the larger value from allocatedResources and PVC.spec.resources is used.\nIf allocatedResources is not set, PVC.spec.resources alone is used for quota calculation.\nIf a volume expansion capacity request is lowered, allocatedResources is only\nlowered if there are no expansion operations in progress and if the actual volume capacity\nis equal or lower than the requested capacity.\n\nA controller that receives PVC update with previously unknown resourceName\nshould ignore the update for the purpose it was designed. For example - a controller that\nonly is responsible for resizing capacity of the volume, should ignore PVC updates that change other valid\nresources associated with PVC.\n\nThis is an alpha field and requires enabling RecoverVolumeExpansionFailure feature.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "capacity": {
                      "description": "capacity represents the actual resources of the underlying volume.",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "conditions": {
                      "description": "conditions is the current Condition of persistent volume claim. If underlying persistent volume is being\nresized then the Condition will be set to 'Resizing'.",
                      "type": "array",
                      "items": {
                        "description": "PersistentVolumeClaimCondition contains details about state of pvc",
                        "type": "object",
                        "required": [
                          "status",
                          "type"
                        ],
                        "properties": {
                          "lastProbeTime": {
                            "description": "lastProbeTime is the time we probed the condition.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastTransitionTime": {
                            "description": "lastTransitionTime is the time the condition transitioned from one status to another.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "message": {
                            "description": "message is the human-readable message indicating details about last transition.",
                            "type": "string"
                          },
                          "reason": {
                            "description": "reason is a unique, this should be a short, machine understandable string that gives the reason\nfor condition's last transition. If it reports \"Resizing\" that means the underlying\npersistent volume is being resized.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status is the status of the condition.\nCan be True, False, Unknown.\nMore info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=state%20of%20pvc-,conditions.status,-(string)%2C%20required",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type is the type of the condition.\nMore info: https://kubernetes.io/docs/reference/kubernetes-api/config-and-storage-resources/persistent-volume-claim-v1/#:~:text=set%20to%20%27ResizeStarted%27.-,PersistentVolumeClaimCondition,-contains%20details%20about",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "type"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "currentVolumeAttributesClassName": {
                      "description": "currentVolumeAttributesClassName is the current name of the VolumeAttributesClass the PVC is using.\nWhen unset, there is no VolumeAttributeClass applied to this PersistentVolumeClaim",
                      "type": "string"
                    },
                    "modifyVolumeStatus": {
                      "description": "ModifyVolumeStatus represents the status object of ControllerModifyVolume operation.\nWhen this is unset, there is no ModifyVolume operation being attempted.",
                      "type": "object",
                      "required": [
                        "status"
                      ],
                      "properties": {
                        "status": {
                          "description": "status is the status of the ControllerModifyVolume operation. It can be in any of following states:\n - Pending\n   Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as\n   the specified VolumeAttributesClass not existing.\n - InProgress\n   InProgress indicates that the volume is being modified.\n - Infeasible\n  Infeasible indicates that the request has been rejected as invalid by the CSI driver. To\n\t  resolve the error, a valid VolumeAttributesClass needs to be specified.\nNote: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.",
                          "type": "string"
                        },
                        "targetVolumeAttributesClassName": {
                          "description": "targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "phase": {
                      "description": "phase represents the current phase of PersistentVolumeClaim.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "targetLimit": {
          "description": "targetLimit defines a limit on the number of scraped targets that will be accepted.\nOnly valid in Prometheus versions 2.45.0 and newer.\n\nNote that the global limit only applies to scrape objects that don't specify an explicit limit value.\nIf you want to enforce a maximum limit for all scrape objects, refer to enforcedTargetLimit.",
          "type": "integer",
          "format": "int64"
        },
        "terminationGracePeriodSeconds": {
          "description": "terminationGracePeriodSeconds defines the optional duration in seconds the pod needs to terminate gracefully.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down) which may lead to data corruption.\n\nDefaults to 600 seconds.",
          "type": "integer",
          "format": "int64",
          "minimum": 0
        },
        "tolerations": {
          "description": "tolerations defines the Pods' tolerations if specified.",
          "type": "array",
          "items": {
            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
            "type": "object",
            "properties": {
              "effect": {
                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string"
              },
              "key": {
                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                "type": "string"
              },
              "operator": {
                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                "type": "string"
              },
              "tolerationSeconds": {
                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                "type": "integer",
                "format": "int64"
              },
              "value": {
                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "topologySpreadConstraints": {
          "description": "topologySpreadConstraints defines the pod's topology spread constraints if specified.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "maxSkew",
              "topologyKey",
              "whenUnsatisfiable"
            ],
            "properties": {
              "additionalLabelSelectors": {
                "description": "additionalLabelSelectors Defines what Prometheus Operator managed labels should be added to labelSelector on the topologySpreadConstraint.",
                "type": "string",
                "enum": [
                  "OnResource",
                  "OnShard"
                ]
              },
              "labelSelector": {
                "description": "LabelSelector is used to find matching pods.\nPods that match this label selector are counted to determine the number of pods\nin their corresponding topology domain.",
                "type": "object",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-map-type": "atomic"
              },
              "matchLabelKeys": {
                "description": "MatchLabelKeys is a set of pod label keys to select the pods over which\nspreading will be calculated. The keys are used to lookup values from the\nincoming pod labels, those key-value labels are ANDed with labelSelector\nto select the group of existing pods over which spreading will be calculated\nfor the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.\nMatchLabelKeys cannot be set when LabelSelector isn't set.\nKeys that don't exist in the incoming pod labels will\nbe ignored. A null or empty list means only match against labelSelector.\n\nThis is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              },
              "maxSkew": {
                "description": "MaxSkew describes the degree to which pods may be unevenly distributed.\nWhen `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference\nbetween the number of matching pods in the target topology and the global minimum.\nThe global minimum is the minimum number of matching pods in an eligible domain\nor zero if the number of eligible domains is less than MinDomains.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 2/2/1:\nIn this case, the global minimum is 1.\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |   P   |\n- if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;\nscheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)\nviolate MaxSkew(1).\n- if MaxSkew is 2, incoming pod can be scheduled onto any zone.\nWhen `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence\nto topologies that satisfy it.\nIt's a required field. Default value is 1 and 0 is not allowed.",
                "type": "integer",
                "format": "int32"
              },
              "minDomains": {
                "description": "MinDomains indicates a minimum number of eligible domains.\nWhen the number of eligible domains with matching topology keys is less than minDomains,\nPod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed.\nAnd when the number of eligible domains with matching topology keys equals or greater than minDomains,\nthis value has no effect on scheduling.\nAs a result, when the number of eligible domains is less than minDomains,\nscheduler won't schedule more than maxSkew Pods to those domains.\nIf value is nil, the constraint behaves as if MinDomains is equal to 1.\nValid values are integers greater than 0.\nWhen value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same\nlabelSelector spread as 2/2/2:\n| zone1 | zone2 | zone3 |\n|  P P  |  P P  |  P P  |\nThe number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0.\nIn this situation, new pod with the same labelSelector cannot be scheduled,\nbecause computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,\nit will violate MaxSkew.",
                "type": "integer",
                "format": "int32"
              },
              "nodeAffinityPolicy": {
                "description": "NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector\nwhen calculating pod topology spread skew. Options are:\n- Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.\n- Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy.",
                "type": "string"
              },
              "nodeTaintsPolicy": {
                "description": "NodeTaintsPolicy indicates how we will treat node taints when calculating\npod topology spread skew. Options are:\n- Honor: nodes without taints, along with tainted nodes for which the incoming pod\nhas a toleration, are included.\n- Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy.",
                "type": "string"
              },
              "topologyKey": {
                "description": "TopologyKey is the key of node labels. Nodes that have a label with this key\nand identical values are considered to be in the same topology.\nWe consider each \u003ckey, value\u003e as a \"bucket\", and try to put balanced number\nof pods into each bucket.\nWe define a domain as a particular instance of a topology.\nAlso, we define an eligible domain as a domain whose nodes meet the requirements of\nnodeAffinityPolicy and nodeTaintsPolicy.\ne.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology.\nAnd, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology.\nIt's a required field.",
                "type": "string"
              },
              "whenUnsatisfiable": {
                "description": "WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy\nthe spread constraint.\n- DoNotSchedule (default) tells the scheduler not to schedule it.\n- ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod\nif and only if every possible node assignment for that pod would violate\n\"MaxSkew\" on some topology.\nFor example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same\nlabelSelector spread as 3/1/1:\n| zone1 | zone2 | zone3 |\n| P P P |   P   |   P   |\nIf WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled\nto zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies\nMaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler\nwon't make it *more* imbalanced.\nIt's a required field.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "tracingConfig": {
          "description": "tracingConfig defines tracing in Prometheus.\n\nThis is an *experimental feature*, it may change in any upcoming release\nin a breaking way.",
          "type": "object",
          "required": [
            "endpoint"
          ],
          "properties": {
            "clientType": {
              "description": "clientType defines the client used to export the traces. Supported values are `http` or `grpc`.",
              "type": "string",
              "enum": [
                "http",
                "grpc"
              ]
            },
            "compression": {
              "description": "compression key for supported compression types. The only supported value is `gzip`.",
              "type": "string",
              "enum": [
                "gzip"
              ]
            },
            "endpoint": {
              "description": "endpoint to send the traces to. Should be provided in format \u003chost\u003e:\u003cport\u003e.",
              "type": "string",
              "minLength": 1
            },
            "headers": {
              "description": "headers defines the key-value pairs to be used as headers associated with gRPC or HTTP requests.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "insecure": {
              "description": "insecure if disabled, the client will use a secure connection.",
              "type": "boolean"
            },
            "samplingFraction": {
              "description": "samplingFraction defines the probability a given trace will be sampled. Must be a float from 0 through 1.",
              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ],
              "x-kubernetes-int-or-string": true
            },
            "timeout": {
              "description": "timeout defines the maximum time the exporter will wait for each batch export.",
              "type": "string",
              "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
            },
            "tlsConfig": {
              "description": "tlsConfig to use when sending traces.",
              "type": "object",
              "properties": {
                "ca": {
                  "description": "ca defines the Certificate authority used when verifying server certificates.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "configMap defines the ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "secret defines the Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "caFile": {
                  "description": "caFile defines the path to the CA cert in the Prometheus container to use for the targets.",
                  "type": "string"
                },
                "cert": {
                  "description": "cert defines the Client certificate to present when doing client-authentication.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "configMap defines the ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "secret defines the Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "certFile": {
                  "description": "certFile defines the path to the client cert file in the Prometheus container for the targets.",
                  "type": "string"
                },
                "insecureSkipVerify": {
                  "description": "insecureSkipVerify defines how to disable target certificate validation.",
                  "type": "boolean"
                },
                "keyFile": {
                  "description": "keyFile defines the path to the client key file in the Prometheus container for the targets.",
                  "type": "string"
                },
                "keySecret": {
                  "description": "keySecret defines the Secret containing the client key file for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "maxVersion": {
                  "description": "maxVersion defines the maximum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.41.0 or Thanos \u003e= v0.31.0.",
                  "type": "string",
                  "enum": [
                    "TLS10",
                    "TLS11",
                    "TLS12",
                    "TLS13"
                  ]
                },
                "minVersion": {
                  "description": "minVersion defines the minimum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.35.0 or Thanos \u003e= v0.28.0.",
                  "type": "string",
                  "enum": [
                    "TLS10",
                    "TLS11",
                    "TLS12",
                    "TLS13"
                  ]
                },
                "serverName": {
                  "description": "serverName is used to verify the hostname for the targets.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "tsdb": {
          "description": "tsdb defines the runtime reloadable configuration of the timeseries database(TSDB).\nIt requires Prometheus \u003e= v2.39.0 or PrometheusAgent \u003e= v2.54.0.",
          "type": "object",
          "properties": {
            "outOfOrderTimeWindow": {
              "description": "outOfOrderTimeWindow defines how old an out-of-order/out-of-bounds sample can be with\nrespect to the TSDB max time.\n\nAn out-of-order/out-of-bounds sample is ingested into the TSDB as long as\nthe timestamp of the sample is \u003e= (TSDB.MaxTime - outOfOrderTimeWindow).\n\nThis is an *experimental feature*, it may change in any upcoming release\nin a breaking way.\n\nIt requires Prometheus \u003e= v2.39.0 or PrometheusAgent \u003e= v2.54.0.",
              "type": "string",
              "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
            }
          },
          "additionalProperties": false
        },
        "version": {
          "description": "version of Prometheus being deployed. The operator uses this information\nto generate the Prometheus StatefulSet + configuration files.\n\nIf not specified, the operator assumes the latest upstream version of\nPrometheus available at the time when the version of the operator was\nreleased.",
          "type": "string"
        },
        "volumeMounts": {
          "description": "volumeMounts allows the configuration of additional VolumeMounts.\n\nVolumeMounts will be appended to other VolumeMounts in the 'prometheus'\ncontainer, that are generated as a result of StorageSpec objects.",
          "type": "array",
          "items": {
            "description": "VolumeMount describes a mounting of a Volume within a container.",
            "type": "object",
            "required": [
              "mountPath",
              "name"
            ],
            "properties": {
              "mountPath": {
                "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                "type": "string"
              },
              "mountPropagation": {
                "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                "type": "string"
              },
              "name": {
                "description": "This must match the Name of a Volume.",
                "type": "string"
              },
              "readOnly": {
                "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                "type": "boolean"
              },
              "recursiveReadOnly": {
                "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                "type": "string"
              },
              "subPath": {
                "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                "type": "string"
              },
              "subPathExpr": {
                "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "volumes": {
          "description": "volumes allows the configuration of additional volumes on the output\nStatefulSet definition. Volumes specified will be appended to other\nvolumes that are generated as a result of StorageSpec objects.",
          "type": "array",
          "items": {
            "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "awsElasticBlockStore": {
                "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree\nawsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                "type": "object",
                "required": [
                  "volumeID"
                ],
                "properties": {
                  "fsType": {
                    "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                    "type": "string"
                  },
                  "partition": {
                    "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                    "type": "integer",
                    "format": "int32"
                  },
                  "readOnly": {
                    "description": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                    "type": "boolean"
                  },
                  "volumeID": {
                    "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "azureDisk": {
                "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\nDeprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type\nare redirected to the disk.csi.azure.com CSI driver.",
                "type": "object",
                "required": [
                  "diskName",
                  "diskURI"
                ],
                "properties": {
                  "cachingMode": {
                    "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                    "type": "string"
                  },
                  "diskName": {
                    "description": "diskName is the Name of the data disk in the blob storage",
                    "type": "string"
                  },
                  "diskURI": {
                    "description": "diskURI is the URI of data disk in the blob storage",
                    "type": "string"
                  },
                  "fsType": {
                    "description": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string",
                    "default": "ext4"
                  },
                  "kind": {
                    "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                    "type": "boolean",
                    "default": false
                  }
                },
                "additionalProperties": false
              },
              "azureFile": {
                "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.\nDeprecated: AzureFile is deprecated. All operations for the in-tree azureFile type\nare redirected to the file.csi.azure.com CSI driver.",
                "type": "object",
                "required": [
                  "secretName",
                  "shareName"
                ],
                "properties": {
                  "readOnly": {
                    "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "secretName": {
                    "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "shareName is the azure share Name",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "cephfs": {
                "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.\nDeprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.",
                "type": "object",
                "required": [
                  "monitors"
                ],
                "properties": {
                  "monitors": {
                    "description": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "path": {
                    "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                    "type": "boolean"
                  },
                  "secretFile": {
                    "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                    "type": "string"
                  },
                  "secretRef": {
                    "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "user": {
                    "description": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "cinder": {
                "description": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nDeprecated: Cinder is deprecated. All operations for the in-tree cinder type\nare redirected to the cinder.csi.openstack.org CSI driver.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                "type": "object",
                "required": [
                  "volumeID"
                ],
                "properties": {
                  "fsType": {
                    "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "volumeID": {
                    "description": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "configMap": {
                "description": "configMap represents a configMap that should populate this volume",
                "type": "object",
                "properties": {
                  "defaultMode": {
                    "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "items": {
                    "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                    "type": "array",
                    "items": {
                      "description": "Maps a string key to a path within a volume.",
                      "type": "object",
                      "required": [
                        "key",
                        "path"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the key to project.",
                          "type": "string"
                        },
                        "mode": {
                          "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "name": {
                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string",
                    "default": ""
                  },
                  "optional": {
                    "description": "optional specify whether the ConfigMap or its keys must be defined",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-map-type": "atomic"
              },
              "csi": {
                "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.",
                "type": "object",
                "required": [
                  "driver"
                ],
                "properties": {
                  "driver": {
                    "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                    "type": "string"
                  },
                  "fsType": {
                    "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                    "type": "string"
                  },
                  "nodePublishSecretRef": {
                    "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "readOnly": {
                    "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                    "type": "boolean"
                  },
                  "volumeAttributes": {
                    "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "downwardAPI": {
                "description": "downwardAPI represents downward API about the pod that should populate this volume",
                "type": "object",
                "properties": {
                  "defaultMode": {
                    "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "items": {
                    "description": "Items is a list of downward API volume file",
                    "type": "array",
                    "items": {
                      "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "fieldRef": {
                          "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                          "type": "object",
                          "required": [
                            "fieldPath"
                          ],
                          "properties": {
                            "apiVersion": {
                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "Path of the field to select in the specified API version.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "mode": {
                          "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                          "type": "string"
                        },
                        "resourceFieldRef": {
                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                          "type": "object",
                          "required": [
                            "resource"
                          ],
                          "properties": {
                            "containerName": {
                              "description": "Container name: required for volumes, optional for env vars",
                              "type": "string"
                            },
                            "divisor": {
                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "resource": {
                              "description": "Required: resource to select",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "emptyDir": {
                "description": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                "type": "object",
                "properties": {
                  "medium": {
                    "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                    "type": "string"
                  },
                  "sizeLimit": {
                    "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                },
                "additionalProperties": false
              },
              "ephemeral": {
                "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.",
                "type": "object",
                "properties": {
                  "volumeClaimTemplate": {
                    "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                    "type": "object",
                    "required": [
                      "spec"
                    ],
                    "properties": {
                      "metadata": {
                        "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                        "type": "object"
                      },
                      "spec": {
                        "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                        "type": "object",
                        "properties": {
                          "accessModes": {
                            "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "dataSource": {
                            "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "dataSourceRef": {
                            "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "resources": {
                            "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                            "type": "object",
                            "properties": {
                              "limits": {
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "requests": {
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "selector": {
                            "description": "selector is a label query over volumes to consider for binding.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "storageClassName": {
                            "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                            "type": "string"
                          },
                          "volumeAttributesClassName": {
                            "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string or nil value indicates that no\nVolumeAttributesClass will be applied to the claim. If the claim enters an Infeasible error state,\nthis field can be reset to its previous value (including nil) to cancel the modification.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/",
                            "type": "string"
                          },
                          "volumeMode": {
                            "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                            "type": "string"
                          },
                          "volumeName": {
                            "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "fc": {
                "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                "type": "object",
                "properties": {
                  "fsType": {
                    "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                  },
                  "lun": {
                    "description": "lun is Optional: FC target lun number",
                    "type": "integer",
                    "format": "int32"
                  },
                  "readOnly": {
                    "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "targetWWNs": {
                    "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "wwids": {
                    "description": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "flexVolume": {
                "description": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\nDeprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.",
                "type": "object",
                "required": [
                  "driver"
                ],
                "properties": {
                  "driver": {
                    "description": "driver is the name of the driver to use for this volume.",
                    "type": "string"
                  },
                  "fsType": {
                    "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                    "type": "string"
                  },
                  "options": {
                    "description": "options is Optional: this field holds extra command options if any.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "readOnly": {
                    "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "flocker": {
                "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.\nDeprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.",
                "type": "object",
                "properties": {
                  "datasetName": {
                    "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated",
                    "type": "string"
                  },
                  "datasetUUID": {
                    "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "gcePersistentDisk": {
                "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: GCEPersistentDisk is deprecated. All operations for the in-tree\ngcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                "type": "object",
                "required": [
                  "pdName"
                ],
                "properties": {
                  "fsType": {
                    "description": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "string"
                  },
                  "partition": {
                    "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "integer",
                    "format": "int32"
                  },
                  "pdName": {
                    "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "gitRepo": {
                "description": "gitRepo represents a git repository at a particular revision.\nDeprecated: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.",
                "type": "object",
                "required": [
                  "repository"
                ],
                "properties": {
                  "directory": {
                    "description": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.",
                    "type": "string"
                  },
                  "repository": {
                    "description": "repository is the URL",
                    "type": "string"
                  },
                  "revision": {
                    "description": "revision is the commit hash for the specified revision.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "glusterfs": {
                "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nDeprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.",
                "type": "object",
                "required": [
                  "endpoints",
                  "path"
                ],
                "properties": {
                  "endpoints": {
                    "description": "endpoints is the endpoint name that details Glusterfs topology.",
                    "type": "string"
                  },
                  "path": {
                    "description": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "hostPath": {
                "description": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                "type": "object",
                "required": [
                  "path"
                ],
                "properties": {
                  "path": {
                    "description": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                    "type": "string"
                  },
                  "type": {
                    "description": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "image": {
                "description": "image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.\nThe volume is resolved at pod startup depending on which PullPolicy value is provided:\n\n- Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\n- Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\n- IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\n\nThe volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.\nA failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.\nThe types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.\nThe OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.\nThe volume will be mounted read-only (ro) and non-executable files (noexec).\nSub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath) before 1.33.\nThe field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.",
                "type": "object",
                "properties": {
                  "pullPolicy": {
                    "description": "Policy for pulling OCI objects. Possible values are:\nAlways: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\nNever: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\nIfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
                    "type": "string"
                  },
                  "reference": {
                    "description": "Required: Image or artifact reference to be used.\nBehaves in the same way as pod.spec.containers[*].image.\nPull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "iscsi": {
                "description": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes/#iscsi",
                "type": "object",
                "required": [
                  "iqn",
                  "lun",
                  "targetPortal"
                ],
                "properties": {
                  "chapAuthDiscovery": {
                    "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                    "type": "boolean"
                  },
                  "chapAuthSession": {
                    "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                    "type": "boolean"
                  },
                  "fsType": {
                    "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                    "type": "string"
                  },
                  "initiatorName": {
                    "description": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                    "type": "string"
                  },
                  "iqn": {
                    "description": "iqn is the target iSCSI Qualified Name.",
                    "type": "string"
                  },
                  "iscsiInterface": {
                    "description": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).",
                    "type": "string",
                    "default": "default"
                  },
                  "lun": {
                    "description": "lun represents iSCSI Target Lun number.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "portals": {
                    "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "readOnly": {
                    "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "targetPortal": {
                    "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": "string"
              },
              "nfs": {
                "description": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                "type": "object",
                "required": [
                  "path",
                  "server"
                ],
                "properties": {
                  "path": {
                    "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "boolean"
                  },
                  "server": {
                    "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "persistentVolumeClaim": {
                "description": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                "type": "object",
                "required": [
                  "claimName"
                ],
                "properties": {
                  "claimName": {
                    "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              "photonPersistentDisk": {
                "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.\nDeprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.",
                "type": "object",
                "required": [
                  "pdID"
                ],
                "properties": {
                  "fsType": {
                    "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                  },
                  "pdID": {
                    "description": "pdID is the ID that identifies Photon Controller persistent disk",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "portworxVolume": {
                "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine.\nDeprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type\nare redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate\nis on.",
                "type": "object",
                "required": [
                  "volumeID"
                ],
                "properties": {
                  "fsType": {
                    "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "volumeID": {
                    "description": "volumeID uniquely identifies a Portworx volume",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "projected": {
                "description": "projected items for all in one resources secrets, configmaps, and downward API",
                "type": "object",
                "properties": {
                  "defaultMode": {
                    "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "sources": {
                    "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                    "type": "array",
                    "items": {
                      "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                      "type": "object",
                      "properties": {
                        "clusterTrustBundle": {
                          "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                          "type": "object",
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "labelSelector": {
                              "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                  "type": "array",
                                  "items": {
                                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the label key that the selector applies to.",
                                        "type": "string"
                                      },
                                      "operator": {
                                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                        "type": "string"
                                      },
                                      "values": {
                                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "name": {
                              "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                              "type": "string"
                            },
                            "optional": {
                              "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                              "type": "boolean"
                            },
                            "path": {
                              "description": "Relative path from the volume root to write the bundle.",
                              "type": "string"
                            },
                            "signerName": {
                              "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "configMap": {
                          "description": "configMap information about the configMap data to project",
                          "type": "object",
                          "properties": {
                            "items": {
                              "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                              "type": "array",
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "optional specify whether the ConfigMap or its keys must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "downwardAPI": {
                          "description": "downwardAPI information about the downwardAPI data to project",
                          "type": "object",
                          "properties": {
                            "items": {
                              "description": "Items is a list of DownwardAPIVolume file",
                              "type": "array",
                              "items": {
                                "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                "type": "object",
                                "required": [
                                  "path"
                                ],
                                "properties": {
                                  "fieldRef": {
                                    "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                    "type": "object",
                                    "required": [
                                      "fieldPath"
                                    ],
                                    "properties": {
                                      "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": "string"
                                      },
                                      "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "mode": {
                                    "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                    "type": "string"
                                  },
                                  "resourceFieldRef": {
                                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                    "type": "object",
                                    "required": [
                                      "resource"
                                    ],
                                    "properties": {
                                      "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": "string"
                                      },
                                      "divisor": {
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        },
                        "podCertificate": {
                          "description": "Projects an auto-rotating credential bundle (private key and certificate\nchain) that the pod can use either as a TLS client or server.\n\nKubelet generates a private key and uses it to send a\nPodCertificateRequest to the named signer.  Once the signer approves the\nrequest and issues a certificate chain, Kubelet writes the key and\ncertificate chain to the pod filesystem.  The pod does not start until\ncertificates have been issued for each podCertificate projected volume\nsource in its spec.\n\nKubelet will begin trying to rotate the certificate at the time indicated\nby the signer using the PodCertificateRequest.Status.BeginRefreshAt\ntimestamp.\n\nKubelet can write a single file, indicated by the credentialBundlePath\nfield, or separate files, indicated by the keyPath and\ncertificateChainPath fields.\n\nThe credential bundle is a single file in PEM format.  The first PEM\nentry is the private key (in PKCS#8 format), and the remaining PEM\nentries are the certificate chain issued by the signer (typically,\nsigners will return their certificate chain in leaf-to-root order).\n\nPrefer using the credential bundle format, since your application code\ncan read it atomically.  If you use keyPath and certificateChainPath,\nyour application must make two separate file reads. If these coincide\nwith a certificate rotation, it is possible that the private key and leaf\ncertificate you read may not correspond to each other.  Your application\nwill need to check for this condition, and re-read until they are\nconsistent.\n\nThe named signer controls chooses the format of the certificate it\nissues; consult the signer implementation's documentation to learn how to\nuse the certificates it issues.",
                          "type": "object",
                          "required": [
                            "keyType",
                            "signerName"
                          ],
                          "properties": {
                            "certificateChainPath": {
                              "description": "Write the certificate chain at this path in the projected volume.\n\nMost applications should use credentialBundlePath.  When using keyPath\nand certificateChainPath, your application needs to check that the key\nand leaf certificate are consistent, because it is possible to read the\nfiles mid-rotation.",
                              "type": "string"
                            },
                            "credentialBundlePath": {
                              "description": "Write the credential bundle at this path in the projected volume.\n\nThe credential bundle is a single file that contains multiple PEM blocks.\nThe first PEM block is a PRIVATE KEY block, containing a PKCS#8 private\nkey.\n\nThe remaining blocks are CERTIFICATE blocks, containing the issued\ncertificate chain from the signer (leaf and any intermediates).\n\nUsing credentialBundlePath lets your Pod's application code make a single\natomic read that retrieves a consistent key and certificate chain.  If you\nproject them to separate files, your application code will need to\nadditionally check that the leaf certificate was issued to the key.",
                              "type": "string"
                            },
                            "keyPath": {
                              "description": "Write the key at this path in the projected volume.\n\nMost applications should use credentialBundlePath.  When using keyPath\nand certificateChainPath, your application needs to check that the key\nand leaf certificate are consistent, because it is possible to read the\nfiles mid-rotation.",
                              "type": "string"
                            },
                            "keyType": {
                              "description": "The type of keypair Kubelet will generate for the pod.\n\nValid values are \"RSA3072\", \"RSA4096\", \"ECDSAP256\", \"ECDSAP384\",\n\"ECDSAP521\", and \"ED25519\".",
                              "type": "string"
                            },
                            "maxExpirationSeconds": {
                              "description": "maxExpirationSeconds is the maximum lifetime permitted for the\ncertificate.\n\nKubelet copies this value verbatim into the PodCertificateRequests it\ngenerates for this projection.\n\nIf omitted, kube-apiserver will set it to 86400(24 hours). kube-apiserver\nwill reject values shorter than 3600 (1 hour).  The maximum allowable\nvalue is 7862400 (91 days).\n\nThe signer implementation is then free to issue a certificate with any\nlifetime *shorter* than MaxExpirationSeconds, but no shorter than 3600\nseconds (1 hour).  This constraint is enforced by kube-apiserver.\n`kubernetes.io` signers will never issue certificates with a lifetime\nlonger than 24 hours.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "signerName": {
                              "description": "Kubelet's generated CSRs will be addressed to this signer.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "secret": {
                          "description": "secret information about the secret data to project",
                          "type": "object",
                          "properties": {
                            "items": {
                              "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                              "type": "array",
                              "items": {
                                "description": "Maps a string key to a path within a volume.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "path"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "key is the key to project.",
                                    "type": "string"
                                  },
                                  "mode": {
                                    "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "path": {
                                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "optional field specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "serviceAccountToken": {
                          "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                          "type": "object",
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "audience": {
                              "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                              "type": "string"
                            },
                            "expirationSeconds": {
                              "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "path": {
                              "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              },
              "quobyte": {
                "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime.\nDeprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.",
                "type": "object",
                "required": [
                  "registry",
                  "volume"
                ],
                "properties": {
                  "group": {
                    "description": "group to map volume access to\nDefault is no group",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.",
                    "type": "boolean"
                  },
                  "registry": {
                    "description": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                    "type": "string"
                  },
                  "tenant": {
                    "description": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin",
                    "type": "string"
                  },
                  "user": {
                    "description": "user to map volume access to\nDefaults to serivceaccount user",
                    "type": "string"
                  },
                  "volume": {
                    "description": "volume is a string that references an already created Quobyte volume by name.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "rbd": {
                "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nDeprecated: RBD is deprecated and the in-tree rbd type is no longer supported.",
                "type": "object",
                "required": [
                  "image",
                  "monitors"
                ],
                "properties": {
                  "fsType": {
                    "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                    "type": "string"
                  },
                  "image": {
                    "description": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                    "type": "string"
                  },
                  "keyring": {
                    "description": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                    "type": "string",
                    "default": "/etc/ceph/keyring"
                  },
                  "monitors": {
                    "description": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "pool": {
                    "description": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                    "type": "string",
                    "default": "rbd"
                  },
                  "readOnly": {
                    "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "user": {
                    "description": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                    "type": "string",
                    "default": "admin"
                  }
                },
                "additionalProperties": false
              },
              "scaleIO": {
                "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\nDeprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.",
                "type": "object",
                "required": [
                  "gateway",
                  "secretRef",
                  "system"
                ],
                "properties": {
                  "fsType": {
                    "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".",
                    "type": "string",
                    "default": "xfs"
                  },
                  "gateway": {
                    "description": "gateway is the host address of the ScaleIO API Gateway.",
                    "type": "string"
                  },
                  "protectionDomain": {
                    "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "sslEnabled": {
                    "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                    "type": "boolean"
                  },
                  "storageMode": {
                    "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.",
                    "type": "string",
                    "default": "ThinProvisioned"
                  },
                  "storagePool": {
                    "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                    "type": "string"
                  },
                  "system": {
                    "description": "system is the name of the storage system as configured in ScaleIO.",
                    "type": "string"
                  },
                  "volumeName": {
                    "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "secret": {
                "description": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                "type": "object",
                "properties": {
                  "defaultMode": {
                    "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "items": {
                    "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                    "type": "array",
                    "items": {
                      "description": "Maps a string key to a path within a volume.",
                      "type": "object",
                      "required": [
                        "key",
                        "path"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the key to project.",
                          "type": "string"
                        },
                        "mode": {
                          "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "optional": {
                    "description": "optional field specify whether the Secret or its keys must be defined",
                    "type": "boolean"
                  },
                  "secretName": {
                    "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "storageos": {
                "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\nDeprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.",
                "type": "object",
                "properties": {
                  "fsType": {
                    "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                  },
                  "readOnly": {
                    "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                    "type": "boolean"
                  },
                  "secretRef": {
                    "description": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "volumeName": {
                    "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                    "type": "string"
                  },
                  "volumeNamespace": {
                    "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "vsphereVolume": {
                "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.\nDeprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type\nare redirected to the csi.vsphere.vmware.com CSI driver.",
                "type": "object",
                "required": [
                  "volumePath"
                ],
                "properties": {
                  "fsType": {
                    "description": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                    "type": "string"
                  },
                  "storagePolicyID": {
                    "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                    "type": "string"
                  },
                  "storagePolicyName": {
                    "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                    "type": "string"
                  },
                  "volumePath": {
                    "description": "volumePath is the path that identifies vSphere volume vmdk",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "walCompression": {
          "description": "walCompression defines the compression of the write-ahead log (WAL) using Snappy.\n\nWAL compression is enabled by default for Prometheus \u003e= 2.20.0\n\nRequires Prometheus v2.11.0 and above.",
          "type": "boolean"
        },
        "web": {
          "description": "web defines the configuration of the Prometheus web server.",
          "type": "object",
          "properties": {
            "httpConfig": {
              "description": "httpConfig defines HTTP parameters for web server.",
              "type": "object",
              "properties": {
                "headers": {
                  "description": "headers defines a list of headers that can be added to HTTP responses.",
                  "type": "object",
                  "properties": {
                    "contentSecurityPolicy": {
                      "description": "contentSecurityPolicy defines the Content-Security-Policy header to HTTP responses.\nUnset if blank.",
                      "type": "string"
                    },
                    "strictTransportSecurity": {
                      "description": "strictTransportSecurity defines the Strict-Transport-Security header to HTTP responses.\nUnset if blank.\nPlease make sure that you use this with care as this header might force\nbrowsers to load Prometheus and the other applications hosted on the same\ndomain and subdomains over HTTPS.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security",
                      "type": "string"
                    },
                    "xContentTypeOptions": {
                      "description": "xContentTypeOptions defines the X-Content-Type-Options header to HTTP responses.\nUnset if blank. Accepted value is nosniff.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options",
                      "type": "string",
                      "enum": [
                        "",
                        "NoSniff"
                      ]
                    },
                    "xFrameOptions": {
                      "description": "xFrameOptions defines the X-Frame-Options header to HTTP responses.\nUnset if blank. Accepted values are deny and sameorigin.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options",
                      "type": "string",
                      "enum": [
                        "",
                        "Deny",
                        "SameOrigin"
                      ]
                    },
                    "xXSSProtection": {
                      "description": "xXSSProtection defines the X-XSS-Protection header to all responses.\nUnset if blank.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "http2": {
                  "description": "http2 enable HTTP/2 support. Note that HTTP/2 is only supported with TLS.\nWhen TLSConfig is not configured, HTTP/2 will be disabled.\nWhenever the value of the field changes, a rolling update will be triggered.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "maxConnections": {
              "description": "maxConnections defines the maximum number of simultaneous connections\nA zero value means that Prometheus doesn't accept any incoming connection.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "pageTitle": {
              "description": "pageTitle defines the prometheus web page title.",
              "type": "string"
            },
            "tlsConfig": {
              "description": "tlsConfig defines the TLS parameters for HTTPS.",
              "type": "object",
              "properties": {
                "cert": {
                  "description": "cert defines the Secret or ConfigMap containing the TLS certificate for the web server.\n\nEither `keySecret` or `keyFile` must be defined.\n\nIt is mutually exclusive with `certFile`.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "configMap defines the ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "secret defines the Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "certFile": {
                  "description": "certFile defines the path to the TLS certificate file in the container for the web server.\n\nEither `keySecret` or `keyFile` must be defined.\n\nIt is mutually exclusive with `cert`.",
                  "type": "string"
                },
                "cipherSuites": {
                  "description": "cipherSuites defines the list of supported cipher suites for TLS versions up to TLS 1.2.\n\nIf not defined, the Go default cipher suites are used.\nAvailable cipher suites are documented in the Go documentation:\nhttps://golang.org/pkg/crypto/tls/#pkg-constants",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "clientAuthType": {
                  "description": "clientAuthType defines the server policy for client TLS authentication.\n\nFor more detail on clientAuth options:\nhttps://golang.org/pkg/crypto/tls/#ClientAuthType",
                  "type": "string"
                },
                "clientCAFile": {
                  "description": "clientCAFile defines the path to the CA certificate file for client certificate authentication to\nthe server.\n\nIt is mutually exclusive with `client_ca`.",
                  "type": "string"
                },
                "client_ca": {
                  "description": "client_ca defines the Secret or ConfigMap containing the CA certificate for client certificate\nauthentication to the server.\n\nIt is mutually exclusive with `clientCAFile`.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "configMap defines the ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "secret defines the Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "curvePreferences": {
                  "description": "curvePreferences defines elliptic curves that will be used in an ECDHE handshake, in preference\norder.\n\nAvailable curves are documented in the Go documentation:\nhttps://golang.org/pkg/crypto/tls/#CurveID",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "keyFile": {
                  "description": "keyFile defines the path to the TLS private key file in the container for the web server.\n\nIf defined, either `cert` or `certFile` must be defined.\n\nIt is mutually exclusive with `keySecret`.",
                  "type": "string"
                },
                "keySecret": {
                  "description": "keySecret defines the secret containing the TLS private key for the web server.\n\nEither `cert` or `certFile` must be defined.\n\nIt is mutually exclusive with `keyFile`.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "maxVersion": {
                  "description": "maxVersion defines the Maximum TLS version that is acceptable.",
                  "type": "string"
                },
                "minVersion": {
                  "description": "minVersion defines the minimum TLS version that is acceptable.",
                  "type": "string"
                },
                "preferServerCipherSuites": {
                  "description": "preferServerCipherSuites defines whether the server selects the client's most preferred cipher\nsuite, or the server's most preferred cipher suite.\n\nIf true then the server's preference, as expressed in\nthe order of elements in cipherSuites, is used.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!(has(self.mode) \u0026\u0026 self.mode == 'DaemonSet' \u0026\u0026 has(self.replicas))",
          "message": "replicas cannot be set when mode is DaemonSet"
        },
        {
          "rule": "!(has(self.mode) \u0026\u0026 self.mode == 'DaemonSet' \u0026\u0026 has(self.storage))",
          "message": "storage cannot be set when mode is DaemonSet"
        },
        {
          "rule": "!(has(self.mode) \u0026\u0026 self.mode == 'DaemonSet' \u0026\u0026 has(self.shards) \u0026\u0026 self.shards \u003e 1)",
          "message": "shards cannot be greater than 1 when mode is DaemonSet"
        },
        {
          "rule": "!(has(self.mode) \u0026\u0026 self.mode == 'DaemonSet' \u0026\u0026 has(self.persistentVolumeClaimRetentionPolicy))",
          "message": "persistentVolumeClaimRetentionPolicy cannot be set when mode is DaemonSet"
        },
        {
          "rule": "!(has(self.mode) \u0026\u0026 self.mode == 'DaemonSet' \u0026\u0026 has(self.scrapeConfigSelector))",
          "message": "scrapeConfigSelector cannot be set when mode is DaemonSet"
        },
        {
          "rule": "!(has(self.mode) \u0026\u0026 self.mode == 'DaemonSet' \u0026\u0026 has(self.probeSelector))",
          "message": "probeSelector cannot be set when mode is DaemonSet"
        }
      ]
    },
    "status": {
      "description": "status defines the most recent observed status of the Prometheus cluster. Read-only.\nMore info:\nhttps://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status",
      "type": "object",
      "properties": {
        "availableReplicas": {
          "description": "availableReplicas defines the total number of available pods (ready for at least minReadySeconds)\ntargeted by this Prometheus deployment.",
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "description": "conditions defines the current state of the Prometheus deployment.",
          "type": "array",
          "items": {
            "description": "Condition represents the state of the resources associated with the\nPrometheus, Alertmanager or ThanosRuler resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the time of the last update to the current status property.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message defines human-readable message indicating details for the condition's last transition.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration defines the .metadata.generation that the\ncondition was set based upon. For instance, if `.metadata.generation` is\ncurrently 12, but the `.status.conditions[].observedGeneration` is 9, the\ncondition is out of date with respect to the current state of the\ninstance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "status of the condition.",
                "type": "string",
                "minLength": 1
              },
              "type": {
                "description": "type of the condition being reported.",
                "type": "string",
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "paused": {
          "description": "paused defines whether any actions on the underlying managed objects are\nbeing performed. Only delete actions will be performed.",
          "type": "boolean"
        },
        "replicas": {
          "description": "replicas defines the total number of non-terminated pods targeted by this Prometheus deployment\n(their labels match the selector).",
          "type": "integer",
          "format": "int32"
        },
        "selector": {
          "description": "selector used to match the pods targeted by this Prometheus resource.",
          "type": "string"
        },
        "shardStatuses": {
          "description": "shardStatuses defines the list has one entry per shard. Each entry provides a summary of the shard status.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "availableReplicas",
              "replicas",
              "shardID",
              "unavailableReplicas",
              "updatedReplicas"
            ],
            "properties": {
              "availableReplicas": {
                "description": "availableReplicas defines the total number of available pods (ready for at least minReadySeconds)\ntargeted by this shard.",
                "type": "integer",
                "format": "int32"
              },
              "replicas": {
                "description": "replicas defines the total number of pods targeted by this shard.",
                "type": "integer",
                "format": "int32"
              },
              "shardID": {
                "description": "shardID defines the identifier of the shard.",
                "type": "string"
              },
              "unavailableReplicas": {
                "description": "unavailableReplicas defines the Total number of unavailable pods targeted by this shard.",
                "type": "integer",
                "format": "int32"
              },
              "updatedReplicas": {
                "description": "updatedReplicas defines the total number of non-terminated pods targeted by this shard\nthat have the desired spec.",
                "type": "integer",
                "format": "int32"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "shardID"
          ],
          "x-kubernetes-list-type": "map"
        },
        "shards": {
          "description": "shards defines the most recently observed number of shards.",
          "type": "integer",
          "format": "int32"
        },
        "unavailableReplicas": {
          "description": "unavailableReplicas defines the total number of unavailable pods targeted by this Prometheus deployment.",
          "type": "integer",
          "format": "int32"
        },
        "updatedReplicas": {
          "description": "updatedReplicas defines the total number of non-terminated pods targeted by this Prometheus deployment\nthat have the desired version spec.",
          "type": "integer",
          "format": "int32"
        }
      },
      "additionalProperties": false
    }
  }
}
