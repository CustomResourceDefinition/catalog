{
  "description": "The `Probe` custom resource definition (CRD) defines how to scrape metrics from prober exporters such as the [blackbox exporter](https://github.com/prometheus/blackbox_exporter).\n\nThe `Probe` resource needs 2 pieces of information:\n* The list of probed addresses which can be defined statically or by discovering Kubernetes Ingress objects.\n* The prober which exposes the availability of probed endpoints (over various protocols such HTTP, TCP, ICMP, ...) as Prometheus metrics.\n\n`Prometheus` and `PrometheusAgent` objects select `Probe` objects using label and namespace selectors.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Specification of desired Ingress selection for target discovery by Prometheus.",
      "type": "object",
      "properties": {
        "authorization": {
          "description": "Authorization section for this endpoint",
          "type": "object",
          "properties": {
            "credentials": {
              "description": "Selects a key of a Secret in the namespace that contains the credentials for authentication.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string",
                  "default": ""
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "type": {
              "description": "Defines the authentication type. The value is case-insensitive.\n\n\"Basic\" is not a supported value.\n\nDefault: \"Bearer\"",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "basicAuth": {
          "description": "BasicAuth allow an endpoint to authenticate over basic authentication.\nMore info: https://prometheus.io/docs/operating/configuration/#endpoint",
          "type": "object",
          "properties": {
            "password": {
              "description": "`password` specifies a key of a Secret containing the password for\nauthentication.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string",
                  "default": ""
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "username": {
              "description": "`username` specifies a key of a Secret containing the username for\nauthentication.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string",
                  "default": ""
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            }
          },
          "additionalProperties": false
        },
        "bearerTokenSecret": {
          "description": "Secret to mount to read bearer token for scraping targets. The secret\nneeds to be in the same namespace as the probe and accessible by\nthe Prometheus Operator.",
          "type": "object",
          "required": [
            "key"
          ],
          "properties": {
            "key": {
              "description": "The key of the secret to select from.  Must be a valid secret key.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string",
              "default": ""
            },
            "optional": {
              "description": "Specify whether the Secret or its key must be defined",
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "convertClassicHistogramsToNHCB": {
          "description": "Whether to convert all scraped classic histograms into a native histogram with custom buckets.\nIt requires Prometheus \u003e= v3.0.0.",
          "type": "boolean"
        },
        "fallbackScrapeProtocol": {
          "description": "The protocol to use if a scrape returns blank, unparseable, or otherwise invalid Content-Type.\n\nIt requires Prometheus \u003e= v3.0.0.",
          "type": "string",
          "enum": [
            "PrometheusProto",
            "OpenMetricsText0.0.1",
            "OpenMetricsText1.0.0",
            "PrometheusText0.0.4",
            "PrometheusText1.0.0"
          ]
        },
        "interval": {
          "description": "Interval at which targets are probed using the configured prober.\nIf not specified Prometheus' global scrape interval is used.",
          "type": "string",
          "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
        },
        "jobName": {
          "description": "The job name assigned to scraped metrics by default.",
          "type": "string"
        },
        "keepDroppedTargets": {
          "description": "Per-scrape limit on the number of targets dropped by relabeling\nthat will be kept in memory. 0 means no limit.\n\nIt requires Prometheus \u003e= v2.47.0.",
          "type": "integer",
          "format": "int64"
        },
        "labelLimit": {
          "description": "Per-scrape limit on number of labels that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
          "type": "integer",
          "format": "int64"
        },
        "labelNameLengthLimit": {
          "description": "Per-scrape limit on length of labels name that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
          "type": "integer",
          "format": "int64"
        },
        "labelValueLengthLimit": {
          "description": "Per-scrape limit on length of labels value that will be accepted for a sample.\nOnly valid in Prometheus versions 2.27.0 and newer.",
          "type": "integer",
          "format": "int64"
        },
        "metricRelabelings": {
          "description": "MetricRelabelConfigs to apply to samples before ingestion.",
          "type": "array",
          "items": {
            "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
            "type": "object",
            "properties": {
              "action": {
                "description": "Action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus \u003e= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus \u003e= v2.41.0.\n\nDefault: \"Replace\"",
                "type": "string",
                "default": "replace",
                "enum": [
                  "replace",
                  "Replace",
                  "keep",
                  "Keep",
                  "drop",
                  "Drop",
                  "hashmod",
                  "HashMod",
                  "labelmap",
                  "LabelMap",
                  "labeldrop",
                  "LabelDrop",
                  "labelkeep",
                  "LabelKeep",
                  "lowercase",
                  "Lowercase",
                  "uppercase",
                  "Uppercase",
                  "keepequal",
                  "KeepEqual",
                  "dropequal",
                  "DropEqual"
                ]
              },
              "modulus": {
                "description": "Modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                "type": "integer",
                "format": "int64"
              },
              "regex": {
                "description": "Regular expression against which the extracted value is matched.",
                "type": "string"
              },
              "replacement": {
                "description": "Replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                "type": "string"
              },
              "separator": {
                "description": "Separator is the string between concatenated SourceLabels.",
                "type": "string"
              },
              "sourceLabels": {
                "description": "The source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                "type": "array",
                "items": {
                  "description": "LabelName is a valid Prometheus label name which may only contain ASCII\nletters, numbers, as well as underscores.",
                  "type": "string",
                  "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                }
              },
              "targetLabel": {
                "description": "Label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "module": {
          "description": "The module to use for probing specifying how to probe the target.\nExample module configuring in the blackbox exporter:\nhttps://github.com/prometheus/blackbox_exporter/blob/master/example.yml",
          "type": "string"
        },
        "nativeHistogramBucketLimit": {
          "description": "If there are more than this many buckets in a native histogram,\nbuckets will be merged to stay within the limit.\nIt requires Prometheus \u003e= v2.45.0.",
          "type": "integer",
          "format": "int64"
        },
        "nativeHistogramMinBucketFactor": {
          "description": "If the growth factor of one bucket to the next is smaller than this,\nbuckets will be merged to increase the factor sufficiently.\nIt requires Prometheus \u003e= v2.50.0.",
          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "oauth2": {
          "description": "OAuth2 for the URL. Only valid in Prometheus versions 2.27.0 and newer.",
          "type": "object",
          "required": [
            "clientId",
            "clientSecret",
            "tokenUrl"
          ],
          "properties": {
            "clientId": {
              "description": "`clientId` specifies a key of a Secret or ConfigMap containing the\nOAuth2 client's ID.",
              "type": "object",
              "properties": {
                "configMap": {
                  "description": "ConfigMap containing data to use for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the ConfigMap or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "secret": {
                  "description": "Secret containing data to use for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "clientSecret": {
              "description": "`clientSecret` specifies a key of a Secret containing the OAuth2\nclient's secret.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string",
                  "default": ""
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "endpointParams": {
              "description": "`endpointParams` configures the HTTP parameters to append to the token\nURL.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "noProxy": {
              "description": "`noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "string"
            },
            "proxyConnectHeader": {
              "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "description": "SecretKeySelector selects a key of a Secret.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "proxyFromEnvironment": {
              "description": "Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "boolean"
            },
            "proxyUrl": {
              "description": "`proxyURL` defines the HTTP proxy server to use.",
              "type": "string",
              "pattern": "^(http|https|socks5)://.+$"
            },
            "scopes": {
              "description": "`scopes` defines the OAuth2 scopes used for the token request.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tlsConfig": {
              "description": "TLS configuration to use when connecting to the OAuth2 server.\nIt requires Prometheus \u003e= v2.43.0.",
              "type": "object",
              "properties": {
                "ca": {
                  "description": "Certificate authority used when verifying server certificates.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "cert": {
                  "description": "Client certificate to present when doing client-authentication.",
                  "type": "object",
                  "properties": {
                    "configMap": {
                      "description": "ConfigMap containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secret": {
                      "description": "Secret containing data to use for the targets.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "insecureSkipVerify": {
                  "description": "Disable target certificate validation.",
                  "type": "boolean"
                },
                "keySecret": {
                  "description": "Secret containing the client key file for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "maxVersion": {
                  "description": "Maximum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.41.0 or Thanos \u003e= v0.31.0.",
                  "type": "string",
                  "enum": [
                    "TLS10",
                    "TLS11",
                    "TLS12",
                    "TLS13"
                  ]
                },
                "minVersion": {
                  "description": "Minimum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.35.0 or Thanos \u003e= v0.28.0.",
                  "type": "string",
                  "enum": [
                    "TLS10",
                    "TLS11",
                    "TLS12",
                    "TLS13"
                  ]
                },
                "serverName": {
                  "description": "Used to verify the hostname for the targets.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "tokenUrl": {
              "description": "`tokenURL` configures the URL to fetch the token from.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "params": {
          "description": "The list of HTTP query parameters for the scrape.\nPlease note that the `.spec.module` field takes precedence over the `module` parameter from this list when both are defined.\nThe module name must be added using Module under ProbeSpec.",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "ProbeParam defines specification of extra parameters for a Probe.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "The parameter name",
                "type": "string",
                "minLength": 1
              },
              "values": {
                "description": "The parameter values",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string",
                  "minLength": 1
                }
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        },
        "prober": {
          "description": "Specification for the prober to use for probing targets.\nThe prober.URL parameter is required. Targets cannot be probed if left empty.",
          "type": "object",
          "required": [
            "url"
          ],
          "properties": {
            "noProxy": {
              "description": "`noProxy` is a comma-separated string that can contain IPs, CIDR notation, domain names\nthat should be excluded from proxying. IP and domain names can\ncontain port numbers.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "string"
            },
            "path": {
              "description": "Path to collect metrics from.\nDefaults to `/probe`.",
              "type": "string",
              "default": "/probe"
            },
            "proxyConnectHeader": {
              "description": "ProxyConnectHeader optionally specifies headers to send to\nproxies during CONNECT requests.\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "description": "SecretKeySelector selects a key of a Secret.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "x-kubernetes-map-type": "atomic"
            },
            "proxyFromEnvironment": {
              "description": "Whether to use the proxy configuration defined by environment variables (HTTP_PROXY, HTTPS_PROXY, and NO_PROXY).\n\nIt requires Prometheus \u003e= v2.43.0, Alertmanager \u003e= v0.25.0 or Thanos \u003e= v0.32.0.",
              "type": "boolean"
            },
            "proxyUrl": {
              "description": "`proxyURL` defines the HTTP proxy server to use.",
              "type": "string",
              "pattern": "^(http|https|socks5)://.+$"
            },
            "scheme": {
              "description": "HTTP scheme to use for scraping.\n`http` and `https` are the expected values unless you rewrite the `__scheme__` label via relabeling.\nIf empty, Prometheus uses the default value `http`.",
              "type": "string",
              "enum": [
                "http",
                "https"
              ]
            },
            "url": {
              "description": "Mandatory URL of the prober.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "sampleLimit": {
          "description": "SampleLimit defines per-scrape limit on number of scraped samples that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "scrapeClass": {
          "description": "The scrape class to apply.",
          "type": "string",
          "minLength": 1
        },
        "scrapeClassicHistograms": {
          "description": "Whether to scrape a classic histogram that is also exposed as a native histogram.\nIt requires Prometheus \u003e= v2.45.0.\n\nNotice: `scrapeClassicHistograms` corresponds to the `always_scrape_classic_histograms` field in the Prometheus configuration.",
          "type": "boolean"
        },
        "scrapeProtocols": {
          "description": "`scrapeProtocols` defines the protocols to negotiate during a scrape. It tells clients the\nprotocols supported by Prometheus in order of preference (from most to least preferred).\n\nIf unset, Prometheus uses its default value.\n\nIt requires Prometheus \u003e= v2.49.0.",
          "type": "array",
          "items": {
            "description": "ScrapeProtocol represents a protocol used by Prometheus for scraping metrics.\nSupported values are:\n* `OpenMetricsText0.0.1`\n* `OpenMetricsText1.0.0`\n* `PrometheusProto`\n* `PrometheusText0.0.4`\n* `PrometheusText1.0.0`",
            "type": "string",
            "enum": [
              "PrometheusProto",
              "OpenMetricsText0.0.1",
              "OpenMetricsText1.0.0",
              "PrometheusText0.0.4",
              "PrometheusText1.0.0"
            ]
          },
          "x-kubernetes-list-type": "set"
        },
        "scrapeTimeout": {
          "description": "Timeout for scraping metrics from the Prometheus exporter.\nIf not specified, the Prometheus global scrape timeout is used.\nThe value cannot be greater than the scrape interval otherwise the operator will reject the resource.",
          "type": "string",
          "pattern": "^(0|(([0-9]+)y)?(([0-9]+)w)?(([0-9]+)d)?(([0-9]+)h)?(([0-9]+)m)?(([0-9]+)s)?(([0-9]+)ms)?)$"
        },
        "targetLimit": {
          "description": "TargetLimit defines a limit on the number of scraped targets that will be accepted.",
          "type": "integer",
          "format": "int64"
        },
        "targets": {
          "description": "Targets defines a set of static or dynamically discovered targets to probe.",
          "type": "object",
          "properties": {
            "ingress": {
              "description": "ingress defines the Ingress objects to probe and the relabeling\nconfiguration.\nIf `staticConfig` is also defined, `staticConfig` takes precedence.",
              "type": "object",
              "properties": {
                "namespaceSelector": {
                  "description": "From which namespaces to select Ingress objects.",
                  "type": "object",
                  "properties": {
                    "any": {
                      "description": "Boolean describing whether all namespaces are selected in contrast to a\nlist restricting them.",
                      "type": "boolean"
                    },
                    "matchNames": {
                      "description": "List of namespace names to select from.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "relabelingConfigs": {
                  "description": "RelabelConfigs to apply to the label set of the target before it gets\nscraped.\nThe original ingress address is available via the\n`__tmp_prometheus_ingress_address` label. It can be used to customize the\nprobed URL.\nThe original scrape job's name is available via the `__tmp_prometheus_job_name` label.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": "array",
                  "items": {
                    "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "Action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus \u003e= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus \u003e= v2.41.0.\n\nDefault: \"Replace\"",
                        "type": "string",
                        "default": "replace",
                        "enum": [
                          "replace",
                          "Replace",
                          "keep",
                          "Keep",
                          "drop",
                          "Drop",
                          "hashmod",
                          "HashMod",
                          "labelmap",
                          "LabelMap",
                          "labeldrop",
                          "LabelDrop",
                          "labelkeep",
                          "LabelKeep",
                          "lowercase",
                          "Lowercase",
                          "uppercase",
                          "Uppercase",
                          "keepequal",
                          "KeepEqual",
                          "dropequal",
                          "DropEqual"
                        ]
                      },
                      "modulus": {
                        "description": "Modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "regex": {
                        "description": "Regular expression against which the extracted value is matched.",
                        "type": "string"
                      },
                      "replacement": {
                        "description": "Replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                        "type": "string"
                      },
                      "separator": {
                        "description": "Separator is the string between concatenated SourceLabels.",
                        "type": "string"
                      },
                      "sourceLabels": {
                        "description": "The source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                        "type": "array",
                        "items": {
                          "description": "LabelName is a valid Prometheus label name which may only contain ASCII\nletters, numbers, as well as underscores.",
                          "type": "string",
                          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                        }
                      },
                      "targetLabel": {
                        "description": "Label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "selector": {
                  "description": "Selector to select the Ingress objects.",
                  "type": "object",
                  "properties": {
                    "matchExpressions": {
                      "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                      "type": "array",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "type": "object",
                        "required": [
                          "key",
                          "operator"
                        ],
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "matchLabels": {
                      "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "staticConfig": {
              "description": "staticConfig defines the static list of targets to probe and the\nrelabeling configuration.\nIf `ingress` is also defined, `staticConfig` takes precedence.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#static_config.",
              "type": "object",
              "properties": {
                "labels": {
                  "description": "Labels assigned to all metrics scraped from the targets.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "relabelingConfigs": {
                  "description": "RelabelConfigs to apply to the label set of the targets before it gets\nscraped.\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                  "type": "array",
                  "items": {
                    "description": "RelabelConfig allows dynamic rewriting of the label set for targets, alerts,\nscraped samples and remote write samples.\n\nMore info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config",
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "Action to perform based on the regex matching.\n\n`Uppercase` and `Lowercase` actions require Prometheus \u003e= v2.36.0.\n`DropEqual` and `KeepEqual` actions require Prometheus \u003e= v2.41.0.\n\nDefault: \"Replace\"",
                        "type": "string",
                        "default": "replace",
                        "enum": [
                          "replace",
                          "Replace",
                          "keep",
                          "Keep",
                          "drop",
                          "Drop",
                          "hashmod",
                          "HashMod",
                          "labelmap",
                          "LabelMap",
                          "labeldrop",
                          "LabelDrop",
                          "labelkeep",
                          "LabelKeep",
                          "lowercase",
                          "Lowercase",
                          "uppercase",
                          "Uppercase",
                          "keepequal",
                          "KeepEqual",
                          "dropequal",
                          "DropEqual"
                        ]
                      },
                      "modulus": {
                        "description": "Modulus to take of the hash of the source label values.\n\nOnly applicable when the action is `HashMod`.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "regex": {
                        "description": "Regular expression against which the extracted value is matched.",
                        "type": "string"
                      },
                      "replacement": {
                        "description": "Replacement value against which a Replace action is performed if the\nregular expression matches.\n\nRegex capture groups are available.",
                        "type": "string"
                      },
                      "separator": {
                        "description": "Separator is the string between concatenated SourceLabels.",
                        "type": "string"
                      },
                      "sourceLabels": {
                        "description": "The source labels select values from existing labels. Their content is\nconcatenated using the configured Separator and matched against the\nconfigured regular expression.",
                        "type": "array",
                        "items": {
                          "description": "LabelName is a valid Prometheus label name which may only contain ASCII\nletters, numbers, as well as underscores.",
                          "type": "string",
                          "pattern": "^[a-zA-Z_][a-zA-Z0-9_]*$"
                        }
                      },
                      "targetLabel": {
                        "description": "Label to which the resulting string is written in a replacement.\n\nIt is mandatory for `Replace`, `HashMod`, `Lowercase`, `Uppercase`,\n`KeepEqual` and `DropEqual` actions.\n\nRegex capture groups are available.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "static": {
                  "description": "The list of hosts to probe.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "tlsConfig": {
          "description": "TLS configuration to use when scraping the endpoint.",
          "type": "object",
          "properties": {
            "ca": {
              "description": "Certificate authority used when verifying server certificates.",
              "type": "object",
              "properties": {
                "configMap": {
                  "description": "ConfigMap containing data to use for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the ConfigMap or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "secret": {
                  "description": "Secret containing data to use for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "cert": {
              "description": "Client certificate to present when doing client-authentication.",
              "type": "object",
              "properties": {
                "configMap": {
                  "description": "ConfigMap containing data to use for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the ConfigMap or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "secret": {
                  "description": "Secret containing data to use for the targets.",
                  "type": "object",
                  "required": [
                    "key"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string",
                      "default": ""
                    },
                    "optional": {
                      "description": "Specify whether the Secret or its key must be defined",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "insecureSkipVerify": {
              "description": "Disable target certificate validation.",
              "type": "boolean"
            },
            "keySecret": {
              "description": "Secret containing the client key file for the targets.",
              "type": "object",
              "required": [
                "key"
              ],
              "properties": {
                "key": {
                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string",
                  "default": ""
                },
                "optional": {
                  "description": "Specify whether the Secret or its key must be defined",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "maxVersion": {
              "description": "Maximum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.41.0 or Thanos \u003e= v0.31.0.",
              "type": "string",
              "enum": [
                "TLS10",
                "TLS11",
                "TLS12",
                "TLS13"
              ]
            },
            "minVersion": {
              "description": "Minimum acceptable TLS version.\n\nIt requires Prometheus \u003e= v2.35.0 or Thanos \u003e= v0.28.0.",
              "type": "string",
              "enum": [
                "TLS10",
                "TLS11",
                "TLS12",
                "TLS13"
              ]
            },
            "serverName": {
              "description": "Used to verify the hostname for the targets.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
