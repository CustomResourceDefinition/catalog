{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IPAMBlockSpec contains the specification for an IPAMBlock resource.",
      "type": "object",
      "required": [
        "allocations",
        "attributes",
        "cidr",
        "strictAffinity",
        "unallocated"
      ],
      "properties": {
        "affinity": {
          "description": "Affinity of the block, if this block has one. If set, it will be of the form\n\"host:\u003chostname\u003e\". If not set, this block is not affine to a host.",
          "type": "string"
        },
        "allocations": {
          "description": "Array of allocations in-use within this block. nil entries mean the allocation is free.\nFor non-nil entries at index i, the index is the ordinal of the allocation within this block\nand the value is the index of the associated attributes in the Attributes array.",
          "type": "array",
          "items": {
            "type": "integer",
            "nullable": true
          }
        },
        "attributes": {
          "description": "Attributes is an array of arbitrary metadata associated with allocations in the block. To find\nattributes for a given allocation, use the value of the allocation's entry in the Allocations array\nas the index of the element in this array.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "handle_id": {
                "type": "string"
              },
              "secondary": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "cidr": {
          "description": "The block's CIDR.",
          "type": "string"
        },
        "deleted": {
          "description": "Deleted is an internal boolean used to workaround a limitation in the Kubernetes API whereby\ndeletion will not return a conflict error if the block has been updated. It should not be set manually.",
          "type": "boolean"
        },
        "sequenceNumber": {
          "description": "We store a sequence number that is updated each time the block is written.\nEach allocation will also store the sequence number of the block at the time of its creation.\nWhen releasing an IP, passing the sequence number associated with the allocation allows us\nto protect against a race condition and ensure the IP hasn't been released and re-allocated\nsince the release request.",
          "type": "integer",
          "format": "int64",
          "default": 0
        },
        "sequenceNumberForAllocation": {
          "description": "Map of allocated ordinal within the block to sequence number of the block at\nthe time of allocation. Kubernetes does not allow numerical keys for maps, so\nthe key is cast to a string.",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "strictAffinity": {
          "description": "StrictAffinity on the IPAMBlock is deprecated and no longer used by the code. Use IPAMConfig StrictAffinity instead.",
          "type": "boolean"
        },
        "unallocated": {
          "description": "Unallocated is an ordered list of allocations which are free in the block.",
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "additionalProperties": false
    }
  }
}
