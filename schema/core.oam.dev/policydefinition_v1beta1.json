{
  "description": "PolicyDefinition is the Schema for the policydefinitions API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PolicyDefinitionSpec defines the desired state of PolicyDefinition",
      "type": "object",
      "properties": {
        "definitionRef": {
          "description": "Reference to the CustomResourceDefinition that defines this trait kind.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced CustomResourceDefinition.",
              "type": "string"
            },
            "version": {
              "description": "Version indicate which version should be used if CRD has multiple versions\nby default it will use the first one if not specified",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "manageHealthCheck": {
          "description": "ManageHealthCheck means the policy will handle health checking and skip application controller\nbuilt-in health checking.",
          "type": "boolean"
        },
        "schematic": {
          "description": "Schematic defines the data format and template of the encapsulation of the policy definition.\nOnly CUE schematic is supported for now.",
          "type": "object",
          "properties": {
            "cue": {
              "description": "CUE defines the encapsulation in CUE format",
              "type": "object",
              "required": [
                "template"
              ],
              "properties": {
                "template": {
                  "description": "Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field.\nTemplate is a required field if CUE is defined in Capability Definition.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "terraform": {
              "description": "Terraform is the struct to describe cloud resources managed by Hashicorp Terraform",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "Configuration is Terraform Configuration",
                  "type": "string"
                },
                "customRegion": {
                  "description": "Region is cloud provider's region. It will override the region in the region field of ProviderReference",
                  "type": "string"
                },
                "deleteResource": {
                  "description": "DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted",
                  "type": "boolean",
                  "default": true
                },
                "gitCredentialsSecretReference": {
                  "description": "GitCredentialsSecretReference specifies the reference to the secret containing the git credentials",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "name is unique within a namespace to reference a secret resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "namespace defines the space within which the secret name must be unique.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "path": {
                  "description": "Path is the sub-directory of remote git repository. It's valid when remote is set",
                  "type": "string"
                },
                "providerRef": {
                  "description": "ProviderReference specifies the reference to Provider",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object.",
                      "type": "string",
                      "default": "default"
                    }
                  },
                  "additionalProperties": false
                },
                "type": {
                  "description": "Type specifies which Terraform configuration it is, HCL or JSON syntax",
                  "type": "string",
                  "default": "hcl",
                  "enum": [
                    "hcl",
                    "json",
                    "remote"
                  ]
                },
                "writeConnectionSecretToRef": {
                  "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "version": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PolicyDefinitionStatus is the status of PolicyDefinition",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "configMapRef": {
          "description": "ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.",
          "type": "string"
        },
        "latestRevision": {
          "description": "LatestRevision of the component definition",
          "type": "object",
          "required": [
            "name",
            "revision"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "revision": {
              "type": "integer",
              "format": "int64"
            },
            "revisionHash": {
              "description": "RevisionHash record the hash value of the spec of ApplicationRevision object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
