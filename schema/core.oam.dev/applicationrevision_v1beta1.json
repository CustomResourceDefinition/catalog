{
  "description": "ApplicationRevision is the Schema for the ApplicationRevision API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ApplicationRevisionSpec is the spec of ApplicationRevision",
      "type": "object",
      "required": [
        "application"
      ],
      "properties": {
        "application": {
          "description": "Application records the snapshot of the created/modified Application",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
              "type": "string"
            },
            "kind": {
              "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "metadata": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "description": "ApplicationSpec is the spec of Application",
              "type": "object",
              "required": [
                "components"
              ],
              "properties": {
                "components": {
                  "type": "array",
                  "items": {
                    "description": "ApplicationComponent describe the component of application",
                    "type": "object",
                    "required": [
                      "name",
                      "type"
                    ],
                    "properties": {
                      "dependsOn": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "externalRevision": {
                        "description": "ExternalRevision specified the component revisionName",
                        "type": "string"
                      },
                      "inputs": {
                        "description": "StepInputs defines variable input of WorkflowStep",
                        "type": "array",
                        "items": {
                          "description": "InputItem defines an input variable of WorkflowStep",
                          "type": "object",
                          "required": [
                            "from"
                          ],
                          "properties": {
                            "from": {
                              "type": "string"
                            },
                            "parameterKey": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "name": {
                        "type": "string"
                      },
                      "outputs": {
                        "description": "StepOutputs defines output variable of WorkflowStep",
                        "type": "array",
                        "items": {
                          "description": "OutputItem defines an output variable of WorkflowStep",
                          "type": "object",
                          "required": [
                            "name",
                            "valueFrom"
                          ],
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "properties": {
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "scopes": {
                        "description": "scopes in ApplicationComponent defines the component-level scopes\nthe format is \u003cscope-type:scope-instance-name\u003e pairs, the key represents type of `ScopeDefinition` while the value represent the name of scope instance.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "traits": {
                        "description": "Traits define the trait of one component, the type must be array to keep the order.",
                        "type": "array",
                        "items": {
                          "description": "ApplicationTrait defines the trait of application",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "properties": {
                              "type": "object",
                              "x-kubernetes-preserve-unknown-fields": true
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "policies": {
                  "description": "Policies defines the global policies for all components in the app, e.g. security, metrics, gitops,\nmulti-cluster placement rules, etc.\nPolicies are applied after components are rendered and before workflow steps are executed.",
                  "type": "array",
                  "items": {
                    "description": "AppPolicy defines a global policy for all components in the app.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name is the unique name of the policy.",
                        "type": "string"
                      },
                      "properties": {
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "type": {
                        "description": "Type is the type of the policy",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "workflow": {
                  "description": "Workflow defines how to customize the control logic.\nIf workflow is specified, Vela won't apply any resource, but provide rendered output in AppRevision.\nWorkflow steps are executed in array order, and each step:\n- will have a context in annotation.\n- should mark \"finish\" phase in status.conditions.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "WorkflowExecuteMode defines the mode of workflow execution",
                      "type": "object",
                      "properties": {
                        "steps": {
                          "description": "Steps is the mode of workflow steps execution",
                          "type": "string"
                        },
                        "subSteps": {
                          "description": "SubSteps is the mode of workflow sub steps execution",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "ref": {
                      "type": "string"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "description": "WorkflowStep defines how to execute a workflow step.",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "dependsOn": {
                            "description": "DependsOn is the dependency of the step",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "if": {
                            "description": "If is the if condition of the step",
                            "type": "string"
                          },
                          "inputs": {
                            "description": "Inputs is the inputs of the step",
                            "type": "array",
                            "items": {
                              "description": "InputItem defines an input variable of WorkflowStep",
                              "type": "object",
                              "required": [
                                "from"
                              ],
                              "properties": {
                                "from": {
                                  "type": "string"
                                },
                                "parameterKey": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "meta": {
                            "description": "Meta is the meta data of the workflow step.",
                            "type": "object",
                            "properties": {
                              "alias": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "mode": {
                            "description": "Mode is only valid for sub steps, it defines the mode of the sub steps",
                            "type": "string",
                            "nullable": true
                          },
                          "name": {
                            "description": "Name is the unique name of the workflow step.",
                            "type": "string"
                          },
                          "outputs": {
                            "description": "Outputs is the outputs of the step",
                            "type": "array",
                            "items": {
                              "description": "OutputItem defines an output variable of WorkflowStep",
                              "type": "object",
                              "required": [
                                "name",
                                "valueFrom"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "properties": {
                            "description": "Properties is the properties of the step",
                            "type": "object",
                            "x-kubernetes-preserve-unknown-fields": true
                          },
                          "subSteps": {
                            "type": "array",
                            "items": {
                              "description": "WorkflowStepBase defines the workflow step base",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "dependsOn": {
                                  "description": "DependsOn is the dependency of the step",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "if": {
                                  "description": "If is the if condition of the step",
                                  "type": "string"
                                },
                                "inputs": {
                                  "description": "Inputs is the inputs of the step",
                                  "type": "array",
                                  "items": {
                                    "description": "InputItem defines an input variable of WorkflowStep",
                                    "type": "object",
                                    "required": [
                                      "from"
                                    ],
                                    "properties": {
                                      "from": {
                                        "type": "string"
                                      },
                                      "parameterKey": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "meta": {
                                  "description": "Meta is the meta data of the workflow step.",
                                  "type": "object",
                                  "properties": {
                                    "alias": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "description": "Name is the unique name of the workflow step.",
                                  "type": "string"
                                },
                                "outputs": {
                                  "description": "Outputs is the outputs of the step",
                                  "type": "array",
                                  "items": {
                                    "description": "OutputItem defines an output variable of WorkflowStep",
                                    "type": "object",
                                    "required": [
                                      "name",
                                      "valueFrom"
                                    ],
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "properties": {
                                  "description": "Properties is the properties of the step",
                                  "type": "object",
                                  "x-kubernetes-preserve-unknown-fields": true
                                },
                                "timeout": {
                                  "description": "Timeout is the timeout of the step",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is the type of the workflow step.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "timeout": {
                            "description": "Timeout is the timeout of the step",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type is the type of the workflow step.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "status": {
              "description": "AppStatus defines the observed state of Application",
              "type": "object",
              "properties": {
                "appliedResources": {
                  "description": "AppliedResources record the resources that the  workflow step apply.",
                  "type": "array",
                  "items": {
                    "description": "ClusterObjectReference defines the object reference with cluster.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "cluster": {
                        "type": "string"
                      },
                      "creator": {
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "components": {
                  "description": "Components record the related Components created by Application Controller",
                  "type": "array",
                  "items": {
                    "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                    "type": "object",
                    "properties": {
                      "apiVersion": {
                        "description": "API version of the referent.",
                        "type": "string"
                      },
                      "fieldPath": {
                        "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                        "type": "string"
                      },
                      "resourceVersion": {
                        "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                        "type": "string"
                      },
                      "uid": {
                        "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "conditions": {
                  "description": "Conditions of the resource.",
                  "type": "array",
                  "items": {
                    "description": "A Condition that may apply to a resource.",
                    "type": "object",
                    "required": [
                      "lastTransitionTime",
                      "reason",
                      "status",
                      "type"
                    ],
                    "properties": {
                      "lastTransitionTime": {
                        "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "message": {
                        "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                        "type": "string"
                      },
                      "reason": {
                        "description": "A Reason for this condition's last transition from one status to another.",
                        "type": "string"
                      },
                      "status": {
                        "description": "Status of this condition; is it currently True, False, or Unknown?",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "latestRevision": {
                  "description": "LatestRevision of the application configuration it generates",
                  "type": "object",
                  "required": [
                    "name",
                    "revision"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "revision": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "revisionHash": {
                      "description": "RevisionHash record the hash value of the spec of ApplicationRevision object.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "observedGeneration": {
                  "description": "The generation observed by the application controller.",
                  "type": "integer",
                  "format": "int64"
                },
                "policy": {
                  "description": "PolicyStatus records the status of policy\nDeprecated This field is only used by EnvBinding Policy which is deprecated.",
                  "type": "array",
                  "items": {
                    "description": "PolicyStatus records the status of policy\nDeprecated",
                    "type": "object",
                    "required": [
                      "name",
                      "type"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "status": {
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "services": {
                  "description": "Services record the status of the application services",
                  "type": "array",
                  "items": {
                    "description": "ApplicationComponentStatus record the health status of App component",
                    "type": "object",
                    "required": [
                      "healthy",
                      "name"
                    ],
                    "properties": {
                      "cluster": {
                        "type": "string"
                      },
                      "details": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "string"
                      },
                      "healthy": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      },
                      "scopes": {
                        "type": "array",
                        "items": {
                          "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                          "type": "object",
                          "properties": {
                            "apiVersion": {
                              "description": "API version of the referent.",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                              "type": "string"
                            },
                            "resourceVersion": {
                              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                              "type": "string"
                            },
                            "uid": {
                              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "traits": {
                        "type": "array",
                        "items": {
                          "description": "ApplicationTraitStatus records the trait health status",
                          "type": "object",
                          "required": [
                            "healthy",
                            "type"
                          ],
                          "properties": {
                            "details": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "healthy": {
                              "type": "boolean"
                            },
                            "message": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workloadDefinition": {
                        "description": "WorkloadDefinition is the definition of a WorkloadDefinition, such as deployments/apps.v1",
                        "type": "object",
                        "required": [
                          "apiVersion",
                          "kind"
                        ],
                        "properties": {
                          "apiVersion": {
                            "type": "string"
                          },
                          "kind": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "status": {
                  "description": "ApplicationPhase is a label for the condition of an application at the current time",
                  "type": "string"
                },
                "workflow": {
                  "description": "Workflow record the status of workflow",
                  "type": "object",
                  "required": [
                    "finished",
                    "mode",
                    "suspend",
                    "terminated"
                  ],
                  "properties": {
                    "appRevision": {
                      "type": "string"
                    },
                    "contextBackend": {
                      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
                      "type": "object",
                      "properties": {
                        "apiVersion": {
                          "description": "API version of the referent.",
                          "type": "string"
                        },
                        "fieldPath": {
                          "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                          "type": "string"
                        },
                        "resourceVersion": {
                          "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                          "type": "string"
                        },
                        "uid": {
                          "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "endTime": {
                      "type": "string",
                      "format": "date-time",
                      "nullable": true
                    },
                    "finished": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "mode": {
                      "type": "string"
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "description": "WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time",
                      "type": "string"
                    },
                    "steps": {
                      "type": "array",
                      "items": {
                        "description": "WorkflowStepStatus record the status of a workflow step, include step status and subStep status",
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "firstExecuteTime": {
                            "description": "FirstExecuteTime is the first time this step execution.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string"
                          },
                          "lastExecuteTime": {
                            "description": "LastExecuteTime is the last time this step execution.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "message": {
                            "description": "A human readable message indicating details about why the workflowStep is in this state.",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "phase": {
                            "description": "WorkflowStepPhase describes the phase of a workflow step.",
                            "type": "string"
                          },
                          "reason": {
                            "description": "A brief CamelCase message indicating details about why the workflowStep is in this state.",
                            "type": "string"
                          },
                          "subSteps": {
                            "type": "array",
                            "items": {
                              "description": "StepStatus record the base status of workflow step, which could be workflow step or subStep",
                              "type": "object",
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "firstExecuteTime": {
                                  "description": "FirstExecuteTime is the first time this step execution.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "lastExecuteTime": {
                                  "description": "LastExecuteTime is the last time this step execution.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "message": {
                                  "description": "A human readable message indicating details about why the workflowStep is in this state.",
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "phase": {
                                  "description": "WorkflowStepPhase describes the phase of a workflow step.",
                                  "type": "string"
                                },
                                "reason": {
                                  "description": "A brief CamelCase message indicating details about why the workflowStep is in this state.",
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "suspend": {
                      "type": "boolean"
                    },
                    "suspendState": {
                      "type": "string"
                    },
                    "terminated": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "componentDefinitions": {
          "description": "ComponentDefinitions records the snapshot of the componentDefinitions related with the created/modified Application",
          "type": "object",
          "additionalProperties": {
            "description": "ComponentDefinition is the Schema for the componentdefinitions API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "finalizers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                }
              },
              "spec": {
                "description": "ComponentDefinitionSpec defines the desired state of ComponentDefinition",
                "type": "object",
                "required": [
                  "workload"
                ],
                "properties": {
                  "childResourceKinds": {
                    "description": "ChildResourceKinds are the list of GVK of the child resources this workload generates",
                    "type": "array",
                    "items": {
                      "description": "A ChildResourceKind defines a child Kubernetes resource kind with a selector",
                      "type": "object",
                      "required": [
                        "apiVersion",
                        "kind"
                      ],
                      "properties": {
                        "apiVersion": {
                          "description": "APIVersion of the child resource",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind of the child resource",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Selector to select the child resources that the workload wants to expose to traits",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "extension": {
                    "description": "Extension is used for extension needs by OAM platform builders",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "podSpecPath": {
                    "description": "PodSpecPath indicates where/if this workload has K8s podSpec field\nif one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.",
                    "type": "string"
                  },
                  "revisionLabel": {
                    "description": "RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload\ncan be used by trait to create resource selectors(e.g. label selector for pods).",
                    "type": "string"
                  },
                  "schematic": {
                    "description": "Schematic defines the data format and template of the encapsulation of the workload",
                    "type": "object",
                    "properties": {
                      "cue": {
                        "description": "CUE defines the encapsulation in CUE format",
                        "type": "object",
                        "required": [
                          "template"
                        ],
                        "properties": {
                          "template": {
                            "description": "Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field.\nTemplate is a required field if CUE is defined in Capability Definition.",
                            "type": "string"
                          }
                        }
                      },
                      "terraform": {
                        "description": "Terraform is the struct to describe cloud resources managed by Hashicorp Terraform",
                        "type": "object",
                        "required": [
                          "configuration"
                        ],
                        "properties": {
                          "configuration": {
                            "description": "Configuration is Terraform Configuration",
                            "type": "string"
                          },
                          "customRegion": {
                            "description": "Region is cloud provider's region. It will override the region in the region field of ProviderReference",
                            "type": "string"
                          },
                          "deleteResource": {
                            "description": "DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted",
                            "type": "boolean",
                            "default": true
                          },
                          "gitCredentialsSecretReference": {
                            "description": "GitCredentialsSecretReference specifies the reference to the secret containing the git credentials",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "name is unique within a namespace to reference a secret resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "namespace defines the space within which the secret name must be unique.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "path": {
                            "description": "Path is the sub-directory of remote git repository. It's valid when remote is set",
                            "type": "string"
                          },
                          "providerRef": {
                            "description": "ProviderReference specifies the reference to Provider",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the referenced object.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.",
                                "type": "string",
                                "default": "default"
                              }
                            }
                          },
                          "type": {
                            "description": "Type specifies which Terraform configuration it is, HCL or JSON syntax",
                            "type": "string",
                            "default": "hcl",
                            "enum": [
                              "hcl",
                              "json",
                              "remote"
                            ]
                          },
                          "writeConnectionSecretToRef": {
                            "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the secret.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "status": {
                    "description": "Status defines the custom health policy and status message for workload",
                    "type": "object",
                    "properties": {
                      "customStatus": {
                        "description": "CustomStatus defines the custom status message that could display to user",
                        "type": "string"
                      },
                      "details": {
                        "description": "Details stores a string representation of a CUE status map to be evaluated at runtime for display",
                        "type": "string"
                      },
                      "healthPolicy": {
                        "description": "HealthPolicy defines the health check policy for the abstraction",
                        "type": "string"
                      }
                    }
                  },
                  "version": {
                    "type": "string"
                  },
                  "workload": {
                    "description": "Workload is a workload type descriptor",
                    "type": "object",
                    "properties": {
                      "definition": {
                        "description": "Definition mutually exclusive to workload.type, a embedded WorkloadDefinition",
                        "type": "object",
                        "required": [
                          "apiVersion",
                          "kind"
                        ],
                        "properties": {
                          "apiVersion": {
                            "type": "string"
                          },
                          "kind": {
                            "type": "string"
                          }
                        }
                      },
                      "type": {
                        "description": "Type ref to a WorkloadDefinition via name",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "ComponentDefinitionStatus is the status of ComponentDefinition",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "configMapRef": {
                    "description": "ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.",
                    "type": "string"
                  },
                  "latestRevision": {
                    "description": "LatestRevision of the component definition",
                    "type": "object",
                    "required": [
                      "name",
                      "revision"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "revision": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "revisionHash": {
                        "description": "RevisionHash record the hash value of the spec of ApplicationRevision object.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "compression": {
          "description": "Compression represents the compressed components in apprev in base64 (if compression is enabled).",
          "type": "object",
          "properties": {
            "data": {
              "type": "string"
            },
            "type": {
              "description": "Type the compression type",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "policies": {
          "description": "Policies records the external policies",
          "type": "object",
          "additionalProperties": {
            "description": "Policy is the Schema for the policy API",
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "finalizers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                }
              },
              "properties": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "type": {
                "type": "string"
              }
            }
          }
        },
        "policyDefinitions": {
          "description": "PolicyDefinitions records the snapshot of the PolicyDefinitions related with the created/modified Application",
          "type": "object",
          "additionalProperties": {
            "description": "PolicyDefinition is the Schema for the policydefinitions API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "finalizers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                }
              },
              "spec": {
                "description": "PolicyDefinitionSpec defines the desired state of PolicyDefinition",
                "type": "object",
                "properties": {
                  "definitionRef": {
                    "description": "Reference to the CustomResourceDefinition that defines this trait kind.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced CustomResourceDefinition.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version indicate which version should be used if CRD has multiple versions\nby default it will use the first one if not specified",
                        "type": "string"
                      }
                    }
                  },
                  "manageHealthCheck": {
                    "description": "ManageHealthCheck means the policy will handle health checking and skip application controller\nbuilt-in health checking.",
                    "type": "boolean"
                  },
                  "schematic": {
                    "description": "Schematic defines the data format and template of the encapsulation of the policy definition.\nOnly CUE schematic is supported for now.",
                    "type": "object",
                    "properties": {
                      "cue": {
                        "description": "CUE defines the encapsulation in CUE format",
                        "type": "object",
                        "required": [
                          "template"
                        ],
                        "properties": {
                          "template": {
                            "description": "Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field.\nTemplate is a required field if CUE is defined in Capability Definition.",
                            "type": "string"
                          }
                        }
                      },
                      "terraform": {
                        "description": "Terraform is the struct to describe cloud resources managed by Hashicorp Terraform",
                        "type": "object",
                        "required": [
                          "configuration"
                        ],
                        "properties": {
                          "configuration": {
                            "description": "Configuration is Terraform Configuration",
                            "type": "string"
                          },
                          "customRegion": {
                            "description": "Region is cloud provider's region. It will override the region in the region field of ProviderReference",
                            "type": "string"
                          },
                          "deleteResource": {
                            "description": "DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted",
                            "type": "boolean",
                            "default": true
                          },
                          "gitCredentialsSecretReference": {
                            "description": "GitCredentialsSecretReference specifies the reference to the secret containing the git credentials",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "name is unique within a namespace to reference a secret resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "namespace defines the space within which the secret name must be unique.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "path": {
                            "description": "Path is the sub-directory of remote git repository. It's valid when remote is set",
                            "type": "string"
                          },
                          "providerRef": {
                            "description": "ProviderReference specifies the reference to Provider",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the referenced object.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.",
                                "type": "string",
                                "default": "default"
                              }
                            }
                          },
                          "type": {
                            "description": "Type specifies which Terraform configuration it is, HCL or JSON syntax",
                            "type": "string",
                            "default": "hcl",
                            "enum": [
                              "hcl",
                              "json",
                              "remote"
                            ]
                          },
                          "writeConnectionSecretToRef": {
                            "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the secret.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "status": {
                "description": "PolicyDefinitionStatus is the status of PolicyDefinition",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "configMapRef": {
                    "description": "ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.",
                    "type": "string"
                  },
                  "latestRevision": {
                    "description": "LatestRevision of the component definition",
                    "type": "object",
                    "required": [
                      "name",
                      "revision"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "revision": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "revisionHash": {
                        "description": "RevisionHash record the hash value of the spec of ApplicationRevision object.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "referredObjects": {
          "description": "ReferredObjects records the referred objects used in the ref-object typed components",
          "type": "array",
          "items": {
            "description": "ReferredObject the referred Kubernetes object",
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true,
            "x-kubernetes-embedded-resource": true
          },
          "x-kubernetes-preserve-unknown-fields": true
        },
        "traitDefinitions": {
          "description": "TraitDefinitions records the snapshot of the traitDefinitions related with the created/modified Application",
          "type": "object",
          "additionalProperties": {
            "description": "A TraitDefinition registers a kind of Kubernetes custom resource as a valid\nOAM trait kind by referencing its CustomResourceDefinition. The CRD is used\nto validate the schema of the trait when it is embedded in an OAM\nApplicationConfiguration.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "finalizers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                }
              },
              "spec": {
                "description": "A TraitDefinitionSpec defines the desired state of a TraitDefinition.",
                "type": "object",
                "properties": {
                  "appliesToWorkloads": {
                    "description": "AppliesToWorkloads specifies the list of workload kinds this trait\napplies to. Workload kinds are specified in resource.group/version format,\ne.g. server.core.oam.dev/v1alpha2. Traits that omit this field apply to\nall workload kinds.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "conflictsWith": {
                    "description": "ConflictsWith specifies the list of traits(CRD name, Definition name, CRD group)\nwhich could not apply to the same workloads with this trait.\nTraits that omit this field can work with any other traits.\nExample rules:\n\"service\" # Trait definition name\n\"services.k8s.io\" # API resource/crd name\n\"*.networking.k8s.io\" # API group\n\"labelSelector:foo=bar\" # label selector\nlabelSelector format: https://pkg.go.dev/k8s.io/apimachinery/pkg/labels#Parse",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "controlPlaneOnly": {
                    "description": "ControlPlaneOnly defines which cluster is dispatched to",
                    "type": "boolean"
                  },
                  "definitionRef": {
                    "description": "Reference to the CustomResourceDefinition that defines this trait kind.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced CustomResourceDefinition.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version indicate which version should be used if CRD has multiple versions\nby default it will use the first one if not specified",
                        "type": "string"
                      }
                    }
                  },
                  "extension": {
                    "description": "Extension is used for extension needs by OAM platform builders",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "manageWorkload": {
                    "description": "ManageWorkload defines the trait would be responsible for creating the workload",
                    "type": "boolean"
                  },
                  "podDisruptive": {
                    "description": "PodDisruptive specifies whether using the trait will cause the pod to restart or not.",
                    "type": "boolean"
                  },
                  "revisionEnabled": {
                    "description": "Revision indicates whether a trait is aware of component revision",
                    "type": "boolean"
                  },
                  "schematic": {
                    "description": "Schematic defines the data format and template of the encapsulation of the trait.\nOnly CUE and Kube schematic are supported for now.",
                    "type": "object",
                    "properties": {
                      "cue": {
                        "description": "CUE defines the encapsulation in CUE format",
                        "type": "object",
                        "required": [
                          "template"
                        ],
                        "properties": {
                          "template": {
                            "description": "Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field.\nTemplate is a required field if CUE is defined in Capability Definition.",
                            "type": "string"
                          }
                        }
                      },
                      "terraform": {
                        "description": "Terraform is the struct to describe cloud resources managed by Hashicorp Terraform",
                        "type": "object",
                        "required": [
                          "configuration"
                        ],
                        "properties": {
                          "configuration": {
                            "description": "Configuration is Terraform Configuration",
                            "type": "string"
                          },
                          "customRegion": {
                            "description": "Region is cloud provider's region. It will override the region in the region field of ProviderReference",
                            "type": "string"
                          },
                          "deleteResource": {
                            "description": "DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted",
                            "type": "boolean",
                            "default": true
                          },
                          "gitCredentialsSecretReference": {
                            "description": "GitCredentialsSecretReference specifies the reference to the secret containing the git credentials",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "name is unique within a namespace to reference a secret resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "namespace defines the space within which the secret name must be unique.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "path": {
                            "description": "Path is the sub-directory of remote git repository. It's valid when remote is set",
                            "type": "string"
                          },
                          "providerRef": {
                            "description": "ProviderReference specifies the reference to Provider",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the referenced object.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.",
                                "type": "string",
                                "default": "default"
                              }
                            }
                          },
                          "type": {
                            "description": "Type specifies which Terraform configuration it is, HCL or JSON syntax",
                            "type": "string",
                            "default": "hcl",
                            "enum": [
                              "hcl",
                              "json",
                              "remote"
                            ]
                          },
                          "writeConnectionSecretToRef": {
                            "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the secret.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "stage": {
                    "description": "Stage defines the stage information to which this trait resource processing belongs.\nCurrently, PreDispatch and PostDispatch are provided, which are used to control resource\npre-process and post-process respectively.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status defines the custom health policy and status message for trait",
                    "type": "object",
                    "properties": {
                      "customStatus": {
                        "description": "CustomStatus defines the custom status message that could display to user",
                        "type": "string"
                      },
                      "details": {
                        "description": "Details stores a string representation of a CUE status map to be evaluated at runtime for display",
                        "type": "string"
                      },
                      "healthPolicy": {
                        "description": "HealthPolicy defines the health check policy for the abstraction",
                        "type": "string"
                      }
                    }
                  },
                  "version": {
                    "type": "string"
                  },
                  "workloadRefPath": {
                    "description": "WorkloadRefPath indicates where/if a trait accepts a workloadRef object",
                    "type": "string"
                  }
                }
              },
              "status": {
                "description": "TraitDefinitionStatus is the status of TraitDefinition",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "configMapRef": {
                    "description": "ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.",
                    "type": "string"
                  },
                  "latestRevision": {
                    "description": "LatestRevision of the component definition",
                    "type": "object",
                    "required": [
                      "name",
                      "revision"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "revision": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "revisionHash": {
                        "description": "RevisionHash record the hash value of the spec of ApplicationRevision object.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "workflow": {
          "description": "Workflow records the external workflow",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
              "type": "string"
            },
            "kind": {
              "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "metadata": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "finalizers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "description": "WorkflowExecuteMode defines the mode of workflow execution",
              "type": "object",
              "properties": {
                "steps": {
                  "description": "Steps is the mode of workflow steps execution",
                  "type": "string"
                },
                "subSteps": {
                  "description": "SubSteps is the mode of workflow sub steps execution",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "steps": {
              "type": "array",
              "items": {
                "description": "WorkflowStep defines how to execute a workflow step.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "dependsOn": {
                    "description": "DependsOn is the dependency of the step",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "if": {
                    "description": "If is the if condition of the step",
                    "type": "string"
                  },
                  "inputs": {
                    "description": "Inputs is the inputs of the step",
                    "type": "array",
                    "items": {
                      "description": "InputItem defines an input variable of WorkflowStep",
                      "type": "object",
                      "required": [
                        "from"
                      ],
                      "properties": {
                        "from": {
                          "type": "string"
                        },
                        "parameterKey": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "meta": {
                    "description": "Meta is the meta data of the workflow step.",
                    "type": "object",
                    "properties": {
                      "alias": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "mode": {
                    "description": "Mode is only valid for sub steps, it defines the mode of the sub steps",
                    "type": "string",
                    "nullable": true
                  },
                  "name": {
                    "description": "Name is the unique name of the workflow step.",
                    "type": "string"
                  },
                  "outputs": {
                    "description": "Outputs is the outputs of the step",
                    "type": "array",
                    "items": {
                      "description": "OutputItem defines an output variable of WorkflowStep",
                      "type": "object",
                      "required": [
                        "name",
                        "valueFrom"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "valueFrom": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "properties": {
                    "description": "Properties is the properties of the step",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "subSteps": {
                    "type": "array",
                    "items": {
                      "description": "WorkflowStepBase defines the workflow step base",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "dependsOn": {
                          "description": "DependsOn is the dependency of the step",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "if": {
                          "description": "If is the if condition of the step",
                          "type": "string"
                        },
                        "inputs": {
                          "description": "Inputs is the inputs of the step",
                          "type": "array",
                          "items": {
                            "description": "InputItem defines an input variable of WorkflowStep",
                            "type": "object",
                            "required": [
                              "from"
                            ],
                            "properties": {
                              "from": {
                                "type": "string"
                              },
                              "parameterKey": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "meta": {
                          "description": "Meta is the meta data of the workflow step.",
                          "type": "object",
                          "properties": {
                            "alias": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "name": {
                          "description": "Name is the unique name of the workflow step.",
                          "type": "string"
                        },
                        "outputs": {
                          "description": "Outputs is the outputs of the step",
                          "type": "array",
                          "items": {
                            "description": "OutputItem defines an output variable of WorkflowStep",
                            "type": "object",
                            "required": [
                              "name",
                              "valueFrom"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "valueFrom": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "properties": {
                          "description": "Properties is the properties of the step",
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "timeout": {
                          "description": "Timeout is the timeout of the step",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is the type of the workflow step.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "timeout": {
                    "description": "Timeout is the timeout of the step",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the workflow step.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "workflowStepDefinitions": {
          "description": "WorkflowStepDefinitions records the snapshot of the WorkflowStepDefinitions related with the created/modified Application",
          "type": "object",
          "additionalProperties": {
            "description": "WorkflowStepDefinition is the Schema for the workflowstepdefinitions API",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "finalizers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                }
              },
              "spec": {
                "description": "WorkflowStepDefinitionSpec defines the desired state of WorkflowStepDefinition",
                "type": "object",
                "properties": {
                  "definitionRef": {
                    "description": "Reference to the CustomResourceDefinition that defines this trait kind.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced CustomResourceDefinition.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version indicate which version should be used if CRD has multiple versions\nby default it will use the first one if not specified",
                        "type": "string"
                      }
                    }
                  },
                  "schematic": {
                    "description": "Schematic defines the data format and template of the encapsulation of the workflow step definition.\nOnly CUE schematic is supported for now.",
                    "type": "object",
                    "properties": {
                      "cue": {
                        "description": "CUE defines the encapsulation in CUE format",
                        "type": "object",
                        "required": [
                          "template"
                        ],
                        "properties": {
                          "template": {
                            "description": "Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field.\nTemplate is a required field if CUE is defined in Capability Definition.",
                            "type": "string"
                          }
                        }
                      },
                      "terraform": {
                        "description": "Terraform is the struct to describe cloud resources managed by Hashicorp Terraform",
                        "type": "object",
                        "required": [
                          "configuration"
                        ],
                        "properties": {
                          "configuration": {
                            "description": "Configuration is Terraform Configuration",
                            "type": "string"
                          },
                          "customRegion": {
                            "description": "Region is cloud provider's region. It will override the region in the region field of ProviderReference",
                            "type": "string"
                          },
                          "deleteResource": {
                            "description": "DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted",
                            "type": "boolean",
                            "default": true
                          },
                          "gitCredentialsSecretReference": {
                            "description": "GitCredentialsSecretReference specifies the reference to the secret containing the git credentials",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "name is unique within a namespace to reference a secret resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "namespace defines the space within which the secret name must be unique.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "path": {
                            "description": "Path is the sub-directory of remote git repository. It's valid when remote is set",
                            "type": "string"
                          },
                          "providerRef": {
                            "description": "ProviderReference specifies the reference to Provider",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the referenced object.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.",
                                "type": "string",
                                "default": "default"
                              }
                            }
                          },
                          "type": {
                            "description": "Type specifies which Terraform configuration it is, HCL or JSON syntax",
                            "type": "string",
                            "default": "hcl",
                            "enum": [
                              "hcl",
                              "json",
                              "remote"
                            ]
                          },
                          "writeConnectionSecretToRef": {
                            "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the secret.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "status": {
                "description": "WorkflowStepDefinitionStatus is the status of WorkflowStepDefinition",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "configMapRef": {
                    "description": "ConfigMapRef refer to a ConfigMap which contains OpenAPI V3 JSON schema of Component parameters.",
                    "type": "string"
                  },
                  "latestRevision": {
                    "description": "LatestRevision of the component definition",
                    "type": "object",
                    "required": [
                      "name",
                      "revision"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "revision": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "revisionHash": {
                        "description": "RevisionHash record the hash value of the spec of ApplicationRevision object.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "workloadDefinitions": {
          "description": "WorkloadDefinitions records the snapshot of the workloadDefinitions related with the created/modified Application",
          "type": "object",
          "additionalProperties": {
            "description": "A WorkloadDefinition registers a kind of Kubernetes custom resource as a\nvalid OAM workload kind by referencing its CustomResourceDefinition. The CRD\nis used to validate the schema of the workload when it is embedded in an OAM\nComponent.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
                "type": "string"
              },
              "kind": {
                "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "metadata": {
                "type": "object",
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "finalizers": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                }
              },
              "spec": {
                "description": "A WorkloadDefinitionSpec defines the desired state of a WorkloadDefinition.",
                "type": "object",
                "required": [
                  "definitionRef"
                ],
                "properties": {
                  "childResourceKinds": {
                    "description": "ChildResourceKinds are the list of GVK of the child resources this workload generates",
                    "type": "array",
                    "items": {
                      "description": "A ChildResourceKind defines a child Kubernetes resource kind with a selector",
                      "type": "object",
                      "required": [
                        "apiVersion",
                        "kind"
                      ],
                      "properties": {
                        "apiVersion": {
                          "description": "APIVersion of the child resource",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind of the child resource",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Selector to select the child resources that the workload wants to expose to traits",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "definitionRef": {
                    "description": "Reference to the CustomResourceDefinition that defines this workload kind.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced CustomResourceDefinition.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version indicate which version should be used if CRD has multiple versions\nby default it will use the first one if not specified",
                        "type": "string"
                      }
                    }
                  },
                  "extension": {
                    "description": "Extension is used for extension needs by OAM platform builders",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "podSpecPath": {
                    "description": "PodSpecPath indicates where/if this workload has K8s podSpec field\nif one workload has podSpec, trait can do lot's of assumption such as port, env, volume fields.",
                    "type": "string"
                  },
                  "revisionLabel": {
                    "description": "RevisionLabel indicates which label for underlying resources(e.g. pods) of this workload\ncan be used by trait to create resource selectors(e.g. label selector for pods).",
                    "type": "string"
                  },
                  "schematic": {
                    "description": "Schematic defines the data format and template of the encapsulation of the workload",
                    "type": "object",
                    "properties": {
                      "cue": {
                        "description": "CUE defines the encapsulation in CUE format",
                        "type": "object",
                        "required": [
                          "template"
                        ],
                        "properties": {
                          "template": {
                            "description": "Template defines the abstraction template data of the capability, it will replace the old CUE template in extension field.\nTemplate is a required field if CUE is defined in Capability Definition.",
                            "type": "string"
                          }
                        }
                      },
                      "terraform": {
                        "description": "Terraform is the struct to describe cloud resources managed by Hashicorp Terraform",
                        "type": "object",
                        "required": [
                          "configuration"
                        ],
                        "properties": {
                          "configuration": {
                            "description": "Configuration is Terraform Configuration",
                            "type": "string"
                          },
                          "customRegion": {
                            "description": "Region is cloud provider's region. It will override the region in the region field of ProviderReference",
                            "type": "string"
                          },
                          "deleteResource": {
                            "description": "DeleteResource will determine whether provisioned cloud resources will be deleted when CR is deleted",
                            "type": "boolean",
                            "default": true
                          },
                          "gitCredentialsSecretReference": {
                            "description": "GitCredentialsSecretReference specifies the reference to the secret containing the git credentials",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "name is unique within a namespace to reference a secret resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "namespace defines the space within which the secret name must be unique.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "path": {
                            "description": "Path is the sub-directory of remote git repository. It's valid when remote is set",
                            "type": "string"
                          },
                          "providerRef": {
                            "description": "ProviderReference specifies the reference to Provider",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the referenced object.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the referenced object.",
                                "type": "string",
                                "default": "default"
                              }
                            }
                          },
                          "type": {
                            "description": "Type specifies which Terraform configuration it is, HCL or JSON syntax",
                            "type": "string",
                            "default": "hcl",
                            "enum": [
                              "hcl",
                              "json",
                              "remote"
                            ]
                          },
                          "writeConnectionSecretToRef": {
                            "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace of the secret.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "status": {
                    "description": "Status defines the custom health policy and status message for workload",
                    "type": "object",
                    "properties": {
                      "customStatus": {
                        "description": "CustomStatus defines the custom status message that could display to user",
                        "type": "string"
                      },
                      "details": {
                        "description": "Details stores a string representation of a CUE status map to be evaluated at runtime for display",
                        "type": "string"
                      },
                      "healthPolicy": {
                        "description": "HealthPolicy defines the health check policy for the abstraction",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "status": {
                "description": "WorkloadDefinitionStatus is the status of WorkloadDefinition",
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "Conditions of the resource.",
                    "type": "array",
                    "items": {
                      "description": "A Condition that may apply to a resource.",
                      "type": "object",
                      "required": [
                        "lastTransitionTime",
                        "reason",
                        "status",
                        "type"
                      ],
                      "properties": {
                        "lastTransitionTime": {
                          "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A Reason for this condition's last transition from one status to another.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of this condition; is it currently True, False, or Unknown?",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ApplicationRevisionStatus is the status of ApplicationRevision",
      "type": "object",
      "required": [
        "succeeded"
      ],
      "properties": {
        "succeeded": {
          "description": "Succeeded records if the workflow finished running with success",
          "type": "boolean"
        },
        "workflow": {
          "description": "Workflow the running status of the workflow",
          "type": "object",
          "required": [
            "finished",
            "mode",
            "suspend",
            "terminated"
          ],
          "properties": {
            "appRevision": {
              "type": "string"
            },
            "contextBackend": {
              "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
              "type": "object",
              "properties": {
                "apiVersion": {
                  "description": "API version of the referent.",
                  "type": "string"
                },
                "fieldPath": {
                  "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                  "type": "string"
                },
                "uid": {
                  "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            },
            "finished": {
              "type": "boolean"
            },
            "message": {
              "type": "string"
            },
            "mode": {
              "type": "string"
            },
            "startTime": {
              "type": "string",
              "format": "date-time"
            },
            "status": {
              "description": "WorkflowRunPhase is a label for the condition of a WorkflowRun at the current time",
              "type": "string"
            },
            "steps": {
              "type": "array",
              "items": {
                "description": "WorkflowStepStatus record the status of a workflow step, include step status and subStep status",
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "firstExecuteTime": {
                    "description": "FirstExecuteTime is the first time this step execution.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "id": {
                    "type": "string"
                  },
                  "lastExecuteTime": {
                    "description": "LastExecuteTime is the last time this step execution.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "description": "A human readable message indicating details about why the workflowStep is in this state.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "phase": {
                    "description": "WorkflowStepPhase describes the phase of a workflow step.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "A brief CamelCase message indicating details about why the workflowStep is in this state.",
                    "type": "string"
                  },
                  "subSteps": {
                    "type": "array",
                    "items": {
                      "description": "StepStatus record the base status of workflow step, which could be workflow step or subStep",
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "firstExecuteTime": {
                          "description": "FirstExecuteTime is the first time this step execution.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "id": {
                          "type": "string"
                        },
                        "lastExecuteTime": {
                          "description": "LastExecuteTime is the last time this step execution.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "message": {
                          "description": "A human readable message indicating details about why the workflowStep is in this state.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phase": {
                          "description": "WorkflowStepPhase describes the phase of a workflow step.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "A brief CamelCase message indicating details about why the workflowStep is in this state.",
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "suspend": {
              "type": "boolean"
            },
            "suspendState": {
              "type": "string"
            },
            "terminated": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "workflowContext": {
          "description": "Record the context values to the revision.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  }
}
