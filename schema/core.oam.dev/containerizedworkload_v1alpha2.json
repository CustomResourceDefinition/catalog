{
  "description": "A ContainerizedWorkload is a workload that runs OCI containers.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "A ContainerizedWorkloadSpec defines the desired state of a ContainerizedWorkload.",
      "type": "object",
      "required": [
        "containers"
      ],
      "properties": {
        "arch": {
          "description": "CPUArchitecture required by this workload.",
          "type": "string",
          "enum": [
            "i386",
            "amd64",
            "arm",
            "arm64"
          ]
        },
        "containers": {
          "description": "Containers of which this workload consists.",
          "type": "array",
          "items": {
            "description": "A Container represents an Open Containers Initiative (OCI) container.",
            "type": "object",
            "required": [
              "image",
              "name"
            ],
            "properties": {
              "args": {
                "description": "Arguments to be passed to the command run by this container.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "command": {
                "description": "Command to be run by this container.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "config": {
                "description": "ConfigFiles that should be written within this container.",
                "type": "array",
                "items": {
                  "description": "A ContainerConfigFile specifies a configuration file that should be written within a container.",
                  "type": "object",
                  "required": [
                    "path"
                  ],
                  "properties": {
                    "fromSecret": {
                      "description": "FromSecret is a secret key reference which can be used to assign a value to be written to the configuration file at the given path in the container.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "Path within the container at which the configuration file should be written.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value that should be written to the configuration file.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "env": {
                "description": "Environment variables that should be set within this container.",
                "type": "array",
                "items": {
                  "description": "A ContainerEnvVar specifies an environment variable that should be set within a container.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "fromSecret": {
                      "description": "FromSecret is a secret key reference which can be used to assign a value to the environment variable.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "Name of the environment variable. Must be composed of valid Unicode letter and number characters, as well as _ and -.",
                      "type": "string",
                      "pattern": "^[-_a-zA-Z0-9]+$"
                    },
                    "value": {
                      "description": "Value of the environment variable.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "image": {
                "description": "Image this container should run. Must be a path-like or URI-like representation of an OCI image. May be prefixed with a registry address and should be suffixed with a tag.",
                "type": "string"
              },
              "imagePullSecret": {
                "description": "ImagePullSecret specifies the name of a Secret from which the credentials required to pull this container's image can be loaded.",
                "type": "string"
              },
              "livenessProbe": {
                "description": "A LivenessProbe assesses whether this container is alive. Containers that fail liveness probes will be restarted.",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec probes a container's health by executing a command.",
                    "type": "object",
                    "required": [
                      "command"
                    ],
                    "properties": {
                      "command": {
                        "description": "Command to be run by this probe.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "httpGet": {
                    "description": "HTTPGet probes a container's health by sending an HTTP GET request.",
                    "type": "object",
                    "required": [
                      "path",
                      "port"
                    ],
                    "properties": {
                      "httpHeaders": {
                        "description": "HTTPHeaders to send with the GET request.",
                        "type": "array",
                        "items": {
                          "description": "A HTTPHeader to be passed when probing a container.",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of this HTTP header. Must be unique per probe.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of this HTTP header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "path": {
                        "description": "Path to probe, e.g. '/healthz'.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Port to probe.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "InitialDelaySeconds after a container starts before the first probe.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "PeriodSeconds between probes.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocketProbe probes a container's health by connecting to a TCP socket.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port this probe should connect to.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "timeoutSeconds": {
                    "description": "TimeoutSeconds after which the probe times out.",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Name of this container. Must be unique within its workload.",
                "type": "string"
              },
              "ports": {
                "description": "Ports exposed by this container.",
                "type": "array",
                "items": {
                  "description": "A ContainerPort specifies a port that is exposed by a container.",
                  "type": "object",
                  "required": [
                    "containerPort",
                    "name"
                  ],
                  "properties": {
                    "containerPort": {
                      "description": "Port number. Must be unique within its container.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "name": {
                      "description": "Name of this port. Must be unique within its container. Must be lowercase alphabetical characters.",
                      "type": "string",
                      "pattern": "^[a-z]+$"
                    },
                    "protocol": {
                      "description": "Protocol used by the server listening on this port.",
                      "type": "string",
                      "enum": [
                        "TCP",
                        "UDP"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "readinessProbe": {
                "description": "A ReadinessProbe assesses whether this container is ready to serve requests. Containers that fail readiness probes will be withdrawn from service.",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec probes a container's health by executing a command.",
                    "type": "object",
                    "required": [
                      "command"
                    ],
                    "properties": {
                      "command": {
                        "description": "Command to be run by this probe.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "failureThreshold": {
                    "description": "FailureThreshold specifies how many consecutive probes must fail in order for the container to be considered healthy.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "httpGet": {
                    "description": "HTTPGet probes a container's health by sending an HTTP GET request.",
                    "type": "object",
                    "required": [
                      "path",
                      "port"
                    ],
                    "properties": {
                      "httpHeaders": {
                        "description": "HTTPHeaders to send with the GET request.",
                        "type": "array",
                        "items": {
                          "description": "A HTTPHeader to be passed when probing a container.",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of this HTTP header. Must be unique per probe.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of this HTTP header.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "path": {
                        "description": "Path to probe, e.g. '/healthz'.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Port to probe.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "initialDelaySeconds": {
                    "description": "InitialDelaySeconds after a container starts before the first probe.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "PeriodSeconds between probes.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "SuccessThreshold specifies how many consecutive probes must success in order for the container to be considered healthy.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocketProbe probes a container's health by connecting to a TCP socket.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port this probe should connect to.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "timeoutSeconds": {
                    "description": "TimeoutSeconds after which the probe times out.",
                    "type": "integer",
                    "format": "int32"
                  }
                },
                "additionalProperties": false
              },
              "resources": {
                "description": "Resources required by this container",
                "type": "object",
                "required": [
                  "cpu",
                  "memory"
                ],
                "properties": {
                  "cpu": {
                    "description": "CPU required by this container.",
                    "type": "object",
                    "required": [
                      "required"
                    ],
                    "properties": {
                      "required": {
                        "description": "Required CPU count. 1.0 represents one CPU core.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "extended": {
                    "description": "Extended resources required by this container.",
                    "type": "array",
                    "items": {
                      "description": "ExtendedResource required by a container.",
                      "type": "object",
                      "required": [
                        "name",
                        "required"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the external resource. Resource names are specified in kind.group/version format, e.g. motionsensor.ext.example.com/v1.",
                          "type": "string"
                        },
                        "required": {
                          "description": "Required extended resource(s), e.g. 8 or \"very-cool-widget\"",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "gpu": {
                    "description": "GPU required by this container.",
                    "type": "object",
                    "required": [
                      "required"
                    ],
                    "properties": {
                      "required": {
                        "description": "Required GPU count.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "memory": {
                    "description": "Memory required by this container.",
                    "type": "object",
                    "required": [
                      "required"
                    ],
                    "properties": {
                      "required": {
                        "description": "Required memory.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "volumes": {
                    "description": "Volumes required by this container.",
                    "type": "array",
                    "items": {
                      "description": "VolumeResource required by a container.",
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "accessMode": {
                          "description": "AccessMode of this volume; RO (read only) or RW (read and write).",
                          "type": "string",
                          "enum": [
                            "RO",
                            "RW"
                          ]
                        },
                        "disk": {
                          "description": "Disk requirements of this volume.",
                          "type": "object",
                          "required": [
                            "required"
                          ],
                          "properties": {
                            "ephemeral": {
                              "description": "Ephemeral specifies whether an external disk needs to be mounted.",
                              "type": "boolean"
                            },
                            "required": {
                              "description": "Required disk space.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "mountPath": {
                          "description": "MouthPath at which this volume will be mounted within its container.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of this volume. Must be unique within its container.",
                          "type": "string"
                        },
                        "sharingPolicy": {
                          "description": "SharingPolicy of this volume; Exclusive or Shared.",
                          "type": "string",
                          "enum": [
                            "Exclusive",
                            "Shared"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "osType": {
          "description": "OperatingSystem required by this workload.",
          "type": "string",
          "enum": [
            "linux",
            "windows"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "A ContainerizedWorkloadStatus represents the observed state of a ContainerizedWorkload.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "resources": {
          "description": "Resources managed by this containerised workload.",
          "type": "array",
          "items": {
            "description": "A TypedReference refers to an object by Name, Kind, and APIVersion. It is commonly used to reference cluster-scoped objects or objects where the namespace is already known.",
            "type": "object",
            "required": [
              "apiVersion",
              "kind",
              "name"
            ],
            "properties": {
              "apiVersion": {
                "description": "APIVersion of the referenced object.",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the referenced object.",
                "type": "string"
              },
              "name": {
                "description": "Name of the referenced object.",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referenced object.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
