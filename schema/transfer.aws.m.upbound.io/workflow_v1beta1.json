{
  "description": "Workflow is the Schema for the Workflows API. Provides a AWS Transfer Workflow resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "WorkflowSpec defines the desired state of Workflow",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "description": {
              "description": "A textual description for the workflow.",
              "type": "string"
            },
            "onExceptionSteps": {
              "description": "Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "copyStepDetails": {
                    "description": "Details for a step that performs a file copy. See Copy Step Details below.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "customStepDetails": {
                    "description": "Details for a step that invokes a lambda function.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The ARN for the lambda function that is being called.",
                        "type": "string"
                      },
                      "timeoutSeconds": {
                        "description": "Timeout, in seconds, for the step.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "decryptStepDetails": {
                    "description": "Details for a step that decrypts the file.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "type": {
                        "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "deleteStepDetails": {
                    "description": "Details for a step that deletes the file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tagStepDetails": {
                    "description": "Details for a step that creates one or more tags.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that corresponds to the key.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "steps": {
              "description": "Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "copyStepDetails": {
                    "description": "Details for a step that performs a file copy. See Copy Step Details below.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "customStepDetails": {
                    "description": "Details for a step that invokes a lambda function.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The ARN for the lambda function that is being called.",
                        "type": "string"
                      },
                      "targetRef": {
                        "description": "Reference to a Function in lambda to populate target.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referenced object",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "targetSelector": {
                        "description": "Selector for a Function in lambda to populate target.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespace": {
                            "description": "Namespace for the selector",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "timeoutSeconds": {
                        "description": "Timeout, in seconds, for the step.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "decryptStepDetails": {
                    "description": "Details for a step that decrypts the file.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "type": {
                        "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "deleteStepDetails": {
                    "description": "Details for a step that deletes the file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tagStepDetails": {
                    "description": "Details for a step that creates one or more tags.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that corresponds to the key.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "description": {
              "description": "A textual description for the workflow.",
              "type": "string"
            },
            "onExceptionSteps": {
              "description": "Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "copyStepDetails": {
                    "description": "Details for a step that performs a file copy. See Copy Step Details below.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "customStepDetails": {
                    "description": "Details for a step that invokes a lambda function.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The ARN for the lambda function that is being called.",
                        "type": "string"
                      },
                      "timeoutSeconds": {
                        "description": "Timeout, in seconds, for the step.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "decryptStepDetails": {
                    "description": "Details for a step that decrypts the file.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "type": {
                        "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "deleteStepDetails": {
                    "description": "Details for a step that deletes the file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tagStepDetails": {
                    "description": "Details for a step that creates one or more tags.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that corresponds to the key.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "steps": {
              "description": "Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "copyStepDetails": {
                    "description": "Details for a step that performs a file copy. See Copy Step Details below.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "customStepDetails": {
                    "description": "Details for a step that invokes a lambda function.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The ARN for the lambda function that is being called.",
                        "type": "string"
                      },
                      "targetRef": {
                        "description": "Reference to a Function in lambda to populate target.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the referenced object",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "targetSelector": {
                        "description": "Selector for a Function in lambda to populate target.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespace": {
                            "description": "Namespace for the selector",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "timeoutSeconds": {
                        "description": "Timeout, in seconds, for the step.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "decryptStepDetails": {
                    "description": "Details for a step that decrypts the file.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "type": {
                        "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "deleteStepDetails": {
                    "description": "Details for a step that deletes the file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tagStepDetails": {
                    "description": "Details for a step that creates one or more tags.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that corresponds to the key.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.steps) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.steps))",
          "message": "spec.forProvider.steps is a required parameter"
        }
      ]
    },
    "status": {
      "description": "WorkflowStatus defines the observed state of Workflow.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The Workflow ARN.",
              "type": "string"
            },
            "description": {
              "description": "A textual description for the workflow.",
              "type": "string"
            },
            "id": {
              "description": "The Workflow id.",
              "type": "string"
            },
            "onExceptionSteps": {
              "description": "Specifies the steps (actions) to take if errors are encountered during execution of the workflow. See Workflow Steps below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "copyStepDetails": {
                    "description": "Details for a step that performs a file copy. See Copy Step Details below.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "customStepDetails": {
                    "description": "Details for a step that invokes a lambda function.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The ARN for the lambda function that is being called.",
                        "type": "string"
                      },
                      "timeoutSeconds": {
                        "description": "Timeout, in seconds, for the step.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "decryptStepDetails": {
                    "description": "Details for a step that decrypts the file.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "type": {
                        "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "deleteStepDetails": {
                    "description": "Details for a step that deletes the file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tagStepDetails": {
                    "description": "Details for a step that creates one or more tags.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that corresponds to the key.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "steps": {
              "description": "Specifies the details for the steps that are in the specified workflow. See Workflow Steps below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "copyStepDetails": {
                    "description": "Details for a step that performs a file copy. See Copy Step Details below.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "customStepDetails": {
                    "description": "Details for a step that invokes a lambda function.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The ARN for the lambda function that is being called.",
                        "type": "string"
                      },
                      "timeoutSeconds": {
                        "description": "Timeout, in seconds, for the step.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "decryptStepDetails": {
                    "description": "Details for a step that decrypts the file.",
                    "type": "object",
                    "properties": {
                      "destinationFileLocation": {
                        "description": "Specifies the location for the file being copied. Use ${Transfer:username} in this field to parametrize the destination prefix by username.",
                        "type": "object",
                        "properties": {
                          "efsFileLocation": {
                            "description": "Specifies the details for the EFS file being copied.",
                            "type": "object",
                            "properties": {
                              "fileSystemId": {
                                "description": "The ID of the file system, assigned by Amazon EFS.",
                                "type": "string"
                              },
                              "path": {
                                "description": "The pathname for the folder being used by a workflow.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3FileLocation": {
                            "description": "Specifies the details for the S3 file being copied.",
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "description": "Specifies the S3 bucket for the customer input file.",
                                "type": "string"
                              },
                              "key": {
                                "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "overwriteExisting": {
                        "description": "A flag that indicates whether or not to overwrite an existing file of the same name. The default is FALSE. Valid values are TRUE and FALSE.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "type": {
                        "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "deleteStepDetails": {
                    "description": "Details for a step that deletes the file.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tagStepDetails": {
                    "description": "Details for a step that creates one or more tags.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "The name of the step, used as an identifier.",
                        "type": "string"
                      },
                      "sourceFileLocation": {
                        "description": "Specifies which file to use as input to the workflow step: either the output from the previous step, or the originally uploaded file for the workflow. Enter ${previous.file} to use the previous file as the input. In this case, this workflow step uses the output file from the previous workflow step as input. This is the default value. Enter ${original.file} to use the originally-uploaded file location as input for this step.",
                        "type": "string"
                      },
                      "tags": {
                        "description": "Key-value map of resource tags.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The name assigned to the file when it was created in S3. You use the object key to retrieve the object.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value that corresponds to the key.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "One of the following step types are supported. COPY, CUSTOM, DECRYPT, DELETE, and TAG.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
