{
  "description": "SigningJob is the Schema for the SigningJobs API. Creates a Signer Signing Job.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SigningJobSpec defines the desired state of SigningJob",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "destination": {
              "description": "The S3 bucket in which to save your signed object. See Destination below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "s3": {
                    "description": "A configuration block describing the S3 Source object: See S3 Source below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "description": "Name of the S3 bucket.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "ignoreSigningJobFailure": {
              "description": "Set this argument to true to ignore signing job failures and retrieve failed status and reason. Default false.",
              "type": "boolean"
            },
            "profileName": {
              "description": "The name of the profile to initiate the signing operation.",
              "type": "string"
            },
            "profileNameRef": {
              "description": "Reference to a SigningProfile in signer to populate profileName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "profileNameSelector": {
              "description": "Selector for a SigningProfile in signer to populate profileName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "source": {
              "description": "The S3 bucket that contains the object to sign. See Source below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "s3": {
                    "description": "A configuration block describing the S3 Source object: See S3 Source below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "description": "Name of the S3 bucket.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key name of the object that contains your unsigned code.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of your source image in your version enabled S3 bucket.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "destination": {
              "description": "The S3 bucket in which to save your signed object. See Destination below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "s3": {
                    "description": "A configuration block describing the S3 Source object: See S3 Source below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "description": "Name of the S3 bucket.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "ignoreSigningJobFailure": {
              "description": "Set this argument to true to ignore signing job failures and retrieve failed status and reason. Default false.",
              "type": "boolean"
            },
            "profileName": {
              "description": "The name of the profile to initiate the signing operation.",
              "type": "string"
            },
            "profileNameRef": {
              "description": "Reference to a SigningProfile in signer to populate profileName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "profileNameSelector": {
              "description": "Selector for a SigningProfile in signer to populate profileName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "source": {
              "description": "The S3 bucket that contains the object to sign. See Source below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "s3": {
                    "description": "A configuration block describing the S3 Source object: See S3 Source below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "description": "Name of the S3 bucket.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key name of the object that contains your unsigned code.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of your source image in your version enabled S3 bucket.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destination) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.destination))",
          "message": "spec.forProvider.destination is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.source) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.source))",
          "message": "spec.forProvider.source is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SigningJobStatus defines the observed state of SigningJob.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "completedAt": {
              "description": "Date and time in RFC3339 format that the signing job was completed.",
              "type": "string"
            },
            "createdAt": {
              "description": "Date and time in RFC3339 format that the signing job was created.",
              "type": "string"
            },
            "destination": {
              "description": "The S3 bucket in which to save your signed object. See Destination below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "s3": {
                    "description": "A configuration block describing the S3 Source object: See S3 Source below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "description": "Name of the S3 bucket.",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "An Amazon S3 object key prefix that you can use to limit signed objects keys to begin with the specified prefix.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "type": "string"
            },
            "ignoreSigningJobFailure": {
              "description": "Set this argument to true to ignore signing job failures and retrieve failed status and reason. Default false.",
              "type": "boolean"
            },
            "jobId": {
              "description": "The ID of the signing job on output.",
              "type": "string"
            },
            "jobInvoker": {
              "description": "The IAM entity that initiated the signing job.",
              "type": "string"
            },
            "jobOwner": {
              "description": "The AWS account ID of the job owner.",
              "type": "string"
            },
            "platformDisplayName": {
              "description": "A human-readable name for the signing platform associated with the signing job.",
              "type": "string"
            },
            "platformId": {
              "description": "The platform to which your signed code image will be distributed.",
              "type": "string"
            },
            "profileName": {
              "description": "The name of the profile to initiate the signing operation.",
              "type": "string"
            },
            "profileVersion": {
              "description": "The version of the signing profile used to initiate the signing job.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "requestedBy": {
              "description": "The IAM principal that requested the signing job.",
              "type": "string"
            },
            "revocationRecord": {
              "description": "A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  },
                  "revokedAt": {
                    "type": "string"
                  },
                  "revokedBy": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "signatureExpiresAt": {
              "description": "The time when the signature of a signing job expires.",
              "type": "string"
            },
            "signedObject": {
              "description": "Name of the S3 bucket where the signed code image is saved by code signing.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "s3": {
                    "description": "A configuration block describing the S3 Source object: See S3 Source below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "description": "Name of the S3 bucket.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key name of the object that contains your unsigned code.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "source": {
              "description": "The S3 bucket that contains the object to sign. See Source below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "s3": {
                    "description": "A configuration block describing the S3 Source object: See S3 Source below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "bucket": {
                          "description": "Name of the S3 bucket.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key name of the object that contains your unsigned code.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of your source image in your version enabled S3 bucket.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "status": {
              "description": "Status of the signing job.",
              "type": "string"
            },
            "statusReason": {
              "description": "String value that contains the status reason.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
