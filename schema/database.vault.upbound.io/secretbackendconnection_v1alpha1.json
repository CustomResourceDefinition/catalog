{
  "description": "SecretBackendConnection is the Schema for the SecretBackendConnections API. Configures a database secret backend connection for Vault.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecretBackendConnectionSpec defines the desired state of SecretBackendConnection",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "allowedRoles": {
              "description": "A list of roles that are allowed to use this\nconnection.\nA list of roles that are allowed to use this connection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "backend": {
              "description": "The unique name of the Vault mount to configure.\nUnique name of the Vault mount to configure.",
              "type": "string"
            },
            "backendRef": {
              "description": "Reference to a Mount in vault to populate backend.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "backendSelector": {
              "description": "Selector for a Mount in vault to populate backend.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cassandra": {
              "description": "A nested block containing configuration options for Cassandra connections.\nConnection parameters for the cassandra-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectTimeout": {
                    "description": "The number of seconds to use as a connection\ntimeout.\nThe number of seconds to use as a connection timeout.",
                    "type": "number"
                  },
                  "hosts": {
                    "description": "The hosts to connect to.\nCassandra hosts to connect to.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nWhether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe password to use when authenticating with Cassandra.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemBundleSecretRef": {
                    "description": "Concatenated PEM blocks configuring the certificate\nchain.\nConcatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemJsonSecretRef": {
                    "description": "A JSON structure configuring the certificate chain.\nSpecifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Cassandra.",
                    "type": "number"
                  },
                  "protocolVersion": {
                    "description": "The CQL protocol version to use.\nThe CQL protocol version to use.",
                    "type": "number"
                  },
                  "skipVerification": {
                    "description": "Skip permissions checks when a connection to Cassandra is first created.\nThese checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.\nSkip permissions checks when a connection to Cassandra is first created. These checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.",
                    "type": "boolean"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nWhether to use TLS when connecting to Cassandra.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe username to use when authenticating with Cassandra.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "couchbase": {
              "description": "A nested block containing configuration options for Couchbase connections.\nConnection parameters for the couchbase-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "base64PemSecretRef": {
                    "description": "Required if tls is true. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.\nRequired if `tls` is `true`. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "bucketName": {
                    "description": "Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.\nRequired for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.",
                    "type": "string"
                  },
                  "hosts": {
                    "description": "The hosts to connect to.\nA set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nSpecifies whether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nSpecifies the password corresponding to the given username.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nSpecifies whether to use TLS when connecting to Couchbase.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username for Vault to use.",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "data": {
              "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.\nA map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "elasticsearch": {
              "description": "A nested block containing configuration options for Elasticsearch connections.\nConnection parameters for the elasticsearch-database-plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caCert": {
                    "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.\nThe path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity",
                    "type": "string"
                  },
                  "caPath": {
                    "description": "The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity.\nThe path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity",
                    "type": "string"
                  },
                  "clientCert": {
                    "description": "The path to the certificate for the Elasticsearch client to present for communication.\nThe path to the certificate for the Elasticsearch client to present for communication",
                    "type": "string"
                  },
                  "clientKey": {
                    "description": "The path to the key for the Elasticsearch client to use for communication.\nThe path to the key for the Elasticsearch client to use for communication",
                    "type": "string"
                  },
                  "insecure": {
                    "description": "Whether to disable certificate verification.\nWhether to disable certificate verification",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe password to be used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsServerName": {
                    "description": "This, if set, is used to set the SNI host when connecting via TLS.\nThis, if set, is used to set the SNI host when connecting via TLS",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.\nThe URL for Elasticsearch's API",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe username to be used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "hana": {
              "description": "A nested block containing configuration options for SAP HanaDB connections.\nConnection parameters for the hana-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "influxdb": {
              "description": "A nested block containing configuration options for InfluxDB connections.\nConnection parameters for the influxdb-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectTimeout": {
                    "description": "The number of seconds to use as a connection\ntimeout.\nThe number of seconds to use as a connection timeout.",
                    "type": "number"
                  },
                  "host": {
                    "description": "The host to connect to.\nInfluxdb host to connect to.",
                    "type": "string"
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nWhether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nSpecifies the password corresponding to the given username.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemBundleSecretRef": {
                    "description": "Concatenated PEM blocks configuring the certificate\nchain.\nConcatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemJsonSecretRef": {
                    "description": "A JSON structure configuring the certificate chain.\nSpecifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Influxdb.",
                    "type": "number"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nWhether to use TLS when connecting to Influxdb.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username to use for superuser access.",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mongodb": {
              "description": "A nested block containing configuration options for MongoDB connections.\nConnection parameters for the mongodb-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mongodbatlas": {
              "description": "A nested block containing configuration options for MongoDB Atlas connections.\nConnection parameters for the mongodbatlas-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "privateKeySecretRef": {
                    "description": "The Private Programmatic API Key used to connect with MongoDB Atlas API.\nThe Private Programmatic API Key used to connect with MongoDB Atlas API.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "projectId": {
                    "description": "The Project ID the Database User should be created within.\nThe Project ID the Database User should be created within.",
                    "type": "string"
                  },
                  "publicKey": {
                    "description": "The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.\nThe Public Programmatic API Key used to authenticate with the MongoDB Atlas API.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mssql": {
              "description": "A nested block containing configuration options for MSSQL connections.\nConnection parameters for the mssql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "containedDb": {
                    "description": "For Vault v1.9+. Set to true when the target is a\nContained Database, e.g. AzureSQL.\nSee the Vault\ndocs\nSet to true when the target is a Contained Database, e.g. AzureSQL.",
                    "type": "boolean"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysql": {
              "description": "A nested block containing configuration options for MySQL connections.\nConnection parameters for the mysql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlAurora": {
              "description": "A nested block containing configuration options for Aurora MySQL connections.\nConnection parameters for the mysql-aurora-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlLegacy": {
              "description": "A nested block containing configuration options for legacy MySQL connections.\nConnection parameters for the mysql-legacy-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlRds": {
              "description": "A nested block containing configuration options for RDS MySQL connections.\nConnection parameters for the mysql-rds-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "name": {
              "description": "A unique name to give the database connection.\nName of the database connection.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "oracle": {
              "description": "A nested block containing configuration options for Oracle connections.\nConnection parameters for the oracle-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disconnectSessions": {
                    "description": "Enable the built-in session disconnect mechanism.\nSet to true to disconnect any open sessions prior to running the revocation statements.",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "splitStatements": {
                    "description": "Enable spliting statements after semi-colons.\nSet to true in order to split statements after semi-colons.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "pluginName": {
              "description": "Specifies the name of the plugin to use.\nSpecifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
              "type": "string"
            },
            "postgresql": {
              "description": "A nested block containing configuration options for PostgreSQL connections.\nConnection parameters for the postgresql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordAuthentication": {
                    "description": "When set to scram-sha-256, passwords will be\nhashed by Vault before being sent to PostgreSQL. See the Vault docs\nfor an example. Requires Vault 1.14+.\nWhen set to `scram-sha-256`, passwords will be hashed by Vault before being sent to PostgreSQL.",
                    "type": "string"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "privateKeySecretRef": {
                    "description": "The Private Programmatic API Key used to connect with MongoDB Atlas API.\nThe secret key used for the x509 client certificate. Must be PEM encoded.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "selfManaged": {
                    "description": "If set, allows onboarding static roles with a rootless\nconnection configuration. Mutually exclusive with username and password.\nIf set, will force verify_connection to be false. Requires Vault 1.18+ Enterprise.\nIf set, allows onboarding static roles with a rootless connection configuration.",
                    "type": "boolean"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nThe x509 CA file for validating the certificate presented by the PostgreSQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificate": {
                    "description": "The x509 client certificate for connecting to\nthe database. Must be PEM encoded.\nThe x509 client certificate for connecting to the database. Must be PEM encoded.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "redis": {
              "description": "A nested block containing configuration options for Redis connections.\nConnection parameters for the redis-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caCert": {
                    "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.\nThe contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.",
                    "type": "string"
                  },
                  "host": {
                    "description": "The host to connect to.\nSpecifies the host to connect to",
                    "type": "string"
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nSpecifies whether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nSpecifies the password corresponding to the given username.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Redis.",
                    "type": "number"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nSpecifies whether to use TLS when connecting to Redis.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username for Vault to use.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "redisElasticache": {
              "description": "A nested block containing configuration options for Redis ElastiCache connections.\nConnection parameters for the redis-elasticache-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe AWS secret key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "region": {
                    "description": "The region where the ElastiCache cluster is hosted. If omitted Vault tries to infer from the environment instead.\nThe AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.\nThe configuration endpoint for the ElastiCache cluster to connect to.",
                    "type": "string"
                  },
                  "usernameSecretRef": {
                    "description": "The username to authenticate with.\nThe AWS access key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "redshift": {
              "description": "Connection parameters for the redshift-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "rootRotationStatements": {
              "description": "A list of database statements to be executed to rotate the root user's credentials.\nA list of database statements to be executed to rotate the root user's credentials.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "snowflake": {
              "description": "A nested block containing configuration options for Snowflake connections.\nConnection parameters for the snowflake-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "privateKeyWoSecretRef": {
                    "description": "The private key associated with the Snowflake user.\nNote: This property is write-only and will not be read from the API.\nThe private key configured for the admin user in Snowflake.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "privateKeyWoVersion": {
                    "description": "The version of the private_key_wo. For more info see updating write-only attributes.\nVersion counter for the private key key-pair credentials write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "verifyConnection": {
              "description": "Whether the connection should be verified on\ninitial configuration or not.\nSpecifies if the connection is verified during initial configuration.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "allowedRoles": {
              "description": "A list of roles that are allowed to use this\nconnection.\nA list of roles that are allowed to use this connection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "backend": {
              "description": "The unique name of the Vault mount to configure.\nUnique name of the Vault mount to configure.",
              "type": "string"
            },
            "backendRef": {
              "description": "Reference to a Mount in vault to populate backend.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "backendSelector": {
              "description": "Selector for a Mount in vault to populate backend.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cassandra": {
              "description": "A nested block containing configuration options for Cassandra connections.\nConnection parameters for the cassandra-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectTimeout": {
                    "description": "The number of seconds to use as a connection\ntimeout.\nThe number of seconds to use as a connection timeout.",
                    "type": "number"
                  },
                  "hosts": {
                    "description": "The hosts to connect to.\nCassandra hosts to connect to.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nWhether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe password to use when authenticating with Cassandra.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemBundleSecretRef": {
                    "description": "Concatenated PEM blocks configuring the certificate\nchain.\nConcatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemJsonSecretRef": {
                    "description": "A JSON structure configuring the certificate chain.\nSpecifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Cassandra.",
                    "type": "number"
                  },
                  "protocolVersion": {
                    "description": "The CQL protocol version to use.\nThe CQL protocol version to use.",
                    "type": "number"
                  },
                  "skipVerification": {
                    "description": "Skip permissions checks when a connection to Cassandra is first created.\nThese checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.\nSkip permissions checks when a connection to Cassandra is first created. These checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.",
                    "type": "boolean"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nWhether to use TLS when connecting to Cassandra.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe username to use when authenticating with Cassandra.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "couchbase": {
              "description": "A nested block containing configuration options for Couchbase connections.\nConnection parameters for the couchbase-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "passwordSecretRef"
                ],
                "properties": {
                  "base64PemSecretRef": {
                    "description": "Required if tls is true. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.\nRequired if `tls` is `true`. Specifies the certificate authority of the Couchbase server, as a PEM certificate that has been base64 encoded.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "bucketName": {
                    "description": "Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.\nRequired for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.",
                    "type": "string"
                  },
                  "hosts": {
                    "description": "The hosts to connect to.\nA set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nSpecifies whether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nSpecifies the password corresponding to the given username.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nSpecifies whether to use TLS when connecting to Couchbase.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username for Vault to use.",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "data": {
              "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.\nA map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "elasticsearch": {
              "description": "A nested block containing configuration options for Elasticsearch connections.\nConnection parameters for the elasticsearch-database-plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "passwordSecretRef"
                ],
                "properties": {
                  "caCert": {
                    "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.\nThe path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity",
                    "type": "string"
                  },
                  "caPath": {
                    "description": "The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity.\nThe path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity",
                    "type": "string"
                  },
                  "clientCert": {
                    "description": "The path to the certificate for the Elasticsearch client to present for communication.\nThe path to the certificate for the Elasticsearch client to present for communication",
                    "type": "string"
                  },
                  "clientKey": {
                    "description": "The path to the key for the Elasticsearch client to use for communication.\nThe path to the key for the Elasticsearch client to use for communication",
                    "type": "string"
                  },
                  "insecure": {
                    "description": "Whether to disable certificate verification.\nWhether to disable certificate verification",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe password to be used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsServerName": {
                    "description": "This, if set, is used to set the SNI host when connecting via TLS.\nThis, if set, is used to set the SNI host when connecting via TLS",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.\nThe URL for Elasticsearch's API",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe username to be used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "hana": {
              "description": "A nested block containing configuration options for SAP HanaDB connections.\nConnection parameters for the hana-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "influxdb": {
              "description": "A nested block containing configuration options for InfluxDB connections.\nConnection parameters for the influxdb-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "passwordSecretRef"
                ],
                "properties": {
                  "connectTimeout": {
                    "description": "The number of seconds to use as a connection\ntimeout.\nThe number of seconds to use as a connection timeout.",
                    "type": "number"
                  },
                  "host": {
                    "description": "The host to connect to.\nInfluxdb host to connect to.",
                    "type": "string"
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nWhether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nSpecifies the password corresponding to the given username.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemBundleSecretRef": {
                    "description": "Concatenated PEM blocks configuring the certificate\nchain.\nConcatenated PEM blocks containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "pemJsonSecretRef": {
                    "description": "A JSON structure configuring the certificate chain.\nSpecifies JSON containing a certificate and private key; a certificate, private key, and issuing CA certificate; or just a CA certificate.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Influxdb.",
                    "type": "number"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nWhether to use TLS when connecting to Influxdb.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username to use for superuser access.",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mongodb": {
              "description": "A nested block containing configuration options for MongoDB connections.\nConnection parameters for the mongodb-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mongodbatlas": {
              "description": "A nested block containing configuration options for MongoDB Atlas connections.\nConnection parameters for the mongodbatlas-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "privateKeySecretRef"
                ],
                "properties": {
                  "privateKeySecretRef": {
                    "description": "The Private Programmatic API Key used to connect with MongoDB Atlas API.\nThe Private Programmatic API Key used to connect with MongoDB Atlas API.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "projectId": {
                    "description": "The Project ID the Database User should be created within.\nThe Project ID the Database User should be created within.",
                    "type": "string"
                  },
                  "publicKey": {
                    "description": "The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.\nThe Public Programmatic API Key used to authenticate with the MongoDB Atlas API.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mssql": {
              "description": "A nested block containing configuration options for MSSQL connections.\nConnection parameters for the mssql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "containedDb": {
                    "description": "For Vault v1.9+. Set to true when the target is a\nContained Database, e.g. AzureSQL.\nSee the Vault\ndocs\nSet to true when the target is a Contained Database, e.g. AzureSQL.",
                    "type": "boolean"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysql": {
              "description": "A nested block containing configuration options for MySQL connections.\nConnection parameters for the mysql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlAurora": {
              "description": "A nested block containing configuration options for Aurora MySQL connections.\nConnection parameters for the mysql-aurora-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlLegacy": {
              "description": "A nested block containing configuration options for legacy MySQL connections.\nConnection parameters for the mysql-legacy-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlRds": {
              "description": "A nested block containing configuration options for RDS MySQL connections.\nConnection parameters for the mysql-rds-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificateKeySecretRef": {
                    "description": "x509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.\nx509 certificate for connecting to the database. This must be a PEM encoded version of the private key and the certificate combined.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "name": {
              "description": "A unique name to give the database connection.\nName of the database connection.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "oracle": {
              "description": "A nested block containing configuration options for Oracle connections.\nConnection parameters for the oracle-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disconnectSessions": {
                    "description": "Enable the built-in session disconnect mechanism.\nSet to true to disconnect any open sessions prior to running the revocation statements.",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "splitStatements": {
                    "description": "Enable spliting statements after semi-colons.\nSet to true in order to split statements after semi-colons.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "pluginName": {
              "description": "Specifies the name of the plugin to use.\nSpecifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
              "type": "string"
            },
            "postgresql": {
              "description": "A nested block containing configuration options for PostgreSQL connections.\nConnection parameters for the postgresql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordAuthentication": {
                    "description": "When set to scram-sha-256, passwords will be\nhashed by Vault before being sent to PostgreSQL. See the Vault docs\nfor an example. Requires Vault 1.14+.\nWhen set to `scram-sha-256`, passwords will be hashed by Vault before being sent to PostgreSQL.",
                    "type": "string"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "privateKeySecretRef": {
                    "description": "The Private Programmatic API Key used to connect with MongoDB Atlas API.\nThe secret key used for the x509 client certificate. Must be PEM encoded.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "selfManaged": {
                    "description": "If set, allows onboarding static roles with a rootless\nconnection configuration. Mutually exclusive with username and password.\nIf set, will force verify_connection to be false. Requires Vault 1.18+ Enterprise.\nIf set, allows onboarding static roles with a rootless connection configuration.",
                    "type": "boolean"
                  },
                  "serviceAccountJsonSecretRef": {
                    "description": "JSON encoding of an IAM access key. Requires auth_type to be gcp_iam.\nA JSON encoded credential for use with IAM authorization",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nThe x509 CA file for validating the certificate presented by the PostgreSQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificate": {
                    "description": "The x509 client certificate for connecting to\nthe database. Must be PEM encoded.\nThe x509 client certificate for connecting to the database. Must be PEM encoded.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "redis": {
              "description": "A nested block containing configuration options for Redis connections.\nConnection parameters for the redis-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "passwordSecretRef"
                ],
                "properties": {
                  "caCert": {
                    "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.\nThe contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.",
                    "type": "string"
                  },
                  "host": {
                    "description": "The host to connect to.\nSpecifies the host to connect to",
                    "type": "string"
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nSpecifies whether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nSpecifies the password corresponding to the given username.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Redis.",
                    "type": "number"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nSpecifies whether to use TLS when connecting to Redis.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username for Vault to use.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "redisElasticache": {
              "description": "A nested block containing configuration options for Redis ElastiCache connections.\nConnection parameters for the redis-elasticache-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe AWS secret key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "region": {
                    "description": "The region where the ElastiCache cluster is hosted. If omitted Vault tries to infer from the environment instead.\nThe AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.\nThe configuration endpoint for the ElastiCache cluster to connect to.",
                    "type": "string"
                  },
                  "usernameSecretRef": {
                    "description": "The username to authenticate with.\nThe AWS access key id to use to talk to ElastiCache. If omitted the credentials chain provider is used instead.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "redshift": {
              "description": "Connection parameters for the redshift-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "rootRotationStatements": {
              "description": "A list of database statements to be executed to rotate the root user's credentials.\nA list of database statements to be executed to rotate the root user's credentials.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "snowflake": {
              "description": "A nested block containing configuration options for Snowflake connections.\nConnection parameters for the snowflake-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordSecretRef": {
                    "description": "The password to authenticate with.\nThe root credential password used in the connection URL",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "privateKeyWoSecretRef": {
                    "description": "The private key associated with the Snowflake user.\nNote: This property is write-only and will not be read from the API.\nThe private key configured for the admin user in Snowflake.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "privateKeyWoVersion": {
                    "description": "The version of the private_key_wo. For more info see updating write-only attributes.\nVersion counter for the private key key-pair credentials write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "verifyConnection": {
              "description": "Whether the connection should be verified on\ninitial configuration or not.\nSpecifies if the connection is verified during initial configuration.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SecretBackendConnectionStatus defines the observed state of SecretBackendConnection.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "allowedRoles": {
              "description": "A list of roles that are allowed to use this\nconnection.\nA list of roles that are allowed to use this connection.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "backend": {
              "description": "The unique name of the Vault mount to configure.\nUnique name of the Vault mount to configure.",
              "type": "string"
            },
            "cassandra": {
              "description": "A nested block containing configuration options for Cassandra connections.\nConnection parameters for the cassandra-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectTimeout": {
                    "description": "The number of seconds to use as a connection\ntimeout.\nThe number of seconds to use as a connection timeout.",
                    "type": "number"
                  },
                  "hosts": {
                    "description": "The hosts to connect to.\nCassandra hosts to connect to.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nWhether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Cassandra.",
                    "type": "number"
                  },
                  "protocolVersion": {
                    "description": "The CQL protocol version to use.\nThe CQL protocol version to use.",
                    "type": "number"
                  },
                  "skipVerification": {
                    "description": "Skip permissions checks when a connection to Cassandra is first created.\nThese checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.\nSkip permissions checks when a connection to Cassandra is first created. These checks ensure that Vault is able to create roles, but can be resource intensive in clusters with many roles.",
                    "type": "boolean"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nWhether to use TLS when connecting to Cassandra.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe username to use when authenticating with Cassandra.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "couchbase": {
              "description": "A nested block containing configuration options for Couchbase connections.\nConnection parameters for the couchbase-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bucketName": {
                    "description": "Required for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.\nRequired for Couchbase versions prior to 6.5.0. This is only used to verify vault's connection to the server.",
                    "type": "string"
                  },
                  "hosts": {
                    "description": "The hosts to connect to.\nA set of Couchbase URIs to connect to. Must use `couchbases://` scheme if `tls` is `true`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nSpecifies whether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nSpecifies whether to use TLS when connecting to Couchbase.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username for Vault to use.",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "data": {
              "description": "A map of sensitive data to pass to the endpoint. Useful for templated connection strings.\nA map of sensitive data to pass to the endpoint. Useful for templated connection strings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "elasticsearch": {
              "description": "A nested block containing configuration options for Elasticsearch connections.\nConnection parameters for the elasticsearch-database-plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caCert": {
                    "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.\nThe path to a PEM-encoded CA cert file to use to verify the Elasticsearch server's identity",
                    "type": "string"
                  },
                  "caPath": {
                    "description": "The path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity.\nThe path to a directory of PEM-encoded CA cert files to use to verify the Elasticsearch server's identity",
                    "type": "string"
                  },
                  "clientCert": {
                    "description": "The path to the certificate for the Elasticsearch client to present for communication.\nThe path to the certificate for the Elasticsearch client to present for communication",
                    "type": "string"
                  },
                  "clientKey": {
                    "description": "The path to the key for the Elasticsearch client to use for communication.\nThe path to the key for the Elasticsearch client to use for communication",
                    "type": "string"
                  },
                  "insecure": {
                    "description": "Whether to disable certificate verification.\nWhether to disable certificate verification",
                    "type": "boolean"
                  },
                  "tlsServerName": {
                    "description": "This, if set, is used to set the SNI host when connecting via TLS.\nThis, if set, is used to set the SNI host when connecting via TLS",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.\nThe URL for Elasticsearch's API",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe username to be used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "hana": {
              "description": "A nested block containing configuration options for SAP HanaDB connections.\nConnection parameters for the hana-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "type": "string"
            },
            "influxdb": {
              "description": "A nested block containing configuration options for InfluxDB connections.\nConnection parameters for the influxdb-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectTimeout": {
                    "description": "The number of seconds to use as a connection\ntimeout.\nThe number of seconds to use as a connection timeout.",
                    "type": "number"
                  },
                  "host": {
                    "description": "The host to connect to.\nInfluxdb host to connect to.",
                    "type": "string"
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nWhether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Influxdb.",
                    "type": "number"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nWhether to use TLS when connecting to Influxdb.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username to use for superuser access.",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nTemplate describing how dynamic usernames are generated.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mongodb": {
              "description": "A nested block containing configuration options for MongoDB connections.\nConnection parameters for the mongodb-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mongodbatlas": {
              "description": "A nested block containing configuration options for MongoDB Atlas connections.\nConnection parameters for the mongodbatlas-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "projectId": {
                    "description": "The Project ID the Database User should be created within.\nThe Project ID the Database User should be created within.",
                    "type": "string"
                  },
                  "publicKey": {
                    "description": "The Public Programmatic API Key used to authenticate with the MongoDB Atlas API.\nThe Public Programmatic API Key used to authenticate with the MongoDB Atlas API.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mssql": {
              "description": "A nested block containing configuration options for MSSQL connections.\nConnection parameters for the mssql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "containedDb": {
                    "description": "For Vault v1.9+. Set to true when the target is a\nContained Database, e.g. AzureSQL.\nSee the Vault\ndocs\nSet to true when the target is a Contained Database, e.g. AzureSQL.",
                    "type": "boolean"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysql": {
              "description": "A nested block containing configuration options for MySQL connections.\nConnection parameters for the mysql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlAurora": {
              "description": "A nested block containing configuration options for Aurora MySQL connections.\nConnection parameters for the mysql-aurora-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlLegacy": {
              "description": "A nested block containing configuration options for legacy MySQL connections.\nConnection parameters for the mysql-legacy-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "mysqlRds": {
              "description": "A nested block containing configuration options for RDS MySQL connections.\nConnection parameters for the mysql-rds-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nx509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "name": {
              "description": "A unique name to give the database connection.\nName of the database connection.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "oracle": {
              "description": "A nested block containing configuration options for Oracle connections.\nConnection parameters for the oracle-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disconnectSessions": {
                    "description": "Enable the built-in session disconnect mechanism.\nSet to true to disconnect any open sessions prior to running the revocation statements.",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "splitStatements": {
                    "description": "Enable spliting statements after semi-colons.\nSet to true in order to split statements after semi-colons.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "pluginName": {
              "description": "Specifies the name of the plugin to use.\nSpecifies the name of the plugin to use for this connection. Must be prefixed with the name of one of the supported database engine types.",
              "type": "string"
            },
            "postgresql": {
              "description": "A nested block containing configuration options for PostgreSQL connections.\nConnection parameters for the postgresql-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authType": {
                    "description": "Enable IAM authentication to a Google Cloud instance when set to gcp_iam\nSpecify alternative authorization type. (Only 'gcp_iam' is valid currently)",
                    "type": "string"
                  },
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordAuthentication": {
                    "description": "When set to scram-sha-256, passwords will be\nhashed by Vault before being sent to PostgreSQL. See the Vault docs\nfor an example. Requires Vault 1.14+.\nWhen set to `scram-sha-256`, passwords will be hashed by Vault before being sent to PostgreSQL.",
                    "type": "string"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "selfManaged": {
                    "description": "If set, allows onboarding static roles with a rootless\nconnection configuration. Mutually exclusive with username and password.\nIf set, will force verify_connection to be false. Requires Vault 1.18+ Enterprise.\nIf set, allows onboarding static roles with a rootless connection configuration.",
                    "type": "boolean"
                  },
                  "tlsCa": {
                    "description": "x509 CA file for validating the certificate presented by the MySQL server. Must be PEM encoded.\nThe x509 CA file for validating the certificate presented by the PostgreSQL server. Must be PEM encoded.",
                    "type": "string"
                  },
                  "tlsCertificate": {
                    "description": "The x509 client certificate for connecting to\nthe database. Must be PEM encoded.\nThe x509 client certificate for connecting to the database. Must be PEM encoded.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "redis": {
              "description": "A nested block containing configuration options for Redis connections.\nConnection parameters for the redis-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caCert": {
                    "description": "The contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.\nThe contents of a PEM-encoded CA cert file to use to verify the Redis server's identity.",
                    "type": "string"
                  },
                  "host": {
                    "description": "The host to connect to.\nSpecifies the host to connect to",
                    "type": "string"
                  },
                  "insecureTls": {
                    "description": "Whether to skip verification of the server\ncertificate when using TLS.\nSpecifies whether to skip verification of the server certificate when using TLS.",
                    "type": "boolean"
                  },
                  "port": {
                    "description": "The default port to connect to if no port is specified as\npart of the host.\nThe transport port to use to connect to Redis.",
                    "type": "number"
                  },
                  "tls": {
                    "description": "Whether to use TLS when connecting to Cassandra.\nSpecifies whether to use TLS when connecting to Redis.",
                    "type": "boolean"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nSpecifies the username for Vault to use.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "redisElasticache": {
              "description": "A nested block containing configuration options for Redis ElastiCache connections.\nConnection parameters for the redis-elasticache-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "region": {
                    "description": "The region where the ElastiCache cluster is hosted. If omitted Vault tries to infer from the environment instead.\nThe AWS region where the ElastiCache cluster is hosted. If omitted the plugin tries to infer the region from the environment.",
                    "type": "string"
                  },
                  "url": {
                    "description": "The url to connect to including the port; e.g. master.my-cluster.xxxxxx.use1.cache.amazonaws.com:6379.\nThe configuration endpoint for the ElastiCache cluster to connect to.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "redshift": {
              "description": "Connection parameters for the redshift-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "disableEscaping": {
                    "description": "Disable special character escaping in username and password.\nDisable special character escaping in username and password",
                    "type": "boolean"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "rootRotationStatements": {
              "description": "A list of database statements to be executed to rotate the root user's credentials.\nA list of database statements to be executed to rotate the root user's credentials.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "snowflake": {
              "description": "A nested block containing configuration options for Snowflake connections.\nConnection parameters for the snowflake-database-plugin plugin.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectionUrl": {
                    "description": "A URL containing connection information. See\nthe Vault\ndocs\nfor an example.\nConnection string to use to connect to the database.",
                    "type": "string"
                  },
                  "maxConnectionLifetime": {
                    "description": "The maximum number of seconds to keep\na connection alive for.\nMaximum number of seconds a connection may be reused.",
                    "type": "number"
                  },
                  "maxIdleConnections": {
                    "description": "The maximum number of idle connections to\nmaintain.\nMaximum number of idle connections to the database.",
                    "type": "number"
                  },
                  "maxOpenConnections": {
                    "description": "The maximum number of open connections to\nuse.\nMaximum number of open connections to the database.",
                    "type": "number"
                  },
                  "passwordWo": {
                    "description": "The password for the user. Can be updated.\nNote: This property is write-only and will not be read from the API.\nWrite-only field for the root credential password used in the connection URL",
                    "type": "string"
                  },
                  "passwordWoVersion": {
                    "description": "The version of the password_wo. For more info see updating write-only attributes.\nVersion counter for root credential password write-only field",
                    "type": "number"
                  },
                  "privateKeyWoVersion": {
                    "description": "The version of the private_key_wo. For more info see updating write-only attributes.\nVersion counter for the private key key-pair credentials write-only field",
                    "type": "number"
                  },
                  "username": {
                    "description": "The username to authenticate with.\nThe root credential username used in the connection URL",
                    "type": "string"
                  },
                  "usernameTemplate": {
                    "description": "Template describing how dynamic usernames are generated.\nUsername generation template.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "verifyConnection": {
              "description": "Whether the connection should be verified on\ninitial configuration or not.\nSpecifies if the connection is verified during initial configuration.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
