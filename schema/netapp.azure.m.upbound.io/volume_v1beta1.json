{
  "description": "Volume is the Schema for the Volumes API. Manages a NetApp Volume.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VolumeSpec defines the desired state of Volume",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "accountName": {
              "description": "The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "accountNameRef": {
              "description": "Reference to a Account in netapp to populate accountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "accountNameSelector": {
              "description": "Selector for a Account in netapp to populate accountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "azureVmwareDataStoreEnabled": {
              "description": "Is the NetApp Volume enabled for Azure VMware Solution (AVS) datastore purpose. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "createFromSnapshotResourceId": {
              "description": "Creates volume from snapshot. Following properties must be the same as the original volume where the snapshot was taken from: protocols, subnet_id, location, service_level, resource_group_name and account_name. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "createFromSnapshotResourceIdRef": {
              "description": "Reference to a Snapshot in netapp to populate createFromSnapshotResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "createFromSnapshotResourceIdSelector": {
              "description": "Selector for a Snapshot in netapp to populate createFromSnapshotResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "dataProtectionBackupPolicy": {
              "description": "A data_protection_backup_policy block as defined below.",
              "type": "object",
              "properties": {
                "backupPolicyId": {
                  "description": "Resource ID of the backup policy to apply to the volume.\nThe ID of the backup policy to associate with this volume.",
                  "type": "string"
                },
                "backupVaultId": {
                  "description": "Resource ID of the backup backup vault to associate this volume to.\nThe ID of the backup vault to associate with this volume.",
                  "type": "string"
                },
                "policyEnabled": {
                  "description": "Enables the backup policy on the volume, defaults to true.\nIf set to false, the backup policy will not be enabled on this volume, thus disabling scheduled backups.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "dataProtectionReplication": {
              "description": "A data_protection_replication block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "The endpoint type, default value is dst for destination.",
                  "type": "string"
                },
                "remoteVolumeLocation": {
                  "description": "Location of the primary volume. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "remoteVolumeResourceId": {
                  "description": "Resource ID of the primary volume.",
                  "type": "string"
                },
                "remoteVolumeResourceIdRef": {
                  "description": "Reference to a Volume in netapp to populate remoteVolumeResourceId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "remoteVolumeResourceIdSelector": {
                  "description": "Selector for a Volume in netapp to populate remoteVolumeResourceId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "replicationFrequency": {
                  "description": "Replication frequency, supported values are '10minutes', 'hourly', 'daily', values are case sensitive.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataProtectionSnapshotPolicy": {
              "description": "A data_protection_snapshot_policy block as defined below.",
              "type": "object",
              "properties": {
                "snapshotPolicyId": {
                  "description": "Resource ID of the snapshot policy to apply to the volume.",
                  "type": "string"
                },
                "snapshotPolicyIdRef": {
                  "description": "Reference to a SnapshotPolicy in netapp to populate snapshotPolicyId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "snapshotPolicyIdSelector": {
                  "description": "Selector for a SnapshotPolicy in netapp to populate snapshotPolicyId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "encryptionKeySource": {
              "description": "The encryption key source, it can be Microsoft.NetApp for platform managed keys or Microsoft.KeyVault for customer-managed keys. This is required with key_vault_private_endpoint_id. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "exportPolicyRule": {
              "description": "One or more export_policy_rule block defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedClients": {
                    "description": "A list of allowed clients IPv4 addresses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "kerberos5IReadOnlyEnabled": {
                    "description": "Is Kerberos 5i read-only permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5IReadWriteEnabled": {
                    "description": "Is Kerberos 5i read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5PReadOnlyEnabled": {
                    "description": "Is Kerberos 5p read-only permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5PReadWriteEnabled": {
                    "description": "Is Kerberos 5p read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5ReadOnlyEnabled": {
                    "description": "Is Kerberos 5 read-only access permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5ReadWriteEnabled": {
                    "description": "Is Kerberos 5 read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "protocolsEnabled": {
                    "description": "A list of allowed protocols. Valid values include CIFS, NFSv3, or NFSv4.1. Only one value is supported at this time. This replaces the previous arguments: cifs_enabled, nfsv3_enabled and nfsv4_enabled.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rootAccessEnabled": {
                    "description": "Is root access permitted to this volume?",
                    "type": "boolean"
                  },
                  "ruleIndex": {
                    "description": "The index number of the rule.",
                    "type": "number"
                  },
                  "unixReadOnly": {
                    "description": "Is the file system on unix read only?",
                    "type": "boolean"
                  },
                  "unixReadWrite": {
                    "description": "Is the file system on unix read and write?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "kerberosEnabled": {
              "description": "Enable to allow Kerberos secured volumes. Requires appropriate export rules. Changing this forces a new resource to be created.\nEnable to allow Kerberos secured volumes. Requires appropriate export rules as well as the parent `azurerm_netapp_account` having a defined AD connection.",
              "type": "boolean"
            },
            "keyVaultPrivateEndpointId": {
              "description": "The Private Endpoint ID for Key Vault, which is required when using customer-managed keys. This is required with encryption_key_source. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "largeVolumeEnabled": {
              "description": "A boolean specifying if the volume is a large volume. Defaults to false.\nIndicates whether the volume is a large volume.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "networkFeatures": {
              "description": "Indicates which network feature to use, accepted values are Basic or Standard, it defaults to Basic if not defined. This is a feature in public preview and for more information about it and how to register, please refer to Configure network features for an Azure NetApp Files volume.",
              "type": "string"
            },
            "poolName": {
              "description": "The name of the NetApp pool in which the NetApp Volume should be created.",
              "type": "string"
            },
            "poolNameRef": {
              "description": "Reference to a Pool in netapp to populate poolName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "poolNameSelector": {
              "description": "Selector for a Pool in netapp to populate poolName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "protocols": {
              "description": "The target volume protocol expressed as a list. Supported single value include CIFS, NFSv3, or NFSv4.1. If argument is not defined it will default to NFSv3. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to Create a dual-protocol volume for Azure NetApp Files document.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "resourceGroupName": {
              "description": "The name of the resource group where the NetApp Volume should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "securityStyle": {
              "description": "Volume security style, accepted values are unix or ntfs. If not provided, single-protocol volume is created defaulting to unix if it is NFSv3 or NFSv4.1 volume, if CIFS, it will default to ntfs. In a dual-protocol volume, if not provided, its value will be ntfs. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "serviceLevel": {
              "description": "The target performance of the file system. Valid values include Premium, Standard, or Ultra.",
              "type": "string"
            },
            "smb3ProtocolEncryptionEnabled": {
              "description": "Enable SMB encryption. Changing this forces a new resource to be created.\nSMB3 encryption option should be used only for SMB/DualProtocol volumes. Using it for any other workloads is not supported.",
              "type": "boolean"
            },
            "smbAccessBasedEnumerationEnabled": {
              "description": "Limits enumeration of files and folders (that is, listing the contents) in SMB only to users with allowed access on the share. For instance, if a user doesn't have access to read a file or folder in a share with access-based enumeration enabled, then the file or folder doesn't show up in directory listings. Defaults to false. For more information, please refer to Understand NAS share permissions in Azure NetApp Files\nEnable access based enumeration setting for SMB/Dual Protocol volume. When enabled, users who do not have permission to access a shared folder or file underneath it, do not see that shared resource displayed in their environment.",
              "type": "boolean"
            },
            "smbContinuousAvailabilityEnabled": {
              "description": "Enable SMB Continuous Availability. Changing this forces a new resource to be created.\nContinuous availability option should be used only for SQL and FSLogix workloads. Using it for any other SMB workloads is not supported.",
              "type": "boolean"
            },
            "smbNonBrowsableEnabled": {
              "description": "Limits clients from browsing for an SMB share by hiding the share from view in Windows Explorer or when listing shares in \"net view.\" Only end users that know the absolute paths to the share are able to find the share. Defaults to false. For more information, please refer to Understand NAS share permissions in Azure NetApp Files\nEnable non browsable share setting for SMB/Dual Protocol volume. When enabled, it restricts windows clients to browse the share",
              "type": "boolean"
            },
            "snapshotDirectoryVisible": {
              "description": "Specifies whether the .snapshot (NFS clients) or ~snapshot (SMB clients) path of a volume is visible. Defaults to true.",
              "type": "boolean"
            },
            "storageQuotaInGb": {
              "description": "The maximum Storage Quota allowed for a file system in Gigabytes.",
              "type": "number"
            },
            "subnetId": {
              "description": "The ID of the Subnet the NetApp Volume resides in, which must have the Microsoft.NetApp/volumes delegation. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "subnetIdRef": {
              "description": "Reference to a Subnet in network to populate subnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "subnetIdSelector": {
              "description": "Selector for a Subnet in network to populate subnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "throughputInMibps": {
              "description": "Throughput of this volume in Mibps.",
              "type": "number"
            },
            "volumePath": {
              "description": "A unique file path for the volume. Used when creating mount targets. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "zone": {
              "description": "Specifies the Availability Zone in which the Volume should be located. Possible values are 1, 2 and 3. Changing this forces a new resource to be created. This feature is currently in preview, for more information on how to enable it, please refer to Manage availability zone volume placement for Azure NetApp Files.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "azureVmwareDataStoreEnabled": {
              "description": "Is the NetApp Volume enabled for Azure VMware Solution (AVS) datastore purpose. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "createFromSnapshotResourceId": {
              "description": "Creates volume from snapshot. Following properties must be the same as the original volume where the snapshot was taken from: protocols, subnet_id, location, service_level, resource_group_name and account_name. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "createFromSnapshotResourceIdRef": {
              "description": "Reference to a Snapshot in netapp to populate createFromSnapshotResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "createFromSnapshotResourceIdSelector": {
              "description": "Selector for a Snapshot in netapp to populate createFromSnapshotResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "dataProtectionBackupPolicy": {
              "description": "A data_protection_backup_policy block as defined below.",
              "type": "object",
              "properties": {
                "backupPolicyId": {
                  "description": "Resource ID of the backup policy to apply to the volume.\nThe ID of the backup policy to associate with this volume.",
                  "type": "string"
                },
                "backupVaultId": {
                  "description": "Resource ID of the backup backup vault to associate this volume to.\nThe ID of the backup vault to associate with this volume.",
                  "type": "string"
                },
                "policyEnabled": {
                  "description": "Enables the backup policy on the volume, defaults to true.\nIf set to false, the backup policy will not be enabled on this volume, thus disabling scheduled backups.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "dataProtectionReplication": {
              "description": "A data_protection_replication block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "The endpoint type, default value is dst for destination.",
                  "type": "string"
                },
                "remoteVolumeLocation": {
                  "description": "Location of the primary volume. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "remoteVolumeResourceId": {
                  "description": "Resource ID of the primary volume.",
                  "type": "string"
                },
                "remoteVolumeResourceIdRef": {
                  "description": "Reference to a Volume in netapp to populate remoteVolumeResourceId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "remoteVolumeResourceIdSelector": {
                  "description": "Selector for a Volume in netapp to populate remoteVolumeResourceId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "replicationFrequency": {
                  "description": "Replication frequency, supported values are '10minutes', 'hourly', 'daily', values are case sensitive.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataProtectionSnapshotPolicy": {
              "description": "A data_protection_snapshot_policy block as defined below.",
              "type": "object",
              "properties": {
                "snapshotPolicyId": {
                  "description": "Resource ID of the snapshot policy to apply to the volume.",
                  "type": "string"
                },
                "snapshotPolicyIdRef": {
                  "description": "Reference to a SnapshotPolicy in netapp to populate snapshotPolicyId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "snapshotPolicyIdSelector": {
                  "description": "Selector for a SnapshotPolicy in netapp to populate snapshotPolicyId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "encryptionKeySource": {
              "description": "The encryption key source, it can be Microsoft.NetApp for platform managed keys or Microsoft.KeyVault for customer-managed keys. This is required with key_vault_private_endpoint_id. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "exportPolicyRule": {
              "description": "One or more export_policy_rule block defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedClients": {
                    "description": "A list of allowed clients IPv4 addresses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "kerberos5IReadOnlyEnabled": {
                    "description": "Is Kerberos 5i read-only permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5IReadWriteEnabled": {
                    "description": "Is Kerberos 5i read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5PReadOnlyEnabled": {
                    "description": "Is Kerberos 5p read-only permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5PReadWriteEnabled": {
                    "description": "Is Kerberos 5p read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5ReadOnlyEnabled": {
                    "description": "Is Kerberos 5 read-only access permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5ReadWriteEnabled": {
                    "description": "Is Kerberos 5 read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "protocolsEnabled": {
                    "description": "A list of allowed protocols. Valid values include CIFS, NFSv3, or NFSv4.1. Only one value is supported at this time. This replaces the previous arguments: cifs_enabled, nfsv3_enabled and nfsv4_enabled.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rootAccessEnabled": {
                    "description": "Is root access permitted to this volume?",
                    "type": "boolean"
                  },
                  "ruleIndex": {
                    "description": "The index number of the rule.",
                    "type": "number"
                  },
                  "unixReadOnly": {
                    "description": "Is the file system on unix read only?",
                    "type": "boolean"
                  },
                  "unixReadWrite": {
                    "description": "Is the file system on unix read and write?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "kerberosEnabled": {
              "description": "Enable to allow Kerberos secured volumes. Requires appropriate export rules. Changing this forces a new resource to be created.\nEnable to allow Kerberos secured volumes. Requires appropriate export rules as well as the parent `azurerm_netapp_account` having a defined AD connection.",
              "type": "boolean"
            },
            "keyVaultPrivateEndpointId": {
              "description": "The Private Endpoint ID for Key Vault, which is required when using customer-managed keys. This is required with encryption_key_source. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "largeVolumeEnabled": {
              "description": "A boolean specifying if the volume is a large volume. Defaults to false.\nIndicates whether the volume is a large volume.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "networkFeatures": {
              "description": "Indicates which network feature to use, accepted values are Basic or Standard, it defaults to Basic if not defined. This is a feature in public preview and for more information about it and how to register, please refer to Configure network features for an Azure NetApp Files volume.",
              "type": "string"
            },
            "protocols": {
              "description": "The target volume protocol expressed as a list. Supported single value include CIFS, NFSv3, or NFSv4.1. If argument is not defined it will default to NFSv3. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to Create a dual-protocol volume for Azure NetApp Files document.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "securityStyle": {
              "description": "Volume security style, accepted values are unix or ntfs. If not provided, single-protocol volume is created defaulting to unix if it is NFSv3 or NFSv4.1 volume, if CIFS, it will default to ntfs. In a dual-protocol volume, if not provided, its value will be ntfs. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "serviceLevel": {
              "description": "The target performance of the file system. Valid values include Premium, Standard, or Ultra.",
              "type": "string"
            },
            "smb3ProtocolEncryptionEnabled": {
              "description": "Enable SMB encryption. Changing this forces a new resource to be created.\nSMB3 encryption option should be used only for SMB/DualProtocol volumes. Using it for any other workloads is not supported.",
              "type": "boolean"
            },
            "smbAccessBasedEnumerationEnabled": {
              "description": "Limits enumeration of files and folders (that is, listing the contents) in SMB only to users with allowed access on the share. For instance, if a user doesn't have access to read a file or folder in a share with access-based enumeration enabled, then the file or folder doesn't show up in directory listings. Defaults to false. For more information, please refer to Understand NAS share permissions in Azure NetApp Files\nEnable access based enumeration setting for SMB/Dual Protocol volume. When enabled, users who do not have permission to access a shared folder or file underneath it, do not see that shared resource displayed in their environment.",
              "type": "boolean"
            },
            "smbContinuousAvailabilityEnabled": {
              "description": "Enable SMB Continuous Availability. Changing this forces a new resource to be created.\nContinuous availability option should be used only for SQL and FSLogix workloads. Using it for any other SMB workloads is not supported.",
              "type": "boolean"
            },
            "smbNonBrowsableEnabled": {
              "description": "Limits clients from browsing for an SMB share by hiding the share from view in Windows Explorer or when listing shares in \"net view.\" Only end users that know the absolute paths to the share are able to find the share. Defaults to false. For more information, please refer to Understand NAS share permissions in Azure NetApp Files\nEnable non browsable share setting for SMB/Dual Protocol volume. When enabled, it restricts windows clients to browse the share",
              "type": "boolean"
            },
            "snapshotDirectoryVisible": {
              "description": "Specifies whether the .snapshot (NFS clients) or ~snapshot (SMB clients) path of a volume is visible. Defaults to true.",
              "type": "boolean"
            },
            "storageQuotaInGb": {
              "description": "The maximum Storage Quota allowed for a file system in Gigabytes.",
              "type": "number"
            },
            "subnetId": {
              "description": "The ID of the Subnet the NetApp Volume resides in, which must have the Microsoft.NetApp/volumes delegation. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "subnetIdRef": {
              "description": "Reference to a Subnet in network to populate subnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "subnetIdSelector": {
              "description": "Selector for a Subnet in network to populate subnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "throughputInMibps": {
              "description": "Throughput of this volume in Mibps.",
              "type": "number"
            },
            "volumePath": {
              "description": "A unique file path for the volume. Used when creating mount targets. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "zone": {
              "description": "Specifies the Availability Zone in which the Volume should be located. Possible values are 1, 2 and 3. Changing this forces a new resource to be created. This feature is currently in preview, for more information on how to enable it, please refer to Manage availability zone volume placement for Azure NetApp Files.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceLevel) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.serviceLevel))",
          "message": "spec.forProvider.serviceLevel is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageQuotaInGb) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.storageQuotaInGb))",
          "message": "spec.forProvider.storageQuotaInGb is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.volumePath) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.volumePath))",
          "message": "spec.forProvider.volumePath is a required parameter"
        }
      ]
    },
    "status": {
      "description": "VolumeStatus defines the observed state of Volume.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accountName": {
              "description": "The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "azureVmwareDataStoreEnabled": {
              "description": "Is the NetApp Volume enabled for Azure VMware Solution (AVS) datastore purpose. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "createFromSnapshotResourceId": {
              "description": "Creates volume from snapshot. Following properties must be the same as the original volume where the snapshot was taken from: protocols, subnet_id, location, service_level, resource_group_name and account_name. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "dataProtectionBackupPolicy": {
              "description": "A data_protection_backup_policy block as defined below.",
              "type": "object",
              "properties": {
                "backupPolicyId": {
                  "description": "Resource ID of the backup policy to apply to the volume.\nThe ID of the backup policy to associate with this volume.",
                  "type": "string"
                },
                "backupVaultId": {
                  "description": "Resource ID of the backup backup vault to associate this volume to.\nThe ID of the backup vault to associate with this volume.",
                  "type": "string"
                },
                "policyEnabled": {
                  "description": "Enables the backup policy on the volume, defaults to true.\nIf set to false, the backup policy will not be enabled on this volume, thus disabling scheduled backups.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "dataProtectionReplication": {
              "description": "A data_protection_replication block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "endpointType": {
                  "description": "The endpoint type, default value is dst for destination.",
                  "type": "string"
                },
                "remoteVolumeLocation": {
                  "description": "Location of the primary volume. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "remoteVolumeResourceId": {
                  "description": "Resource ID of the primary volume.",
                  "type": "string"
                },
                "replicationFrequency": {
                  "description": "Replication frequency, supported values are '10minutes', 'hourly', 'daily', values are case sensitive.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataProtectionSnapshotPolicy": {
              "description": "A data_protection_snapshot_policy block as defined below.",
              "type": "object",
              "properties": {
                "snapshotPolicyId": {
                  "description": "Resource ID of the snapshot policy to apply to the volume.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "encryptionKeySource": {
              "description": "The encryption key source, it can be Microsoft.NetApp for platform managed keys or Microsoft.KeyVault for customer-managed keys. This is required with key_vault_private_endpoint_id. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "exportPolicyRule": {
              "description": "One or more export_policy_rule block defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedClients": {
                    "description": "A list of allowed clients IPv4 addresses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "kerberos5IReadOnlyEnabled": {
                    "description": "Is Kerberos 5i read-only permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5IReadWriteEnabled": {
                    "description": "Is Kerberos 5i read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5PReadOnlyEnabled": {
                    "description": "Is Kerberos 5p read-only permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5PReadWriteEnabled": {
                    "description": "Is Kerberos 5p read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5ReadOnlyEnabled": {
                    "description": "Is Kerberos 5 read-only access permitted to this volume?",
                    "type": "boolean"
                  },
                  "kerberos5ReadWriteEnabled": {
                    "description": "Is Kerberos 5 read/write permitted to this volume?",
                    "type": "boolean"
                  },
                  "protocolsEnabled": {
                    "description": "A list of allowed protocols. Valid values include CIFS, NFSv3, or NFSv4.1. Only one value is supported at this time. This replaces the previous arguments: cifs_enabled, nfsv3_enabled and nfsv4_enabled.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "rootAccessEnabled": {
                    "description": "Is root access permitted to this volume?",
                    "type": "boolean"
                  },
                  "ruleIndex": {
                    "description": "The index number of the rule.",
                    "type": "number"
                  },
                  "unixReadOnly": {
                    "description": "Is the file system on unix read only?",
                    "type": "boolean"
                  },
                  "unixReadWrite": {
                    "description": "Is the file system on unix read and write?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "The ID of the NetApp Volume.",
              "type": "string"
            },
            "kerberosEnabled": {
              "description": "Enable to allow Kerberos secured volumes. Requires appropriate export rules. Changing this forces a new resource to be created.\nEnable to allow Kerberos secured volumes. Requires appropriate export rules as well as the parent `azurerm_netapp_account` having a defined AD connection.",
              "type": "boolean"
            },
            "keyVaultPrivateEndpointId": {
              "description": "The Private Endpoint ID for Key Vault, which is required when using customer-managed keys. This is required with encryption_key_source. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "largeVolumeEnabled": {
              "description": "A boolean specifying if the volume is a large volume. Defaults to false.\nIndicates whether the volume is a large volume.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "mountIpAddresses": {
              "description": "A list of IPv4 Addresses which should be used to mount the volume.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "networkFeatures": {
              "description": "Indicates which network feature to use, accepted values are Basic or Standard, it defaults to Basic if not defined. This is a feature in public preview and for more information about it and how to register, please refer to Configure network features for an Azure NetApp Files volume.",
              "type": "string"
            },
            "poolName": {
              "description": "The name of the NetApp pool in which the NetApp Volume should be created.",
              "type": "string"
            },
            "protocols": {
              "description": "The target volume protocol expressed as a list. Supported single value include CIFS, NFSv3, or NFSv4.1. If argument is not defined it will default to NFSv3. Changing this forces a new resource to be created and data will be lost. Dual protocol scenario is supported for CIFS and NFSv3, for more information, please refer to Create a dual-protocol volume for Azure NetApp Files document.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "resourceGroupName": {
              "description": "The name of the resource group where the NetApp Volume should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "securityStyle": {
              "description": "Volume security style, accepted values are unix or ntfs. If not provided, single-protocol volume is created defaulting to unix if it is NFSv3 or NFSv4.1 volume, if CIFS, it will default to ntfs. In a dual-protocol volume, if not provided, its value will be ntfs. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "serviceLevel": {
              "description": "The target performance of the file system. Valid values include Premium, Standard, or Ultra.",
              "type": "string"
            },
            "smb3ProtocolEncryptionEnabled": {
              "description": "Enable SMB encryption. Changing this forces a new resource to be created.\nSMB3 encryption option should be used only for SMB/DualProtocol volumes. Using it for any other workloads is not supported.",
              "type": "boolean"
            },
            "smbAccessBasedEnumerationEnabled": {
              "description": "Limits enumeration of files and folders (that is, listing the contents) in SMB only to users with allowed access on the share. For instance, if a user doesn't have access to read a file or folder in a share with access-based enumeration enabled, then the file or folder doesn't show up in directory listings. Defaults to false. For more information, please refer to Understand NAS share permissions in Azure NetApp Files\nEnable access based enumeration setting for SMB/Dual Protocol volume. When enabled, users who do not have permission to access a shared folder or file underneath it, do not see that shared resource displayed in their environment.",
              "type": "boolean"
            },
            "smbContinuousAvailabilityEnabled": {
              "description": "Enable SMB Continuous Availability. Changing this forces a new resource to be created.\nContinuous availability option should be used only for SQL and FSLogix workloads. Using it for any other SMB workloads is not supported.",
              "type": "boolean"
            },
            "smbNonBrowsableEnabled": {
              "description": "Limits clients from browsing for an SMB share by hiding the share from view in Windows Explorer or when listing shares in \"net view.\" Only end users that know the absolute paths to the share are able to find the share. Defaults to false. For more information, please refer to Understand NAS share permissions in Azure NetApp Files\nEnable non browsable share setting for SMB/Dual Protocol volume. When enabled, it restricts windows clients to browse the share",
              "type": "boolean"
            },
            "snapshotDirectoryVisible": {
              "description": "Specifies whether the .snapshot (NFS clients) or ~snapshot (SMB clients) path of a volume is visible. Defaults to true.",
              "type": "boolean"
            },
            "storageQuotaInGb": {
              "description": "The maximum Storage Quota allowed for a file system in Gigabytes.",
              "type": "number"
            },
            "subnetId": {
              "description": "The ID of the Subnet the NetApp Volume resides in, which must have the Microsoft.NetApp/volumes delegation. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "throughputInMibps": {
              "description": "Throughput of this volume in Mibps.",
              "type": "number"
            },
            "volumePath": {
              "description": "A unique file path for the volume. Used when creating mount targets. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "zone": {
              "description": "Specifies the Availability Zone in which the Volume should be located. Possible values are 1, 2 and 3. Changing this forces a new resource to be created. This feature is currently in preview, for more information on how to enable it, please refer to Manage availability zone volume placement for Azure NetApp Files.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
