{
  "description": "Token is the Schema for the Tokens API. Writes token for Vault",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "TokenSpec defines the desired state of Token",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "displayName": {
              "description": "String containing the token display name\nThe display name of the token.",
              "type": "string"
            },
            "explicitMaxTtl": {
              "description": "The explicit max TTL of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe explicit max TTL of the token.",
              "type": "string"
            },
            "metadata": {
              "description": "Metadata to be set on this token\nMetadata to be associated with the token.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "noDefaultPolicy": {
              "description": "Flag to not attach the default policy to this token\nFlag to disable the default policy.",
              "type": "boolean"
            },
            "noParent": {
              "description": "Flag to create a token without parent\nFlag to create a token without parent.",
              "type": "boolean"
            },
            "numUses": {
              "description": "The number of allowed uses of this token\nThe number of allowed uses of the token.",
              "type": "number"
            },
            "period": {
              "description": "The period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe period of the token.",
              "type": "string"
            },
            "policies": {
              "description": "List of policies to attach to this token\nList of policies.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "renewIncrement": {
              "description": "The renew increment. This is specified in seconds\nThe renew increment.",
              "type": "number"
            },
            "renewMinLease": {
              "description": "The minimal lease to renew this token\nThe minimum lease to renew token.",
              "type": "number"
            },
            "renewable": {
              "description": "Flag to allow to renew this token\nFlag to allow the token to be renewed",
              "type": "boolean"
            },
            "roleName": {
              "description": "The token role name\nThe token role name.",
              "type": "string"
            },
            "ttl": {
              "description": "The TTL period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe TTL period of the token.",
              "type": "string"
            },
            "wrappingTtl": {
              "description": "The TTL period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe TTL period of the wrapped token.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "displayName": {
              "description": "String containing the token display name\nThe display name of the token.",
              "type": "string"
            },
            "explicitMaxTtl": {
              "description": "The explicit max TTL of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe explicit max TTL of the token.",
              "type": "string"
            },
            "metadata": {
              "description": "Metadata to be set on this token\nMetadata to be associated with the token.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "noDefaultPolicy": {
              "description": "Flag to not attach the default policy to this token\nFlag to disable the default policy.",
              "type": "boolean"
            },
            "noParent": {
              "description": "Flag to create a token without parent\nFlag to create a token without parent.",
              "type": "boolean"
            },
            "numUses": {
              "description": "The number of allowed uses of this token\nThe number of allowed uses of the token.",
              "type": "number"
            },
            "period": {
              "description": "The period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe period of the token.",
              "type": "string"
            },
            "policies": {
              "description": "List of policies to attach to this token\nList of policies.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "renewIncrement": {
              "description": "The renew increment. This is specified in seconds\nThe renew increment.",
              "type": "number"
            },
            "renewMinLease": {
              "description": "The minimal lease to renew this token\nThe minimum lease to renew token.",
              "type": "number"
            },
            "renewable": {
              "description": "Flag to allow to renew this token\nFlag to allow the token to be renewed",
              "type": "boolean"
            },
            "roleName": {
              "description": "The token role name\nThe token role name.",
              "type": "string"
            },
            "ttl": {
              "description": "The TTL period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe TTL period of the token.",
              "type": "string"
            },
            "wrappingTtl": {
              "description": "The TTL period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe TTL period of the wrapped token.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "TokenStatus defines the observed state of Token.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "displayName": {
              "description": "String containing the token display name\nThe display name of the token.",
              "type": "string"
            },
            "explicitMaxTtl": {
              "description": "The explicit max TTL of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe explicit max TTL of the token.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "leaseDuration": {
              "description": "String containing the token lease duration if present in state file\nThe token lease duration.",
              "type": "number"
            },
            "leaseStarted": {
              "description": "String containing the token lease started time if present in state file\nThe token lease started on.",
              "type": "string"
            },
            "metadata": {
              "description": "Metadata to be set on this token\nMetadata to be associated with the token.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "noDefaultPolicy": {
              "description": "Flag to not attach the default policy to this token\nFlag to disable the default policy.",
              "type": "boolean"
            },
            "noParent": {
              "description": "Flag to create a token without parent\nFlag to create a token without parent.",
              "type": "boolean"
            },
            "numUses": {
              "description": "The number of allowed uses of this token\nThe number of allowed uses of the token.",
              "type": "number"
            },
            "period": {
              "description": "The period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe period of the token.",
              "type": "string"
            },
            "policies": {
              "description": "List of policies to attach to this token\nList of policies.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "renewIncrement": {
              "description": "The renew increment. This is specified in seconds\nThe renew increment.",
              "type": "number"
            },
            "renewMinLease": {
              "description": "The minimal lease to renew this token\nThe minimum lease to renew token.",
              "type": "number"
            },
            "renewable": {
              "description": "Flag to allow to renew this token\nFlag to allow the token to be renewed",
              "type": "boolean"
            },
            "roleName": {
              "description": "The token role name\nThe token role name.",
              "type": "string"
            },
            "ttl": {
              "description": "The TTL period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe TTL period of the token.",
              "type": "string"
            },
            "wrappingTtl": {
              "description": "The TTL period of this token. This is specified as a numeric string with suffix like \"30s\" ro \"5m\"\nThe TTL period of the wrapped token.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
