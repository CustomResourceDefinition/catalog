{
  "description": "Service is the Schema for the Services API. Manages an Azure SignalR service.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ServiceSpec defines the desired state of Service",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "aadAuthEnabled": {
              "description": "Whether to enable AAD auth? Defaults to true.",
              "type": "boolean"
            },
            "connectivityLogsEnabled": {
              "description": "Specifies if Connectivity Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "cors": {
              "description": "A cors block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedOrigins": {
                    "description": "A list of origins which should be able to make cross-origin calls. * can be used to allow all calls.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                },
                "additionalProperties": false
              }
            },
            "httpRequestLogsEnabled": {
              "description": "Specifies if Http Request Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this signalR.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this signalR. Possible values are SystemAssigned, UserAssigned.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveTrace": {
              "description": "A live_trace block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectivityLogsEnabled": {
                    "description": "Whether the log category ConnectivityLogs is enabled? Defaults to true",
                    "type": "boolean"
                  },
                  "enabled": {
                    "description": "Whether the live trace is enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "httpRequestLogsEnabled": {
                    "description": "Whether the log category HttpRequestLogs is enabled? Defaults to true",
                    "type": "boolean"
                  },
                  "messagingLogsEnabled": {
                    "description": "Whether the log category MessagingLogs is enabled? Defaults to true",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveTraceEnabled": {
              "description": "Specifies if Live Trace is enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "localAuthEnabled": {
              "description": "Whether to enable local auth? Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the SignalR service exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "messagingLogsEnabled": {
              "description": "Specifies if Messaging Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether to enable public network access? Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the SignalR service. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serverlessConnectionTimeoutInSeconds": {
              "description": "Specifies the client connection timeout. Defaults to 30.",
              "type": "number"
            },
            "serviceMode": {
              "description": "Specifies the service mode. Possible values are Classic, Default and Serverless. Defaults to Default.",
              "type": "string"
            },
            "sku": {
              "description": "A sku block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "description": "Specifies the number of units associated with this SignalR service. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 60, 70, 80, 90 and 100.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies which tier to use. Valid values are Free_F1, Standard_S1 and Premium_P1.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tlsClientCertEnabled": {
              "description": "Whether to request client certificate during TLS handshake? Defaults to false.",
              "type": "boolean"
            },
            "upstreamEndpoint": {
              "description": "An upstream_endpoint block as documented below. Using this block requires the SignalR service to be Serverless. When creating multiple blocks they will be processed in the order they are defined in.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "categoryPattern": {
                    "description": "The categories to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "eventPattern": {
                    "description": "The events to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hubPattern": {
                    "description": "The hubs to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "urlTemplate": {
                    "description": "The upstream URL Template. This can be a url or a template such as http://host.com/{hub}/api/{category}/{event}.",
                    "type": "string"
                  },
                  "userAssignedIdentityId": {
                    "description": "Specifies the Managed Identity IDs to be assigned to this signalR upstream setting by using resource uuid as both system assigned and user assigned identity is supported.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "aadAuthEnabled": {
              "description": "Whether to enable AAD auth? Defaults to true.",
              "type": "boolean"
            },
            "connectivityLogsEnabled": {
              "description": "Specifies if Connectivity Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "cors": {
              "description": "A cors block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedOrigins": {
                    "description": "A list of origins which should be able to make cross-origin calls. * can be used to allow all calls.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                },
                "additionalProperties": false
              }
            },
            "httpRequestLogsEnabled": {
              "description": "Specifies if Http Request Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this signalR.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this signalR. Possible values are SystemAssigned, UserAssigned.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveTrace": {
              "description": "A live_trace block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectivityLogsEnabled": {
                    "description": "Whether the log category ConnectivityLogs is enabled? Defaults to true",
                    "type": "boolean"
                  },
                  "enabled": {
                    "description": "Whether the live trace is enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "httpRequestLogsEnabled": {
                    "description": "Whether the log category HttpRequestLogs is enabled? Defaults to true",
                    "type": "boolean"
                  },
                  "messagingLogsEnabled": {
                    "description": "Whether the log category MessagingLogs is enabled? Defaults to true",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveTraceEnabled": {
              "description": "Specifies if Live Trace is enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "localAuthEnabled": {
              "description": "Whether to enable local auth? Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the SignalR service exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "messagingLogsEnabled": {
              "description": "Specifies if Messaging Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether to enable public network access? Defaults to true.",
              "type": "boolean"
            },
            "serverlessConnectionTimeoutInSeconds": {
              "description": "Specifies the client connection timeout. Defaults to 30.",
              "type": "number"
            },
            "serviceMode": {
              "description": "Specifies the service mode. Possible values are Classic, Default and Serverless. Defaults to Default.",
              "type": "string"
            },
            "sku": {
              "description": "A sku block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "description": "Specifies the number of units associated with this SignalR service. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 60, 70, 80, 90 and 100.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies which tier to use. Valid values are Free_F1, Standard_S1 and Premium_P1.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tlsClientCertEnabled": {
              "description": "Whether to request client certificate during TLS handshake? Defaults to false.",
              "type": "boolean"
            },
            "upstreamEndpoint": {
              "description": "An upstream_endpoint block as documented below. Using this block requires the SignalR service to be Serverless. When creating multiple blocks they will be processed in the order they are defined in.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "categoryPattern": {
                    "description": "The categories to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "eventPattern": {
                    "description": "The events to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hubPattern": {
                    "description": "The hubs to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "urlTemplate": {
                    "description": "The upstream URL Template. This can be a url or a template such as http://host.com/{hub}/api/{category}/{event}.",
                    "type": "string"
                  },
                  "userAssignedIdentityId": {
                    "description": "Specifies the Managed Identity IDs to be assigned to this signalR upstream setting by using resource uuid as both system assigned and user assigned identity is supported.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sku) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.sku))",
          "message": "spec.forProvider.sku is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ServiceStatus defines the observed state of Service.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "aadAuthEnabled": {
              "description": "Whether to enable AAD auth? Defaults to true.",
              "type": "boolean"
            },
            "connectivityLogsEnabled": {
              "description": "Specifies if Connectivity Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "cors": {
              "description": "A cors block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedOrigins": {
                    "description": "A list of origins which should be able to make cross-origin calls. * can be used to allow all calls.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                },
                "additionalProperties": false
              }
            },
            "hostname": {
              "description": "The FQDN of the SignalR service.",
              "type": "string"
            },
            "httpRequestLogsEnabled": {
              "description": "Specifies if Http Request Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the SignalR service.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this signalR.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "principalId": {
                    "description": "The ID of the SignalR service.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The ID of the SignalR service.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this signalR. Possible values are SystemAssigned, UserAssigned.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "ipAddress": {
              "description": "The publicly accessible IP of the SignalR service.",
              "type": "string"
            },
            "liveTrace": {
              "description": "A live_trace block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "connectivityLogsEnabled": {
                    "description": "Whether the log category ConnectivityLogs is enabled? Defaults to true",
                    "type": "boolean"
                  },
                  "enabled": {
                    "description": "Whether the live trace is enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "httpRequestLogsEnabled": {
                    "description": "Whether the log category HttpRequestLogs is enabled? Defaults to true",
                    "type": "boolean"
                  },
                  "messagingLogsEnabled": {
                    "description": "Whether the log category MessagingLogs is enabled? Defaults to true",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveTraceEnabled": {
              "description": "Specifies if Live Trace is enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "localAuthEnabled": {
              "description": "Whether to enable local auth? Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the SignalR service exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "messagingLogsEnabled": {
              "description": "Specifies if Messaging Logs are enabled or not. Defaults to false.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether to enable public network access? Defaults to true.",
              "type": "boolean"
            },
            "publicPort": {
              "description": "The publicly accessible port of the SignalR service which is designed for browser/client use.",
              "type": "number"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the SignalR service. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "serverPort": {
              "description": "The publicly accessible port of the SignalR service which is designed for customer server side use.",
              "type": "number"
            },
            "serverlessConnectionTimeoutInSeconds": {
              "description": "Specifies the client connection timeout. Defaults to 30.",
              "type": "number"
            },
            "serviceMode": {
              "description": "Specifies the service mode. Possible values are Classic, Default and Serverless. Defaults to Default.",
              "type": "string"
            },
            "sku": {
              "description": "A sku block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "description": "Specifies the number of units associated with this SignalR service. Valid values are 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 30, 40, 50, 60, 70, 80, 90 and 100.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies which tier to use. Valid values are Free_F1, Standard_S1 and Premium_P1.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tlsClientCertEnabled": {
              "description": "Whether to request client certificate during TLS handshake? Defaults to false.",
              "type": "boolean"
            },
            "upstreamEndpoint": {
              "description": "An upstream_endpoint block as documented below. Using this block requires the SignalR service to be Serverless. When creating multiple blocks they will be processed in the order they are defined in.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "categoryPattern": {
                    "description": "The categories to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "eventPattern": {
                    "description": "The events to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "hubPattern": {
                    "description": "The hubs to match on, or * for all.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "urlTemplate": {
                    "description": "The upstream URL Template. This can be a url or a template such as http://host.com/{hub}/api/{category}/{event}.",
                    "type": "string"
                  },
                  "userAssignedIdentityId": {
                    "description": "Specifies the Managed Identity IDs to be assigned to this signalR upstream setting by using resource uuid as both system assigned and user assigned identity is supported.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
