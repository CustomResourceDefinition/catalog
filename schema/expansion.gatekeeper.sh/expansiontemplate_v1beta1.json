{
  "description": "ExpansionTemplate is the Schema for the ExpansionTemplate API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ExpansionTemplateSpec defines the desired state of ExpansionTemplate.",
      "type": "object",
      "properties": {
        "applyTo": {
          "description": "ApplyTo lists the specific groups, versions and kinds of generator resources\nwhich will be expanded.",
          "type": "array",
          "items": {
            "description": "ApplyTo determines what GVKs items the mutation should apply to.\nGlobs are not allowed.",
            "type": "object",
            "properties": {
              "groups": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "kinds": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "versions": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "enforcementAction": {
          "description": "EnforcementAction specifies the enforcement action to be used for resources\nmatching the ExpansionTemplate. Specifying an empty value will use the\nenforcement action specified by the Constraint in violation.",
          "type": "string"
        },
        "generatedGVK": {
          "description": "GeneratedGVK specifies the GVK of the resources which the generator\nresource creates.",
          "type": "object",
          "properties": {
            "group": {
              "type": "string"
            },
            "kind": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "templateSource": {
          "description": "TemplateSource specifies the source field on the generator resource to\nuse as the base for expanded resource. For Pod-creating generators, this\nis usually spec.template",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ExpansionTemplateStatus defines the observed state of ExpansionTemplate.",
      "type": "object",
      "properties": {
        "byPod": {
          "type": "array",
          "items": {
            "description": "ExpansionTemplatePodStatusStatus defines the observed state of ExpansionTemplatePodStatus.",
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "id": {
                "description": "Important: Run \"make\" to regenerate code after modifying this file",
                "type": "string"
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64"
              },
              "operations": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "templateUID": {
                "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
