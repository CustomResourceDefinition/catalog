{
  "description": "SpotInstanceRequest is the Schema for the SpotInstanceRequests API. Provides a Spot Instance Request resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SpotInstanceRequestSpec defines the desired state of SpotInstanceRequest",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "ami": {
              "type": "string"
            },
            "associatePublicIpAddress": {
              "type": "boolean"
            },
            "availabilityZone": {
              "type": "string"
            },
            "capacityReservationSpecification": {
              "type": "object",
              "properties": {
                "capacityReservationPreference": {
                  "type": "string"
                },
                "capacityReservationTarget": {
                  "type": "object",
                  "properties": {
                    "capacityReservationId": {
                      "description": "The Spot Instance Request ID.",
                      "type": "string"
                    },
                    "capacityReservationResourceGroupArn": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cpuOptions": {
              "type": "object",
              "properties": {
                "amdSevSnp": {
                  "type": "string"
                },
                "coreCount": {
                  "type": "number"
                },
                "threadsPerCore": {
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "creditSpecification": {
              "type": "object",
              "properties": {
                "cpuCredits": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disableApiStop": {
              "type": "boolean"
            },
            "disableApiTermination": {
              "type": "boolean"
            },
            "ebsBlockDevice": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deleteOnTermination": {
                    "type": "boolean"
                  },
                  "deviceName": {
                    "type": "string"
                  },
                  "encrypted": {
                    "type": "boolean"
                  },
                  "iops": {
                    "type": "number"
                  },
                  "kmsKeyId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  },
                  "snapshotId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Key-value map of resource tags.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "tagsAll": {
                    "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "throughput": {
                    "type": "number"
                  },
                  "volumeSize": {
                    "type": "number"
                  },
                  "volumeType": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "ebsOptimized": {
              "type": "boolean"
            },
            "enablePrimaryIpv6": {
              "type": "boolean"
            },
            "enclaveOptions": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "ephemeralBlockDevice": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deviceName": {
                    "type": "string"
                  },
                  "noDevice": {
                    "type": "boolean"
                  },
                  "virtualName": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "forceDestroy": {
              "type": "boolean"
            },
            "getPasswordData": {
              "type": "boolean"
            },
            "hibernation": {
              "type": "boolean"
            },
            "hostId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "hostResourceGroupArn": {
              "type": "string"
            },
            "iamInstanceProfile": {
              "type": "string"
            },
            "instanceInitiatedShutdownBehavior": {
              "type": "string"
            },
            "instanceInterruptionBehavior": {
              "description": "Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.",
              "type": "string"
            },
            "instanceType": {
              "type": "string"
            },
            "ipv6AddressCount": {
              "type": "number"
            },
            "ipv6Addresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "keyName": {
              "type": "string"
            },
            "launchGroup": {
              "description": "A launch group is a group of spot instances that launch together and terminate together.\nIf left empty instances are launched and terminated individually.",
              "type": "string"
            },
            "launchTemplate": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The Spot Instance Request ID.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "maintenanceOptions": {
              "type": "object",
              "properties": {
                "autoRecovery": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "metadataOptions": {
              "type": "object",
              "properties": {
                "httpEndpoint": {
                  "type": "string"
                },
                "httpProtocolIpv6": {
                  "type": "string"
                },
                "httpPutResponseHopLimit": {
                  "type": "number"
                },
                "httpTokens": {
                  "type": "string"
                },
                "instanceMetadataTags": {
                  "description": "Key-value map of resource tags.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "monitoring": {
              "type": "boolean"
            },
            "networkInterface": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deleteOnTermination": {
                    "type": "boolean"
                  },
                  "deviceIndex": {
                    "type": "number"
                  },
                  "networkInterfaceId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "placementGroup": {
              "type": "string"
            },
            "placementGroupId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "placementPartitionNumber": {
              "type": "number"
            },
            "privateDnsNameOptions": {
              "type": "object",
              "properties": {
                "enableResourceNameDnsARecord": {
                  "type": "boolean"
                },
                "enableResourceNameDnsAaaaRecord": {
                  "type": "boolean"
                },
                "hostnameType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "privateIp": {
              "description": "The private IP address assigned to the instance",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "rootBlockDevice": {
              "type": "object",
              "properties": {
                "deleteOnTermination": {
                  "type": "boolean"
                },
                "encrypted": {
                  "type": "boolean"
                },
                "iops": {
                  "type": "number"
                },
                "kmsKeyId": {
                  "description": "The Spot Instance Request ID.",
                  "type": "string"
                },
                "tags": {
                  "description": "Key-value map of resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "tagsAll": {
                  "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "throughput": {
                  "type": "number"
                },
                "volumeSize": {
                  "type": "number"
                },
                "volumeType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "secondaryPrivateIps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "securityGroups": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "sourceDestCheck": {
              "type": "boolean"
            },
            "spotPrice": {
              "description": "The maximum price to request on the spot market.",
              "type": "string"
            },
            "spotType": {
              "description": "If set to one-time, after\nthe instance is terminated, the spot request will be closed.",
              "type": "string"
            },
            "subnetId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "subnetIdRef": {
              "description": "Reference to a Subnet in ec2 to populate subnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "subnetIdSelector": {
              "description": "Selector for a Subnet in ec2 to populate subnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tenancy": {
              "type": "string"
            },
            "userData": {
              "type": "string"
            },
            "userDataBase64": {
              "type": "string"
            },
            "userDataReplaceOnChange": {
              "type": "boolean"
            },
            "validFrom": {
              "description": "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
              "type": "string"
            },
            "validUntil": {
              "description": "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.",
              "type": "string"
            },
            "volumeTags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcSecurityGroupIdRefs": {
              "description": "References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.",
              "type": "array",
              "items": {
                "description": "A NamespacedReference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referenced object",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "vpcSecurityGroupIdSelector": {
              "description": "Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "vpcSecurityGroupIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "waitForFulfillment": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "ami": {
              "type": "string"
            },
            "associatePublicIpAddress": {
              "type": "boolean"
            },
            "availabilityZone": {
              "type": "string"
            },
            "capacityReservationSpecification": {
              "type": "object",
              "properties": {
                "capacityReservationPreference": {
                  "type": "string"
                },
                "capacityReservationTarget": {
                  "type": "object",
                  "properties": {
                    "capacityReservationId": {
                      "description": "The Spot Instance Request ID.",
                      "type": "string"
                    },
                    "capacityReservationResourceGroupArn": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cpuOptions": {
              "type": "object",
              "properties": {
                "amdSevSnp": {
                  "type": "string"
                },
                "coreCount": {
                  "type": "number"
                },
                "threadsPerCore": {
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "creditSpecification": {
              "type": "object",
              "properties": {
                "cpuCredits": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disableApiStop": {
              "type": "boolean"
            },
            "disableApiTermination": {
              "type": "boolean"
            },
            "ebsBlockDevice": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deleteOnTermination": {
                    "type": "boolean"
                  },
                  "deviceName": {
                    "type": "string"
                  },
                  "encrypted": {
                    "type": "boolean"
                  },
                  "iops": {
                    "type": "number"
                  },
                  "kmsKeyId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  },
                  "snapshotId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Key-value map of resource tags.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "tagsAll": {
                    "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "throughput": {
                    "type": "number"
                  },
                  "volumeSize": {
                    "type": "number"
                  },
                  "volumeType": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "ebsOptimized": {
              "type": "boolean"
            },
            "enablePrimaryIpv6": {
              "type": "boolean"
            },
            "enclaveOptions": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "ephemeralBlockDevice": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deviceName": {
                    "type": "string"
                  },
                  "noDevice": {
                    "type": "boolean"
                  },
                  "virtualName": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "forceDestroy": {
              "type": "boolean"
            },
            "getPasswordData": {
              "type": "boolean"
            },
            "hibernation": {
              "type": "boolean"
            },
            "hostId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "hostResourceGroupArn": {
              "type": "string"
            },
            "iamInstanceProfile": {
              "type": "string"
            },
            "instanceInitiatedShutdownBehavior": {
              "type": "string"
            },
            "instanceInterruptionBehavior": {
              "description": "Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.",
              "type": "string"
            },
            "instanceType": {
              "type": "string"
            },
            "ipv6AddressCount": {
              "type": "number"
            },
            "ipv6Addresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "keyName": {
              "type": "string"
            },
            "launchGroup": {
              "description": "A launch group is a group of spot instances that launch together and terminate together.\nIf left empty instances are launched and terminated individually.",
              "type": "string"
            },
            "launchTemplate": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The Spot Instance Request ID.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "maintenanceOptions": {
              "type": "object",
              "properties": {
                "autoRecovery": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "metadataOptions": {
              "type": "object",
              "properties": {
                "httpEndpoint": {
                  "type": "string"
                },
                "httpProtocolIpv6": {
                  "type": "string"
                },
                "httpPutResponseHopLimit": {
                  "type": "number"
                },
                "httpTokens": {
                  "type": "string"
                },
                "instanceMetadataTags": {
                  "description": "Key-value map of resource tags.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "monitoring": {
              "type": "boolean"
            },
            "networkInterface": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deleteOnTermination": {
                    "type": "boolean"
                  },
                  "deviceIndex": {
                    "type": "number"
                  },
                  "networkInterfaceId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "placementGroup": {
              "type": "string"
            },
            "placementGroupId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "placementPartitionNumber": {
              "type": "number"
            },
            "privateDnsNameOptions": {
              "type": "object",
              "properties": {
                "enableResourceNameDnsARecord": {
                  "type": "boolean"
                },
                "enableResourceNameDnsAaaaRecord": {
                  "type": "boolean"
                },
                "hostnameType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "privateIp": {
              "description": "The private IP address assigned to the instance",
              "type": "string"
            },
            "rootBlockDevice": {
              "type": "object",
              "properties": {
                "deleteOnTermination": {
                  "type": "boolean"
                },
                "encrypted": {
                  "type": "boolean"
                },
                "iops": {
                  "type": "number"
                },
                "kmsKeyId": {
                  "description": "The Spot Instance Request ID.",
                  "type": "string"
                },
                "tags": {
                  "description": "Key-value map of resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "tagsAll": {
                  "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "throughput": {
                  "type": "number"
                },
                "volumeSize": {
                  "type": "number"
                },
                "volumeType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "secondaryPrivateIps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "securityGroups": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "sourceDestCheck": {
              "type": "boolean"
            },
            "spotPrice": {
              "description": "The maximum price to request on the spot market.",
              "type": "string"
            },
            "spotType": {
              "description": "If set to one-time, after\nthe instance is terminated, the spot request will be closed.",
              "type": "string"
            },
            "subnetId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "subnetIdRef": {
              "description": "Reference to a Subnet in ec2 to populate subnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "subnetIdSelector": {
              "description": "Selector for a Subnet in ec2 to populate subnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tenancy": {
              "type": "string"
            },
            "userData": {
              "type": "string"
            },
            "userDataBase64": {
              "type": "string"
            },
            "userDataReplaceOnChange": {
              "type": "boolean"
            },
            "validFrom": {
              "description": "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
              "type": "string"
            },
            "validUntil": {
              "description": "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.",
              "type": "string"
            },
            "volumeTags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcSecurityGroupIdRefs": {
              "description": "References to SecurityGroup in ec2 to populate vpcSecurityGroupIds.",
              "type": "array",
              "items": {
                "description": "A NamespacedReference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referenced object",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "vpcSecurityGroupIdSelector": {
              "description": "Selector for a list of SecurityGroup in ec2 to populate vpcSecurityGroupIds.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "vpcSecurityGroupIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "waitForFulfillment": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SpotInstanceRequestStatus defines the observed state of SpotInstanceRequest.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "ami": {
              "type": "string"
            },
            "arn": {
              "type": "string"
            },
            "associatePublicIpAddress": {
              "type": "boolean"
            },
            "availabilityZone": {
              "type": "string"
            },
            "capacityReservationSpecification": {
              "type": "object",
              "properties": {
                "capacityReservationPreference": {
                  "type": "string"
                },
                "capacityReservationTarget": {
                  "type": "object",
                  "properties": {
                    "capacityReservationId": {
                      "description": "The Spot Instance Request ID.",
                      "type": "string"
                    },
                    "capacityReservationResourceGroupArn": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cpuOptions": {
              "type": "object",
              "properties": {
                "amdSevSnp": {
                  "type": "string"
                },
                "coreCount": {
                  "type": "number"
                },
                "threadsPerCore": {
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "creditSpecification": {
              "type": "object",
              "properties": {
                "cpuCredits": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disableApiStop": {
              "type": "boolean"
            },
            "disableApiTermination": {
              "type": "boolean"
            },
            "ebsBlockDevice": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deleteOnTermination": {
                    "type": "boolean"
                  },
                  "deviceName": {
                    "type": "string"
                  },
                  "encrypted": {
                    "type": "boolean"
                  },
                  "iops": {
                    "type": "number"
                  },
                  "kmsKeyId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  },
                  "snapshotId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Key-value map of resource tags.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "tagsAll": {
                    "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "throughput": {
                    "type": "number"
                  },
                  "volumeId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  },
                  "volumeSize": {
                    "type": "number"
                  },
                  "volumeType": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "ebsOptimized": {
              "type": "boolean"
            },
            "enablePrimaryIpv6": {
              "type": "boolean"
            },
            "enclaveOptions": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "ephemeralBlockDevice": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deviceName": {
                    "type": "string"
                  },
                  "noDevice": {
                    "type": "boolean"
                  },
                  "virtualName": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "forceDestroy": {
              "type": "boolean"
            },
            "getPasswordData": {
              "type": "boolean"
            },
            "hibernation": {
              "type": "boolean"
            },
            "hostId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "hostResourceGroupArn": {
              "type": "string"
            },
            "iamInstanceProfile": {
              "type": "string"
            },
            "id": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "instanceInitiatedShutdownBehavior": {
              "type": "string"
            },
            "instanceInterruptionBehavior": {
              "description": "Indicates Spot instance behavior when it is interrupted. Valid values are terminate, stop, or hibernate. Default value is terminate.",
              "type": "string"
            },
            "instanceState": {
              "type": "string"
            },
            "instanceType": {
              "type": "string"
            },
            "ipv6AddressCount": {
              "type": "number"
            },
            "ipv6Addresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "keyName": {
              "type": "string"
            },
            "launchGroup": {
              "description": "A launch group is a group of spot instances that launch together and terminate together.\nIf left empty instances are launched and terminated individually.",
              "type": "string"
            },
            "launchTemplate": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The Spot Instance Request ID.",
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "maintenanceOptions": {
              "type": "object",
              "properties": {
                "autoRecovery": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "metadataOptions": {
              "type": "object",
              "properties": {
                "httpEndpoint": {
                  "type": "string"
                },
                "httpProtocolIpv6": {
                  "type": "string"
                },
                "httpPutResponseHopLimit": {
                  "type": "number"
                },
                "httpTokens": {
                  "type": "string"
                },
                "instanceMetadataTags": {
                  "description": "Key-value map of resource tags.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "monitoring": {
              "type": "boolean"
            },
            "networkInterface": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deleteOnTermination": {
                    "type": "boolean"
                  },
                  "deviceIndex": {
                    "type": "number"
                  },
                  "networkCardIndex": {
                    "type": "number"
                  },
                  "networkInterfaceId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "outpostArn": {
              "type": "string"
            },
            "passwordData": {
              "type": "string"
            },
            "placementGroup": {
              "type": "string"
            },
            "placementGroupId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "placementPartitionNumber": {
              "type": "number"
            },
            "primaryNetworkInterface": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deleteOnTermination": {
                    "type": "boolean"
                  },
                  "networkInterfaceId": {
                    "description": "The Spot Instance Request ID.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "primaryNetworkInterfaceId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "privateDns": {
              "description": "The private DNS name assigned to the instance. Can only be\nused inside the Amazon EC2, and only available if you've enabled DNS hostnames\nfor your VPC",
              "type": "string"
            },
            "privateDnsNameOptions": {
              "type": "object",
              "properties": {
                "enableResourceNameDnsARecord": {
                  "type": "boolean"
                },
                "enableResourceNameDnsAaaaRecord": {
                  "type": "boolean"
                },
                "hostnameType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "privateIp": {
              "description": "The private IP address assigned to the instance",
              "type": "string"
            },
            "publicDns": {
              "description": "The public DNS name assigned to the instance. For EC2-VPC, this\nis only available if you've enabled DNS hostnames for your VPC",
              "type": "string"
            },
            "publicIp": {
              "description": "The public IP address assigned to the instance, if applicable.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "rootBlockDevice": {
              "type": "object",
              "properties": {
                "deleteOnTermination": {
                  "type": "boolean"
                },
                "deviceName": {
                  "type": "string"
                },
                "encrypted": {
                  "type": "boolean"
                },
                "iops": {
                  "type": "number"
                },
                "kmsKeyId": {
                  "description": "The Spot Instance Request ID.",
                  "type": "string"
                },
                "tags": {
                  "description": "Key-value map of resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "tagsAll": {
                  "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "throughput": {
                  "type": "number"
                },
                "volumeId": {
                  "description": "The Spot Instance Request ID.",
                  "type": "string"
                },
                "volumeSize": {
                  "type": "number"
                },
                "volumeType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "secondaryPrivateIps": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "securityGroups": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "sourceDestCheck": {
              "type": "boolean"
            },
            "spotBidStatus": {
              "description": "The current bid\nstatus\nof the Spot Instance Request.",
              "type": "string"
            },
            "spotInstanceId": {
              "description": "The Instance ID (if any) that is currently fulfilling\nthe Spot Instance request.",
              "type": "string"
            },
            "spotPrice": {
              "description": "The maximum price to request on the spot market.",
              "type": "string"
            },
            "spotRequestState": {
              "description": "The current request\nstate\nof the Spot Instance Request.",
              "type": "string"
            },
            "spotType": {
              "description": "If set to one-time, after\nthe instance is terminated, the spot request will be closed.",
              "type": "string"
            },
            "subnetId": {
              "description": "The Spot Instance Request ID.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tenancy": {
              "type": "string"
            },
            "userData": {
              "type": "string"
            },
            "userDataBase64": {
              "type": "string"
            },
            "userDataReplaceOnChange": {
              "type": "boolean"
            },
            "validFrom": {
              "description": "The start date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). The default is to start fulfilling the request immediately.",
              "type": "string"
            },
            "validUntil": {
              "description": "The end date and time of the request, in UTC RFC3339 format(for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request. The default end date is 7 days from the current date.",
              "type": "string"
            },
            "volumeTags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpcSecurityGroupIds": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "waitForFulfillment": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
