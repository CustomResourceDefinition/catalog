{
  "description": "LinuxVirtualMachine is the Schema for the LinuxVirtualMachines API. Manages a Linux Virtual Machine within a Dev Test Lab.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LinuxVirtualMachineSpec defines the desired state of LinuxVirtualMachine",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "allowClaim": {
              "description": "Can this Virtual Machine be claimed by users? Defaults to true.",
              "type": "boolean"
            },
            "disallowPublicIpAddress": {
              "description": "Should the Virtual Machine be created without a Public IP Address? Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "galleryImageReference": {
              "description": "A gallery_image_reference block as defined below.",
              "type": "object",
              "properties": {
                "offer": {
                  "description": "The Offer of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Publisher of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sku": {
                  "description": "The SKU of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "version": {
                  "description": "The Version of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "inboundNatRule": {
              "description": "One or more inbound_nat_rule blocks as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPort": {
                    "description": "The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.",
                    "type": "number"
                  },
                  "protocol": {
                    "description": "The Protocol used for this NAT Rule. Possible values are Tcp and Udp.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "labName": {
              "description": "Specifies the name of the Dev Test Lab in which the Virtual Machine should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labNameRef": {
              "description": "Reference to a Lab in devtestlab to populate labName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labNameSelector": {
              "description": "Selector for a Lab in devtestlab to populate labName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labSubnetName": {
              "description": "The name of a Subnet within the Dev Test Virtual Network where this machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labSubnetNameRef": {
              "description": "Reference to a Subnet in network to populate labSubnetName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labSubnetNameSelector": {
              "description": "Selector for a Subnet in network to populate labSubnetName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labVirtualNetworkId": {
              "description": "The ID of the Dev Test Virtual Network where this Virtual Machine should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labVirtualNetworkIdRef": {
              "description": "Reference to a VirtualNetwork in devtestlab to populate labVirtualNetworkId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labVirtualNetworkIdSelector": {
              "description": "Selector for a VirtualNetwork in devtestlab to populate labVirtualNetworkId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the Dev Test Lab exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "Specifies the name of the Dev Test Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "notes": {
              "description": "Any notes about the Virtual Machine.",
              "type": "string"
            },
            "passwordSecretRef": {
              "description": "The Password associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "size": {
              "description": "The Machine Size to use for this Virtual Machine, such as Standard_F2. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sshKey": {
              "description": "The SSH Key associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageType": {
              "description": "The type of Storage to use on this Virtual Machine. Possible values are Standard and Premium. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "username": {
              "description": "The Username associated with the local administrator on this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "allowClaim": {
              "description": "Can this Virtual Machine be claimed by users? Defaults to true.",
              "type": "boolean"
            },
            "disallowPublicIpAddress": {
              "description": "Should the Virtual Machine be created without a Public IP Address? Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "galleryImageReference": {
              "description": "A gallery_image_reference block as defined below.",
              "type": "object",
              "properties": {
                "offer": {
                  "description": "The Offer of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Publisher of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sku": {
                  "description": "The SKU of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "version": {
                  "description": "The Version of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "inboundNatRule": {
              "description": "One or more inbound_nat_rule blocks as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPort": {
                    "description": "The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.",
                    "type": "number"
                  },
                  "protocol": {
                    "description": "The Protocol used for this NAT Rule. Possible values are Tcp and Udp.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "labName": {
              "description": "Specifies the name of the Dev Test Lab in which the Virtual Machine should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labNameRef": {
              "description": "Reference to a Lab in devtestlab to populate labName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labNameSelector": {
              "description": "Selector for a Lab in devtestlab to populate labName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labSubnetName": {
              "description": "The name of a Subnet within the Dev Test Virtual Network where this machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labSubnetNameRef": {
              "description": "Reference to a Subnet in network to populate labSubnetName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labSubnetNameSelector": {
              "description": "Selector for a Subnet in network to populate labSubnetName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labVirtualNetworkId": {
              "description": "The ID of the Dev Test Virtual Network where this Virtual Machine should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labVirtualNetworkIdRef": {
              "description": "Reference to a VirtualNetwork in devtestlab to populate labVirtualNetworkId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "labVirtualNetworkIdSelector": {
              "description": "Selector for a VirtualNetwork in devtestlab to populate labVirtualNetworkId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the Dev Test Lab exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "Specifies the name of the Dev Test Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "notes": {
              "description": "Any notes about the Virtual Machine.",
              "type": "string"
            },
            "passwordSecretRef": {
              "description": "The Password associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "size": {
              "description": "The Machine Size to use for this Virtual Machine, such as Standard_F2. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sshKey": {
              "description": "The SSH Key associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageType": {
              "description": "The type of Storage to use on this Virtual Machine. Possible values are Standard and Premium. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "username": {
              "description": "The Username associated with the local administrator on this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.galleryImageReference) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.galleryImageReference))",
          "message": "spec.forProvider.galleryImageReference is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.size) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.size))",
          "message": "spec.forProvider.size is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.storageType))",
          "message": "spec.forProvider.storageType is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.username) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.username))",
          "message": "spec.forProvider.username is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LinuxVirtualMachineStatus defines the observed state of LinuxVirtualMachine.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "allowClaim": {
              "description": "Can this Virtual Machine be claimed by users? Defaults to true.",
              "type": "boolean"
            },
            "disallowPublicIpAddress": {
              "description": "Should the Virtual Machine be created without a Public IP Address? Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "fqdn": {
              "description": "The FQDN of the Virtual Machine.",
              "type": "string"
            },
            "galleryImageReference": {
              "description": "A gallery_image_reference block as defined below.",
              "type": "object",
              "properties": {
                "offer": {
                  "description": "The Offer of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Publisher of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sku": {
                  "description": "The SKU of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "version": {
                  "description": "The Version of the Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "The ID of the Virtual Machine.",
              "type": "string"
            },
            "inboundNatRule": {
              "description": "One or more inbound_nat_rule blocks as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPort": {
                    "description": "The Backend Port associated with this NAT Rule. Changing this forces a new resource to be created.",
                    "type": "number"
                  },
                  "frontendPort": {
                    "description": "The frontend port associated with this Inbound NAT Rule.",
                    "type": "number"
                  },
                  "protocol": {
                    "description": "The Protocol used for this NAT Rule. Possible values are Tcp and Udp.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "labName": {
              "description": "Specifies the name of the Dev Test Lab in which the Virtual Machine should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labSubnetName": {
              "description": "The name of a Subnet within the Dev Test Virtual Network where this machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "labVirtualNetworkId": {
              "description": "The ID of the Dev Test Virtual Network where this Virtual Machine should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "location": {
              "description": "Specifies the supported Azure location where the Dev Test Lab exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "Specifies the name of the Dev Test Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "notes": {
              "description": "Any notes about the Virtual Machine.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which the Dev Test Lab resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "size": {
              "description": "The Machine Size to use for this Virtual Machine, such as Standard_F2. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sshKey": {
              "description": "The SSH Key associated with the username used to login to this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageType": {
              "description": "The type of Storage to use on this Virtual Machine. Possible values are Standard and Premium. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "uniqueIdentifier": {
              "description": "The unique immutable identifier of the Virtual Machine.",
              "type": "string"
            },
            "username": {
              "description": "The Username associated with the local administrator on this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
