{
  "description": "TopicRule is the Schema for the TopicRules API. Creates and manages an AWS IoT topic rule",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "TopicRuleSpec defines the desired state of TopicRule",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "cloudwatchAlarm": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alarmName": {
                    "description": "The CloudWatch alarm name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "stateReason": {
                    "description": "The reason for the alarm change.",
                    "type": "string"
                  },
                  "stateValue": {
                    "description": "The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "cloudwatchLogs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "logGroupName": {
                    "description": "The CloudWatch log group name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "cloudwatchMetric": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "metricName": {
                    "description": "The CloudWatch metric name.",
                    "type": "string"
                  },
                  "metricNamespace": {
                    "description": "The CloudWatch metric namespace name.",
                    "type": "string"
                  },
                  "metricTimestamp": {
                    "description": "An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).",
                    "type": "string"
                  },
                  "metricUnit": {
                    "description": "The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)",
                    "type": "string"
                  },
                  "metricValue": {
                    "description": "The CloudWatch metric value.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of the rule.",
              "type": "string"
            },
            "dynamodb": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hashKeyField": {
                    "description": "The hash key name.",
                    "type": "string"
                  },
                  "hashKeyType": {
                    "description": "The hash key type. Valid values are \"STRING\" or \"NUMBER\".",
                    "type": "string"
                  },
                  "hashKeyValue": {
                    "description": "The hash key value.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "The operation. Valid values are \"INSERT\", \"UPDATE\", or \"DELETE\".",
                    "type": "string"
                  },
                  "payloadField": {
                    "description": "The action payload.",
                    "type": "string"
                  },
                  "rangeKeyField": {
                    "description": "The range key name.",
                    "type": "string"
                  },
                  "rangeKeyType": {
                    "description": "The range key type. Valid values are \"STRING\" or \"NUMBER\".",
                    "type": "string"
                  },
                  "rangeKeyValue": {
                    "description": "The range key value.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "tableName": {
                    "description": "The name of the DynamoDB table.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "dynamodbv2": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "putItem": {
                    "description": "Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.",
                    "type": "object",
                    "properties": {
                      "tableName": {
                        "description": "The name of the DynamoDB table.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "elasticsearch": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "description": "The endpoint of your Elasticsearch domain.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The unique identifier for the document you are storing.",
                    "type": "string"
                  },
                  "index": {
                    "description": "The Elasticsearch index where you want to store your data.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of document you are storing.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "enabled": {
              "description": "Specifies whether the rule is enabled.",
              "type": "boolean"
            },
            "errorAction": {
              "description": "Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.",
              "type": "object",
              "properties": {
                "cloudwatchAlarm": {
                  "type": "object",
                  "properties": {
                    "alarmName": {
                      "description": "The CloudWatch alarm name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "stateReason": {
                      "description": "The reason for the alarm change.",
                      "type": "string"
                    },
                    "stateValue": {
                      "description": "The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "cloudwatchLogs": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "logGroupName": {
                      "description": "The CloudWatch log group name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "cloudwatchMetric": {
                  "type": "object",
                  "properties": {
                    "metricName": {
                      "description": "The CloudWatch metric name.",
                      "type": "string"
                    },
                    "metricNamespace": {
                      "description": "The CloudWatch metric namespace name.",
                      "type": "string"
                    },
                    "metricTimestamp": {
                      "description": "An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).",
                      "type": "string"
                    },
                    "metricUnit": {
                      "description": "The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)",
                      "type": "string"
                    },
                    "metricValue": {
                      "description": "The CloudWatch metric value.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "dynamodb": {
                  "type": "object",
                  "properties": {
                    "hashKeyField": {
                      "description": "The hash key name.",
                      "type": "string"
                    },
                    "hashKeyType": {
                      "description": "The hash key type. Valid values are \"STRING\" or \"NUMBER\".",
                      "type": "string"
                    },
                    "hashKeyValue": {
                      "description": "The hash key value.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "The operation. Valid values are \"INSERT\", \"UPDATE\", or \"DELETE\".",
                      "type": "string"
                    },
                    "payloadField": {
                      "description": "The action payload.",
                      "type": "string"
                    },
                    "rangeKeyField": {
                      "description": "The range key name.",
                      "type": "string"
                    },
                    "rangeKeyType": {
                      "description": "The range key type. Valid values are \"STRING\" or \"NUMBER\".",
                      "type": "string"
                    },
                    "rangeKeyValue": {
                      "description": "The range key value.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "tableName": {
                      "description": "The name of the DynamoDB table.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "dynamodbv2": {
                  "type": "object",
                  "properties": {
                    "putItem": {
                      "description": "Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.",
                      "type": "object",
                      "properties": {
                        "tableName": {
                          "description": "The name of the DynamoDB table.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "elasticsearch": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "The endpoint of your Elasticsearch domain.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique identifier for the document you are storing.",
                      "type": "string"
                    },
                    "index": {
                      "description": "The Elasticsearch index where you want to store your data.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of document you are storing.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "firehose": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "deliveryStreamName": {
                      "description": "The delivery stream name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "separator": {
                      "description": "A character separator that is used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "http": {
                  "type": "object",
                  "properties": {
                    "confirmationUrl": {
                      "description": "The HTTPS URL used to verify ownership of url.",
                      "type": "string"
                    },
                    "httpHeader": {
                      "description": "Custom HTTP header IoT Core should send. It is possible to define more than one custom header.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The name of the HTTP header.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "url": {
                      "description": "The HTTPS URL.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "iotAnalytics": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "channelName": {
                      "description": "Name of AWS IOT Analytics channel.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "iotEvents": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "inputName": {
                      "description": "The name of the AWS IoT Events input.",
                      "type": "string"
                    },
                    "messageId": {
                      "description": "Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "kafka": {
                  "type": "object",
                  "properties": {
                    "clientProperties": {
                      "description": "Properties of the Apache Kafka producer client. For more info, see the AWS documentation.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "destinationArn": {
                      "description": "The ARN of Kafka action's VPC aws_iot_topic_rule_destination.",
                      "type": "string"
                    },
                    "header": {
                      "description": "The list of Kafka headers that you specify. Nested arguments below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The name of the HTTP header.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "key": {
                      "description": "The name of the HTTP header.",
                      "type": "string"
                    },
                    "partition": {
                      "description": "The Kafka message partition.",
                      "type": "string"
                    },
                    "topic": {
                      "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "kinesis": {
                  "type": "object",
                  "properties": {
                    "partitionKey": {
                      "description": "The partition key.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "streamName": {
                      "description": "The name of the Amazon Kinesis stream.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "lambda": {
                  "type": "object",
                  "properties": {
                    "functionArn": {
                      "description": "The ARN of the Lambda function.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "republish": {
                  "type": "object",
                  "properties": {
                    "qos": {
                      "description": "The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.",
                      "type": "number"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "topic": {
                      "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "s3": {
                  "type": "object",
                  "properties": {
                    "bucketName": {
                      "description": "The Amazon S3 bucket name.",
                      "type": "string"
                    },
                    "cannedAcl": {
                      "description": "The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.",
                      "type": "string"
                    },
                    "key": {
                      "description": "The name of the HTTP header.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sns": {
                  "type": "object",
                  "properties": {
                    "messageFormat": {
                      "description": "The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\".",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "roleArnRef": {
                      "description": "Reference to a Role in iam to populate roleArn.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "roleArnSelector": {
                      "description": "Selector for a Role in iam to populate roleArn.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "targetArn": {
                      "description": "The ARN of the SNS topic.",
                      "type": "string"
                    },
                    "targetArnRef": {
                      "description": "Reference to a Topic in sns to populate targetArn.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "targetArnSelector": {
                      "description": "Selector for a Topic in sns to populate targetArn.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sqs": {
                  "type": "object",
                  "properties": {
                    "queueUrl": {
                      "description": "The URL of the Amazon SQS queue.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "useBase64": {
                      "description": "Specifies whether to use Base64 encoding.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "stepFunctions": {
                  "type": "object",
                  "properties": {
                    "executionNamePrefix": {
                      "description": "The prefix used to generate, along with a UUID, the unique state machine execution name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "stateMachineName": {
                      "description": "The name of the Step Functions state machine whose execution will be started.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "timestream": {
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The name of an Amazon Timestream database.",
                      "type": "string"
                    },
                    "dimension": {
                      "description": "Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the rule.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "tableName": {
                      "description": "The name of the DynamoDB table.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.",
                      "type": "object",
                      "properties": {
                        "unit": {
                          "description": "The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "firehose": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "deliveryStreamName": {
                    "description": "The delivery stream name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "separator": {
                    "description": "A character separator that is used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "http": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "confirmationUrl": {
                    "description": "The HTTPS URL used to verify ownership of url.",
                    "type": "string"
                  },
                  "httpHeader": {
                    "description": "Custom HTTP header IoT Core should send. It is possible to define more than one custom header.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The name of the HTTP header.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "url": {
                    "description": "The HTTPS URL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "iotAnalytics": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "channelName": {
                    "description": "Name of AWS IOT Analytics channel.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "iotEvents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "inputName": {
                    "description": "The name of the AWS IoT Events input.",
                    "type": "string"
                  },
                  "messageId": {
                    "description": "Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "kafka": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientProperties": {
                    "description": "Properties of the Apache Kafka producer client. For more info, see the AWS documentation.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "destinationArn": {
                    "description": "The ARN of Kafka action's VPC aws_iot_topic_rule_destination.",
                    "type": "string"
                  },
                  "header": {
                    "description": "The list of Kafka headers that you specify. Nested arguments below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The name of the HTTP header.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "key": {
                    "description": "The name of the HTTP header.",
                    "type": "string"
                  },
                  "partition": {
                    "description": "The Kafka message partition.",
                    "type": "string"
                  },
                  "topic": {
                    "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "kinesis": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "partitionKey": {
                    "description": "The partition key.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "streamName": {
                    "description": "The name of the Amazon Kinesis stream.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "lambda": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "functionArn": {
                    "description": "The ARN of the Lambda function.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "republish": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "qos": {
                    "description": "The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "topic": {
                    "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "s3": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bucketName": {
                    "description": "The Amazon S3 bucket name.",
                    "type": "string"
                  },
                  "cannedAcl": {
                    "description": "The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.",
                    "type": "string"
                  },
                  "key": {
                    "description": "The name of the HTTP header.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "sns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "messageFormat": {
                    "description": "The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\".",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetArn": {
                    "description": "The ARN of the SNS topic.",
                    "type": "string"
                  },
                  "targetArnRef": {
                    "description": "Reference to a Topic in sns to populate targetArn.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetArnSelector": {
                    "description": "Selector for a Topic in sns to populate targetArn.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "sql": {
              "description": "The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.",
              "type": "string"
            },
            "sqlVersion": {
              "description": "The version of the SQL rules engine to use when evaluating the rule.",
              "type": "string"
            },
            "sqs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "queueUrl": {
                    "description": "The URL of the Amazon SQS queue.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "useBase64": {
                    "description": "Specifies whether to use Base64 encoding.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "stepFunctions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "executionNamePrefix": {
                    "description": "The prefix used to generate, along with a UUID, the unique state machine execution name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "stateMachineName": {
                    "description": "The name of the Step Functions state machine whose execution will be started.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timestream": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "databaseName": {
                    "description": "The name of an Amazon Timestream database.",
                    "type": "string"
                  },
                  "dimension": {
                    "description": "Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the rule.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "tableName": {
                    "description": "The name of the DynamoDB table.",
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "description": "The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the HTTP header.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "cloudwatchAlarm": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alarmName": {
                    "description": "The CloudWatch alarm name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "stateReason": {
                    "description": "The reason for the alarm change.",
                    "type": "string"
                  },
                  "stateValue": {
                    "description": "The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "cloudwatchLogs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "logGroupName": {
                    "description": "The CloudWatch log group name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "cloudwatchMetric": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "metricName": {
                    "description": "The CloudWatch metric name.",
                    "type": "string"
                  },
                  "metricNamespace": {
                    "description": "The CloudWatch metric namespace name.",
                    "type": "string"
                  },
                  "metricTimestamp": {
                    "description": "An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).",
                    "type": "string"
                  },
                  "metricUnit": {
                    "description": "The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)",
                    "type": "string"
                  },
                  "metricValue": {
                    "description": "The CloudWatch metric value.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of the rule.",
              "type": "string"
            },
            "dynamodb": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hashKeyField": {
                    "description": "The hash key name.",
                    "type": "string"
                  },
                  "hashKeyType": {
                    "description": "The hash key type. Valid values are \"STRING\" or \"NUMBER\".",
                    "type": "string"
                  },
                  "hashKeyValue": {
                    "description": "The hash key value.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "The operation. Valid values are \"INSERT\", \"UPDATE\", or \"DELETE\".",
                    "type": "string"
                  },
                  "payloadField": {
                    "description": "The action payload.",
                    "type": "string"
                  },
                  "rangeKeyField": {
                    "description": "The range key name.",
                    "type": "string"
                  },
                  "rangeKeyType": {
                    "description": "The range key type. Valid values are \"STRING\" or \"NUMBER\".",
                    "type": "string"
                  },
                  "rangeKeyValue": {
                    "description": "The range key value.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "tableName": {
                    "description": "The name of the DynamoDB table.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "dynamodbv2": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "putItem": {
                    "description": "Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.",
                    "type": "object",
                    "properties": {
                      "tableName": {
                        "description": "The name of the DynamoDB table.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "elasticsearch": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "description": "The endpoint of your Elasticsearch domain.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The unique identifier for the document you are storing.",
                    "type": "string"
                  },
                  "index": {
                    "description": "The Elasticsearch index where you want to store your data.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of document you are storing.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "enabled": {
              "description": "Specifies whether the rule is enabled.",
              "type": "boolean"
            },
            "errorAction": {
              "description": "Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.",
              "type": "object",
              "properties": {
                "cloudwatchAlarm": {
                  "type": "object",
                  "properties": {
                    "alarmName": {
                      "description": "The CloudWatch alarm name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "stateReason": {
                      "description": "The reason for the alarm change.",
                      "type": "string"
                    },
                    "stateValue": {
                      "description": "The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "cloudwatchLogs": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "logGroupName": {
                      "description": "The CloudWatch log group name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "cloudwatchMetric": {
                  "type": "object",
                  "properties": {
                    "metricName": {
                      "description": "The CloudWatch metric name.",
                      "type": "string"
                    },
                    "metricNamespace": {
                      "description": "The CloudWatch metric namespace name.",
                      "type": "string"
                    },
                    "metricTimestamp": {
                      "description": "An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).",
                      "type": "string"
                    },
                    "metricUnit": {
                      "description": "The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)",
                      "type": "string"
                    },
                    "metricValue": {
                      "description": "The CloudWatch metric value.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "dynamodb": {
                  "type": "object",
                  "properties": {
                    "hashKeyField": {
                      "description": "The hash key name.",
                      "type": "string"
                    },
                    "hashKeyType": {
                      "description": "The hash key type. Valid values are \"STRING\" or \"NUMBER\".",
                      "type": "string"
                    },
                    "hashKeyValue": {
                      "description": "The hash key value.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "The operation. Valid values are \"INSERT\", \"UPDATE\", or \"DELETE\".",
                      "type": "string"
                    },
                    "payloadField": {
                      "description": "The action payload.",
                      "type": "string"
                    },
                    "rangeKeyField": {
                      "description": "The range key name.",
                      "type": "string"
                    },
                    "rangeKeyType": {
                      "description": "The range key type. Valid values are \"STRING\" or \"NUMBER\".",
                      "type": "string"
                    },
                    "rangeKeyValue": {
                      "description": "The range key value.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "tableName": {
                      "description": "The name of the DynamoDB table.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "dynamodbv2": {
                  "type": "object",
                  "properties": {
                    "putItem": {
                      "description": "Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.",
                      "type": "object",
                      "properties": {
                        "tableName": {
                          "description": "The name of the DynamoDB table.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "elasticsearch": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "The endpoint of your Elasticsearch domain.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique identifier for the document you are storing.",
                      "type": "string"
                    },
                    "index": {
                      "description": "The Elasticsearch index where you want to store your data.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of document you are storing.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "firehose": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "deliveryStreamName": {
                      "description": "The delivery stream name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "separator": {
                      "description": "A character separator that is used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "http": {
                  "type": "object",
                  "properties": {
                    "confirmationUrl": {
                      "description": "The HTTPS URL used to verify ownership of url.",
                      "type": "string"
                    },
                    "httpHeader": {
                      "description": "Custom HTTP header IoT Core should send. It is possible to define more than one custom header.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The name of the HTTP header.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "url": {
                      "description": "The HTTPS URL.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "iotAnalytics": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "channelName": {
                      "description": "Name of AWS IOT Analytics channel.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "iotEvents": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "inputName": {
                      "description": "The name of the AWS IoT Events input.",
                      "type": "string"
                    },
                    "messageId": {
                      "description": "Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "kafka": {
                  "type": "object",
                  "properties": {
                    "clientProperties": {
                      "description": "Properties of the Apache Kafka producer client. For more info, see the AWS documentation.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "destinationArn": {
                      "description": "The ARN of Kafka action's VPC aws_iot_topic_rule_destination.",
                      "type": "string"
                    },
                    "header": {
                      "description": "The list of Kafka headers that you specify. Nested arguments below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The name of the HTTP header.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "key": {
                      "description": "The name of the HTTP header.",
                      "type": "string"
                    },
                    "partition": {
                      "description": "The Kafka message partition.",
                      "type": "string"
                    },
                    "topic": {
                      "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "kinesis": {
                  "type": "object",
                  "properties": {
                    "partitionKey": {
                      "description": "The partition key.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "streamName": {
                      "description": "The name of the Amazon Kinesis stream.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "lambda": {
                  "type": "object",
                  "properties": {
                    "functionArn": {
                      "description": "The ARN of the Lambda function.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "republish": {
                  "type": "object",
                  "properties": {
                    "qos": {
                      "description": "The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.",
                      "type": "number"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "topic": {
                      "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "s3": {
                  "type": "object",
                  "properties": {
                    "bucketName": {
                      "description": "The Amazon S3 bucket name.",
                      "type": "string"
                    },
                    "cannedAcl": {
                      "description": "The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.",
                      "type": "string"
                    },
                    "key": {
                      "description": "The name of the HTTP header.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sns": {
                  "type": "object",
                  "properties": {
                    "messageFormat": {
                      "description": "The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\".",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "roleArnRef": {
                      "description": "Reference to a Role in iam to populate roleArn.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "roleArnSelector": {
                      "description": "Selector for a Role in iam to populate roleArn.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "targetArn": {
                      "description": "The ARN of the SNS topic.",
                      "type": "string"
                    },
                    "targetArnRef": {
                      "description": "Reference to a Topic in sns to populate targetArn.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "targetArnSelector": {
                      "description": "Selector for a Topic in sns to populate targetArn.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sqs": {
                  "type": "object",
                  "properties": {
                    "queueUrl": {
                      "description": "The URL of the Amazon SQS queue.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "useBase64": {
                      "description": "Specifies whether to use Base64 encoding.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "stepFunctions": {
                  "type": "object",
                  "properties": {
                    "executionNamePrefix": {
                      "description": "The prefix used to generate, along with a UUID, the unique state machine execution name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "stateMachineName": {
                      "description": "The name of the Step Functions state machine whose execution will be started.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "timestream": {
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The name of an Amazon Timestream database.",
                      "type": "string"
                    },
                    "dimension": {
                      "description": "Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the rule.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "tableName": {
                      "description": "The name of the DynamoDB table.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.",
                      "type": "object",
                      "properties": {
                        "unit": {
                          "description": "The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "firehose": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "deliveryStreamName": {
                    "description": "The delivery stream name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "separator": {
                    "description": "A character separator that is used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "http": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "confirmationUrl": {
                    "description": "The HTTPS URL used to verify ownership of url.",
                    "type": "string"
                  },
                  "httpHeader": {
                    "description": "Custom HTTP header IoT Core should send. It is possible to define more than one custom header.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The name of the HTTP header.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "url": {
                    "description": "The HTTPS URL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "iotAnalytics": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "channelName": {
                    "description": "Name of AWS IOT Analytics channel.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "iotEvents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "inputName": {
                    "description": "The name of the AWS IoT Events input.",
                    "type": "string"
                  },
                  "messageId": {
                    "description": "Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "kafka": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientProperties": {
                    "description": "Properties of the Apache Kafka producer client. For more info, see the AWS documentation.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "destinationArn": {
                    "description": "The ARN of Kafka action's VPC aws_iot_topic_rule_destination.",
                    "type": "string"
                  },
                  "header": {
                    "description": "The list of Kafka headers that you specify. Nested arguments below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The name of the HTTP header.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "key": {
                    "description": "The name of the HTTP header.",
                    "type": "string"
                  },
                  "partition": {
                    "description": "The Kafka message partition.",
                    "type": "string"
                  },
                  "topic": {
                    "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "kinesis": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "partitionKey": {
                    "description": "The partition key.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "streamName": {
                    "description": "The name of the Amazon Kinesis stream.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "lambda": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "functionArn": {
                    "description": "The ARN of the Lambda function.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "republish": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "qos": {
                    "description": "The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "topic": {
                    "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "s3": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bucketName": {
                    "description": "The Amazon S3 bucket name.",
                    "type": "string"
                  },
                  "cannedAcl": {
                    "description": "The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.",
                    "type": "string"
                  },
                  "key": {
                    "description": "The name of the HTTP header.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "sns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "messageFormat": {
                    "description": "The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\".",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "roleArnRef": {
                    "description": "Reference to a Role in iam to populate roleArn.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "roleArnSelector": {
                    "description": "Selector for a Role in iam to populate roleArn.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetArn": {
                    "description": "The ARN of the SNS topic.",
                    "type": "string"
                  },
                  "targetArnRef": {
                    "description": "Reference to a Topic in sns to populate targetArn.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetArnSelector": {
                    "description": "Selector for a Topic in sns to populate targetArn.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "sql": {
              "description": "The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.",
              "type": "string"
            },
            "sqlVersion": {
              "description": "The version of the SQL rules engine to use when evaluating the rule.",
              "type": "string"
            },
            "sqs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "queueUrl": {
                    "description": "The URL of the Amazon SQS queue.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "useBase64": {
                    "description": "Specifies whether to use Base64 encoding.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "stepFunctions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "executionNamePrefix": {
                    "description": "The prefix used to generate, along with a UUID, the unique state machine execution name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "stateMachineName": {
                    "description": "The name of the Step Functions state machine whose execution will be started.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timestream": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "databaseName": {
                    "description": "The name of an Amazon Timestream database.",
                    "type": "string"
                  },
                  "dimension": {
                    "description": "Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the rule.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "tableName": {
                    "description": "The name of the DynamoDB table.",
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "description": "The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the HTTP header.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enabled) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.enabled))",
          "message": "spec.forProvider.enabled is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sql) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.sql))",
          "message": "spec.forProvider.sql is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sqlVersion) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.sqlVersion))",
          "message": "spec.forProvider.sqlVersion is a required parameter"
        }
      ]
    },
    "status": {
      "description": "TopicRuleStatus defines the observed state of TopicRule.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The ARN of the topic rule",
              "type": "string"
            },
            "cloudwatchAlarm": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alarmName": {
                    "description": "The CloudWatch alarm name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "stateReason": {
                    "description": "The reason for the alarm change.",
                    "type": "string"
                  },
                  "stateValue": {
                    "description": "The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "cloudwatchLogs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "logGroupName": {
                    "description": "The CloudWatch log group name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "cloudwatchMetric": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "metricName": {
                    "description": "The CloudWatch metric name.",
                    "type": "string"
                  },
                  "metricNamespace": {
                    "description": "The CloudWatch metric namespace name.",
                    "type": "string"
                  },
                  "metricTimestamp": {
                    "description": "An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).",
                    "type": "string"
                  },
                  "metricUnit": {
                    "description": "The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)",
                    "type": "string"
                  },
                  "metricValue": {
                    "description": "The CloudWatch metric value.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of the rule.",
              "type": "string"
            },
            "dynamodb": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hashKeyField": {
                    "description": "The hash key name.",
                    "type": "string"
                  },
                  "hashKeyType": {
                    "description": "The hash key type. Valid values are \"STRING\" or \"NUMBER\".",
                    "type": "string"
                  },
                  "hashKeyValue": {
                    "description": "The hash key value.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "The operation. Valid values are \"INSERT\", \"UPDATE\", or \"DELETE\".",
                    "type": "string"
                  },
                  "payloadField": {
                    "description": "The action payload.",
                    "type": "string"
                  },
                  "rangeKeyField": {
                    "description": "The range key name.",
                    "type": "string"
                  },
                  "rangeKeyType": {
                    "description": "The range key type. Valid values are \"STRING\" or \"NUMBER\".",
                    "type": "string"
                  },
                  "rangeKeyValue": {
                    "description": "The range key value.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "tableName": {
                    "description": "The name of the DynamoDB table.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "dynamodbv2": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "putItem": {
                    "description": "Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.",
                    "type": "object",
                    "properties": {
                      "tableName": {
                        "description": "The name of the DynamoDB table.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "elasticsearch": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "endpoint": {
                    "description": "The endpoint of your Elasticsearch domain.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The unique identifier for the document you are storing.",
                    "type": "string"
                  },
                  "index": {
                    "description": "The Elasticsearch index where you want to store your data.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of document you are storing.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "enabled": {
              "description": "Specifies whether the rule is enabled.",
              "type": "boolean"
            },
            "errorAction": {
              "description": "Configuration block with error action to be associated with the rule. See the documentation for cloudwatch_alarm, cloudwatch_logs, cloudwatch_metric, dynamodb, dynamodbv2, elasticsearch, firehose, http, iot_analytics, iot_events, kafka, kinesis, lambda, republish, s3, sns, sqs, step_functions, timestream configuration blocks for further configuration details.",
              "type": "object",
              "properties": {
                "cloudwatchAlarm": {
                  "type": "object",
                  "properties": {
                    "alarmName": {
                      "description": "The CloudWatch alarm name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "stateReason": {
                      "description": "The reason for the alarm change.",
                      "type": "string"
                    },
                    "stateValue": {
                      "description": "The value of the alarm state. Acceptable values are: OK, ALARM, INSUFFICIENT_DATA.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "cloudwatchLogs": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "logGroupName": {
                      "description": "The CloudWatch log group name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "cloudwatchMetric": {
                  "type": "object",
                  "properties": {
                    "metricName": {
                      "description": "The CloudWatch metric name.",
                      "type": "string"
                    },
                    "metricNamespace": {
                      "description": "The CloudWatch metric namespace name.",
                      "type": "string"
                    },
                    "metricTimestamp": {
                      "description": "An optional Unix timestamp (http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#about_timestamp).",
                      "type": "string"
                    },
                    "metricUnit": {
                      "description": "The metric unit (supported units can be found here: http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/cloudwatch_concepts.html#Unit)",
                      "type": "string"
                    },
                    "metricValue": {
                      "description": "The CloudWatch metric value.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "dynamodb": {
                  "type": "object",
                  "properties": {
                    "hashKeyField": {
                      "description": "The hash key name.",
                      "type": "string"
                    },
                    "hashKeyType": {
                      "description": "The hash key type. Valid values are \"STRING\" or \"NUMBER\".",
                      "type": "string"
                    },
                    "hashKeyValue": {
                      "description": "The hash key value.",
                      "type": "string"
                    },
                    "operation": {
                      "description": "The operation. Valid values are \"INSERT\", \"UPDATE\", or \"DELETE\".",
                      "type": "string"
                    },
                    "payloadField": {
                      "description": "The action payload.",
                      "type": "string"
                    },
                    "rangeKeyField": {
                      "description": "The range key name.",
                      "type": "string"
                    },
                    "rangeKeyType": {
                      "description": "The range key type. Valid values are \"STRING\" or \"NUMBER\".",
                      "type": "string"
                    },
                    "rangeKeyValue": {
                      "description": "The range key value.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "tableName": {
                      "description": "The name of the DynamoDB table.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "dynamodbv2": {
                  "type": "object",
                  "properties": {
                    "putItem": {
                      "description": "Configuration block with DynamoDB Table to which the message will be written. Nested arguments below.",
                      "type": "object",
                      "properties": {
                        "tableName": {
                          "description": "The name of the DynamoDB table.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "elasticsearch": {
                  "type": "object",
                  "properties": {
                    "endpoint": {
                      "description": "The endpoint of your Elasticsearch domain.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The unique identifier for the document you are storing.",
                      "type": "string"
                    },
                    "index": {
                      "description": "The Elasticsearch index where you want to store your data.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "type": {
                      "description": "The type of document you are storing.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "firehose": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "deliveryStreamName": {
                      "description": "The delivery stream name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "separator": {
                      "description": "A character separator that is used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "http": {
                  "type": "object",
                  "properties": {
                    "confirmationUrl": {
                      "description": "The HTTPS URL used to verify ownership of url.",
                      "type": "string"
                    },
                    "httpHeader": {
                      "description": "Custom HTTP header IoT Core should send. It is possible to define more than one custom header.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The name of the HTTP header.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "url": {
                      "description": "The HTTPS URL.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "iotAnalytics": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "channelName": {
                      "description": "Name of AWS IOT Analytics channel.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "iotEvents": {
                  "type": "object",
                  "properties": {
                    "batchMode": {
                      "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                      "type": "boolean"
                    },
                    "inputName": {
                      "description": "The name of the AWS IoT Events input.",
                      "type": "string"
                    },
                    "messageId": {
                      "description": "Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "kafka": {
                  "type": "object",
                  "properties": {
                    "clientProperties": {
                      "description": "Properties of the Apache Kafka producer client. For more info, see the AWS documentation.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "destinationArn": {
                      "description": "The ARN of Kafka action's VPC aws_iot_topic_rule_destination.",
                      "type": "string"
                    },
                    "header": {
                      "description": "The list of Kafka headers that you specify. Nested arguments below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The name of the HTTP header.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "key": {
                      "description": "The name of the HTTP header.",
                      "type": "string"
                    },
                    "partition": {
                      "description": "The Kafka message partition.",
                      "type": "string"
                    },
                    "topic": {
                      "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "kinesis": {
                  "type": "object",
                  "properties": {
                    "partitionKey": {
                      "description": "The partition key.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "streamName": {
                      "description": "The name of the Amazon Kinesis stream.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "lambda": {
                  "type": "object",
                  "properties": {
                    "functionArn": {
                      "description": "The ARN of the Lambda function.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "republish": {
                  "type": "object",
                  "properties": {
                    "qos": {
                      "description": "The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.",
                      "type": "number"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "topic": {
                      "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "s3": {
                  "type": "object",
                  "properties": {
                    "bucketName": {
                      "description": "The Amazon S3 bucket name.",
                      "type": "string"
                    },
                    "cannedAcl": {
                      "description": "The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.",
                      "type": "string"
                    },
                    "key": {
                      "description": "The name of the HTTP header.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sns": {
                  "type": "object",
                  "properties": {
                    "messageFormat": {
                      "description": "The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\".",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "targetArn": {
                      "description": "The ARN of the SNS topic.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "sqs": {
                  "type": "object",
                  "properties": {
                    "queueUrl": {
                      "description": "The URL of the Amazon SQS queue.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "useBase64": {
                      "description": "Specifies whether to use Base64 encoding.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "stepFunctions": {
                  "type": "object",
                  "properties": {
                    "executionNamePrefix": {
                      "description": "The prefix used to generate, along with a UUID, the unique state machine execution name.",
                      "type": "string"
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "stateMachineName": {
                      "description": "The name of the Step Functions state machine whose execution will be started.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "timestream": {
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The name of an Amazon Timestream database.",
                      "type": "string"
                    },
                    "dimension": {
                      "description": "Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the rule.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the HTTP header.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "roleArn": {
                      "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                      "type": "string"
                    },
                    "tableName": {
                      "description": "The name of the DynamoDB table.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.",
                      "type": "object",
                      "properties": {
                        "unit": {
                          "description": "The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "firehose": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "deliveryStreamName": {
                    "description": "The delivery stream name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "separator": {
                    "description": "A character separator that is used to separate records written to the Firehose stream. Valid values are: '\\n' (newline), '\\t' (tab), '\\r\\n' (Windows newline), ',' (comma).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "http": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "confirmationUrl": {
                    "description": "The HTTPS URL used to verify ownership of url.",
                    "type": "string"
                  },
                  "httpHeader": {
                    "description": "Custom HTTP header IoT Core should send. It is possible to define more than one custom header.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The name of the HTTP header.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "url": {
                    "description": "The HTTPS URL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "The unique identifier for the document you are storing.",
              "type": "string"
            },
            "iotAnalytics": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "channelName": {
                    "description": "Name of AWS IOT Analytics channel.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "iotEvents": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "batchMode": {
                    "description": "The payload that contains a JSON array of records will be sent to CloudWatch via a batch call.",
                    "type": "boolean"
                  },
                  "inputName": {
                    "description": "The name of the AWS IoT Events input.",
                    "type": "string"
                  },
                  "messageId": {
                    "description": "Use this to ensure that only one input (message) with a given messageId is processed by an AWS IoT Events detector.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "kafka": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientProperties": {
                    "description": "Properties of the Apache Kafka producer client. For more info, see the AWS documentation.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "destinationArn": {
                    "description": "The ARN of Kafka action's VPC aws_iot_topic_rule_destination.",
                    "type": "string"
                  },
                  "header": {
                    "description": "The list of Kafka headers that you specify. Nested arguments below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The name of the HTTP header.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "key": {
                    "description": "The name of the HTTP header.",
                    "type": "string"
                  },
                  "partition": {
                    "description": "The Kafka message partition.",
                    "type": "string"
                  },
                  "topic": {
                    "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "kinesis": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "partitionKey": {
                    "description": "The partition key.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "streamName": {
                    "description": "The name of the Amazon Kinesis stream.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "lambda": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "functionArn": {
                    "description": "The ARN of the Lambda function.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "republish": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "qos": {
                    "description": "The Quality of Service (QoS) level to use when republishing messages. Valid values are 0 or 1. The default value is 0.",
                    "type": "number"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "topic": {
                    "description": "The Kafka topic for messages to be sent to the Kafka broker.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "s3": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "bucketName": {
                    "description": "The Amazon S3 bucket name.",
                    "type": "string"
                  },
                  "cannedAcl": {
                    "description": "The Amazon S3 canned ACL that controls access to the object identified by the object key. Valid values.",
                    "type": "string"
                  },
                  "key": {
                    "description": "The name of the HTTP header.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "sns": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "messageFormat": {
                    "description": "The message format of the message to publish. Accepted values are \"JSON\" and \"RAW\".",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "targetArn": {
                    "description": "The ARN of the SNS topic.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "sql": {
              "description": "The SQL statement used to query the topic. For more information, see AWS IoT SQL Reference (http://docs.aws.amazon.com/iot/latest/developerguide/iot-rules.html#aws-iot-sql-reference) in the AWS IoT Developer Guide.",
              "type": "string"
            },
            "sqlVersion": {
              "description": "The version of the SQL rules engine to use when evaluating the rule.",
              "type": "string"
            },
            "sqs": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "queueUrl": {
                    "description": "The URL of the Amazon SQS queue.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "useBase64": {
                    "description": "Specifies whether to use Base64 encoding.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "stepFunctions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "executionNamePrefix": {
                    "description": "The prefix used to generate, along with a UUID, the unique state machine execution name.",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "stateMachineName": {
                    "description": "The name of the Step Functions state machine whose execution will be started.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timestream": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "databaseName": {
                    "description": "The name of an Amazon Timestream database.",
                    "type": "string"
                  },
                  "dimension": {
                    "description": "Configuration blocks with metadata attributes of the time series that are written in each measure record. Nested arguments below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the rule.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the HTTP header.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "roleArn": {
                    "description": "The IAM role ARN that allows access to the CloudWatch alarm.",
                    "type": "string"
                  },
                  "tableName": {
                    "description": "The name of the DynamoDB table.",
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "Configuration block specifying an application-defined value to replace the default value assigned to the Timestream record's timestamp in the time column. Nested arguments below.",
                    "type": "object",
                    "properties": {
                      "unit": {
                        "description": "The precision of the timestamp value that results from the expression described in value. Valid values: SECONDS, MILLISECONDS, MICROSECONDS, NANOSECONDS.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the HTTP header.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
