{
  "description": "AzureClusterTemplate is the Schema for the azureclustertemplates API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AzureClusterTemplateSpec defines the desired state of AzureClusterTemplate.",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "template": {
          "description": "AzureClusterTemplateResource describes the data needed to create an AzureCluster from a template.",
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "description": "AzureClusterTemplateResourceSpec specifies an Azure cluster template resource.",
              "type": "object",
              "required": [
                "location"
              ],
              "properties": {
                "additionalTags": {
                  "description": "AdditionalTags is an optional set of tags to add to Azure resources managed by the Azure provider, in addition to the\nones added by default.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "azureEnvironment": {
                  "description": "AzureEnvironment is the name of the AzureCloud to be used.\nThe default value that would be used by most users is \"AzurePublicCloud\", other values are:\n- ChinaCloud: \"AzureChinaCloud\"\n- GermanCloud: \"AzureGermanCloud\"\n- PublicCloud: \"AzurePublicCloud\"\n- USGovernmentCloud: \"AzureUSGovernmentCloud\"\n\nNote that values other than the default must also be accompanied by corresponding changes to the\naso-controller-settings Secret to configure ASO to refer to the non-Public cloud. ASO currently does\nnot support referring to multiple different clouds in a single installation. The following fields must\nbe defined in the Secret:\n- AZURE_AUTHORITY_HOST\n- AZURE_RESOURCE_MANAGER_ENDPOINT\n- AZURE_RESOURCE_MANAGER_AUDIENCE\n\nSee the [ASO docs] for more details.\n\n[ASO docs]: https://azure.github.io/azure-service-operator/guide/aso-controller-settings-options/",
                  "type": "string"
                },
                "bastionSpec": {
                  "description": "BastionSpec encapsulates all things related to the Bastions in the cluster.",
                  "type": "object",
                  "properties": {
                    "azureBastion": {
                      "description": "AzureBastionTemplateSpec specifies a template for an Azure Bastion host.",
                      "type": "object",
                      "properties": {
                        "subnet": {
                          "description": "SubnetTemplateSpec specifies a template for a subnet.",
                          "type": "object",
                          "required": [
                            "name",
                            "role"
                          ],
                          "properties": {
                            "cidrBlocks": {
                              "description": "CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "Name defines a name for the subnet resource.",
                              "type": "string"
                            },
                            "natGateway": {
                              "description": "NatGateway associated with this subnet.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "privateEndpoints": {
                              "description": "PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.",
                              "type": "array",
                              "items": {
                                "description": "PrivateEndpointSpec configures an Azure Private Endpoint.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "applicationSecurityGroups": {
                                    "description": "ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "customNetworkInterfaceName": {
                                    "description": "CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.",
                                    "type": "string"
                                  },
                                  "location": {
                                    "description": "Location specifies the region to create the private endpoint.",
                                    "type": "string"
                                  },
                                  "manualApproval": {
                                    "description": "ManualApproval specifies if the connection approval needs to be done manually or not.\nSet it true when the network admin does not have access to approve connections to the remote resource.\nDefaults to false.",
                                    "type": "boolean"
                                  },
                                  "name": {
                                    "description": "Name specifies the name of the private endpoint.",
                                    "type": "string"
                                  },
                                  "privateIPAddresses": {
                                    "description": "PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.\nThey have to be part of the subnet where the private endpoint is linked.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "privateLinkServiceConnections": {
                                    "description": "PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.",
                                    "type": "array",
                                    "items": {
                                      "description": "PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.",
                                      "type": "object",
                                      "properties": {
                                        "groupIDs": {
                                          "description": "GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "name": {
                                          "description": "Name specifies the name of the private link service.",
                                          "type": "string"
                                        },
                                        "privateLinkServiceID": {
                                          "description": "PrivateLinkServiceID specifies the resource ID of the private link service.",
                                          "type": "string"
                                        },
                                        "requestMessage": {
                                          "description": "RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.",
                                          "type": "string",
                                          "maxLength": 140
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-map-keys": [
                                "name"
                              ],
                              "x-kubernetes-list-type": "map"
                            },
                            "role": {
                              "description": "Role defines the subnet role (eg. Node, ControlPlane)",
                              "type": "string",
                              "enum": [
                                "node",
                                "control-plane",
                                "bastion",
                                "cluster"
                              ]
                            },
                            "securityGroup": {
                              "description": "SecurityGroup defines the NSG (network security group) that should be attached to this subnet.",
                              "type": "object",
                              "properties": {
                                "securityRules": {
                                  "description": "SecurityRules is a slice of Azure security rules for security groups.",
                                  "type": "array",
                                  "items": {
                                    "description": "SecurityRule defines an Azure security rule for security groups.",
                                    "type": "object",
                                    "required": [
                                      "description",
                                      "direction",
                                      "name",
                                      "protocol"
                                    ],
                                    "properties": {
                                      "action": {
                                        "description": "Action specifies whether network traffic is allowed or denied. Can either be \"Allow\" or \"Deny\". Defaults to \"Allow\".",
                                        "type": "string",
                                        "default": "Allow",
                                        "enum": [
                                          "Allow",
                                          "Deny"
                                        ]
                                      },
                                      "description": {
                                        "description": "A description for this rule. Restricted to 140 chars.",
                                        "type": "string"
                                      },
                                      "destination": {
                                        "description": "Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
                                        "type": "string"
                                      },
                                      "destinationPorts": {
                                        "description": "DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                        "type": "string"
                                      },
                                      "direction": {
                                        "description": "Direction indicates whether the rule applies to inbound, or outbound traffic. \"Inbound\" or \"Outbound\".",
                                        "type": "string",
                                        "enum": [
                                          "Inbound",
                                          "Outbound"
                                        ]
                                      },
                                      "name": {
                                        "description": "Name is a unique name within the network security group.",
                                        "type": "string"
                                      },
                                      "priority": {
                                        "description": "Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "protocol": {
                                        "description": "Protocol specifies the protocol type. \"Tcp\", \"Udp\", \"Icmp\", or \"*\".",
                                        "type": "string",
                                        "enum": [
                                          "Tcp",
                                          "Udp",
                                          "Icmp",
                                          "*"
                                        ]
                                      },
                                      "source": {
                                        "description": "Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
                                        "type": "string"
                                      },
                                      "sourcePorts": {
                                        "description": "SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                        "type": "string"
                                      },
                                      "sources": {
                                        "description": "Sources specifies The CIDR or source IP ranges.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-map-keys": [
                                    "name"
                                  ],
                                  "x-kubernetes-list-type": "map"
                                },
                                "tags": {
                                  "description": "Tags defines a map of tags.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "serviceEndpoints": {
                              "description": "ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.",
                              "type": "array",
                              "items": {
                                "description": "ServiceEndpointSpec configures an Azure Service Endpoint.",
                                "type": "object",
                                "required": [
                                  "locations",
                                  "service"
                                ],
                                "properties": {
                                  "locations": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "service": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-map-keys": [
                                "service"
                              ],
                              "x-kubernetes-list-type": "map"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "cloudProviderConfigOverrides": {
                  "description": "CloudProviderConfigOverrides is an optional set of configuration values that can be overridden in azure cloud provider config.\nThis is only a subset of options that are available in azure cloud provider config.\nSome values for the cloud provider config are inferred from other parts of cluster api provider azure spec, and may not be available for overrides.\nSee: https://cloud-provider-azure.sigs.k8s.io/install/configs\nNote: All cloud provider config values can be customized by creating the secret beforehand. CloudProviderConfigOverrides is only used when the secret is managed by the Azure Provider.",
                  "type": "object",
                  "properties": {
                    "backOffs": {
                      "description": "BackOffConfig indicates the back-off config options.",
                      "type": "object",
                      "properties": {
                        "cloudProviderBackoff": {
                          "type": "boolean"
                        },
                        "cloudProviderBackoffDuration": {
                          "type": "integer"
                        },
                        "cloudProviderBackoffExponent": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "cloudProviderBackoffJitter": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "cloudProviderBackoffRetries": {
                          "type": "integer"
                        }
                      },
                      "additionalProperties": false
                    },
                    "rateLimits": {
                      "type": "array",
                      "items": {
                        "description": "RateLimitSpec represents the rate limit configuration for a particular kind of resource.\nEg. loadBalancerRateLimit is used to configure rate limits for load balancers.\nThis eventually gets converted to CloudProviderRateLimitConfig that cloud-provider-azure expects.\nSee: https://github.com/kubernetes-sigs/cloud-provider-azure/blob/d585c2031925b39c925624302f22f8856e29e352/pkg/provider/azure_ratelimit.go#L25\nWe cannot use CloudProviderRateLimitConfig directly because floating point values are not supported in controller-tools.\nSee: https://github.com/kubernetes-sigs/controller-tools/issues/245",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "config": {
                            "description": "RateLimitConfig indicates the rate limit config options.",
                            "type": "object",
                            "properties": {
                              "cloudProviderRateLimit": {
                                "type": "boolean"
                              },
                              "cloudProviderRateLimitBucket": {
                                "type": "integer"
                              },
                              "cloudProviderRateLimitBucketWrite": {
                                "type": "integer"
                              },
                              "cloudProviderRateLimitQPS": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "cloudProviderRateLimitQPSWrite": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Name is the name of the rate limit spec.",
                            "type": "string",
                            "enum": [
                              "defaultRateLimit",
                              "routeRateLimit",
                              "subnetsRateLimit",
                              "interfaceRateLimit",
                              "routeTableRateLimit",
                              "loadBalancerRateLimit",
                              "publicIPAddressRateLimit",
                              "securityGroupRateLimit",
                              "virtualMachineRateLimit",
                              "storageAccountRateLimit",
                              "diskRateLimit",
                              "snapshotRateLimit",
                              "virtualMachineScaleSetRateLimit",
                              "virtualMachineSizesRateLimit",
                              "availabilitySetRateLimit"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "extendedLocation": {
                  "description": "ExtendedLocation is an optional set of ExtendedLocation properties for clusters on Azure public MEC.",
                  "type": "object",
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name defines the name for the extended location.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type defines the type for the extended location.",
                      "type": "string",
                      "enum": [
                        "EdgeZone"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "failureDomains": {
                  "description": "FailureDomains is a list of failure domains in the cluster's region, used to restrict\neligibility to host the control plane. A FailureDomain maps to an availability zone,\nwhich is a separated group of datacenters within a region.\nSee: https://learn.microsoft.com/azure/reliability/availability-zones-overview",
                  "type": "object",
                  "additionalProperties": {
                    "description": "FailureDomainSpec is the Schema for Cluster API failure domains.\nIt allows controllers to understand how many failure domains a cluster can optionally span across.",
                    "type": "object",
                    "properties": {
                      "attributes": {
                        "description": "attributes is a free form map of attributes an infrastructure provider might use or require.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "controlPlane": {
                        "description": "controlPlane determines if this failure domain is suitable for use by control plane machines.",
                        "type": "boolean"
                      }
                    }
                  }
                },
                "identityRef": {
                  "description": "IdentityRef is a reference to an AzureIdentity to be used when reconciling this cluster",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "fieldPath": {
                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "location": {
                  "type": "string"
                },
                "networkSpec": {
                  "description": "NetworkSpec encapsulates all things related to Azure network.",
                  "type": "object",
                  "properties": {
                    "additionalAPIServerLBPorts": {
                      "description": "AdditionalAPIServerLBPorts is the configuration for the additional inbound control-plane load balancer ports\nEach port specified (e.g., 9345) creates an inbound rule where the frontend port and the backend port are the same.",
                      "type": "array",
                      "items": {
                        "description": "LoadBalancerPort specifies additional port for the API server load balancer.",
                        "type": "object",
                        "required": [
                          "name",
                          "port"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name for the additional port within LB definition",
                            "type": "string"
                          },
                          "port": {
                            "description": "Port for the LB definition",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "apiServerLB": {
                      "description": "APIServerLB is the configuration for the control-plane load balancer.",
                      "type": "object",
                      "properties": {
                        "idleTimeoutInMinutes": {
                          "description": "IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "sku": {
                          "description": "SKU defines an Azure load balancer SKU.",
                          "type": "string"
                        },
                        "type": {
                          "description": "LBType defines an Azure load balancer Type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "controlPlaneOutboundLB": {
                      "description": "ControlPlaneOutboundLB is the configuration for the control-plane outbound load balancer.\nThis is different from APIServerLB, and is used only in private clusters (optionally) for enabling outbound traffic.",
                      "type": "object",
                      "properties": {
                        "idleTimeoutInMinutes": {
                          "description": "IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "sku": {
                          "description": "SKU defines an Azure load balancer SKU.",
                          "type": "string"
                        },
                        "type": {
                          "description": "LBType defines an Azure load balancer Type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "nodeOutboundLB": {
                      "description": "NodeOutboundLB is the configuration for the node outbound load balancer.",
                      "type": "object",
                      "properties": {
                        "idleTimeoutInMinutes": {
                          "description": "IdleTimeoutInMinutes specifies the timeout for the TCP idle connection.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "sku": {
                          "description": "SKU defines an Azure load balancer SKU.",
                          "type": "string"
                        },
                        "type": {
                          "description": "LBType defines an Azure load balancer Type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "privateDNSZoneName": {
                      "description": "PrivateDNSZoneName defines the zone name for the Azure Private DNS.",
                      "type": "string"
                    },
                    "privateDNSZoneResourceGroup": {
                      "description": "PrivateDNSZoneResourceGroup defines the resource group to be used for Azure Private DNS Zone.\nIf not specified, the resource group of the cluster will be used to create the Azure Private DNS Zone.",
                      "type": "string"
                    },
                    "subnets": {
                      "description": "Subnets is the configuration for the control-plane subnet and the node subnet.",
                      "type": "array",
                      "items": {
                        "description": "SubnetTemplateSpec specifies a template for a subnet.",
                        "type": "object",
                        "required": [
                          "name",
                          "role"
                        ],
                        "properties": {
                          "cidrBlocks": {
                            "description": "CIDRBlocks defines the subnet's address space, specified as one or more address prefixes in CIDR notation.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "name": {
                            "description": "Name defines a name for the subnet resource.",
                            "type": "string"
                          },
                          "natGateway": {
                            "description": "NatGateway associated with this subnet.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "privateEndpoints": {
                            "description": "PrivateEndpoints defines a list of private endpoints that should be attached to this subnet.",
                            "type": "array",
                            "items": {
                              "description": "PrivateEndpointSpec configures an Azure Private Endpoint.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "applicationSecurityGroups": {
                                  "description": "ApplicationSecurityGroups specifies the Application security group in which the private endpoint IP configuration is included.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "customNetworkInterfaceName": {
                                  "description": "CustomNetworkInterfaceName specifies the network interface name associated with the private endpoint.",
                                  "type": "string"
                                },
                                "location": {
                                  "description": "Location specifies the region to create the private endpoint.",
                                  "type": "string"
                                },
                                "manualApproval": {
                                  "description": "ManualApproval specifies if the connection approval needs to be done manually or not.\nSet it true when the network admin does not have access to approve connections to the remote resource.\nDefaults to false.",
                                  "type": "boolean"
                                },
                                "name": {
                                  "description": "Name specifies the name of the private endpoint.",
                                  "type": "string"
                                },
                                "privateIPAddresses": {
                                  "description": "PrivateIPAddresses specifies the IP addresses for the network interface associated with the private endpoint.\nThey have to be part of the subnet where the private endpoint is linked.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "privateLinkServiceConnections": {
                                  "description": "PrivateLinkServiceConnections specifies Private Link Service Connections of the private endpoint.",
                                  "type": "array",
                                  "items": {
                                    "description": "PrivateLinkServiceConnection defines the specification for a private link service connection associated with a private endpoint.",
                                    "type": "object",
                                    "properties": {
                                      "groupIDs": {
                                        "description": "GroupIDs specifies the ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "name": {
                                        "description": "Name specifies the name of the private link service.",
                                        "type": "string"
                                      },
                                      "privateLinkServiceID": {
                                        "description": "PrivateLinkServiceID specifies the resource ID of the private link service.",
                                        "type": "string"
                                      },
                                      "requestMessage": {
                                        "description": "RequestMessage specifies a message passed to the owner of the remote resource with the private endpoint connection request.",
                                        "type": "string",
                                        "maxLength": 140
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-map-keys": [
                              "name"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "role": {
                            "description": "Role defines the subnet role (eg. Node, ControlPlane)",
                            "type": "string",
                            "enum": [
                              "node",
                              "control-plane",
                              "bastion",
                              "cluster"
                            ]
                          },
                          "securityGroup": {
                            "description": "SecurityGroup defines the NSG (network security group) that should be attached to this subnet.",
                            "type": "object",
                            "properties": {
                              "securityRules": {
                                "description": "SecurityRules is a slice of Azure security rules for security groups.",
                                "type": "array",
                                "items": {
                                  "description": "SecurityRule defines an Azure security rule for security groups.",
                                  "type": "object",
                                  "required": [
                                    "description",
                                    "direction",
                                    "name",
                                    "protocol"
                                  ],
                                  "properties": {
                                    "action": {
                                      "description": "Action specifies whether network traffic is allowed or denied. Can either be \"Allow\" or \"Deny\". Defaults to \"Allow\".",
                                      "type": "string",
                                      "default": "Allow",
                                      "enum": [
                                        "Allow",
                                        "Deny"
                                      ]
                                    },
                                    "description": {
                                      "description": "A description for this rule. Restricted to 140 chars.",
                                      "type": "string"
                                    },
                                    "destination": {
                                      "description": "Destination is the destination address prefix. CIDR or destination IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used.",
                                      "type": "string"
                                    },
                                    "destinationPorts": {
                                      "description": "DestinationPorts specifies the destination port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                      "type": "string"
                                    },
                                    "direction": {
                                      "description": "Direction indicates whether the rule applies to inbound, or outbound traffic. \"Inbound\" or \"Outbound\".",
                                      "type": "string",
                                      "enum": [
                                        "Inbound",
                                        "Outbound"
                                      ]
                                    },
                                    "name": {
                                      "description": "Name is a unique name within the network security group.",
                                      "type": "string"
                                    },
                                    "priority": {
                                      "description": "Priority is a number between 100 and 4096. Each rule should have a unique value for priority. Rules are processed in priority order, with lower numbers processed before higher numbers. Once traffic matches a rule, processing stops.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "protocol": {
                                      "description": "Protocol specifies the protocol type. \"Tcp\", \"Udp\", \"Icmp\", or \"*\".",
                                      "type": "string",
                                      "enum": [
                                        "Tcp",
                                        "Udp",
                                        "Icmp",
                                        "*"
                                      ]
                                    },
                                    "source": {
                                      "description": "Source specifies the CIDR or source IP range. Asterix '*' can also be used to match all source IPs. Default tags such as 'VirtualNetwork', 'AzureLoadBalancer' and 'Internet' can also be used. If this is an ingress rule, specifies where network traffic originates from.",
                                      "type": "string"
                                    },
                                    "sourcePorts": {
                                      "description": "SourcePorts specifies source port or range. Integer or range between 0 and 65535. Asterix '*' can also be used to match all ports.",
                                      "type": "string"
                                    },
                                    "sources": {
                                      "description": "Sources specifies The CIDR or source IP ranges.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "tags": {
                                "description": "Tags defines a map of tags.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "serviceEndpoints": {
                            "description": "ServiceEndpoints is a slice of Virtual Network service endpoints to enable for the subnets.",
                            "type": "array",
                            "items": {
                              "description": "ServiceEndpointSpec configures an Azure Service Endpoint.",
                              "type": "object",
                              "required": [
                                "locations",
                                "service"
                              ],
                              "properties": {
                                "locations": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "service": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-map-keys": [
                              "service"
                            ],
                            "x-kubernetes-list-type": "map"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "vnet": {
                      "description": "Vnet is the configuration for the Azure virtual network.",
                      "type": "object",
                      "properties": {
                        "cidrBlocks": {
                          "description": "CIDRBlocks defines the virtual network's address space, specified as one or more address prefixes in CIDR notation.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "peerings": {
                          "description": "Peerings defines a list of peerings of the newly created virtual network with existing virtual networks.",
                          "type": "array",
                          "items": {
                            "description": "VnetPeeringClassSpec specifies a virtual network peering class.",
                            "type": "object",
                            "required": [
                              "remoteVnetName"
                            ],
                            "properties": {
                              "forwardPeeringProperties": {
                                "description": "ForwardPeeringProperties specifies VnetPeeringProperties for peering from the cluster's virtual network to the\nremote virtual network.",
                                "type": "object",
                                "properties": {
                                  "allowForwardedTraffic": {
                                    "description": "AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be\nallowed/disallowed in remote virtual network.",
                                    "type": "boolean"
                                  },
                                  "allowGatewayTransit": {
                                    "description": "AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual\nnetwork.",
                                    "type": "boolean"
                                  },
                                  "allowVirtualNetworkAccess": {
                                    "description": "AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access\nthe VMs in remote virtual network space.",
                                    "type": "boolean"
                                  },
                                  "useRemoteGateways": {
                                    "description": "UseRemoteGateways specifies if remote gateways can be used on this virtual network.\nIf the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network\nwill use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.\nThis flag cannot be set if virtual network already has a gateway.",
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "remoteVnetName": {
                                "description": "RemoteVnetName defines name of the remote virtual network.",
                                "type": "string"
                              },
                              "resourceGroup": {
                                "description": "ResourceGroup is the resource group name of the remote virtual network.",
                                "type": "string"
                              },
                              "reversePeeringProperties": {
                                "description": "ReversePeeringProperties specifies VnetPeeringProperties for peering from the remote virtual network to the\ncluster's virtual network.",
                                "type": "object",
                                "properties": {
                                  "allowForwardedTraffic": {
                                    "description": "AllowForwardedTraffic specifies whether the forwarded traffic from the VMs in the local virtual network will be\nallowed/disallowed in remote virtual network.",
                                    "type": "boolean"
                                  },
                                  "allowGatewayTransit": {
                                    "description": "AllowGatewayTransit specifies if gateway links can be used in remote virtual networking to link to this virtual\nnetwork.",
                                    "type": "boolean"
                                  },
                                  "allowVirtualNetworkAccess": {
                                    "description": "AllowVirtualNetworkAccess specifies whether the VMs in the local virtual network space would be able to access\nthe VMs in remote virtual network space.",
                                    "type": "boolean"
                                  },
                                  "useRemoteGateways": {
                                    "description": "UseRemoteGateways specifies if remote gateways can be used on this virtual network.\nIf the flag is set to true, and allowGatewayTransit on remote peering is also set to true, the virtual network\nwill use the gateways of the remote virtual network for transit. Only one peering can have this flag set to true.\nThis flag cannot be set if virtual network already has a gateway.",
                                    "type": "boolean"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "tags": {
                          "description": "Tags is a collection of tags describing the resource.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "subscriptionID": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
