{
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "properties": {
        "template": {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "metadata": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "type": "object",
              "required": [
                "region",
                "resourceGroup"
              ],
              "properties": {
                "controlPlaneEndpoint": {
                  "type": "object",
                  "required": [
                    "host",
                    "port"
                  ],
                  "properties": {
                    "host": {
                      "type": "string",
                      "maxLength": 512
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                },
                "controlPlaneLoadBalancer": {
                  "type": "object",
                  "properties": {
                    "additionalListeners": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "port"
                        ],
                        "properties": {
                          "defaultPoolName": {
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                          },
                          "port": {
                            "type": "integer",
                            "format": "int64",
                            "maximum": 65535,
                            "minimum": 1
                          },
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp"
                            ]
                          },
                          "selector": {
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "operator": {
                                      "type": "string"
                                    },
                                    "values": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "port"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "backendPools": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "algorithm",
                          "healthMonitor",
                          "protocol"
                        ],
                        "properties": {
                          "algorithm": {
                            "type": "string",
                            "enum": [
                              "least_connections",
                              "round_robin",
                              "weighted_round_robin"
                            ]
                          },
                          "healthMonitor": {
                            "type": "object",
                            "required": [
                              "delay",
                              "retries",
                              "timeout",
                              "type"
                            ],
                            "properties": {
                              "delay": {
                                "type": "integer",
                                "format": "int64",
                                "maximum": 60,
                                "minimum": 2
                              },
                              "port": {
                                "type": "integer",
                                "format": "int64",
                                "maximum": 65535,
                                "minimum": 1
                              },
                              "retries": {
                                "type": "integer",
                                "format": "int64",
                                "maximum": 10,
                                "minimum": 1
                              },
                              "timeout": {
                                "type": "integer",
                                "format": "int64",
                                "maximum": 59,
                                "minimum": 1
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "http",
                                  "https",
                                  "tcp"
                                ]
                              },
                              "urlPath": {
                                "type": "string",
                                "pattern": "^\\/(([a-zA-Z0-9-._~!$\u0026'()*+,;=:@]|%[a-fA-F0-9]{2})+(\\/([a-zA-Z0-9-._~!$\u0026'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\\\?([a-zA-Z0-9-._~!$\u0026'()*+,;=:@\\/?]|%[a-fA-F0-9]{2})*)?$"
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                          },
                          "protocol": {
                            "type": "string",
                            "enum": [
                              "http",
                              "https",
                              "tcp",
                              "udp"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "id": {
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[-0-9a-z_]+$"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                    },
                    "public": {
                      "type": "boolean",
                      "default": true
                    },
                    "securityGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-validations": [
                          {
                            "rule": "has(self.id) || has(self.name)",
                            "message": "an id or name must be provided"
                          }
                        ]
                      }
                    },
                    "subnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1
                          },
                          "name": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-validations": [
                          {
                            "rule": "has(self.id) || has(self.name)",
                            "message": "an id or name must be provided"
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "image": {
                  "type": "object",
                  "properties": {
                    "cosBucket": {
                      "type": "string"
                    },
                    "cosBucketRegion": {
                      "type": "string"
                    },
                    "cosInstance": {
                      "type": "string"
                    },
                    "cosObject": {
                      "type": "string"
                    },
                    "crn": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                    },
                    "operatingSystem": {
                      "type": "string"
                    },
                    "resourceGroup": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "(!has(self.cosInstance) \u0026\u0026 !has(self.cosBucket) \u0026\u0026 !has(self.cosObject)) || (has(self.cosInstance) \u0026\u0026 has(self.cosBucket) \u0026\u0026 has(self.cosObject))",
                      "message": "if any of cosInstance, cosBucket, or cosObject are specified, all must be specified"
                    },
                    {
                      "rule": "has(self.name) || has(self.crn) || (has(self.cosInstance) \u0026\u0026 has(self.cosBucket) \u0026\u0026 has(self.cosObject))",
                      "message": "an existing image name or crn must be provided, or to create a new image the cos resources must be provided, with or without a name"
                    }
                  ]
                },
                "network": {
                  "type": "object",
                  "properties": {
                    "controlPlaneSubnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cidr": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[-0-9a-z_]+$"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                          },
                          "zone": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "loadBalancers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "additionalListeners": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "port"
                              ],
                              "properties": {
                                "defaultPoolName": {
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int64",
                                  "maximum": 65535,
                                  "minimum": 1
                                },
                                "protocol": {
                                  "type": "string",
                                  "enum": [
                                    "http",
                                    "https",
                                    "tcp",
                                    "udp"
                                  ]
                                },
                                "selector": {
                                  "type": "object",
                                  "properties": {
                                    "matchExpressions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "key",
                                          "operator"
                                        ],
                                        "properties": {
                                          "key": {
                                            "type": "string"
                                          },
                                          "operator": {
                                            "type": "string"
                                          },
                                          "values": {
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    },
                                    "matchLabels": {
                                      "type": "object",
                                      "additionalProperties": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-map-keys": [
                              "port"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "backendPools": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "algorithm",
                                "healthMonitor",
                                "protocol"
                              ],
                              "properties": {
                                "algorithm": {
                                  "type": "string",
                                  "enum": [
                                    "least_connections",
                                    "round_robin",
                                    "weighted_round_robin"
                                  ]
                                },
                                "healthMonitor": {
                                  "type": "object",
                                  "required": [
                                    "delay",
                                    "retries",
                                    "timeout",
                                    "type"
                                  ],
                                  "properties": {
                                    "delay": {
                                      "type": "integer",
                                      "format": "int64",
                                      "maximum": 60,
                                      "minimum": 2
                                    },
                                    "port": {
                                      "type": "integer",
                                      "format": "int64",
                                      "maximum": 65535,
                                      "minimum": 1
                                    },
                                    "retries": {
                                      "type": "integer",
                                      "format": "int64",
                                      "maximum": 10,
                                      "minimum": 1
                                    },
                                    "timeout": {
                                      "type": "integer",
                                      "format": "int64",
                                      "maximum": 59,
                                      "minimum": 1
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "http",
                                        "https",
                                        "tcp"
                                      ]
                                    },
                                    "urlPath": {
                                      "type": "string",
                                      "pattern": "^\\/(([a-zA-Z0-9-._~!$\u0026'()*+,;=:@]|%[a-fA-F0-9]{2})+(\\/([a-zA-Z0-9-._~!$\u0026'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\\\?([a-zA-Z0-9-._~!$\u0026'()*+,;=:@\\/?]|%[a-fA-F0-9]{2})*)?$"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "name": {
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                                },
                                "protocol": {
                                  "type": "string",
                                  "enum": [
                                    "http",
                                    "https",
                                    "tcp",
                                    "udp"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "id": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[-0-9a-z_]+$"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                          },
                          "public": {
                            "type": "boolean",
                            "default": true
                          },
                          "securityGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "name": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-validations": [
                                {
                                  "rule": "has(self.id) || has(self.name)",
                                  "message": "an id or name must be provided"
                                }
                              ]
                            }
                          },
                          "subnets": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "name": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-validations": [
                                {
                                  "rule": "has(self.id) || has(self.name)",
                                  "message": "an id or name must be provided"
                                }
                              ]
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "resourceGroup": {
                      "type": "object",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "securityGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "rules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "action",
                                "direction"
                              ],
                              "properties": {
                                "action": {
                                  "type": "string",
                                  "enum": [
                                    "allow",
                                    "deny"
                                  ]
                                },
                                "destination": {
                                  "type": "object",
                                  "required": [
                                    "protocol",
                                    "remotes"
                                  ],
                                  "properties": {
                                    "icmpCode": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "icmpType": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "portRange": {
                                      "type": "object",
                                      "properties": {
                                        "maximumPort": {
                                          "type": "integer",
                                          "format": "int64",
                                          "maximum": 65535,
                                          "minimum": 1
                                        },
                                        "minimumPort": {
                                          "type": "integer",
                                          "format": "int64",
                                          "maximum": 65535,
                                          "minimum": 1
                                        }
                                      },
                                      "additionalProperties": false,
                                      "x-kubernetes-validations": [
                                        {
                                          "rule": "self.maximumPort \u003e= self.minimumPort",
                                          "message": "maximum port must be greater than or equal to minimum port"
                                        }
                                      ]
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "enum": [
                                        "all",
                                        "icmp",
                                        "tcp",
                                        "udp"
                                      ]
                                    },
                                    "remotes": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "remoteType"
                                        ],
                                        "properties": {
                                          "address": {
                                            "type": "string"
                                          },
                                          "cidrSubnetName": {
                                            "type": "string"
                                          },
                                          "remoteType": {
                                            "type": "string",
                                            "enum": [
                                              "any",
                                              "cidr",
                                              "address",
                                              "sg"
                                            ]
                                          },
                                          "securityGroupName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-validations": [
                                          {
                                            "rule": "self.remoteType == 'any' ? (!has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                            "message": "cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType"
                                          },
                                          {
                                            "rule": "self.remoteType == 'cidr' ? (has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                            "message": "only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType"
                                          },
                                          {
                                            "rule": "self.remoteType == 'address' ? (has(self.address) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.securityGroupName)) : true",
                                            "message": "only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType"
                                          },
                                          {
                                            "rule": "self.remoteType == 'sg' ? (has(self.securityGroupName) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.address)) : true",
                                            "message": "only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-validations": [
                                    {
                                      "rule": "self.protocol != 'icmp' ? (!has(self.icmpCode) \u0026\u0026 !has(self.icmpType)) : true",
                                      "message": "icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol"
                                    },
                                    {
                                      "rule": "self.protocol == 'all' ? !has(self.portRange) : true",
                                      "message": "portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol"
                                    },
                                    {
                                      "rule": "self.protocol == 'icmp' ? !has(self.portRange) : true",
                                      "message": "portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol"
                                    }
                                  ]
                                },
                                "direction": {
                                  "type": "string",
                                  "enum": [
                                    "inbound",
                                    "outbound"
                                  ]
                                },
                                "securityGroupID": {
                                  "type": "string"
                                },
                                "source": {
                                  "type": "object",
                                  "required": [
                                    "protocol",
                                    "remotes"
                                  ],
                                  "properties": {
                                    "icmpCode": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "icmpType": {
                                      "type": "integer",
                                      "format": "int64"
                                    },
                                    "portRange": {
                                      "type": "object",
                                      "properties": {
                                        "maximumPort": {
                                          "type": "integer",
                                          "format": "int64",
                                          "maximum": 65535,
                                          "minimum": 1
                                        },
                                        "minimumPort": {
                                          "type": "integer",
                                          "format": "int64",
                                          "maximum": 65535,
                                          "minimum": 1
                                        }
                                      },
                                      "additionalProperties": false,
                                      "x-kubernetes-validations": [
                                        {
                                          "rule": "self.maximumPort \u003e= self.minimumPort",
                                          "message": "maximum port must be greater than or equal to minimum port"
                                        }
                                      ]
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "enum": [
                                        "all",
                                        "icmp",
                                        "tcp",
                                        "udp"
                                      ]
                                    },
                                    "remotes": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "remoteType"
                                        ],
                                        "properties": {
                                          "address": {
                                            "type": "string"
                                          },
                                          "cidrSubnetName": {
                                            "type": "string"
                                          },
                                          "remoteType": {
                                            "type": "string",
                                            "enum": [
                                              "any",
                                              "cidr",
                                              "address",
                                              "sg"
                                            ]
                                          },
                                          "securityGroupName": {
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-validations": [
                                          {
                                            "rule": "self.remoteType == 'any' ? (!has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                            "message": "cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType"
                                          },
                                          {
                                            "rule": "self.remoteType == 'cidr' ? (has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                            "message": "only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType"
                                          },
                                          {
                                            "rule": "self.remoteType == 'address' ? (has(self.address) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.securityGroupName)) : true",
                                            "message": "only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType"
                                          },
                                          {
                                            "rule": "self.remoteType == 'sg' ? (has(self.securityGroupName) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.address)) : true",
                                            "message": "only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType"
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-validations": [
                                    {
                                      "rule": "self.protocol != 'icmp' ? (!has(self.icmpCode) \u0026\u0026 !has(self.icmpType)) : true",
                                      "message": "icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol"
                                    },
                                    {
                                      "rule": "self.protocol == 'all' ? !has(self.portRange) : true",
                                      "message": "portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol"
                                    },
                                    {
                                      "rule": "self.protocol == 'icmp' ? !has(self.portRange) : true",
                                      "message": "portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol"
                                    }
                                  ]
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-validations": [
                                {
                                  "rule": "(has(self.destination) \u0026\u0026 !has(self.source)) || (!has(self.destination) \u0026\u0026 has(self.source))",
                                  "message": "both destination and source cannot be provided"
                                },
                                {
                                  "rule": "self.direction == 'inbound' ? has(self.source) : true",
                                  "message": "source must be set for VPCSecurityGroupRuleDirectionInbound direction"
                                },
                                {
                                  "rule": "self.direction == 'inbound' ? !has(self.destination) : true",
                                  "message": "destination is not valid for VPCSecurityGroupRuleDirectionInbound direction"
                                },
                                {
                                  "rule": "self.direction == 'outbound' ? has(self.destination) : true",
                                  "message": "destination must be set for VPCSecurityGroupRuleDirectionOutbound direction"
                                },
                                {
                                  "rule": "self.direction == 'outbound' ? !has(self.source) : true",
                                  "message": "source is not valid for VPCSecurityGroupRuleDirectionOutbound direction"
                                }
                              ]
                            }
                          },
                          "tags": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-validations": [
                          {
                            "rule": "has(self.id) || has(self.name)",
                            "message": "either an id or name must be specified"
                          }
                        ]
                      }
                    },
                    "vpc": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "minLength": 1
                        },
                        "name": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "has(self.id) || has(self.name)",
                          "message": "an id or name must be provided"
                        }
                      ]
                    },
                    "workerSubnets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cidr": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "pattern": "^[-0-9a-z_]+$"
                          },
                          "name": {
                            "type": "string",
                            "maxLength": 63,
                            "minLength": 1,
                            "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                          },
                          "zone": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "region": {
                  "type": "string"
                },
                "resourceGroup": {
                  "type": "string"
                },
                "vpc": {
                  "type": "string"
                },
                "zone": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
