{
  "description": "PacketCluster is the Schema for the packetclusters API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PacketClusterSpec defines the desired state of PacketCluster.",
      "type": "object",
      "required": [
        "projectID",
        "vipManager"
      ],
      "properties": {
        "controlPlaneEndpoint": {
          "description": "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
          "type": "object",
          "required": [
            "host",
            "port"
          ],
          "properties": {
            "host": {
              "description": "The hostname on which the API server is serving.",
              "type": "string"
            },
            "port": {
              "description": "The port on which the API server is serving.",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "facility": {
          "description": "Facility represents the Packet facility for this cluster",
          "type": "string"
        },
        "metro": {
          "description": "Metro represents the Packet metro for this cluster",
          "type": "string"
        },
        "projectID": {
          "description": "ProjectID represents the Packet Project where this cluster will be placed into",
          "type": "string"
        },
        "vipManager": {
          "description": "VIPManager represents whether this cluster uses CPEM or kube-vip or Equinix Metal Load Balancer to\nmanage its vip for the api server IP",
          "type": "string",
          "default": "CPEM",
          "enum": [
            "CPEM",
            "KUBE_VIP",
            "EMLB"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PacketClusterStatus defines the observed state of PacketCluster.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions defines current service state of the PacketCluster.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "ready": {
          "description": "Ready denotes that the cluster (infrastructure) is ready.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
