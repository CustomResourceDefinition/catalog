{
  "description": "IBMPowerVSCluster is the Schema for the ibmpowervsclusters API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IBMPowerVSClusterSpec defines the desired state of IBMPowerVSCluster.",
      "type": "object",
      "required": [
        "network",
        "serviceInstanceID"
      ],
      "properties": {
        "controlPlaneEndpoint": {
          "description": "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
          "type": "object",
          "required": [
            "host",
            "port"
          ],
          "properties": {
            "host": {
              "description": "host is the hostname on which the API server is serving.",
              "type": "string",
              "maxLength": 512
            },
            "port": {
              "description": "port is the port on which the API server is serving.",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "cosInstance": {
          "description": "cosInstance contains options to configure a supporting IBM Cloud COS bucket for this\ncluster - currently used for nodes requiring Ignition\n(https://coreos.github.io/ignition/) for bootstrapping (requires\nBootstrapFormatIgnition feature flag to be enabled).\nwhen powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource and Ignition is set, then\n1. CosInstance.Name should be set not setting will result in webhook error.\n2. CosInstance.BucketName should be set not setting will result in webhook error.\n3. CosInstance.BucketRegion should be set not setting will result in webhook error.",
          "type": "object",
          "properties": {
            "bucketName": {
              "description": "bucketName is IBM cloud COS bucket name",
              "type": "string"
            },
            "bucketRegion": {
              "description": "bucketRegion is IBM cloud COS bucket region",
              "type": "string"
            },
            "name": {
              "description": "name defines name of IBM cloud COS instance to be created.\nwhen IBMPowerVSCluster.Ignition is set",
              "type": "string",
              "maxLength": 63,
              "minLength": 3,
              "pattern": "^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$"
            }
          },
          "additionalProperties": false
        },
        "dhcpServer": {
          "description": "dhcpServer is contains the configuration to be used while creating a new DHCP server in PowerVS workspace.\nwhen the field is omitted, CLUSTER_NAME will be used as DHCPServer.Name and DHCP server will be created.\nit will automatically create network with name DHCPSERVER\u003cDHCPServer.Name\u003e_Private in PowerVS workspace.",
          "type": "object",
          "properties": {
            "cidr": {
              "description": "Optional cidr for DHCP private network",
              "type": "string"
            },
            "dnsServer": {
              "description": "Optional DNS Server for DHCP service",
              "type": "string",
              "default": "1.1.1.1"
            },
            "id": {
              "description": "Optional id of the existing DHCPServer",
              "type": "string"
            },
            "name": {
              "description": "Optional name of DHCP Service. Only alphanumeric characters and dashes are allowed.",
              "type": "string"
            },
            "snat": {
              "description": "Optional indicates if SNAT will be enabled for DHCP service",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "ignition": {
          "description": "Ignition defined options related to the bootstrapping systems where Ignition is used.",
          "type": "object",
          "properties": {
            "version": {
              "description": "Version defines which version of Ignition will be used to generate bootstrap data.",
              "type": "string",
              "default": "2.3",
              "enum": [
                "2.3",
                "2.4",
                "3.0",
                "3.1",
                "3.2",
                "3.3",
                "3.4"
              ]
            }
          },
          "additionalProperties": false
        },
        "loadBalancers": {
          "description": "loadBalancers is optional configuration for configuring loadbalancers to control plane or data plane nodes.\nwhen omitted system will create a default public loadbalancer with name CLUSTER_NAME-loadbalancer.\nwhen specified a vpc loadbalancer will be created and controlPlaneEndpoint will be set with associated hostname of loadbalancer.\nControlPlaneEndpoint will be set with associated hostname of public loadbalancer.\nwhen LoadBalancers[].ID is set, its expected that there exist a loadbalancer with ID or else system will give error.\nwhen LoadBalancers[].Name is set, system will first check for loadbalancer with Name, if not exist system will create new loadbalancer.\nFor each loadbalancer a default backed pool and front listener will be configured with port 6443.",
          "type": "array",
          "items": {
            "description": "VPCLoadBalancerSpec defines the desired state of an VPC load balancer.",
            "type": "object",
            "properties": {
              "additionalListeners": {
                "description": "AdditionalListeners sets the additional listeners for the control plane load balancer.",
                "type": "array",
                "items": {
                  "description": "AdditionalListenerSpec defines the desired state of an\nadditional listener on an VPC load balancer.",
                  "type": "object",
                  "required": [
                    "port"
                  ],
                  "properties": {
                    "defaultPoolName": {
                      "description": "defaultPoolName defines the name of a VPC Load Balancer Backend Pool to use for the VPC Load Balancer Listener.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                    },
                    "port": {
                      "description": "Port sets the port for the additional listener.",
                      "type": "integer",
                      "format": "int64",
                      "maximum": 65535,
                      "minimum": 1
                    },
                    "protocol": {
                      "description": "protocol defines the protocol to use for the VPC Load Balancer Listener.\nWill default to TCP protocol if not specified.",
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp",
                        "udp"
                      ]
                    },
                    "selector": {
                      "description": "The selector is used to find IBMPowerVSMachines with matching labels.\nIf the label matches, the machine is then added to the load balancer listener configuration.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "port"
                ],
                "x-kubernetes-list-type": "map"
              },
              "backendPools": {
                "description": "backendPools defines the load balancer's backend pools.",
                "type": "array",
                "items": {
                  "description": "VPCLoadBalancerBackendPoolSpec defines the desired configuration of a VPC Load Balancer Backend Pool.",
                  "type": "object",
                  "required": [
                    "algorithm",
                    "healthMonitor",
                    "protocol"
                  ],
                  "properties": {
                    "algorithm": {
                      "description": "algorithm defines the load balancing algorithm to use.",
                      "type": "string",
                      "enum": [
                        "least_connections",
                        "round_robin",
                        "weighted_round_robin"
                      ]
                    },
                    "healthMonitor": {
                      "description": "healthMonitor defines the backend pool's health monitor.",
                      "type": "object",
                      "required": [
                        "delay",
                        "retries",
                        "timeout",
                        "type"
                      ],
                      "properties": {
                        "delay": {
                          "description": "delay defines the seconds to wait between health checks.",
                          "type": "integer",
                          "format": "int64",
                          "maximum": 60,
                          "minimum": 2
                        },
                        "port": {
                          "description": "port defines the port to perform health monitoring on.",
                          "type": "integer",
                          "format": "int64",
                          "maximum": 65535,
                          "minimum": 1
                        },
                        "retries": {
                          "description": "retries defines the max retries for health check.",
                          "type": "integer",
                          "format": "int64",
                          "maximum": 10,
                          "minimum": 1
                        },
                        "timeout": {
                          "description": "timeout defines the seconds to wait for a health check response.",
                          "type": "integer",
                          "format": "int64",
                          "maximum": 59,
                          "minimum": 1
                        },
                        "type": {
                          "description": "type defines the protocol used for health checks.",
                          "type": "string",
                          "enum": [
                            "http",
                            "https",
                            "tcp"
                          ]
                        },
                        "urlPath": {
                          "description": "urlPath defines the URL to use for health monitoring.",
                          "type": "string",
                          "pattern": "^\\/(([a-zA-Z0-9-._~!$\u0026'()*+,;=:@]|%[a-fA-F0-9]{2})+(\\/([a-zA-Z0-9-._~!$\u0026'()*+,;=:@]|%[a-fA-F0-9]{2})*)*)?(\\\\?([a-zA-Z0-9-._~!$\u0026'()*+,;=:@\\/?]|%[a-fA-F0-9]{2})*)?$"
                        }
                      },
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "name defines the name of the Backend Pool.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
                    },
                    "protocol": {
                      "description": "protocol defines the protocol to use for the Backend Pool.",
                      "type": "string",
                      "enum": [
                        "http",
                        "https",
                        "tcp",
                        "udp"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "id": {
                "description": "id of the loadbalancer",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[-0-9a-z_]+$"
              },
              "name": {
                "description": "Name sets the name of the VPC load balancer.",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
              },
              "public": {
                "description": "public indicates that load balancer is public or private",
                "type": "boolean",
                "default": true
              },
              "securityGroups": {
                "description": "securityGroups defines the Security Groups to attach to the load balancer.\nSecurity Groups defined here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).",
                "type": "array",
                "items": {
                  "description": "VPCResource represents a VPC resource.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "id of the resource.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "name of the resource.",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "has(self.id) || has(self.name)",
                      "message": "an id or name must be provided"
                    }
                  ]
                }
              },
              "subnets": {
                "description": "subnets defines the VPC Subnets to attach to the load balancer.\nSubnets defiens here are expected to already exist when the load balancer is reconciled (these do not get created when reconciling the load balancer).",
                "type": "array",
                "items": {
                  "description": "VPCResource represents a VPC resource.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "id of the resource.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "name of the resource.",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "has(self.id) || has(self.name)",
                      "message": "an id or name must be provided"
                    }
                  ]
                }
              }
            },
            "additionalProperties": false
          }
        },
        "network": {
          "description": "Network is the reference to the Network to use for this cluster.\nwhen the field is omitted, A DHCP service will be created in the Power VS workspace and its private network will be used.\nthe DHCP service created network will have the following name format\n1. in the case of DHCPServer.Name is not set the name will be DHCPSERVER\u003cCLUSTER_NAME\u003e_Private.\n2. if DHCPServer.Name is set the name will be DHCPSERVER\u003cDHCPServer.Name\u003e_Private.\nwhen Network.ID is set, its expected that there exist a network in PowerVS workspace with id or else system will give error.\nwhen Network.Name is set, system will first check for network with Name in PowerVS workspace, if not exist system will check DHCP network with given Network.name, if that also not exist, it will create a new DHCP service and name will be DHCPSERVER\u003cNetwork.Name\u003e_Private.\nNetwork.RegEx is not yet supported and system will ignore the value.",
          "type": "object",
          "properties": {
            "id": {
              "description": "ID of resource",
              "type": "string",
              "minLength": 1
            },
            "name": {
              "description": "Name of resource",
              "type": "string",
              "minLength": 1
            },
            "regex": {
              "description": "Regular expression to match resource,\nIn case of multiple resources matches the provided regular expression the first matched resource will be selected",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "resourceGroup": {
          "description": "resourceGroup name under which the resources will be created.\nwhen powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,\n1. it is expected to set the ResourceGroup.Name, not setting will result in webhook error.\nResourceGroup.ID and ResourceGroup.Regex is not yet supported and system will ignore the value.",
          "type": "object",
          "properties": {
            "id": {
              "description": "ID of resource",
              "type": "string",
              "minLength": 1
            },
            "name": {
              "description": "Name of resource",
              "type": "string",
              "minLength": 1
            },
            "regex": {
              "description": "Regular expression to match resource,\nIn case of multiple resources matches the provided regular expression the first matched resource will be selected",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "serviceInstance": {
          "description": "serviceInstance is the reference to the Power VS server workspace on which the server instance(VM) will be created.\nPower VS server workspace is a container for all Power VS instances at a specific geographic region.\nserviceInstance can be created via IBM Cloud catalog or CLI.\nsupported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.\nMore detail about Power VS service instance.\nhttps://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server\nwhen omitted system will dynamically create the service instance with name CLUSTER_NAME-serviceInstance.\nwhen ServiceInstance.ID is set, its expected that there exist a service instance in PowerVS workspace with id or else system will give error.\nwhen ServiceInstance.Name is set, system will first check for service instance with Name in PowerVS workspace, if not exist system will create new instance.\nif there are more than one service instance exist with the ServiceInstance.Name in given Zone, installation fails with an error. Use ServiceInstance.ID in those situations to use the specific service instance.\nServiceInstance.Regex is not yet supported not yet supported and system will ignore the value.",
          "type": "object",
          "properties": {
            "id": {
              "description": "ID of resource",
              "type": "string",
              "minLength": 1
            },
            "name": {
              "description": "Name of resource",
              "type": "string",
              "minLength": 1
            },
            "regex": {
              "description": "Regular expression to match resource,\nIn case of multiple resources matches the provided regular expression the first matched resource will be selected",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "serviceInstanceID": {
          "description": "ServiceInstanceID is the id of the power cloud instance where the vsi instance will get deployed.\nDeprecated: use ServiceInstance instead",
          "type": "string"
        },
        "transitGateway": {
          "description": "transitGateway contains information about IBM Cloud TransitGateway\nIBM Cloud TransitGateway helps in establishing network connectivity between IBM Cloud Power VS and VPC infrastructure\nmore information about TransitGateway can be found here https://www.ibm.com/products/transit-gateway.\nwhen TransitGateway.ID is set, its expected that there exist a TransitGateway with ID or else system will give error.\nwhen TransitGateway.Name is set, system will first check for TransitGateway with Name, if not exist system will create new TransitGateway.",
          "type": "object",
          "properties": {
            "globalRouting": {
              "description": "globalRouting indicates whether to set global routing true or not while creating the transit gateway.\nset this field to true only when PowerVS and VPC are from different regions, if they are same it's suggested to use local routing by setting the field to false.\nwhen the field is omitted,  based on PowerVS region (region associated with IBMPowerVSCluster.Spec.Zone) and VPC region(IBMPowerVSCluster.Spec.VPC.Region) system will decide whether to enable globalRouting or not.",
              "type": "boolean"
            },
            "id": {
              "description": "id of resource.",
              "type": "string"
            },
            "name": {
              "description": "name of resource.",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^([a-zA-Z]|[a-zA-Z][-_a-zA-Z0-9]*[a-zA-Z0-9])$"
            }
          },
          "additionalProperties": false
        },
        "vpc": {
          "description": "vpc contains information about IBM Cloud VPC resources.\nwhen omitted system will dynamically create the VPC with name CLUSTER_NAME-vpc.\nwhen VPC.ID is set, its expected that there exist a VPC with ID or else system will give error.\nwhen VPC.Name is set, system will first check for VPC with Name, if not exist system will create new VPC.\nwhen powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,\n1. it is expected to set the VPC.Region, not setting will result in webhook error.",
          "type": "object",
          "properties": {
            "id": {
              "description": "id of resource.",
              "type": "string",
              "maxLength": 64,
              "minLength": 1,
              "pattern": "^[-0-9a-z_]+$"
            },
            "name": {
              "description": "name of resource.",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
            },
            "region": {
              "description": "region of IBM Cloud VPC.\nwhen powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,\nit is expected to set the region, not setting will result in webhook error.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "vpcSecurityGroups": {
          "description": "VPCSecurityGroups to attach it to the VPC resource",
          "type": "array",
          "items": {
            "description": "VPCSecurityGroup defines a VPC Security Group that should exist or be created within the specified VPC, with the specified Security Group Rules.",
            "type": "object",
            "properties": {
              "id": {
                "description": "id of the Security Group.",
                "type": "string"
              },
              "name": {
                "description": "name of the Security Group.",
                "type": "string"
              },
              "rules": {
                "description": "rules are the Security Group Rules for the Security Group.",
                "type": "array",
                "items": {
                  "description": "VPCSecurityGroupRule defines a VPC Security Group Rule for a specified Security Group.",
                  "type": "object",
                  "required": [
                    "action",
                    "direction"
                  ],
                  "properties": {
                    "action": {
                      "description": "action defines whether to allow or deny traffic defined by the Security Group Rule.",
                      "type": "string",
                      "enum": [
                        "allow",
                        "deny"
                      ]
                    },
                    "destination": {
                      "description": "destination is a VPCSecurityGroupRulePrototype which defines the destination of outbound traffic for the Security Group Rule.\nOnly used when direction is VPCSecurityGroupRuleDirectionOutbound.",
                      "type": "object",
                      "required": [
                        "protocol",
                        "remotes"
                      ],
                      "properties": {
                        "icmpCode": {
                          "description": "icmpCode is the ICMP code for the Rule.\nOnly used when Protocol is VPCSecurityGroupRuleProtocolIcmp.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "icmpType": {
                          "description": "icmpType is the ICMP type for the Rule.\nOnly used when Protocol is VPCSecurityGroupRuleProtocolIcmp.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "portRange": {
                          "description": "portRange is a range of ports allowed for the Rule's remote.",
                          "type": "object",
                          "properties": {
                            "maximumPort": {
                              "description": "maximumPort is the inclusive upper range of ports.",
                              "type": "integer",
                              "format": "int64",
                              "maximum": 65535,
                              "minimum": 1
                            },
                            "minimumPort": {
                              "description": "minimumPort is the inclusive lower range of ports.",
                              "type": "integer",
                              "format": "int64",
                              "maximum": 65535,
                              "minimum": 1
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.maximumPort \u003e= self.minimumPort",
                              "message": "maximum port must be greater than or equal to minimum port"
                            }
                          ]
                        },
                        "protocol": {
                          "description": "protocol defines the traffic protocol used for the Security Group Rule.",
                          "type": "string",
                          "enum": [
                            "all",
                            "icmp",
                            "tcp",
                            "udp"
                          ]
                        },
                        "remotes": {
                          "description": "remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.\nSpecifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.\nThis allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.",
                          "type": "array",
                          "items": {
                            "description": "VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.\nThe type of remote defines the additional remote details where are used for defining the remote.",
                            "type": "object",
                            "required": [
                              "remoteType"
                            ],
                            "properties": {
                              "address": {
                                "description": " address is the address to use for the remote's destination/source.\nOnly used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.",
                                "type": "string"
                              },
                              "cidrSubnetName": {
                                "description": "cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.\nOnly used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.",
                                "type": "string"
                              },
                              "remoteType": {
                                "description": "remoteType defines the type of filter to define for the remote's destination/source.",
                                "type": "string",
                                "enum": [
                                  "any",
                                  "cidr",
                                  "address",
                                  "sg"
                                ]
                              },
                              "securityGroupName": {
                                "description": "securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.\nOnly used when remoteType is VPCSecurityGroupRuleRemoteTypeSG",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-validations": [
                              {
                                "rule": "self.remoteType == 'any' ? (!has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                "message": "cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType"
                              },
                              {
                                "rule": "self.remoteType == 'cidr' ? (has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                "message": "only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType"
                              },
                              {
                                "rule": "self.remoteType == 'address' ? (has(self.address) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.securityGroupName)) : true",
                                "message": "only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType"
                              },
                              {
                                "rule": "self.remoteType == 'sg' ? (has(self.securityGroupName) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.address)) : true",
                                "message": "only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType"
                              }
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.protocol != 'icmp' ? (!has(self.icmpCode) \u0026\u0026 !has(self.icmpType)) : true",
                          "message": "icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol"
                        },
                        {
                          "rule": "self.protocol == 'all' ? !has(self.portRange) : true",
                          "message": "portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol"
                        },
                        {
                          "rule": "self.protocol == 'icmp' ? !has(self.portRange) : true",
                          "message": "portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol"
                        }
                      ]
                    },
                    "direction": {
                      "description": "direction defines whether the traffic is inbound or outbound for the Security Group Rule.",
                      "type": "string",
                      "enum": [
                        "inbound",
                        "outbound"
                      ]
                    },
                    "securityGroupID": {
                      "description": "securityGroupID is the ID of the Security Group for the Security Group Rule.",
                      "type": "string"
                    },
                    "source": {
                      "description": "source is a VPCSecurityGroupRulePrototype which defines the source of inbound traffic for the Security Group Rule.\nOnly used when direction is VPCSecurityGroupRuleDirectionInbound.",
                      "type": "object",
                      "required": [
                        "protocol",
                        "remotes"
                      ],
                      "properties": {
                        "icmpCode": {
                          "description": "icmpCode is the ICMP code for the Rule.\nOnly used when Protocol is VPCSecurityGroupRuleProtocolIcmp.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "icmpType": {
                          "description": "icmpType is the ICMP type for the Rule.\nOnly used when Protocol is VPCSecurityGroupRuleProtocolIcmp.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "portRange": {
                          "description": "portRange is a range of ports allowed for the Rule's remote.",
                          "type": "object",
                          "properties": {
                            "maximumPort": {
                              "description": "maximumPort is the inclusive upper range of ports.",
                              "type": "integer",
                              "format": "int64",
                              "maximum": 65535,
                              "minimum": 1
                            },
                            "minimumPort": {
                              "description": "minimumPort is the inclusive lower range of ports.",
                              "type": "integer",
                              "format": "int64",
                              "maximum": 65535,
                              "minimum": 1
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.maximumPort \u003e= self.minimumPort",
                              "message": "maximum port must be greater than or equal to minimum port"
                            }
                          ]
                        },
                        "protocol": {
                          "description": "protocol defines the traffic protocol used for the Security Group Rule.",
                          "type": "string",
                          "enum": [
                            "all",
                            "icmp",
                            "tcp",
                            "udp"
                          ]
                        },
                        "remotes": {
                          "description": "remotes is a set of VPCSecurityGroupRuleRemote's that define the traffic allowed by the Rule's remote.\nSpecifying multiple VPCSecurityGroupRuleRemote's creates a unique Security Group Rule with the shared Protocol, PortRange, etc.\nThis allows for easier management of Security Group Rule's for sets of CIDR's, IP's, etc.",
                          "type": "array",
                          "items": {
                            "description": "VPCSecurityGroupRuleRemote defines a VPC Security Group Rule's remote details.\nThe type of remote defines the additional remote details where are used for defining the remote.",
                            "type": "object",
                            "required": [
                              "remoteType"
                            ],
                            "properties": {
                              "address": {
                                "description": " address is the address to use for the remote's destination/source.\nOnly used when remoteType is VPCSecurityGroupRuleRemoteTypeAddress.",
                                "type": "string"
                              },
                              "cidrSubnetName": {
                                "description": "cidrSubnetName is the name of the VPC Subnet to retrieve the CIDR from, to use for the remote's destination/source.\nOnly used when remoteType is VPCSecurityGroupRuleRemoteTypeCIDR.",
                                "type": "string"
                              },
                              "remoteType": {
                                "description": "remoteType defines the type of filter to define for the remote's destination/source.",
                                "type": "string",
                                "enum": [
                                  "any",
                                  "cidr",
                                  "address",
                                  "sg"
                                ]
                              },
                              "securityGroupName": {
                                "description": "securityGroupName is the name of the VPC Security Group to use for the remote's destination/source.\nOnly used when remoteType is VPCSecurityGroupRuleRemoteTypeSG",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-validations": [
                              {
                                "rule": "self.remoteType == 'any' ? (!has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                "message": "cidrSubnetName, addresss, and securityGroupName are not valid for VPCSecurityGroupRuleRemoteTypeAny remoteType"
                              },
                              {
                                "rule": "self.remoteType == 'cidr' ? (has(self.cidrSubnetName) \u0026\u0026 !has(self.address) \u0026\u0026 !has(self.securityGroupName)) : true",
                                "message": "only cidrSubnetName is valid for VPCSecurityGroupRuleRemoteTypeCIDR remoteType"
                              },
                              {
                                "rule": "self.remoteType == 'address' ? (has(self.address) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.securityGroupName)) : true",
                                "message": "only address is valid for VPCSecurityGroupRuleRemoteTypeIP remoteType"
                              },
                              {
                                "rule": "self.remoteType == 'sg' ? (has(self.securityGroupName) \u0026\u0026 !has(self.cidrSubnetName) \u0026\u0026 !has(self.address)) : true",
                                "message": "only securityGroupName is valid for VPCSecurityGroupRuleRemoteTypeSG remoteType"
                              }
                            ]
                          }
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.protocol != 'icmp' ? (!has(self.icmpCode) \u0026\u0026 !has(self.icmpType)) : true",
                          "message": "icmpCode and icmpType are only supported for VPCSecurityGroupRuleProtocolIcmp protocol"
                        },
                        {
                          "rule": "self.protocol == 'all' ? !has(self.portRange) : true",
                          "message": "portRange is not valid for VPCSecurityGroupRuleProtocolAll protocol"
                        },
                        {
                          "rule": "self.protocol == 'icmp' ? !has(self.portRange) : true",
                          "message": "portRange is not valid for VPCSecurityGroupRuleProtocolIcmp protocol"
                        }
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "(has(self.destination) \u0026\u0026 !has(self.source)) || (!has(self.destination) \u0026\u0026 has(self.source))",
                      "message": "both destination and source cannot be provided"
                    },
                    {
                      "rule": "self.direction == 'inbound' ? has(self.source) : true",
                      "message": "source must be set for VPCSecurityGroupRuleDirectionInbound direction"
                    },
                    {
                      "rule": "self.direction == 'inbound' ? !has(self.destination) : true",
                      "message": "destination is not valid for VPCSecurityGroupRuleDirectionInbound direction"
                    },
                    {
                      "rule": "self.direction == 'outbound' ? has(self.destination) : true",
                      "message": "destination must be set for VPCSecurityGroupRuleDirectionOutbound direction"
                    },
                    {
                      "rule": "self.direction == 'outbound' ? !has(self.source) : true",
                      "message": "source is not valid for VPCSecurityGroupRuleDirectionOutbound direction"
                    }
                  ]
                }
              },
              "tags": {
                "description": "tags are tags to add to the Security Group.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "has(self.id) || has(self.name)",
                "message": "either an id or name must be specified"
              }
            ]
          }
        },
        "vpcSubnets": {
          "description": "vpcSubnets contains information about IBM Cloud VPC Subnet resources.\nwhen omitted system will create the subnets in all the zone corresponding to VPC.Region, with name CLUSTER_NAME-vpcsubnet-ZONE_NAME.\npossible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.\nwhen VPCSubnets[].ID is set, its expected that there exist a subnet with ID or else system will give error.\nwhen VPCSubnets[].Zone is not set, a random zone is picked from available zones of VPC.Region.\nwhen VPCSubnets[].Name is not set, system will set name as CLUSTER_NAME-vpcsubnet-INDEX.\nif subnet with name VPCSubnets[].Name not found, system will create new subnet in VPCSubnets[].Zone.",
          "type": "array",
          "items": {
            "description": "Subnet describes a subnet.",
            "type": "object",
            "properties": {
              "cidr": {
                "type": "string"
              },
              "id": {
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[-0-9a-z_]+$"
              },
              "name": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^([a-z]|[a-z][-a-z0-9]*[a-z0-9])$"
              },
              "zone": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "zone": {
          "description": "zone is the name of Power VS zone where the cluster will be created\npossible values can be found here https://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server.\nwhen powervs.cluster.x-k8s.io/create-infra=true annotation is set on IBMPowerVSCluster resource,\n1. it is expected to set the zone, not setting will result in webhook error.\n2. the zone should have PER capabilities, or else system will give error.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "IBMPowerVSClusterStatus defines the observed state of IBMPowerVSCluster.",
      "type": "object",
      "required": [
        "ready"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions defines current service state of the IBMPowerVSCluster.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string",
                "maxLength": 10240,
                "minLength": 1
              },
              "reason": {
                "description": "reason is the reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              },
              "severity": {
                "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string",
                "maxLength": 32
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        },
        "cosInstance": {
          "description": "cosInstance is reference to IBM Cloud COS Instance resource.",
          "type": "object",
          "properties": {
            "controllerCreated": {
              "description": "controllerCreated indicates whether the resource is created by the controller.",
              "type": "boolean",
              "default": false
            },
            "id": {
              "description": "id represents the id of the resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "dhcpServer": {
          "description": "dhcpServer is the reference to the Power VS DHCP server.",
          "type": "object",
          "properties": {
            "controllerCreated": {
              "description": "controllerCreated indicates whether the resource is created by the controller.",
              "type": "boolean",
              "default": false
            },
            "id": {
              "description": "id represents the id of the resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "loadBalancers": {
          "description": "loadBalancers reference to IBM Cloud VPC Loadbalancer.",
          "type": "object",
          "additionalProperties": {
            "description": "VPCLoadBalancerStatus defines the status VPC load balancer.",
            "type": "object",
            "properties": {
              "controllerCreated": {
                "description": "controllerCreated indicates whether the resource is created by the controller.",
                "type": "boolean",
                "default": false
              },
              "hostname": {
                "description": "hostname is the hostname of load balancer.",
                "type": "string"
              },
              "id": {
                "description": "id of VPC load balancer.",
                "type": "string"
              },
              "state": {
                "description": "State is the status of the load balancer.",
                "type": "string"
              }
            }
          }
        },
        "network": {
          "description": "networkID is the reference to the Power VS network to use for this cluster.",
          "type": "object",
          "properties": {
            "controllerCreated": {
              "description": "controllerCreated indicates whether the resource is created by the controller.",
              "type": "boolean",
              "default": false
            },
            "id": {
              "description": "id represents the id of the resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ready": {
          "description": "ready is true when the provider resource is ready.",
          "type": "boolean",
          "default": false
        },
        "resourceGroupID": {
          "description": "ResourceGroup is the reference to the Power VS resource group under which the resources will be created.",
          "type": "object",
          "properties": {
            "controllerCreated": {
              "description": "controllerCreated indicates whether the resource is created by the controller.",
              "type": "boolean",
              "default": false
            },
            "id": {
              "description": "id represents the id of the resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "serviceInstance": {
          "description": "serviceInstance is the reference to the Power VS service on which the server instance(VM) will be created.",
          "type": "object",
          "properties": {
            "controllerCreated": {
              "description": "controllerCreated indicates whether the resource is created by the controller.",
              "type": "boolean",
              "default": false
            },
            "id": {
              "description": "id represents the id of the resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "transitGateway": {
          "description": "transitGateway is reference to IBM Cloud TransitGateway.",
          "type": "object",
          "properties": {
            "controllerCreated": {
              "description": "controllerCreated indicates whether the resource is created by the controller.",
              "type": "boolean",
              "default": false
            },
            "id": {
              "description": "id represents the id of the resource.",
              "type": "string"
            },
            "powerVSConnection": {
              "description": "powerVSConnection defines the powervs connection status in transit gateway.",
              "type": "object",
              "properties": {
                "controllerCreated": {
                  "description": "controllerCreated indicates whether the resource is created by the controller.",
                  "type": "boolean",
                  "default": false
                },
                "id": {
                  "description": "id represents the id of the resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "vpcConnection": {
              "description": "vpcConnection defines the vpc connection status in transit gateway.",
              "type": "object",
              "properties": {
                "controllerCreated": {
                  "description": "controllerCreated indicates whether the resource is created by the controller.",
                  "type": "boolean",
                  "default": false
                },
                "id": {
                  "description": "id represents the id of the resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "v1beta2": {
          "description": "v1beta2 groups all the fields that will be added or modified in IBMPowerVSCluster's status with the V1Beta2 version.",
          "type": "object",
          "properties": {
            "conditions": {
              "description": "conditions represents the observations of a DevCluster's current state.",
              "type": "array",
              "maxItems": 32,
              "items": {
                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                "type": "object",
                "required": [
                  "lastTransitionTime",
                  "message",
                  "reason",
                  "status",
                  "type"
                ],
                "properties": {
                  "lastTransitionTime": {
                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                    "type": "string",
                    "maxLength": 32768
                  },
                  "observedGeneration": {
                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0
                  },
                  "reason": {
                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1,
                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                  },
                  "status": {
                    "description": "status of the condition, one of True, False, Unknown.",
                    "type": "string",
                    "enum": [
                      "True",
                      "False",
                      "Unknown"
                    ]
                  },
                  "type": {
                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                    "type": "string",
                    "maxLength": 316,
                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-map-keys": [
                "type"
              ],
              "x-kubernetes-list-type": "map"
            }
          },
          "additionalProperties": false
        },
        "vpc": {
          "description": "vpc is reference to IBM Cloud VPC resources.",
          "type": "object",
          "properties": {
            "controllerCreated": {
              "description": "controllerCreated indicates whether the resource is created by the controller.",
              "type": "boolean",
              "default": false
            },
            "id": {
              "description": "id represents the id of the resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "vpcSecurityGroups": {
          "description": "vpcSecurityGroups is reference to IBM Cloud VPC security group.",
          "type": "object",
          "additionalProperties": {
            "description": "VPCSecurityGroupStatus defines a vpc security group resource status with its id and respective rule's ids.",
            "type": "object",
            "properties": {
              "controllerCreated": {
                "description": "controllerCreated indicates whether the resource is created by the controller.",
                "type": "boolean",
                "default": false
              },
              "id": {
                "description": "id represents the id of the resource.",
                "type": "string"
              },
              "ruleIDs": {
                "description": "rules contains the id of rules created under the security group",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "vpcSubnet": {
          "description": "vpcSubnet is reference to IBM Cloud VPC subnet.",
          "type": "object",
          "additionalProperties": {
            "description": "ResourceReference identifies a resource with id.",
            "type": "object",
            "properties": {
              "controllerCreated": {
                "description": "controllerCreated indicates whether the resource is created by the controller.",
                "type": "boolean",
                "default": false
              },
              "id": {
                "description": "id represents the id of the resource.",
                "type": "string"
              }
            }
          }
        }
      },
      "additionalProperties": false
    }
  }
}
