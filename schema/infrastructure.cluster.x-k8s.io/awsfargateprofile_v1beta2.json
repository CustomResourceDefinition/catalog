{
  "description": "AWSFargateProfile is the Schema for the awsfargateprofiles API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FargateProfileSpec defines the desired state of FargateProfile.",
      "type": "object",
      "required": [
        "clusterName"
      ],
      "properties": {
        "additionalTags": {
          "description": "AdditionalTags is an optional set of tags to add to AWS resources managed by the AWS provider, in addition to the\nones added by default.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "ClusterName is the name of the Cluster this object belongs to.",
          "type": "string",
          "minLength": 1
        },
        "profileName": {
          "description": "ProfileName specifies the profile name.",
          "type": "string"
        },
        "roleName": {
          "description": "RoleName specifies the name of IAM role for this fargate pool\nIf the role is pre-existing we will treat it as unmanaged\nand not delete it on deletion. If the EKSEnableIAM feature\nflag is true and no name is supplied then a role is created.",
          "type": "string"
        },
        "rolePath": {
          "description": "RolePath sets the path to the role. For more information about paths, see IAM Identifiers\n(https://docs.aws.amazon.com/IAM/latest/UserGuide/Using_Identifiers.html)\nin the IAM User Guide.\n\nThis parameter is optional. If it is not included, it defaults to a slash\n(/).",
          "type": "string"
        },
        "rolePermissionsBoundary": {
          "description": "RolePermissionsBoundary sets the ARN of the managed policy that is used\nto set the permissions boundary for the role.\n\nA permissions boundary policy defines the maximum permissions that identity-based\npolicies can grant to an entity, but does not grant permissions. Permissions\nboundaries do not define the maximum permissions that a resource-based policy\ncan grant to an entity. To learn more, see Permissions boundaries for IAM\nentities (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html)\nin the IAM User Guide.\n\nFor more information about policy types, see Policy types (https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#access_policy-types)\nin the IAM User Guide.",
          "type": "string"
        },
        "selectors": {
          "description": "Selectors specify fargate pod selectors.",
          "type": "array",
          "items": {
            "description": "FargateSelector specifies a selector for pods that should run on this fargate pool.",
            "type": "object",
            "properties": {
              "labels": {
                "description": "Labels specifies which pod labels this selector should match.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "namespace": {
                "description": "Namespace specifies which namespace this selector should match.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "subnetIDs": {
          "description": "SubnetIDs specifies which subnets are used for the\nauto scaling group of this nodegroup.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "FargateProfileStatus defines the observed state of FargateProfile.",
      "type": "object",
      "required": [
        "ready"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions defines current state of the Fargate profile.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string",
                "maxLength": 10240,
                "minLength": 1
              },
              "reason": {
                "description": "reason is the reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              },
              "severity": {
                "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string",
                "maxLength": 32
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        },
        "failureMessage": {
          "description": "FailureMessage will be set in the event that there is a terminal problem\nreconciling the FargateProfile and will contain a more verbose string suitable\nfor logging and human consumption.\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the FargateProfile's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\nAny transient errors that occur during the reconciliation of\nFargateProfiles can be added as events to the FargateProfile\nobject and/or logged in the controller's output.",
          "type": "string"
        },
        "failureReason": {
          "description": "FailureReason will be set in the event that there is a terminal problem\nreconciling the FargateProfile and will contain a succinct value suitable\nfor machine interpretation.\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the FargateProfile's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\nAny transient errors that occur during the reconciliation of\nFargateProfiles can be added as events to the FargateProfile object\nand/or logged in the controller's output.",
          "type": "string"
        },
        "ready": {
          "description": "Ready denotes that the FargateProfile is available.",
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    }
  }
}
