{
  "description": "AzureMachinePool is the Schema for the azuremachinepools API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AzureMachinePoolSpec defines the desired state of AzureMachinePool.",
      "type": "object",
      "required": [
        "location",
        "template"
      ],
      "properties": {
        "additionalTags": {
          "description": "AdditionalTags is an optional set of tags to add to an instance, in addition to the ones added by default by the\nAzure provider. If both the AzureCluster and the AzureMachine specify the same tag name with different values, the\nAzureMachine's value takes precedence.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Identity is the type of identity used for the Virtual Machine Scale Set.\nThe type 'SystemAssigned' is an implicitly created identity.\nThe generated identity will be assigned a Subscription contributor role.\nThe type 'UserAssigned' is a standalone Azure resource provided by the user\nand assigned to the VM",
          "type": "string",
          "default": "None",
          "enum": [
            "None",
            "SystemAssigned",
            "UserAssigned"
          ]
        },
        "location": {
          "description": "Location is the Azure region location e.g. westus2",
          "type": "string"
        },
        "orchestrationMode": {
          "description": "OrchestrationMode specifies the orchestration mode for the Virtual Machine Scale Set",
          "type": "string",
          "default": "Uniform",
          "enum": [
            "Flexible",
            "Uniform"
          ]
        },
        "platformFaultDomainCount": {
          "description": "PlatformFaultDomainCount specifies the number of fault domains that the Virtual Machine Scale Set can use.\nThe count determines the spreading algorithm of the Azure fault domain.",
          "type": "integer",
          "format": "int32"
        },
        "providerID": {
          "description": "ProviderID is the identification ID of the Virtual Machine Scale Set",
          "type": "string"
        },
        "providerIDList": {
          "description": "ProviderIDList are the identification IDs of machine instances provided by the provider.\nThis field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roleAssignmentName": {
          "description": "Deprecated: RoleAssignmentName should be set in the systemAssignedIdentityRole field.",
          "type": "string"
        },
        "strategy": {
          "description": "The deployment strategy to use to replace existing AzureMachinePoolMachines with new ones.",
          "type": "object",
          "default": {
            "rollingUpdate": {
              "deletePolicy": "Oldest",
              "maxSurge": 1,
              "maxUnavailable": 0
            },
            "type": "RollingUpdate"
          },
          "properties": {
            "rollingUpdate": {
              "description": "Rolling update config params. Present only if\nMachineDeploymentStrategyType = RollingUpdate.",
              "type": "object",
              "properties": {
                "deletePolicy": {
                  "description": "DeletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.\nValid values are \"Random, \"Newest\", \"Oldest\"\nWhen no value is supplied, the default is Oldest",
                  "type": "string",
                  "default": "Oldest",
                  "enum": [
                    "Random",
                    "Newest",
                    "Oldest"
                  ]
                },
                "maxSurge": {
                  "description": "The maximum number of machines that can be scheduled above the\ndesired number of machines.\nValue can be an absolute number (ex: 5) or a percentage of\ndesired machines (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to 1.\nExample: when this is set to 30%, the new MachineSet can be scaled\nup immediately when the rolling update starts, such that the total\nnumber of old and new machines do not exceed 130% of desired\nmachines. Once old machines have been killed, new MachineSet can\nbe scaled up further, ensuring that total number of machines running\nat any time during the update is at most 130% of desired machines.",
                  "default": 1,
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "maxUnavailable": {
                  "description": "The maximum number of machines that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired\nmachines (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to 0.\nExample: when this is set to 30%, the old MachineSet can be scaled\ndown to 70% of desired machines immediately when the rolling update\nstarts. Once new machines are ready, old MachineSet can be scaled\ndown further, followed by scaling up the new MachineSet, ensuring\nthat the total number of machines available at all times\nduring the update is at least 70% of desired machines.",
                  "default": 0,
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "Type of deployment. Currently the only supported strategy is RollingUpdate",
              "type": "string",
              "default": "RollingUpdate",
              "enum": [
                "RollingUpdate"
              ]
            }
          },
          "additionalProperties": false
        },
        "systemAssignedIdentityRole": {
          "description": "SystemAssignedIdentityRole defines the role and scope to assign to the system assigned identity.",
          "type": "object",
          "properties": {
            "definitionID": {
              "description": "DefinitionID is the ID of the role definition to create for a system assigned identity. It can be an Azure built-in role or a custom role.\nRefer to built-in roles: https://learn.microsoft.com/en-us/azure/role-based-access-control/built-in-roles",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of the role assignment to create for a system assigned identity. It can be any valid UUID.\nIf not specified, a random UUID will be generated.",
              "type": "string"
            },
            "scope": {
              "description": "Scope is the scope that the role assignment or definition applies to. The scope can be any REST resource instance.\nIf not specified, the scope will be the subscription.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "template": {
          "description": "Template contains the details used to build a replica virtual machine within the Machine Pool",
          "type": "object",
          "required": [
            "osDisk",
            "vmSize"
          ],
          "properties": {
            "acceleratedNetworking": {
              "description": "Deprecated: AcceleratedNetworking should be set in the networkInterfaces field.",
              "type": "boolean"
            },
            "additionalCapabilities": {
              "description": "AdditionalCapabilities specifies additional capabilities enabled or disabled on the virtual machine.",
              "type": "object",
              "properties": {
                "ultraSSDEnabled": {
                  "description": "UltraSSDEnabled enables or disables Azure UltraSSD capability for the virtual machine.\nDefaults to true if Ultra SSD data disks are specified,\notherwise it doesn't set the capability on the VM.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "dataDisks": {
              "description": "DataDisks specifies the list of data disks to be created for a Virtual Machine",
              "type": "array",
              "items": {
                "description": "DataDisk specifies the parameters that are used to add one or more data disks to the machine.",
                "type": "object",
                "required": [
                  "diskSizeGB",
                  "nameSuffix"
                ],
                "properties": {
                  "cachingType": {
                    "description": "CachingType specifies the caching requirements.",
                    "type": "string",
                    "enum": [
                      "None",
                      "ReadOnly",
                      "ReadWrite"
                    ]
                  },
                  "diskSizeGB": {
                    "description": "DiskSizeGB is the size in GB to assign to the data disk.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "lun": {
                    "description": "Lun Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and therefore must be unique for each data disk attached to a VM.\nThe value must be between 0 and 63.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "managedDisk": {
                    "description": "ManagedDisk specifies the Managed Disk parameters for the data disk.",
                    "type": "object",
                    "properties": {
                      "diskEncryptionSet": {
                        "description": "DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityProfile": {
                        "description": "SecurityProfile specifies the security profile for the managed disk.",
                        "type": "object",
                        "properties": {
                          "diskEncryptionSet": {
                            "description": "DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the\nmanaged disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and\nVMGuest blob.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "description": "ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "securityEncryptionType": {
                            "description": "SecurityEncryptionType specifies the encryption type of the managed disk.\nIt is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState\nblob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.\nWhen set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.\nWhen set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and\nVirtualizedTrustedPlatformModule should be set to Enabled.\nIt can be set only for Confidential VMs.",
                            "type": "string",
                            "enum": [
                              "VMGuestStateOnly",
                              "DiskWithVMGuestState"
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "storageAccountType": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "nameSuffix": {
                    "description": "NameSuffix is the suffix to be appended to the machine name to generate the disk name.\nEach disk name will be in format \u003cmachineName\u003e_\u003cnameSuffix\u003e.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "diagnostics": {
              "description": "Diagnostics specifies the diagnostics settings for a virtual machine.\nIf not specified then Boot diagnostics (Managed) will be enabled.",
              "type": "object",
              "properties": {
                "boot": {
                  "description": "Boot configures the boot diagnostics settings for the virtual machine.\nThis allows to configure capturing serial output from the virtual machine on boot.\nThis is useful for debugging software based launch issues.\nIf not specified then Boot diagnostics (Managed) will be enabled.",
                  "type": "object",
                  "required": [
                    "storageAccountType"
                  ],
                  "properties": {
                    "storageAccountType": {
                      "description": "StorageAccountType determines if the storage account for storing the diagnostics data\nshould be disabled (Disabled), provisioned by Azure (Managed) or by the user (UserManaged).",
                      "type": "string",
                      "enum": [
                        "Managed",
                        "UserManaged",
                        "Disabled"
                      ]
                    },
                    "userManaged": {
                      "description": "UserManaged provides a reference to the user-managed storage account.",
                      "type": "object",
                      "required": [
                        "storageAccountURI"
                      ],
                      "properties": {
                        "storageAccountURI": {
                          "description": "StorageAccountURI is the URI of the user-managed storage account.\nThe URI typically will be `https://\u003cmystorageaccountname\u003e.blob.core.windows.net/`\nbut may differ if you are using Azure DNS zone endpoints.\nYou can find the correct endpoint by looking for the Blob Primary Endpoint in the\nendpoints tab in the Azure console or with the CLI by issuing\n`az storage account list --query='[].{name: name, \"resource group\": resourceGroup, \"blob endpoint\": primaryEndpoints.blob}'`.",
                          "type": "string",
                          "maxLength": 1024,
                          "pattern": "^https://"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "image": {
              "description": "Image is used to provide details of an image to use during VM creation.\nIf image details are omitted the image will default the Azure Marketplace \"capi\" offer,\nwhich is based on Ubuntu.",
              "type": "object",
              "properties": {
                "computeGallery": {
                  "description": "ComputeGallery specifies an image to use from the Azure Compute Gallery",
                  "type": "object",
                  "required": [
                    "gallery",
                    "name",
                    "version"
                  ],
                  "properties": {
                    "gallery": {
                      "description": "Gallery specifies the name of the compute image gallery that contains the image",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "Name is the name of the image",
                      "type": "string",
                      "minLength": 1
                    },
                    "plan": {
                      "description": "Plan contains plan information.",
                      "type": "object",
                      "required": [
                        "offer",
                        "publisher",
                        "sku"
                      ],
                      "properties": {
                        "offer": {
                          "description": "Offer specifies the name of a group of related images created by the publisher.\nFor example, UbuntuServer, WindowsServer",
                          "type": "string",
                          "minLength": 1
                        },
                        "publisher": {
                          "description": "Publisher is the name of the organization that created the image",
                          "type": "string",
                          "minLength": 1
                        },
                        "sku": {
                          "description": "SKU specifies an instance of an offer, such as a major release of a distribution.\nFor example, 18.04-LTS, 2019-Datacenter",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "resourceGroup": {
                      "description": "ResourceGroup specifies the resource group containing the private compute gallery.",
                      "type": "string"
                    },
                    "subscriptionID": {
                      "description": "SubscriptionID is the identifier of the subscription that contains the private compute gallery.",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version specifies the version of the marketplace image. The allowed formats\nare Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.\nSpecify 'latest' to use the latest version of an image available at deploy time.\nEven if you use 'latest', the VM image will not automatically update after deploy\ntime even if a new version becomes available.",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false
                },
                "id": {
                  "description": "ID specifies an image to use by ID",
                  "type": "string"
                },
                "marketplace": {
                  "description": "Marketplace specifies an image to use from the Azure Marketplace",
                  "type": "object",
                  "required": [
                    "offer",
                    "publisher",
                    "sku",
                    "version"
                  ],
                  "properties": {
                    "offer": {
                      "description": "Offer specifies the name of a group of related images created by the publisher.\nFor example, UbuntuServer, WindowsServer",
                      "type": "string",
                      "minLength": 1
                    },
                    "publisher": {
                      "description": "Publisher is the name of the organization that created the image",
                      "type": "string",
                      "minLength": 1
                    },
                    "sku": {
                      "description": "SKU specifies an instance of an offer, such as a major release of a distribution.\nFor example, 18.04-LTS, 2019-Datacenter",
                      "type": "string",
                      "minLength": 1
                    },
                    "thirdPartyImage": {
                      "description": "ThirdPartyImage indicates the image is published by a third party publisher and a Plan\nwill be generated for it.",
                      "type": "boolean",
                      "default": false
                    },
                    "version": {
                      "description": "Version specifies the version of an image sku. The allowed formats\nare Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.\nSpecify 'latest' to use the latest version of an image available at deploy time.\nEven if you use 'latest', the VM image will not automatically update after deploy\ntime even if a new version becomes available.",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false
                },
                "sharedGallery": {
                  "description": "SharedGallery specifies an image to use from an Azure Shared Image Gallery\nDeprecated: use ComputeGallery instead.",
                  "type": "object",
                  "required": [
                    "gallery",
                    "name",
                    "resourceGroup",
                    "subscriptionID",
                    "version"
                  ],
                  "properties": {
                    "gallery": {
                      "description": "Gallery specifies the name of the shared image gallery that contains the image",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "Name is the name of the image",
                      "type": "string",
                      "minLength": 1
                    },
                    "offer": {
                      "description": "Offer specifies the name of a group of related images created by the publisher.\nFor example, UbuntuServer, WindowsServer\nThis value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.\nThis is needed when the source image from which this SIG image was built requires the `Plan` to be used.",
                      "type": "string"
                    },
                    "publisher": {
                      "description": "Publisher is the name of the organization that created the image.\nThis value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.\nThis is needed when the source image from which this SIG image was built requires the `Plan` to be used.",
                      "type": "string"
                    },
                    "resourceGroup": {
                      "description": "ResourceGroup specifies the resource group containing the shared image gallery",
                      "type": "string",
                      "minLength": 1
                    },
                    "sku": {
                      "description": "SKU specifies an instance of an offer, such as a major release of a distribution.\nFor example, 18.04-LTS, 2019-Datacenter\nThis value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.\nThis is needed when the source image from which this SIG image was built requires the `Plan` to be used.",
                      "type": "string"
                    },
                    "subscriptionID": {
                      "description": "SubscriptionID is the identifier of the subscription that contains the shared image gallery",
                      "type": "string",
                      "minLength": 1
                    },
                    "version": {
                      "description": "Version specifies the version of the marketplace image. The allowed formats\nare Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.\nSpecify 'latest' to use the latest version of an image available at deploy time.\nEven if you use 'latest', the VM image will not automatically update after deploy\ntime even if a new version becomes available.",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "networkInterfaces": {
              "description": "NetworkInterfaces specifies a list of network interface configurations.\nIf left unspecified, the VM will get a single network interface with a\nsingle IPConfig in the subnet specified in the cluster's node subnet field.\nThe primary interface will be the first networkInterface specified (index 0) in the list.",
              "type": "array",
              "items": {
                "description": "NetworkInterface defines a network interface.",
                "type": "object",
                "properties": {
                  "acceleratedNetworking": {
                    "description": "AcceleratedNetworking enables or disables Azure accelerated networking. If omitted, it will be set based on\nwhether the requested VMSize supports accelerated networking.\nIf AcceleratedNetworking is set to true with a VMSize that does not support it, Azure will return an error.",
                    "type": "boolean"
                  },
                  "privateIPConfigs": {
                    "description": "PrivateIPConfigs specifies the number of private IP addresses to attach to the interface.\nDefaults to 1 if not specified.",
                    "type": "integer"
                  },
                  "subnetName": {
                    "description": "SubnetName specifies the subnet in which the new network interface will be placed.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "osDisk": {
              "description": "OSDisk contains the operating system disk information for a Virtual Machine",
              "type": "object",
              "required": [
                "osType"
              ],
              "properties": {
                "cachingType": {
                  "description": "CachingType specifies the caching requirements.",
                  "type": "string",
                  "default": "None",
                  "enum": [
                    "None",
                    "ReadOnly",
                    "ReadWrite"
                  ]
                },
                "diffDiskSettings": {
                  "description": "DiffDiskSettings describe ephemeral disk settings for the os disk.",
                  "type": "object",
                  "required": [
                    "option"
                  ],
                  "properties": {
                    "option": {
                      "description": "Option enables ephemeral OS when set to \"Local\"\nSee https://learn.microsoft.com/azure/virtual-machines/ephemeral-os-disks for full details",
                      "type": "string",
                      "enum": [
                        "Local"
                      ]
                    },
                    "placement": {
                      "description": "Placement specifies the ephemeral disk placement for operating system disk. If placement is specified, Option must be set to \"Local\".",
                      "type": "string",
                      "enum": [
                        "CacheDisk",
                        "NvmeDisk",
                        "ResourceDisk"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "diskSizeGB": {
                  "description": "DiskSizeGB is the size in GB to assign to the OS disk.\nWill have a default of 30GB if not provided",
                  "type": "integer",
                  "format": "int32"
                },
                "managedDisk": {
                  "description": "ManagedDisk specifies the Managed Disk parameters for the OS disk.",
                  "type": "object",
                  "properties": {
                    "diskEncryptionSet": {
                      "description": "DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the managed disk.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "securityProfile": {
                      "description": "SecurityProfile specifies the security profile for the managed disk.",
                      "type": "object",
                      "properties": {
                        "diskEncryptionSet": {
                          "description": "DiskEncryptionSet specifies the customer-managed disk encryption set resource id for the\nmanaged disk that is used for Customer Managed Key encrypted ConfidentialVM OS Disk and\nVMGuest blob.",
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "ID defines resourceID for diskEncryptionSet resource. It must be in the same subscription",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "securityEncryptionType": {
                          "description": "SecurityEncryptionType specifies the encryption type of the managed disk.\nIt is set to DiskWithVMGuestState to encrypt the managed disk along with the VMGuestState\nblob, and to VMGuestStateOnly to encrypt the VMGuestState blob only.\nWhen set to VMGuestStateOnly, VirtualizedTrustedPlatformModule should be set to Enabled.\nWhen set to DiskWithVMGuestState, EncryptionAtHost should be disabled, SecureBoot and\nVirtualizedTrustedPlatformModule should be set to Enabled.\nIt can be set only for Confidential VMs.",
                          "type": "string",
                          "enum": [
                            "VMGuestStateOnly",
                            "DiskWithVMGuestState"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "storageAccountType": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "osType": {
                  "type": "string",
                  "default": "Linux"
                }
              },
              "additionalProperties": false
            },
            "securityProfile": {
              "description": "SecurityProfile specifies the Security profile settings for a virtual machine.",
              "type": "object",
              "properties": {
                "encryptionAtHost": {
                  "description": "This field indicates whether Host Encryption should be enabled\nor disabled for a virtual machine or virtual machine scale set.\nThis should be disabled when SecurityEncryptionType is set to DiskWithVMGuestState.\nDefault is disabled.",
                  "type": "boolean"
                },
                "securityType": {
                  "description": "SecurityType specifies the SecurityType of the virtual machine. It has to be set to any specified value to\nenable UefiSettings. The default behavior is: UefiSettings will not be enabled unless this property is set.",
                  "type": "string",
                  "enum": [
                    "ConfidentialVM",
                    "TrustedLaunch"
                  ]
                },
                "uefiSettings": {
                  "description": "UefiSettings specifies the security settings like secure boot and vTPM used while creating the virtual machine.",
                  "type": "object",
                  "properties": {
                    "secureBootEnabled": {
                      "description": "SecureBootEnabled specifies whether secure boot should be enabled on the virtual machine.\nSecure Boot verifies the digital signature of all boot components and halts the boot process if signature verification fails.\nIf omitted, the platform chooses a default, which is subject to change over time, currently that default is false.",
                      "type": "boolean"
                    },
                    "vTpmEnabled": {
                      "description": "VTpmEnabled specifies whether vTPM should be enabled on the virtual machine.\nWhen true it enables the virtualized trusted platform module measurements to create a known good boot integrity policy baseline.\nThe integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.\nThis is required to be set to Enabled if SecurityEncryptionType is defined.\nIf omitted, the platform chooses a default, which is subject to change over time, currently that default is false.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "spotVMOptions": {
              "description": "SpotVMOptions allows the ability to specify the Machine should use a Spot VM",
              "type": "object",
              "properties": {
                "evictionPolicy": {
                  "description": "EvictionPolicy defines the behavior of the virtual machine when it is evicted. It can be either Delete or Deallocate.",
                  "type": "string",
                  "enum": [
                    "Deallocate",
                    "Delete"
                  ]
                },
                "maxPrice": {
                  "description": "MaxPrice defines the maximum price the user is willing to pay for Spot VM instances",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "additionalProperties": false
            },
            "sshPublicKey": {
              "description": "SSHPublicKey is the SSH public key string, base64-encoded to add to a Virtual Machine. Linux only.\nRefer to documentation on how to set up SSH access on Windows instances.",
              "type": "string"
            },
            "subnetName": {
              "description": "Deprecated: SubnetName should be set in the networkInterfaces field.",
              "type": "string"
            },
            "terminateNotificationTimeout": {
              "description": "TerminateNotificationTimeout enables or disables VMSS scheduled events termination notification with specified timeout\nallowed values are between 5 and 15 (mins)",
              "type": "integer"
            },
            "vmExtensions": {
              "description": "VMExtensions specifies a list of extensions to be added to the scale set.",
              "type": "array",
              "items": {
                "description": "VMExtension specifies the parameters for a custom VM extension.",
                "type": "object",
                "required": [
                  "name",
                  "publisher",
                  "version"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the extension.",
                    "type": "string"
                  },
                  "protectedSettings": {
                    "description": "ProtectedSettings is a JSON formatted protected settings for the extension.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "publisher": {
                    "description": "Publisher is the name of the extension handler publisher.",
                    "type": "string"
                  },
                  "settings": {
                    "description": "Settings is a JSON formatted public settings for the extension.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "version": {
                    "description": "Version specifies the version of the script handler.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "vmSize": {
              "description": "VMSize is the size of the Virtual Machine to build.\nSee https://learn.microsoft.com/rest/api/compute/virtualmachines/createorupdate#virtualmachinesizetypes",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "userAssignedIdentities": {
          "description": "UserAssignedIdentities is a list of standalone Azure identities provided by the user\nThe lifecycle of a user-assigned identity is managed separately from the lifecycle of\nthe AzureMachinePool.\nSee https://learn.microsoft.com/azure/active-directory/managed-identities-azure-resources/how-to-manage-ua-identity-cli",
          "type": "array",
          "items": {
            "description": "UserAssignedIdentity defines the user-assigned identities provided\nby the user to be assigned to Azure resources.",
            "type": "object",
            "required": [
              "providerID"
            ],
            "properties": {
              "providerID": {
                "description": "ProviderID is the identification ID of the user-assigned Identity, the format of an identity is:\n'azure:///subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "zoneBalance": {
          "description": "ZoneBalane dictates whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "AzureMachinePoolStatus defines the observed state of AzureMachinePool.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions defines current service state of the AzureMachinePool.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string",
                "maxLength": 10240,
                "minLength": 1
              },
              "reason": {
                "description": "reason is the reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              },
              "severity": {
                "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string",
                "maxLength": 32
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        },
        "failureMessage": {
          "description": "FailureMessage will be set in the event that there is a terminal problem\nreconciling the MachinePool and will contain a more verbose string suitable\nfor logging and human consumption.\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the MachinePool's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\nAny transient errors that occur during the reconciliation of MachinePools\ncan be added as events to the MachinePool object and/or logged in the\ncontroller's output.",
          "type": "string"
        },
        "failureReason": {
          "description": "FailureReason will be set in the event that there is a terminal problem\nreconciling the MachinePool and will contain a succinct value suitable\nfor machine interpretation.\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the MachinePool's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\nAny transient errors that occur during the reconciliation of MachinePools\ncan be added as events to the MachinePool object and/or logged in the\ncontroller's output.",
          "type": "string"
        },
        "image": {
          "description": "Image is the current image used in the AzureMachinePool. When the spec image is nil, this image is populated\nwith the details of the defaulted Azure Marketplace \"capi\" offer.",
          "type": "object",
          "properties": {
            "computeGallery": {
              "description": "ComputeGallery specifies an image to use from the Azure Compute Gallery",
              "type": "object",
              "required": [
                "gallery",
                "name",
                "version"
              ],
              "properties": {
                "gallery": {
                  "description": "Gallery specifies the name of the compute image gallery that contains the image",
                  "type": "string",
                  "minLength": 1
                },
                "name": {
                  "description": "Name is the name of the image",
                  "type": "string",
                  "minLength": 1
                },
                "plan": {
                  "description": "Plan contains plan information.",
                  "type": "object",
                  "required": [
                    "offer",
                    "publisher",
                    "sku"
                  ],
                  "properties": {
                    "offer": {
                      "description": "Offer specifies the name of a group of related images created by the publisher.\nFor example, UbuntuServer, WindowsServer",
                      "type": "string",
                      "minLength": 1
                    },
                    "publisher": {
                      "description": "Publisher is the name of the organization that created the image",
                      "type": "string",
                      "minLength": 1
                    },
                    "sku": {
                      "description": "SKU specifies an instance of an offer, such as a major release of a distribution.\nFor example, 18.04-LTS, 2019-Datacenter",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false
                },
                "resourceGroup": {
                  "description": "ResourceGroup specifies the resource group containing the private compute gallery.",
                  "type": "string"
                },
                "subscriptionID": {
                  "description": "SubscriptionID is the identifier of the subscription that contains the private compute gallery.",
                  "type": "string"
                },
                "version": {
                  "description": "Version specifies the version of the marketplace image. The allowed formats\nare Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.\nSpecify 'latest' to use the latest version of an image available at deploy time.\nEven if you use 'latest', the VM image will not automatically update after deploy\ntime even if a new version becomes available.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "ID specifies an image to use by ID",
              "type": "string"
            },
            "marketplace": {
              "description": "Marketplace specifies an image to use from the Azure Marketplace",
              "type": "object",
              "required": [
                "offer",
                "publisher",
                "sku",
                "version"
              ],
              "properties": {
                "offer": {
                  "description": "Offer specifies the name of a group of related images created by the publisher.\nFor example, UbuntuServer, WindowsServer",
                  "type": "string",
                  "minLength": 1
                },
                "publisher": {
                  "description": "Publisher is the name of the organization that created the image",
                  "type": "string",
                  "minLength": 1
                },
                "sku": {
                  "description": "SKU specifies an instance of an offer, such as a major release of a distribution.\nFor example, 18.04-LTS, 2019-Datacenter",
                  "type": "string",
                  "minLength": 1
                },
                "thirdPartyImage": {
                  "description": "ThirdPartyImage indicates the image is published by a third party publisher and a Plan\nwill be generated for it.",
                  "type": "boolean",
                  "default": false
                },
                "version": {
                  "description": "Version specifies the version of an image sku. The allowed formats\nare Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.\nSpecify 'latest' to use the latest version of an image available at deploy time.\nEven if you use 'latest', the VM image will not automatically update after deploy\ntime even if a new version becomes available.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            },
            "sharedGallery": {
              "description": "SharedGallery specifies an image to use from an Azure Shared Image Gallery\nDeprecated: use ComputeGallery instead.",
              "type": "object",
              "required": [
                "gallery",
                "name",
                "resourceGroup",
                "subscriptionID",
                "version"
              ],
              "properties": {
                "gallery": {
                  "description": "Gallery specifies the name of the shared image gallery that contains the image",
                  "type": "string",
                  "minLength": 1
                },
                "name": {
                  "description": "Name is the name of the image",
                  "type": "string",
                  "minLength": 1
                },
                "offer": {
                  "description": "Offer specifies the name of a group of related images created by the publisher.\nFor example, UbuntuServer, WindowsServer\nThis value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.\nThis is needed when the source image from which this SIG image was built requires the `Plan` to be used.",
                  "type": "string"
                },
                "publisher": {
                  "description": "Publisher is the name of the organization that created the image.\nThis value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.\nThis is needed when the source image from which this SIG image was built requires the `Plan` to be used.",
                  "type": "string"
                },
                "resourceGroup": {
                  "description": "ResourceGroup specifies the resource group containing the shared image gallery",
                  "type": "string",
                  "minLength": 1
                },
                "sku": {
                  "description": "SKU specifies an instance of an offer, such as a major release of a distribution.\nFor example, 18.04-LTS, 2019-Datacenter\nThis value will be used to add a `Plan` in the API request when creating the VM/VMSS resource.\nThis is needed when the source image from which this SIG image was built requires the `Plan` to be used.",
                  "type": "string"
                },
                "subscriptionID": {
                  "description": "SubscriptionID is the identifier of the subscription that contains the shared image gallery",
                  "type": "string",
                  "minLength": 1
                },
                "version": {
                  "description": "Version specifies the version of the marketplace image. The allowed formats\nare Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers.\nSpecify 'latest' to use the latest version of an image available at deploy time.\nEven if you use 'latest', the VM image will not automatically update after deploy\ntime even if a new version becomes available.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "infrastructureMachineKind": {
          "description": "InfrastructureMachineKind is the kind of the infrastructure resources behind MachinePool Machines.",
          "type": "string"
        },
        "instances": {
          "description": "Instances is the VM instance status for each VM in the VMSS",
          "type": "array",
          "items": {
            "description": "AzureMachinePoolInstanceStatus provides status information for each instance in the VMSS.",
            "type": "object",
            "required": [
              "latestModelApplied"
            ],
            "properties": {
              "instanceID": {
                "description": "InstanceID is the identification of the Machine Instance within the VMSS",
                "type": "string"
              },
              "instanceName": {
                "description": "InstanceName is the name of the Machine Instance within the VMSS",
                "type": "string"
              },
              "latestModelApplied": {
                "description": "LatestModelApplied indicates the instance is running the most up-to-date VMSS model. A VMSS model describes\nthe image version the VM is running. If the instance is not running the latest model, it means the instance\nmay not be running the version of Kubernetes the Machine Pool has specified and needs to be updated.",
                "type": "boolean"
              },
              "providerID": {
                "description": "ProviderID is the provider identification of the VMSS Instance",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState is the provisioning state of the Azure virtual machine instance.",
                "type": "string"
              },
              "version": {
                "description": "Version defines the Kubernetes version for the VM Instance",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "longRunningOperationStates": {
          "description": "LongRunningOperationStates saves the state for Azure long-running operations so they can be continued on the\nnext reconciliation loop.",
          "type": "array",
          "items": {
            "description": "Future contains the data needed for an Azure long-running operation to continue across reconcile loops.",
            "type": "object",
            "required": [
              "data",
              "name",
              "serviceName",
              "type"
            ],
            "properties": {
              "data": {
                "description": "Data is the base64 url encoded json Azure AutoRest Future.",
                "type": "string"
              },
              "name": {
                "description": "Name is the name of the Azure resource.\nTogether with the service name, this forms the unique identifier for the future.",
                "type": "string"
              },
              "resourceGroup": {
                "description": "ResourceGroup is the Azure resource group for the resource.",
                "type": "string"
              },
              "serviceName": {
                "description": "ServiceName is the name of the Azure service.\nTogether with the name of the resource, this forms the unique identifier for the future.",
                "type": "string"
              },
              "type": {
                "description": "Type describes the type of future, such as update, create, delete, etc.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "provisioningState": {
          "description": "ProvisioningState is the provisioning state of the Azure virtual machine.",
          "type": "string"
        },
        "ready": {
          "description": "Ready is true when the provider resource is ready.",
          "type": "boolean"
        },
        "replicas": {
          "description": "Replicas is the most recently observed number of replicas.",
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "description": "Version is the Kubernetes version for the current VMSS model",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
