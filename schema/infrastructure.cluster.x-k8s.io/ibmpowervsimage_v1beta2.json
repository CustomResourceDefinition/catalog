{
  "description": "IBMPowerVSImage is the Schema for the ibmpowervsimages API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IBMPowerVSImageSpec defines the desired state of IBMPowerVSImage.",
      "type": "object",
      "required": [
        "bucket",
        "clusterName",
        "object",
        "region",
        "serviceInstanceID"
      ],
      "properties": {
        "bucket": {
          "description": "Cloud Object Storage bucket name; bucket-name[/optional/folder]",
          "type": "string"
        },
        "clusterName": {
          "description": "ClusterName is the name of the Cluster this object belongs to.",
          "type": "string",
          "minLength": 1
        },
        "deletePolicy": {
          "description": "DeletePolicy defines the policy used to identify images to be preserved beyond the lifecycle of associated cluster.",
          "type": "string",
          "default": "delete",
          "enum": [
            "delete",
            "retain"
          ]
        },
        "object": {
          "description": "Cloud Object Storage image filename.",
          "type": "string"
        },
        "region": {
          "description": "Cloud Object Storage region.",
          "type": "string"
        },
        "serviceInstance": {
          "description": "serviceInstance is the reference to the Power VS workspace on which the server instance(VM) will be created.\nPower VS workspace is a container for all Power VS instances at a specific geographic region.\nserviceInstance can be created via IBM Cloud catalog or CLI.\nsupported serviceInstance identifier in PowerVSResource are Name and ID and that can be obtained from IBM Cloud UI or IBM Cloud cli.\nMore detail about Power VS service instance.\nhttps://cloud.ibm.com/docs/power-iaas?topic=power-iaas-creating-power-virtual-server\nwhen omitted system will dynamically create the service instance",
          "type": "object",
          "properties": {
            "id": {
              "description": "ID of resource",
              "type": "string",
              "minLength": 1
            },
            "name": {
              "description": "Name of resource",
              "type": "string",
              "minLength": 1
            },
            "regex": {
              "description": "Regular expression to match resource,\nIn case of multiple resources matches the provided regular expression the first matched resource will be selected",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "serviceInstanceID": {
          "description": "ServiceInstanceID is the id of the power cloud instance where the image will get imported.\nDeprecated: use ServiceInstance instead",
          "type": "string"
        },
        "storageType": {
          "description": "Type of storage, storage pool with the most available space will be selected.",
          "type": "string",
          "default": "tier1",
          "enum": [
            "tier0",
            "tier1",
            "tier3"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "IBMPowerVSImageStatus defines the observed state of IBMPowerVSImage.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions defines current service state of the IBMPowerVSImage.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string",
                "maxLength": 10240,
                "minLength": 1
              },
              "reason": {
                "description": "reason is the reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              },
              "severity": {
                "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string",
                "maxLength": 32
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string",
                "maxLength": 256,
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        },
        "imageID": {
          "description": "ImageID is the id of the imported image.",
          "type": "string"
        },
        "imageState": {
          "description": "ImageState is the status of the imported image.",
          "type": "string"
        },
        "jobID": {
          "description": "JobID is the job ID of an import operation.",
          "type": "string"
        },
        "ready": {
          "description": "Ready is true when the provider resource is ready.",
          "type": "boolean"
        },
        "v1beta2": {
          "description": "v1beta2 groups all the fields that will be added or modified in IBMPowerVSCluster's status with the V1Beta2 version.",
          "type": "object",
          "properties": {
            "conditions": {
              "description": "conditions represents the observations of a DevCluster's current state.",
              "type": "array",
              "maxItems": 32,
              "items": {
                "description": "Condition contains details for one aspect of the current state of this API Resource.",
                "type": "object",
                "required": [
                  "lastTransitionTime",
                  "message",
                  "reason",
                  "status",
                  "type"
                ],
                "properties": {
                  "lastTransitionTime": {
                    "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                    "type": "string",
                    "maxLength": 32768
                  },
                  "observedGeneration": {
                    "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                    "type": "integer",
                    "format": "int64",
                    "minimum": 0
                  },
                  "reason": {
                    "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1,
                    "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                  },
                  "status": {
                    "description": "status of the condition, one of True, False, Unknown.",
                    "type": "string",
                    "enum": [
                      "True",
                      "False",
                      "Unknown"
                    ]
                  },
                  "type": {
                    "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                    "type": "string",
                    "maxLength": 316,
                    "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-map-keys": [
                "type"
              ],
              "x-kubernetes-list-type": "map"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
