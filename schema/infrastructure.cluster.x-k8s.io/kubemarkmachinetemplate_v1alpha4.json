{
  "description": "KubemarkMachineTemplate is the Schema for the kubemarkmachinetemplates API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KubemarkMachineTemplateSpec defines the desired state of KubemarkMachineTemplate.",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "template": {
          "description": "KubemarkMachineTemplateResource describes the data needed to create am KubemarkMachine from a template.",
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "description": "Spec is the specification of the desired behavior of the machine.",
              "type": "object",
              "properties": {
                "extraMounts": {
                  "description": "ExtraMounts describes additional mount points for the node container\nThese may be used to bind a hostPath",
                  "type": "array",
                  "items": {
                    "description": "Mount specifies a host volume to mount into a container.\nThis is a simplified version of kind v1alpha4.Mount types.",
                    "type": "object",
                    "required": [
                      "containerPath",
                      "hostPath",
                      "name"
                    ],
                    "properties": {
                      "containerPath": {
                        "description": "Path of the mount within the container.",
                        "type": "string"
                      },
                      "hostPath": {
                        "description": "Path of the mount on the host. If the hostPath doesn't exist, then runtimes\nshould report error. If the hostpath is a symbolic link, runtimes should\nfollow the symlink and mount the real destination to container.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the mount.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\nvalidations taken from https://github.com/kubernetes/api/blob/master/core/v1/types.go#L664",
                        "type": "string",
                        "enum": [
                          "",
                          "DirectoryOrCreate",
                          "Directory",
                          "FileOrCreate",
                          "File",
                          "Socket",
                          "CharDevice",
                          "BlockDevice"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "kubemarkHollowPodClusterSecretRef": {
                  "description": "KubemarkHollowPodClusterSecretRef is a reference to a secret with a kubeconfig for an external cluster used for kubemark pods.",
                  "type": "object",
                  "properties": {
                    "apiVersion": {
                      "description": "API version of the referent.",
                      "type": "string"
                    },
                    "fieldPath": {
                      "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                      "type": "string"
                    },
                    "uid": {
                      "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-map-type": "atomic"
                },
                "kubemarkOptions": {
                  "description": "KubemarkOptions are API representations of command line flags that\nwill be passed to the `kubemark` binary.",
                  "type": "object",
                  "properties": {
                    "extendedResources": {
                      "description": "ExtendedResources is a map of resource-type:value pairs that describe\nresources which the result machine and node will advertise as capacity.\nThese will only be used with Kubernetes v1.22+.\nDefaults to {\"cpu\": \"1\", \"memory\": \"4G\"}",
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    },
                    "nodeLabels": {
                      "description": "NodeLabels is a map of labels to that will be applied created nodes.\nLabels applied this way will be injected as command line flags to the\nkubemark process.\nDefaults to no labels",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "registerWithTaints": {
                      "description": "RegisterWithTaints is an array of Taints that will be applied to created\nnodes. Taints applied this way will be injected as command line flags to\nthe kubemark process.\nDefaults to no taints",
                      "type": "array",
                      "items": {
                        "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
                        "type": "object",
                        "required": [
                          "effect",
                          "key"
                        ],
                        "properties": {
                          "effect": {
                            "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                            "type": "string"
                          },
                          "key": {
                            "description": "Required. The taint key to be applied to a node.",
                            "type": "string"
                          },
                          "timeAdded": {
                            "description": "TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "value": {
                            "description": "The taint value corresponding to the taint key.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "providerID": {
                  "description": "ProviderID will be the kubemark pod name in ProviderID format (kubemark:////\u003cpodname\u003e)",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "KubemarkMachineTemplateStatus defines the observed state of KubemarkMachineTemplate.",
      "type": "object",
      "properties": {
        "capacity": {
          "description": "Capacity defines the resource capacity for this machine.\nThis value is used for autoscaling from zero operations as defined in:\nhttps://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20210310-opt-in-autoscaling-from-zero.md",
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          }
        }
      },
      "additionalProperties": false
    }
  }
}
