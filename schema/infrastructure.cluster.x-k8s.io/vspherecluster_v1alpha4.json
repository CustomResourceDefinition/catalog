{
  "description": "VSphereCluster is the Schema for the vsphereclusters API\n\nDeprecated: This type will be removed in one of the next releases.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VSphereClusterSpec defines the desired state of VSphereCluster",
      "type": "object",
      "properties": {
        "controlPlaneEndpoint": {
          "description": "ControlPlaneEndpoint represents the endpoint used to communicate with the control plane.",
          "type": "object",
          "required": [
            "host",
            "port"
          ],
          "properties": {
            "host": {
              "description": "The hostname on which the API server is serving.",
              "type": "string"
            },
            "port": {
              "description": "The port on which the API server is serving.",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        },
        "identityRef": {
          "description": "IdentityRef is a reference to either a Secret or VSphereClusterIdentity that contains\nthe identity to use when reconciling the cluster.",
          "type": "object",
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the identity. Can either be VSphereClusterIdentity or Secret",
              "type": "string",
              "enum": [
                "VSphereClusterIdentity",
                "Secret"
              ]
            },
            "name": {
              "description": "Name of the identity.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "server": {
          "description": "Server is the address of the vSphere endpoint.",
          "type": "string"
        },
        "thumbprint": {
          "description": "Thumbprint is the colon-separated SHA-1 checksum of the given vCenter server's host certificate",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "VSphereClusterStatus defines the observed state of VSphereClusterSpec",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions defines current service state of the VSphereCluster.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "failureDomains": {
          "description": "FailureDomains is a list of failure domain objects synced from the infrastructure provider.",
          "type": "object",
          "additionalProperties": {
            "description": "FailureDomainSpec is the Schema for Cluster API failure domains.\nIt allows controllers to understand how many failure domains a cluster can optionally span across.",
            "type": "object",
            "properties": {
              "attributes": {
                "description": "Attributes is a free form map of attributes an infrastructure provider might use or require.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "controlPlane": {
                "description": "ControlPlane determines if this failure domain is suitable for use by control plane machines.",
                "type": "boolean"
              }
            }
          }
        },
        "ready": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
