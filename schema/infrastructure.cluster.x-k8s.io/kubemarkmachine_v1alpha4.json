{
  "description": "KubemarkMachine is the Schema for the kubemarkmachines API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KubemarkMachineSpec defines the desired state of KubemarkMachine.",
      "type": "object",
      "properties": {
        "extraMounts": {
          "description": "ExtraMounts describes additional mount points for the node container\nThese may be used to bind a hostPath",
          "type": "array",
          "items": {
            "description": "Mount specifies a host volume to mount into a container.\nThis is a simplified version of kind v1alpha4.Mount types.",
            "type": "object",
            "required": [
              "containerPath",
              "hostPath",
              "name"
            ],
            "properties": {
              "containerPath": {
                "description": "Path of the mount within the container.",
                "type": "string"
              },
              "hostPath": {
                "description": "Path of the mount on the host. If the hostPath doesn't exist, then runtimes\nshould report error. If the hostpath is a symbolic link, runtimes should\nfollow the symlink and mount the real destination to container.",
                "type": "string"
              },
              "name": {
                "description": "Name of the mount.",
                "type": "string"
              },
              "type": {
                "description": "Type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\nvalidations taken from https://github.com/kubernetes/api/blob/master/core/v1/types.go#L664",
                "type": "string",
                "enum": [
                  "",
                  "DirectoryOrCreate",
                  "Directory",
                  "FileOrCreate",
                  "File",
                  "Socket",
                  "CharDevice",
                  "BlockDevice"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "kubemarkHollowPodClusterSecretRef": {
          "description": "KubemarkHollowPodClusterSecretRef is a reference to a secret with a kubeconfig for an external cluster used for kubemark pods.",
          "type": "object",
          "properties": {
            "apiVersion": {
              "description": "API version of the referent.",
              "type": "string"
            },
            "fieldPath": {
              "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
              "type": "string"
            },
            "kind": {
              "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            },
            "resourceVersion": {
              "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
              "type": "string"
            },
            "uid": {
              "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "kubemarkOptions": {
          "description": "KubemarkOptions are API representations of command line flags that\nwill be passed to the `kubemark` binary.",
          "type": "object",
          "properties": {
            "extendedResources": {
              "description": "ExtendedResources is a map of resource-type:value pairs that describe\nresources which the result machine and node will advertise as capacity.\nThese will only be used with Kubernetes v1.22+.\nDefaults to {\"cpu\": \"1\", \"memory\": \"4G\"}",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              }
            }
          },
          "additionalProperties": false
        },
        "providerID": {
          "description": "ProviderID will be the kubemark pod name in ProviderID format (kubemark:////\u003cpodname\u003e)",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "KubemarkMachineStatus defines the observed state of KubemarkMachine.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions defines current service state of the DockerMachine.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may be empty.",
                "type": "string"
              },
              "severity": {
                "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "ready": {
          "description": "Ready is true when the provider resource is ready.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
