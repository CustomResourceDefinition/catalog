{
  "description": "PacketMachine is the Schema for the packetmachines API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PacketMachineSpec defines the desired state of PacketMachine.",
      "type": "object",
      "required": [
        "machineType",
        "os"
      ],
      "properties": {
        "billingCycle": {
          "description": "DeviceCreateInputBillingCycle The billing cycle of the device.",
          "type": "string"
        },
        "facility": {
          "description": "Facility represents the Packet facility for this machine.\nOverride from the PacketCluster spec.",
          "type": "string"
        },
        "hardwareReservationID": {
          "description": "HardwareReservationID is the unique device hardware reservation ID, a comma separated list of\nhardware reservation IDs, or `next-available` to automatically let the Packet api determine one.",
          "type": "string"
        },
        "ipxeURL": {
          "description": "IPXEUrl can be used to set the pxe boot url when using custom OSes with this provider.\nNote that OS should also be set to \"custom_ipxe\" if using this value.",
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "metro": {
          "description": "Metro represents the Packet metro for this machine\nOverride from the PacketCluster spec.",
          "type": "string"
        },
        "os": {
          "type": "string"
        },
        "providerID": {
          "description": "ProviderID is the unique identifier as specified by the cloud provider.",
          "type": "string"
        },
        "sshKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "description": "Tags is an optional set of tags to add to Packet resources managed by the Packet provider.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PacketMachineStatus defines the observed state of PacketMachine.",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "Addresses contains the Packet device associated addresses.",
          "type": "array",
          "items": {
            "description": "NodeAddress contains information for the node's address.",
            "type": "object",
            "required": [
              "address",
              "type"
            ],
            "properties": {
              "address": {
                "description": "The node address.",
                "type": "string"
              },
              "type": {
                "description": "Node address type, one of Hostname, ExternalIP or InternalIP.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "conditions": {
          "description": "Conditions defines current service state of the PacketMachine.",
          "type": "array",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "failureMessage": {
          "description": "FailureMessage will be set in the event that there is a terminal problem\nreconciling the Machine and will contain a more verbose string suitable\nfor logging and human consumption.\n\n\nThis field should not be set for transitive errors that a controller\nfaces that are expected to be fixed automatically over\ntime (like service outages), but instead indicate that something is\nfundamentally wrong with the Machine's spec or the configuration of\nthe controller, and that manual intervention is required. Examples\nof terminal errors would be invalid combinations of settings in the\nspec, values that are unsupported by the controller, or the\nresponsible controller itself being critically misconfigured.\n\n\nAny transient errors that occur during the reconciliation of Machines\ncan be added as events to the Machine object and/or logged in the\ncontroller's output.",
          "type": "string"
        },
        "failureReason": {
          "description": "Any transient errors that occur during the reconciliation of Machines\ncan be added as events to the Machine object and/or logged in the\ncontroller's output.",
          "type": "string"
        },
        "instanceStatus": {
          "description": "InstanceStatus is the status of the Packet device instance for this machine.",
          "type": "string"
        },
        "ready": {
          "description": "Ready is true when the provider resource is ready.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
