{
  "description": "OCIManagedMachinePoolTemplate is the Schema for the OCIManagedMachinePoolTemplates API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "OCIManagedMachinePoolTemplateSpec defines the desired state of OCIManagedMachinePoolTemplate.",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "template": {
          "description": "OCIManagedMachinePoolSpec describes the data needed to create an OCIManagedMachinePool from a template.",
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "spec": {
              "description": "OCIManagedMachinePoolSpec defines the desired state of an OCI managed machine pool. An OCIManagedMachinePool translates to an OKE NodePool. The properties are generated from https://docs.oracle.com/en-us/iaas/api/#/en/containerengine/20180222/datatypes/CreateNodePoolDetails",
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID is the OCID of the associated NodePool",
                  "type": "string"
                },
                "initialNodeLabels": {
                  "description": "InitialNodeLabels defines a list of key/value pairs to add to nodes after they join the Kubernetes cluster.",
                  "type": "array",
                  "items": {
                    "description": "KeyValue The properties that define a key value pair.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "The key of the pair.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value of the pair.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "nodeEvictionNodePoolSettings": {
                  "description": "NodeEvictionNodePoolSettings defines the eviction settings.",
                  "type": "object",
                  "properties": {
                    "evictionGraceDuration": {
                      "description": "EvictionGraceDuration defines the duration after which OKE will give up eviction of the pods on the node. PT0M will indicate you want to delete the node without cordon and drain. Default PT60M, Min PT0M, Max: PT60M. Format ISO 8601 e.g PT30M",
                      "type": "string"
                    },
                    "isForceDeleteAfterGraceDuration": {
                      "description": "IsForceDeleteAfterGraceDuration defines if the underlying compute instance should be deleted if you cannot evict all the pods in grace period",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "nodeMetadata": {
                  "description": "NodeMetadata defines a list of key/value pairs to add to each underlying OCI instance in the node pool on launch.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodePoolCyclingDetails": {
                  "description": "NodePoolCyclingDetails defines the node pool recycling options.",
                  "type": "object",
                  "properties": {
                    "isNodeCyclingEnabled": {
                      "description": "IsNodeCyclingEnabled refers if nodes in the nodepool will be cycled to have new changes.",
                      "type": "boolean"
                    },
                    "maximumSurge": {
                      "description": "MaximumSurge refers to the maximum additional new compute instances that would be temporarily created and added to nodepool during the cycling nodepool process. OKE supports both integer and percentage input. Defaults to 1, Ranges from 0 to Nodepool size or 0% to 100%",
                      "type": "string"
                    },
                    "maximumUnavailable": {
                      "description": "Maximum active nodes that would be terminated from nodepool during the cycling nodepool process. OKE supports both integer and percentage input. Defaults to 0, Ranges from 0 to Nodepool size or 0% to 100%",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "nodePoolNodeConfig": {
                  "description": "NodePoolNodeConfig defines the configuration of nodes in the node pool.",
                  "type": "object",
                  "properties": {
                    "isPvEncryptionInTransitEnabled": {
                      "description": "IsPvEncryptionInTransitEnabled defines whether in transit encryption should be enabled on the nodes.",
                      "type": "boolean"
                    },
                    "kmsKeyId": {
                      "description": "KmsKeyId  defines whether in transit encryption should be enabled on the nodes.",
                      "type": "string"
                    },
                    "nodePoolPodNetworkOptionDetails": {
                      "description": "NodePoolPodNetworkOptionDetails defines the pod networking details of the node pool",
                      "type": "object",
                      "properties": {
                        "cniType": {
                          "description": "CniType describes the CNI plugin used by this node pool. Allowed values are OCI_VCN_IP_NATIVE and FLANNEL_OVERLAY.",
                          "type": "string"
                        },
                        "vcnIpNativePodNetworkOptions": {
                          "description": "VcnIpNativePodNetworkOptions describes the network options specific to using the OCI VCN Native CNI",
                          "type": "object",
                          "properties": {
                            "maxPodsPerNode": {
                              "description": "MemoryInGBs defines the max number of pods per node in the node pool. This value will be limited by the number of VNICs attachable to the node pool shape",
                              "type": "integer"
                            },
                            "nsgNames": {
                              "description": "NSGNames defines the NSGs associated with the native pod network.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "subnetNames": {
                              "description": "SubnetNames defines the Subnets associated with the native pod network.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "nsgNames": {
                      "description": "NsgNames defines the names of NSGs which will be associated with the nodes. the NSGs are defined in OCIManagedCluster object.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "placementConfigs": {
                      "description": "PlacementConfigs defines the placement configurations for the node pool.",
                      "type": "array",
                      "items": {
                        "description": "PlacementConfig defines the placement configurations for the node pool.",
                        "type": "object",
                        "properties": {
                          "availabilityDomain": {
                            "description": "AvailabilityDomain defines the availability domain in which to place nodes.",
                            "type": "string"
                          },
                          "capacityReservationId": {
                            "description": "CapacityReservationId defines the OCID of the compute capacity reservation in which to place the compute instance.",
                            "type": "string"
                          },
                          "faultDomains": {
                            "description": "FaultDomains defines the list of fault domains in which to place nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "subnetName": {
                            "description": "SubnetName defines the name of the subnet which need ot be associated with the Nodepool. The subnets are defined in the OCiManagedCluster object.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "nodeShape": {
                  "description": "NodeShape defines the name of the node shape of the nodes in the node pool.",
                  "type": "string"
                },
                "nodeShapeConfig": {
                  "description": "NodeShapeConfig defines the configuration of the shape to launch nodes in the node pool.",
                  "type": "object",
                  "properties": {
                    "memoryInGBs": {
                      "description": "MemoryInGBs defines the total amount of memory available to each node, in gigabytes.",
                      "type": "string"
                    },
                    "ocpus": {
                      "description": "Ocpus defines the total number of OCPUs available to each node in the node pool.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "nodeSourceViaImage": {
                  "description": "NodeSourceViaImage defines the image configuration of the nodes in the nodepool.",
                  "type": "object",
                  "properties": {
                    "bootVolumeSizeInGBs": {
                      "description": "BootVolumeSizeInGBs defines the size of the boot volume in GBs.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "imageId": {
                      "description": "ImageId defines the OCID of the image used to boot the node.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "providerID": {
                  "description": "ProviderID is the OCID of the associated NodePool in a provider format",
                  "type": "string"
                },
                "providerIDList": {
                  "description": "ProviderIDList are the identification IDs of machine instances provided by the provider. This field must match the provider IDs as seen on the node objects corresponding to a machine pool's machine instances.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sshPublicKey": {
                  "description": "SshPublicKey defines the SSH public key on each node in the node pool on launch.",
                  "type": "string"
                },
                "version": {
                  "description": "Version represents the version of the OKE node pool.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
