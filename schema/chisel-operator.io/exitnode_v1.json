{
  "description": "Auto-generated derived type for ExitNodeSpec via `CustomResource`",
  "type": "object",
  "title": "ExitNode",
  "required": [
    "spec"
  ],
  "properties": {
    "spec": {
      "description": "ExitNode is a custom resource that represents a Chisel exit node. It will be used as the reverse proxy for all services in the cluster.",
      "type": "object",
      "required": [
        "host",
        "port"
      ],
      "properties": {
        "auth": {
          "description": "Optional authentication secret name to connect to the control plane",
          "type": "string",
          "nullable": true
        },
        "chisel_image": {
          "description": "Optional value for the chisel client image used to connect to the chisel server If not provided, jpillora/chisel:latest is used",
          "type": "string",
          "nullable": true
        },
        "default_route": {
          "description": "Optional boolean value for whether to make the exit node the default route for the cluster If true, the exit node will be the default route for the cluster default value is false",
          "type": "boolean",
          "default": false
        },
        "external_host": {
          "description": "Optional real external hostname or IP of the exit node.\n\nThis field is used to explicitly specify the public-facing endpoint for the exit node. If set to an IP address, it will be used as the `ip` field in the Service's `status.loadBalancer.ingress`, which is what external-dns and other automation will use to create DNS records or inform users of the external endpoint. If set to a DNS name, it will be used as the `hostname` field in the same struct.\n\nThis is useful when the exit node is only reachable via a specific external IP or hostname, even if the internal service is routed to a private address. If not provided, the value of the `host` field will be used instead.",
          "type": "string",
          "nullable": true
        },
        "fingerprint": {
          "description": "Optional but highly recommended fingerprint to perform host-key validation against the server's public key",
          "type": "string",
          "nullable": true
        },
        "host": {
          "description": "Hostname or IP address of the chisel server",
          "type": "string"
        },
        "port": {
          "description": "Control plane port of the chisel server",
          "type": "integer",
          "format": "uint16",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "required": [
        "ip",
        "name",
        "provider"
      ],
      "properties": {
        "id": {
          "type": "string",
          "nullable": true
        },
        "ip": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "nullable": true
    }
  }
}
