{
  "description": "TwingateResource represents a resource in Twingate.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "spec": {
      "description": "TwingateResourceSpec defines the desired state of TwingateResource",
      "type": "object",
      "required": [
        "name",
        "address"
      ],
      "properties": {
        "address": {
          "description": "Address of the resource.",
          "type": "string"
        },
        "alias": {
          "description": "Alias of the resource.",
          "type": "string",
          "nullable": true
        },
        "id": {
          "type": "string",
          "nullable": true
        },
        "isBrowserShortcutEnabled": {
          "description": "isBrowserShortcutEnabled specifies whether the resource will display a browser shortcut in the Twingate client.",
          "type": "boolean",
          "default": false
        },
        "isVisible": {
          "description": "isVisible specifies whether the resource will display in the main resources list in the Twingate client.",
          "type": "boolean",
          "default": true
        },
        "name": {
          "description": "Name of the resource.",
          "type": "string"
        },
        "protocols": {
          "description": "protocols specifies the resource's protocol policies.",
          "type": "object",
          "properties": {
            "allowIcmp": {
              "description": "allowIcmp specifies whether the resource will allow ICMP traffic.",
              "type": "boolean",
              "nullable": true
            },
            "tcp": {
              "description": "tcp specifies the resource's TCP protocol policy.",
              "type": "object",
              "properties": {
                "policy": {
                  "type": "string",
                  "enum": [
                    "ALLOW_ALL",
                    "RESTRICTED"
                  ],
                  "nullable": true
                },
                "ports": {
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "object",
                    "properties": {
                      "end": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 1
                      },
                      "start": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 1
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-validations": [
                      {
                        "rule": "(self.start \u003c= self.end)",
                        "message": "Start port value must be less or equal to end port value"
                      }
                    ]
                  }
                }
              },
              "additionalProperties": false,
              "nullable": true,
              "x-kubernetes-validations": [
                {
                  "rule": "(self.policy == \"ALLOW_ALL\" \u0026\u0026 size(self.ports) == 0) || (self.policy == \"RESTRICTED\")",
                  "message": "Can't specify port ranges for ALLOW_ALL policy."
                }
              ]
            },
            "udp": {
              "description": "udp specifies the resource's UDP protocol policy.",
              "type": "object",
              "properties": {
                "policy": {
                  "type": "string",
                  "enum": [
                    "ALLOW_ALL",
                    "RESTRICTED"
                  ],
                  "nullable": true
                },
                "ports": {
                  "type": "array",
                  "default": [],
                  "items": {
                    "type": "object",
                    "properties": {
                      "end": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 1
                      },
                      "start": {
                        "type": "integer",
                        "maximum": 65535,
                        "minimum": 1
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-validations": [
                      {
                        "rule": "(self.start \u003c= self.end)",
                        "message": "Start port value must be less or equal to end port value"
                      }
                    ]
                  }
                }
              },
              "additionalProperties": false,
              "nullable": true,
              "x-kubernetes-validations": [
                {
                  "rule": "(self.policy == \"ALLOW_ALL\" \u0026\u0026 size(self.ports) == 0) || (self.policy == \"RESTRICTED\")",
                  "message": "Can't specify port ranges for ALLOW_ALL policy."
                }
              ]
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "proxy": {
          "type": "object",
          "required": [
            "address",
            "certificateAuthorityCert"
          ],
          "properties": {
            "address": {
              "description": "Address of the proxy.",
              "type": "string"
            },
            "certificateAuthorityCert": {
              "description": "Base64-encoded certificate of the Certificate Authority issuing the proxy's TLS certificate.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "securityPolicyId": {
          "type": "string",
          "pattern": "^[-A-Za-z0-9+/]*={0,3}$",
          "nullable": true
        },
        "syncLabels": {
          "description": "syncLabels specifies whether the resource should sync the metadata labels as resource tags in the Twingate client.",
          "type": "boolean",
          "default": true
        },
        "type": {
          "description": "The resource type",
          "type": "string",
          "default": "Network",
          "enum": [
            "Network",
            "Kubernetes"
          ],
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Resource type is immutable"
            }
          ]
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(self.isBrowserShortcutEnabled \u0026\u0026 !(self.address.contains('*') || self.address.contains('?'))) || (self.isBrowserShortcutEnabled == false)",
          "message": "if isBrowserShortcutEnabled is set to true, then address can't be wildcard"
        },
        {
          "rule": "(self.type == \"Network\" \u0026\u0026 !has(self.proxy)) || (self.type == \"Kubernetes\" \u0026\u0026 has(self.proxy))",
          "message": "proxy should be set for Kubernetes Resource"
        },
        {
          "rule": "(self.isBrowserShortcutEnabled \u0026\u0026 self.type == \"Network\") || (self.isBrowserShortcutEnabled == false)",
          "message": "isBrowserShortcutEnabled cannot be set to true for Kubernetes Resource"
        }
      ]
    },
    "status": {
      "type": "object",
      "x-kubernetes-preserve-unknown-fields": true
    }
  }
}
