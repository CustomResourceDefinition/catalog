{
  "description": "LinuxVirtualMachine is the Schema for the LinuxVirtualMachines API. Manages a Linux Virtual Machine.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LinuxVirtualMachineSpec defines the desired state of LinuxVirtualMachine",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "additionalCapabilities": {
              "description": "A additional_capabilities block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hibernationEnabled": {
                    "description": "Whether to enable the hibernation capability or not.",
                    "type": "boolean"
                  },
                  "ultraSsdEnabled": {
                    "description": "Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "adminPasswordSecretRef": {
              "description": "The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "adminSshKey": {
              "description": "One or more admin_ssh_key blocks as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "publicKey": {
                    "description": "The Public Key which should be used for authentication, which needs to be in ssh-rsa format with at least 2048-bit or in ssh-ed25519 format. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "adminUsername": {
              "description": "The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "allowExtensionOperations": {
              "description": "Should Extension Operations be allowed on this Virtual Machine? Defaults to true.",
              "type": "boolean"
            },
            "availabilitySetId": {
              "description": "Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "bootDiagnostics": {
              "description": "A boot_diagnostics block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "storageAccountUri": {
                    "description": "The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "bypassPlatformSafetyChecksOnUserScheduleEnabled": {
              "description": "Specifies whether to skip platform scheduled patching when a user schedule is associated with the VM. Defaults to false.",
              "type": "boolean"
            },
            "capacityReservationGroupId": {
              "description": "Specifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.",
              "type": "string"
            },
            "computerName": {
              "description": "Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name, then you must specify computer_name. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "customDataSecretRef": {
              "description": "The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dedicatedHostGroupId": {
              "description": "The ID of a Dedicated Host Group that this Linux Virtual Machine should be run within. Conflicts with dedicated_host_id.",
              "type": "string"
            },
            "dedicatedHostId": {
              "description": "The ID of a Dedicated Host where this machine should be run on. Conflicts with dedicated_host_group_id.",
              "type": "string"
            },
            "disablePasswordAuthentication": {
              "description": "Should Password Authentication be disabled on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "diskControllerType": {
              "description": "Specifies the Disk Controller Type used for this Virtual Machine. Possible values are SCSI and NVMe.",
              "type": "string"
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine should exist. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "string"
            },
            "encryptionAtHostEnabled": {
              "description": "Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?",
              "type": "boolean"
            },
            "evictionPolicy": {
              "description": "Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "extensionsTimeBudget": {
              "description": "Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to PT1H30M.",
              "type": "string"
            },
            "galleryApplication": {
              "description": "One or more gallery_application blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "automaticUpgradeEnabled": {
                    "description": "Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to false.",
                    "type": "boolean"
                  },
                  "configurationBlobUri": {
                    "description": "Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0.",
                    "type": "number"
                  },
                  "tag": {
                    "description": "Specifies a passthrough value for more generic context. This field can be any valid string value.",
                    "type": "string"
                  },
                  "treatFailureAsDeploymentFailureEnabled": {
                    "description": "Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to false.",
                    "type": "boolean"
                  },
                  "versionId": {
                    "description": "Specifies the Gallery Application Version resource ID.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "identity": {
              "description": "An identity block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "licenseType": {
              "description": "Specifies the License Type for this Virtual Machine. Possible values are RHEL_BYOS, RHEL_BASE, RHEL_EUS, RHEL_SAPAPPS, RHEL_SAPHA, RHEL_BASESAPAPPS, RHEL_BASESAPHA, SLES_BYOS, SLES_SAP, SLES_HPC, UBUNTU_PRO.",
              "type": "string"
            },
            "location": {
              "description": "The Azure location where the Linux Virtual Machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "maxBidPrice": {
              "description": "The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the eviction_policy. Defaults to -1, which means that the Virtual Machine should not be evicted for price reasons.",
              "type": "number"
            },
            "networkInterfaceIds": {
              "description": ". A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "networkInterfaceIdsRefs": {
              "description": "References to NetworkInterface in network to populate networkInterfaceIds.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "networkInterfaceIdsSelector": {
              "description": "Selector for a list of NetworkInterface in network to populate networkInterfaceIds.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "osDisk": {
              "description": "A os_disk block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caching": {
                    "description": "The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.",
                    "type": "string"
                  },
                  "diffDiskSettings": {
                    "description": "A diff_disk_settings block as defined above. Changing this forces a new resource to be created.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "option": {
                          "description": "Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "placement": {
                          "description": "Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "diskEncryptionSetId": {
                    "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id.",
                    "type": "string"
                  },
                  "diskSizeGb": {
                    "description": "The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.",
                    "type": "number"
                  },
                  "name": {
                    "description": "The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "secureVmDiskEncryptionSetId": {
                    "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "securityEncryptionType": {
                    "description": "Encryption Type when the Virtual Machine is a Confidential VM. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "storageAccountType": {
                    "description": "The Type of Storage Account which should back this the Internal OS Disk. Possible values are Standard_LRS, StandardSSD_LRS, Premium_LRS, StandardSSD_ZRS and Premium_ZRS. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "writeAcceleratorEnabled": {
                    "description": "Should Write Accelerator be Enabled for this OS Disk? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "osImageNotification": {
              "description": "A os_image_notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "timeout": {
                    "description": "Length of time a notification to be sent to the VM on the instance metadata server till the VM gets OS upgraded. The only possible value is PT15M. Defaults to PT15M.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "patchAssessmentMode": {
              "description": "Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are AutomaticByPlatform or ImageDefault. Defaults to ImageDefault.",
              "type": "string"
            },
            "patchMode": {
              "description": "Specifies the mode of in-guest patching to this Linux Virtual Machine. Possible values are AutomaticByPlatform and ImageDefault. Defaults to ImageDefault. For more information on patch modes please see the product documentation.",
              "type": "string"
            },
            "plan": {
              "description": "A plan block as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "product": {
                    "description": "Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "publisher": {
                    "description": "Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "platformFaultDomain": {
              "description": "Specifies the Platform Fault Domain in which this Linux Virtual Machine should be created. Defaults to -1, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "number"
            },
            "priority": {
              "description": "Specifies the priority of this Virtual Machine. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "provisionVmAgent": {
              "description": "Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "proximityPlacementGroupId": {
              "description": "The ID of the Proximity Placement Group which the Virtual Machine should be assigned to.",
              "type": "string"
            },
            "rebootSetting": {
              "description": "Specifies the reboot setting for platform scheduled patching. Possible values are Always, IfRequired and Never.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group in which the Linux Virtual Machine should be exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "secret": {
              "description": "One or more secret blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "certificate": {
                    "description": "One or more certificate blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "The Secret URL of a Key Vault Certificate.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "keyVaultId": {
                    "description": "The ID of the Key Vault from which all Secrets should be sourced.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "secureBootEnabled": {
              "description": "Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "size": {
              "description": "The SKU which should be used for this Virtual Machine, such as Standard_F2.",
              "type": "string"
            },
            "sourceImageId": {
              "description": "The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include Image IDs, Shared Image IDs, Shared Image Version IDs, Community Gallery Image IDs, Community Gallery Image Version IDs, Shared Gallery Image IDs and Shared Gallery Image Version IDs.",
              "type": "string"
            },
            "sourceImageReference": {
              "description": "A source_image_reference block as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "offer": {
                    "description": "Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "publisher": {
                    "description": "Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "sku": {
                    "description": "Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "version": {
                    "description": "Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to this Virtual Machine.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "terminationNotification": {
              "description": "A termination_notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Should the termination notification be enabled on this Virtual Machine?",
                    "type": "boolean"
                  },
                  "timeout": {
                    "description": "Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "userData": {
              "description": "The Base64-Encoded User Data which should be used for this Virtual Machine.",
              "type": "string"
            },
            "virtualMachineScaleSetId": {
              "description": "Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within.",
              "type": "string"
            },
            "vmAgentPlatformUpdatesEnabled": {
              "description": "Are Virtual Machine Agent Platform Updates enabled on this Virtual Machine?",
              "type": "boolean"
            },
            "vtpmEnabled": {
              "description": "Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "zone": {
              "description": "Specifies the Availability Zones in which this Linux Virtual Machine should be located. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "additionalCapabilities": {
              "description": "A additional_capabilities block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hibernationEnabled": {
                    "description": "Whether to enable the hibernation capability or not.",
                    "type": "boolean"
                  },
                  "ultraSsdEnabled": {
                    "description": "Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "adminPasswordSecretRef": {
              "description": "The Password which should be used for the local-administrator on this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "adminSshKey": {
              "description": "One or more admin_ssh_key blocks as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "publicKey": {
                    "description": "The Public Key which should be used for authentication, which needs to be in ssh-rsa format with at least 2048-bit or in ssh-ed25519 format. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "adminUsername": {
              "description": "The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "allowExtensionOperations": {
              "description": "Should Extension Operations be allowed on this Virtual Machine? Defaults to true.",
              "type": "boolean"
            },
            "availabilitySetId": {
              "description": "Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "bootDiagnostics": {
              "description": "A boot_diagnostics block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "storageAccountUri": {
                    "description": "The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "bypassPlatformSafetyChecksOnUserScheduleEnabled": {
              "description": "Specifies whether to skip platform scheduled patching when a user schedule is associated with the VM. Defaults to false.",
              "type": "boolean"
            },
            "capacityReservationGroupId": {
              "description": "Specifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.",
              "type": "string"
            },
            "computerName": {
              "description": "Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name, then you must specify computer_name. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "customDataSecretRef": {
              "description": "The Base64-Encoded Custom Data which should be used for this Virtual Machine. Changing this forces a new resource to be created.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dedicatedHostGroupId": {
              "description": "The ID of a Dedicated Host Group that this Linux Virtual Machine should be run within. Conflicts with dedicated_host_id.",
              "type": "string"
            },
            "dedicatedHostId": {
              "description": "The ID of a Dedicated Host where this machine should be run on. Conflicts with dedicated_host_group_id.",
              "type": "string"
            },
            "disablePasswordAuthentication": {
              "description": "Should Password Authentication be disabled on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "diskControllerType": {
              "description": "Specifies the Disk Controller Type used for this Virtual Machine. Possible values are SCSI and NVMe.",
              "type": "string"
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine should exist. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "string"
            },
            "encryptionAtHostEnabled": {
              "description": "Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?",
              "type": "boolean"
            },
            "evictionPolicy": {
              "description": "Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "extensionsTimeBudget": {
              "description": "Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to PT1H30M.",
              "type": "string"
            },
            "galleryApplication": {
              "description": "One or more gallery_application blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "automaticUpgradeEnabled": {
                    "description": "Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to false.",
                    "type": "boolean"
                  },
                  "configurationBlobUri": {
                    "description": "Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0.",
                    "type": "number"
                  },
                  "tag": {
                    "description": "Specifies a passthrough value for more generic context. This field can be any valid string value.",
                    "type": "string"
                  },
                  "treatFailureAsDeploymentFailureEnabled": {
                    "description": "Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to false.",
                    "type": "boolean"
                  },
                  "versionId": {
                    "description": "Specifies the Gallery Application Version resource ID.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "identity": {
              "description": "An identity block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "licenseType": {
              "description": "Specifies the License Type for this Virtual Machine. Possible values are RHEL_BYOS, RHEL_BASE, RHEL_EUS, RHEL_SAPAPPS, RHEL_SAPHA, RHEL_BASESAPAPPS, RHEL_BASESAPHA, SLES_BYOS, SLES_SAP, SLES_HPC, UBUNTU_PRO.",
              "type": "string"
            },
            "location": {
              "description": "The Azure location where the Linux Virtual Machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "maxBidPrice": {
              "description": "The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the eviction_policy. Defaults to -1, which means that the Virtual Machine should not be evicted for price reasons.",
              "type": "number"
            },
            "networkInterfaceIds": {
              "description": ". A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "networkInterfaceIdsRefs": {
              "description": "References to NetworkInterface in network to populate networkInterfaceIds.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "networkInterfaceIdsSelector": {
              "description": "Selector for a list of NetworkInterface in network to populate networkInterfaceIds.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "osDisk": {
              "description": "A os_disk block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caching": {
                    "description": "The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.",
                    "type": "string"
                  },
                  "diffDiskSettings": {
                    "description": "A diff_disk_settings block as defined above. Changing this forces a new resource to be created.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "option": {
                          "description": "Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "placement": {
                          "description": "Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "diskEncryptionSetId": {
                    "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id.",
                    "type": "string"
                  },
                  "diskSizeGb": {
                    "description": "The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.",
                    "type": "number"
                  },
                  "name": {
                    "description": "The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "secureVmDiskEncryptionSetId": {
                    "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "securityEncryptionType": {
                    "description": "Encryption Type when the Virtual Machine is a Confidential VM. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "storageAccountType": {
                    "description": "The Type of Storage Account which should back this the Internal OS Disk. Possible values are Standard_LRS, StandardSSD_LRS, Premium_LRS, StandardSSD_ZRS and Premium_ZRS. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "writeAcceleratorEnabled": {
                    "description": "Should Write Accelerator be Enabled for this OS Disk? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "osImageNotification": {
              "description": "A os_image_notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "timeout": {
                    "description": "Length of time a notification to be sent to the VM on the instance metadata server till the VM gets OS upgraded. The only possible value is PT15M. Defaults to PT15M.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "patchAssessmentMode": {
              "description": "Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are AutomaticByPlatform or ImageDefault. Defaults to ImageDefault.",
              "type": "string"
            },
            "patchMode": {
              "description": "Specifies the mode of in-guest patching to this Linux Virtual Machine. Possible values are AutomaticByPlatform and ImageDefault. Defaults to ImageDefault. For more information on patch modes please see the product documentation.",
              "type": "string"
            },
            "plan": {
              "description": "A plan block as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "product": {
                    "description": "Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "publisher": {
                    "description": "Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "platformFaultDomain": {
              "description": "Specifies the Platform Fault Domain in which this Linux Virtual Machine should be created. Defaults to -1, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "number"
            },
            "priority": {
              "description": "Specifies the priority of this Virtual Machine. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "provisionVmAgent": {
              "description": "Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "proximityPlacementGroupId": {
              "description": "The ID of the Proximity Placement Group which the Virtual Machine should be assigned to.",
              "type": "string"
            },
            "rebootSetting": {
              "description": "Specifies the reboot setting for platform scheduled patching. Possible values are Always, IfRequired and Never.",
              "type": "string"
            },
            "secret": {
              "description": "One or more secret blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "certificate": {
                    "description": "One or more certificate blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "The Secret URL of a Key Vault Certificate.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "keyVaultId": {
                    "description": "The ID of the Key Vault from which all Secrets should be sourced.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "secureBootEnabled": {
              "description": "Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "size": {
              "description": "The SKU which should be used for this Virtual Machine, such as Standard_F2.",
              "type": "string"
            },
            "sourceImageId": {
              "description": "The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include Image IDs, Shared Image IDs, Shared Image Version IDs, Community Gallery Image IDs, Community Gallery Image Version IDs, Shared Gallery Image IDs and Shared Gallery Image Version IDs.",
              "type": "string"
            },
            "sourceImageReference": {
              "description": "A source_image_reference block as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "offer": {
                    "description": "Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "publisher": {
                    "description": "Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "sku": {
                    "description": "Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "version": {
                    "description": "Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to this Virtual Machine.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "terminationNotification": {
              "description": "A termination_notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Should the termination notification be enabled on this Virtual Machine?",
                    "type": "boolean"
                  },
                  "timeout": {
                    "description": "Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "userData": {
              "description": "The Base64-Encoded User Data which should be used for this Virtual Machine.",
              "type": "string"
            },
            "virtualMachineScaleSetId": {
              "description": "Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within.",
              "type": "string"
            },
            "vmAgentPlatformUpdatesEnabled": {
              "description": "Are Virtual Machine Agent Platform Updates enabled on this Virtual Machine?",
              "type": "boolean"
            },
            "vtpmEnabled": {
              "description": "Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "zone": {
              "description": "Specifies the Availability Zones in which this Linux Virtual Machine should be located. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.adminUsername) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.adminUsername))",
          "message": "spec.forProvider.adminUsername is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.osDisk) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.osDisk))",
          "message": "spec.forProvider.osDisk is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.size) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.size))",
          "message": "spec.forProvider.size is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LinuxVirtualMachineStatus defines the observed state of LinuxVirtualMachine.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "additionalCapabilities": {
              "description": "A additional_capabilities block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hibernationEnabled": {
                    "description": "Whether to enable the hibernation capability or not.",
                    "type": "boolean"
                  },
                  "ultraSsdEnabled": {
                    "description": "Should the capacity to enable Data Disks of the UltraSSD_LRS storage account type be supported on this Virtual Machine? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "adminSshKey": {
              "description": "One or more admin_ssh_key blocks as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "publicKey": {
                    "description": "The Public Key which should be used for authentication, which needs to be in ssh-rsa format with at least 2048-bit or in ssh-ed25519 format. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "username": {
                    "description": "The Username for which this Public SSH Key should be configured. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "adminUsername": {
              "description": "The username of the local administrator used for the Virtual Machine. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "allowExtensionOperations": {
              "description": "Should Extension Operations be allowed on this Virtual Machine? Defaults to true.",
              "type": "boolean"
            },
            "availabilitySetId": {
              "description": "Specifies the ID of the Availability Set in which the Virtual Machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "bootDiagnostics": {
              "description": "A boot_diagnostics block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "storageAccountUri": {
                    "description": "The Primary/Secondary Endpoint for the Azure Storage Account which should be used to store Boot Diagnostics, including Console Output and Screenshots from the Hypervisor.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "bypassPlatformSafetyChecksOnUserScheduleEnabled": {
              "description": "Specifies whether to skip platform scheduled patching when a user schedule is associated with the VM. Defaults to false.",
              "type": "boolean"
            },
            "capacityReservationGroupId": {
              "description": "Specifies the ID of the Capacity Reservation Group which the Virtual Machine should be allocated to.",
              "type": "string"
            },
            "computerName": {
              "description": "Specifies the Hostname which should be used for this Virtual Machine. If unspecified this defaults to the value for the name field. If the value of the name field is not a valid computer_name, then you must specify computer_name. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "dedicatedHostGroupId": {
              "description": "The ID of a Dedicated Host Group that this Linux Virtual Machine should be run within. Conflicts with dedicated_host_id.",
              "type": "string"
            },
            "dedicatedHostId": {
              "description": "The ID of a Dedicated Host where this machine should be run on. Conflicts with dedicated_host_group_id.",
              "type": "string"
            },
            "disablePasswordAuthentication": {
              "description": "Should Password Authentication be disabled on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "diskControllerType": {
              "description": "Specifies the Disk Controller Type used for this Virtual Machine. Possible values are SCSI and NVMe.",
              "type": "string"
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Linux Virtual Machine should exist. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "string"
            },
            "encryptionAtHostEnabled": {
              "description": "Should all of the disks (including the temp disk) attached to this Virtual Machine be encrypted by enabling Encryption at Host?",
              "type": "boolean"
            },
            "evictionPolicy": {
              "description": "Specifies what should happen when the Virtual Machine is evicted for price reasons when using a Spot instance. Possible values are Deallocate and Delete. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "extensionsTimeBudget": {
              "description": "Specifies the duration allocated for all extensions to start. The time duration should be between 15 minutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. Defaults to PT1H30M.",
              "type": "string"
            },
            "galleryApplication": {
              "description": "One or more gallery_application blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "automaticUpgradeEnabled": {
                    "description": "Specifies whether the version will be automatically updated for the VM when a new Gallery Application version is available in PIR/SIG. Defaults to false.",
                    "type": "boolean"
                  },
                  "configurationBlobUri": {
                    "description": "Specifies the URI to an Azure Blob that will replace the default configuration for the package if provided.",
                    "type": "string"
                  },
                  "order": {
                    "description": "Specifies the order in which the packages have to be installed. Possible values are between 0 and 2147483647. Defaults to 0.",
                    "type": "number"
                  },
                  "tag": {
                    "description": "Specifies a passthrough value for more generic context. This field can be any valid string value.",
                    "type": "string"
                  },
                  "treatFailureAsDeploymentFailureEnabled": {
                    "description": "Specifies whether any failure for any operation in the VmApplication will fail the deployment of the VM. Defaults to false.",
                    "type": "boolean"
                  },
                  "versionId": {
                    "description": "Specifies the Gallery Application Version resource ID.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "The ID of the Linux Virtual Machine.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "Specifies a list of User Assigned Managed Identity IDs to be assigned to this Linux Virtual Machine.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "principalId": {
                    "description": "The Principal ID associated with this Managed Service Identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The Tenant ID associated with this Managed Service Identity.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Virtual Machine. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "licenseType": {
              "description": "Specifies the License Type for this Virtual Machine. Possible values are RHEL_BYOS, RHEL_BASE, RHEL_EUS, RHEL_SAPAPPS, RHEL_SAPHA, RHEL_BASESAPAPPS, RHEL_BASESAPHA, SLES_BYOS, SLES_SAP, SLES_HPC, UBUNTU_PRO.",
              "type": "string"
            },
            "location": {
              "description": "The Azure location where the Linux Virtual Machine should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "maxBidPrice": {
              "description": "The maximum price you're willing to pay for this Virtual Machine, in US Dollars; which must be greater than the current spot price. If this bid price falls below the current spot price the Virtual Machine will be evicted using the eviction_policy. Defaults to -1, which means that the Virtual Machine should not be evicted for price reasons.",
              "type": "number"
            },
            "networkInterfaceIds": {
              "description": ". A list of Network Interface IDs which should be attached to this Virtual Machine. The first Network Interface ID in this list will be the Primary Network Interface on the Virtual Machine.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "osDisk": {
              "description": "A os_disk block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caching": {
                    "description": "The Type of Caching which should be used for the Internal OS Disk. Possible values are None, ReadOnly and ReadWrite.",
                    "type": "string"
                  },
                  "diffDiskSettings": {
                    "description": "A diff_disk_settings block as defined above. Changing this forces a new resource to be created.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "option": {
                          "description": "Specifies the Ephemeral Disk Settings for the OS Disk. At this time the only possible value is Local. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "placement": {
                          "description": "Specifies where to store the Ephemeral Disk. Possible values are CacheDisk and ResourceDisk. Defaults to CacheDisk. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "diskEncryptionSetId": {
                    "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk. Conflicts with secure_vm_disk_encryption_set_id.",
                    "type": "string"
                  },
                  "diskSizeGb": {
                    "description": "The Size of the Internal OS Disk in GB, if you wish to vary from the size used in the image this Virtual Machine is sourced from.",
                    "type": "number"
                  },
                  "id": {
                    "description": "The ID of the OS disk.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for the Internal OS Disk. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "secureVmDiskEncryptionSetId": {
                    "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "securityEncryptionType": {
                    "description": "Encryption Type when the Virtual Machine is a Confidential VM. Possible values are VMGuestStateOnly and DiskWithVMGuestState. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "storageAccountType": {
                    "description": "The Type of Storage Account which should back this the Internal OS Disk. Possible values are Standard_LRS, StandardSSD_LRS, Premium_LRS, StandardSSD_ZRS and Premium_ZRS. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "writeAcceleratorEnabled": {
                    "description": "Should Write Accelerator be Enabled for this OS Disk? Defaults to false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "osImageNotification": {
              "description": "A os_image_notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "timeout": {
                    "description": "Length of time a notification to be sent to the VM on the instance metadata server till the VM gets OS upgraded. The only possible value is PT15M. Defaults to PT15M.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "patchAssessmentMode": {
              "description": "Specifies the mode of VM Guest Patching for the Virtual Machine. Possible values are AutomaticByPlatform or ImageDefault. Defaults to ImageDefault.",
              "type": "string"
            },
            "patchMode": {
              "description": "Specifies the mode of in-guest patching to this Linux Virtual Machine. Possible values are AutomaticByPlatform and ImageDefault. Defaults to ImageDefault. For more information on patch modes please see the product documentation.",
              "type": "string"
            },
            "plan": {
              "description": "A plan block as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the Name of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "product": {
                    "description": "Specifies the Product of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "publisher": {
                    "description": "Specifies the Publisher of the Marketplace Image this Virtual Machine should be created from. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "platformFaultDomain": {
              "description": "Specifies the Platform Fault Domain in which this Linux Virtual Machine should be created. Defaults to -1, which means this will be automatically assigned to a fault domain that best maintains balance across the available fault domains. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "number"
            },
            "priority": {
              "description": "Specifies the priority of this Virtual Machine. Possible values are Regular and Spot. Defaults to Regular. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "privateIpAddress": {
              "description": "The Primary Private IP Address assigned to this Virtual Machine.",
              "type": "string"
            },
            "privateIpAddresses": {
              "description": "A list of Private IP Addresses assigned to this Virtual Machine.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "provisionVmAgent": {
              "description": "Should the Azure VM Agent be provisioned on this Virtual Machine? Defaults to true. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "proximityPlacementGroupId": {
              "description": "The ID of the Proximity Placement Group which the Virtual Machine should be assigned to.",
              "type": "string"
            },
            "publicIpAddress": {
              "description": "The Primary Public IP Address assigned to this Virtual Machine.",
              "type": "string"
            },
            "publicIpAddresses": {
              "description": "A list of the Public IP Addresses assigned to this Virtual Machine.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "rebootSetting": {
              "description": "Specifies the reboot setting for platform scheduled patching. Possible values are Always, IfRequired and Never.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group in which the Linux Virtual Machine should be exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "secret": {
              "description": "One or more secret blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "certificate": {
                    "description": "One or more certificate blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "description": "The Secret URL of a Key Vault Certificate.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "keyVaultId": {
                    "description": "The ID of the Key Vault from which all Secrets should be sourced.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "secureBootEnabled": {
              "description": "Specifies whether secure boot should be enabled on the virtual machine. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "size": {
              "description": "The SKU which should be used for this Virtual Machine, such as Standard_F2.",
              "type": "string"
            },
            "sourceImageId": {
              "description": "The ID of the Image which this Virtual Machine should be created from. Changing this forces a new resource to be created. Possible Image ID types include Image IDs, Shared Image IDs, Shared Image Version IDs, Community Gallery Image IDs, Community Gallery Image Version IDs, Shared Gallery Image IDs and Shared Gallery Image Version IDs.",
              "type": "string"
            },
            "sourceImageReference": {
              "description": "A source_image_reference block as defined below. Changing this forces a new resource to be created.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "offer": {
                    "description": "Specifies the offer of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "publisher": {
                    "description": "Specifies the publisher of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "sku": {
                    "description": "Specifies the SKU of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "version": {
                    "description": "Specifies the version of the image used to create the virtual machines. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to this Virtual Machine.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "terminationNotification": {
              "description": "A termination_notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Should the termination notification be enabled on this Virtual Machine?",
                    "type": "boolean"
                  },
                  "timeout": {
                    "description": "Length of time (in minutes, between 5 and 15) a notification to be sent to the VM on the instance metadata server till the VM gets deleted. The time duration should be specified in ISO 8601 format. Defaults to PT5M.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "userData": {
              "description": "The Base64-Encoded User Data which should be used for this Virtual Machine.",
              "type": "string"
            },
            "virtualMachineId": {
              "description": "A 128-bit identifier which uniquely identifies this Virtual Machine.",
              "type": "string"
            },
            "virtualMachineScaleSetId": {
              "description": "Specifies the Orchestrated Virtual Machine Scale Set that this Virtual Machine should be created within.",
              "type": "string"
            },
            "vmAgentPlatformUpdatesEnabled": {
              "description": "Are Virtual Machine Agent Platform Updates enabled on this Virtual Machine?",
              "type": "boolean"
            },
            "vtpmEnabled": {
              "description": "Specifies whether vTPM should be enabled on the virtual machine. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "zone": {
              "description": "Specifies the Availability Zones in which this Linux Virtual Machine should be located. Changing this forces a new Linux Virtual Machine to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
