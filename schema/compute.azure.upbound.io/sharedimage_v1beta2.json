{
  "description": "SharedImage is the Schema for the SharedImages API. Manages a Shared Image within a Shared Image Gallery.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SharedImageSpec defines the desired state of SharedImage",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "acceleratedNetworkSupportEnabled": {
              "description": "Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "architecture": {
              "description": "CPU architecture supported by an OS. Possible values are x64 and Arm64. Defaults to x64. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "confidentialVmEnabled": {
              "description": "Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "confidentialVmSupported": {
              "description": "Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of this Shared Image.",
              "type": "string"
            },
            "diskControllerTypeNvmeEnabled": {
              "description": "Specifies if the Shared Image supports NVMe disks. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "diskTypesNotAllowed": {
              "description": "One or more Disk Types not allowed for the Image. Possible values include Standard_LRS and Premium_LRS.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "endOfLifeDate": {
              "description": "The end of life date in RFC3339 format of the Image.",
              "type": "string"
            },
            "eula": {
              "description": "The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "galleryName": {
              "description": "Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "galleryNameRef": {
              "description": "Reference to a SharedImageGallery in compute to populate galleryName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "galleryNameSelector": {
              "description": "Selector for a SharedImageGallery in compute to populate galleryName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "hibernationEnabled": {
              "description": "Specifies if the Shared Image supports hibernation. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "hyperVGeneration": {
              "description": "The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are V1 and V2. Defaults to V1. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "identifier": {
              "description": "An identifier block as defined below.",
              "type": "object",
              "properties": {
                "offer": {
                  "description": "The Offer Name for this Shared Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Publisher Name for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sku": {
                  "description": "The Name of the SKU for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "maxRecommendedMemoryInGb": {
              "description": "Maximum memory in GB recommended for the Image.",
              "type": "number"
            },
            "maxRecommendedVcpuCount": {
              "description": "Maximum count of vCPUs recommended for the Image.",
              "type": "number"
            },
            "minRecommendedMemoryInGb": {
              "description": "Minimum memory in GB recommended for the Image.",
              "type": "number"
            },
            "minRecommendedVcpuCount": {
              "description": "Minimum count of vCPUs recommended for the Image.",
              "type": "number"
            },
            "osType": {
              "description": "The type of Operating System present in this Shared Image. Possible values are Linux and Windows. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "privacyStatementUri": {
              "description": "The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "purchasePlan": {
              "description": "A purchase_plan block as defined below.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Purchase Plan Name for this Shared Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "product": {
                  "description": "The Purchase Plan Product for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Purchase Plan Publisher for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "releaseNoteUri": {
              "description": "The URI containing the Release Notes associated with this Shared Image.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "specialized": {
              "description": "Specifies that the Operating System used inside this Image has not been Generalized (for example, sysprep on Windows has not been run). Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags to assign to the Shared Image.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "trustedLaunchEnabled": {
              "description": "Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "trustedLaunchSupported": {
              "description": "Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "acceleratedNetworkSupportEnabled": {
              "description": "Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "architecture": {
              "description": "CPU architecture supported by an OS. Possible values are x64 and Arm64. Defaults to x64. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "confidentialVmEnabled": {
              "description": "Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "confidentialVmSupported": {
              "description": "Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of this Shared Image.",
              "type": "string"
            },
            "diskControllerTypeNvmeEnabled": {
              "description": "Specifies if the Shared Image supports NVMe disks. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "diskTypesNotAllowed": {
              "description": "One or more Disk Types not allowed for the Image. Possible values include Standard_LRS and Premium_LRS.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "endOfLifeDate": {
              "description": "The end of life date in RFC3339 format of the Image.",
              "type": "string"
            },
            "eula": {
              "description": "The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "hibernationEnabled": {
              "description": "Specifies if the Shared Image supports hibernation. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "hyperVGeneration": {
              "description": "The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are V1 and V2. Defaults to V1. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "identifier": {
              "description": "An identifier block as defined below.",
              "type": "object",
              "properties": {
                "offer": {
                  "description": "The Offer Name for this Shared Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Publisher Name for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sku": {
                  "description": "The Name of the SKU for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "maxRecommendedMemoryInGb": {
              "description": "Maximum memory in GB recommended for the Image.",
              "type": "number"
            },
            "maxRecommendedVcpuCount": {
              "description": "Maximum count of vCPUs recommended for the Image.",
              "type": "number"
            },
            "minRecommendedMemoryInGb": {
              "description": "Minimum memory in GB recommended for the Image.",
              "type": "number"
            },
            "minRecommendedVcpuCount": {
              "description": "Minimum count of vCPUs recommended for the Image.",
              "type": "number"
            },
            "osType": {
              "description": "The type of Operating System present in this Shared Image. Possible values are Linux and Windows. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "privacyStatementUri": {
              "description": "The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "purchasePlan": {
              "description": "A purchase_plan block as defined below.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Purchase Plan Name for this Shared Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "product": {
                  "description": "The Purchase Plan Product for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Purchase Plan Publisher for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "releaseNoteUri": {
              "description": "The URI containing the Release Notes associated with this Shared Image.",
              "type": "string"
            },
            "specialized": {
              "description": "Specifies that the Operating System used inside this Image has not been Generalized (for example, sysprep on Windows has not been run). Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags to assign to the Shared Image.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "trustedLaunchEnabled": {
              "description": "Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "trustedLaunchSupported": {
              "description": "Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.identifier) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.identifier))",
          "message": "spec.forProvider.identifier is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.osType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.osType))",
          "message": "spec.forProvider.osType is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SharedImageStatus defines the observed state of SharedImage.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "acceleratedNetworkSupportEnabled": {
              "description": "Specifies if the Shared Image supports Accelerated Network. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "architecture": {
              "description": "CPU architecture supported by an OS. Possible values are x64 and Arm64. Defaults to x64. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "confidentialVmEnabled": {
              "description": "Specifies if Confidential Virtual Machines enabled. It will enable all the features of trusted, with higher confidentiality features for isolate machines or encrypted data. Available for Gen2 machines. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "confidentialVmSupported": {
              "description": "Specifies if supports creation of both Confidential virtual machines and Gen2 virtual machines with standard security from a compatible Gen2 OS disk VHD or Gen2 Managed image. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of this Shared Image.",
              "type": "string"
            },
            "diskControllerTypeNvmeEnabled": {
              "description": "Specifies if the Shared Image supports NVMe disks. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "diskTypesNotAllowed": {
              "description": "One or more Disk Types not allowed for the Image. Possible values include Standard_LRS and Premium_LRS.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "endOfLifeDate": {
              "description": "The end of life date in RFC3339 format of the Image.",
              "type": "string"
            },
            "eula": {
              "description": "The End User Licence Agreement for the Shared Image. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "galleryName": {
              "description": "Specifies the name of the Shared Image Gallery in which this Shared Image should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "hibernationEnabled": {
              "description": "Specifies if the Shared Image supports hibernation. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "hyperVGeneration": {
              "description": "The generation of HyperV that the Virtual Machine used to create the Shared Image is based on. Possible values are V1 and V2. Defaults to V1. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Shared Image.",
              "type": "string"
            },
            "identifier": {
              "description": "An identifier block as defined below.",
              "type": "object",
              "properties": {
                "offer": {
                  "description": "The Offer Name for this Shared Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Publisher Name for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "sku": {
                  "description": "The Name of the SKU for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the Shared Image Gallery exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "maxRecommendedMemoryInGb": {
              "description": "Maximum memory in GB recommended for the Image.",
              "type": "number"
            },
            "maxRecommendedVcpuCount": {
              "description": "Maximum count of vCPUs recommended for the Image.",
              "type": "number"
            },
            "minRecommendedMemoryInGb": {
              "description": "Minimum memory in GB recommended for the Image.",
              "type": "number"
            },
            "minRecommendedVcpuCount": {
              "description": "Minimum count of vCPUs recommended for the Image.",
              "type": "number"
            },
            "osType": {
              "description": "The type of Operating System present in this Shared Image. Possible values are Linux and Windows. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "privacyStatementUri": {
              "description": "The URI containing the Privacy Statement associated with this Shared Image. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "purchasePlan": {
              "description": "A purchase_plan block as defined below.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The Purchase Plan Name for this Shared Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "product": {
                  "description": "The Purchase Plan Product for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "publisher": {
                  "description": "The Purchase Plan Publisher for this Gallery Image. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "releaseNoteUri": {
              "description": "The URI containing the Release Notes associated with this Shared Image.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which the Shared Image Gallery exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "specialized": {
              "description": "Specifies that the Operating System used inside this Image has not been Generalized (for example, sysprep on Windows has not been run). Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags to assign to the Shared Image.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "trustedLaunchEnabled": {
              "description": "Specifies if Trusted Launch has to be enabled for the Virtual Machine created from the Shared Image. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "trustedLaunchSupported": {
              "description": "Specifies if supports creation of both Trusted Launch virtual machines and Gen2 virtual machines with standard security created from the Shared Image. Changing this forces a new resource to be created.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
