{
  "properties": {
    "spec": {
      "additionalProperties": false,
      "oneOf": [
        {
          "not": {
            "anyOf": [
              {
                "required": [
                  "provider"
                ]
              }
            ]
          }
        },
        {
          "required": [
            "provider"
          ]
        }
      ],
      "properties": {
        "action": {
          "enum": [
            "ALLOW",
            "DENY",
            "AUDIT",
            "CUSTOM"
          ],
          "type": "string"
        },
        "provider": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "type": "object"
        },
        "rules": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "from": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "source": {
                      "additionalProperties": false,
                      "properties": {
                        "ipBlocks": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "namespaces": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notIpBlocks": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notNamespaces": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notPrincipals": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notRemoteIpBlocks": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notRequestPrincipals": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "principals": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "remoteIpBlocks": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "requestPrincipals": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "to": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "operation": {
                      "additionalProperties": false,
                      "properties": {
                        "hosts": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "methods": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notHosts": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notMethods": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notPaths": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "notPorts": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "paths": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "ports": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "when": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "notValues": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "values": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "key"
                  ],
                  "type": "object"
                },
                "type": "array"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "selector": {
          "additionalProperties": false,
          "properties": {
            "matchLabels": {
              "additionalProperties": {
                "maxLength": 63,
                "type": "string",
                "x-kubernetes-validations": [
                  {
                    "message": "wildcard not allowed in label value match",
                    "rule": "!self.contains('*')"
                  }
                ]
              },
              "maxProperties": 4096,
              "type": "object",
              "x-kubernetes-validations": [
                {
                  "message": "wildcard not allowed in label key match",
                  "rule": "self.all(key, !key.contains('*'))"
                },
                {
                  "message": "key must not be empty",
                  "rule": "self.all(key, key.size() != 0)"
                }
              ]
            }
          },
          "type": "object"
        },
        "targetRef": {
          "additionalProperties": false,
          "properties": {
            "group": {
              "maxLength": 253,
              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
              "type": "string"
            },
            "kind": {
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
              "type": "string"
            },
            "name": {
              "maxLength": 253,
              "minLength": 1,
              "type": "string"
            },
            "namespace": {
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "cross namespace referencing is not currently supported",
                  "rule": "self.size() == 0"
                }
              ]
            }
          },
          "required": [
            "kind",
            "name"
          ],
          "type": "object",
          "x-kubernetes-validations": [
            {
              "message": "Support kinds are core/Service, networking.istio.io/ServiceEntry, gateway.networking.k8s.io/Gateway",
              "rule": "[self.group, self.kind] in [['core','Service'], ['','Service'], ['gateway.networking.k8s.io','Gateway'], ['networking.istio.io','ServiceEntry']]"
            }
          ]
        },
        "targetRefs": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "group": {
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                "type": "string"
              },
              "kind": {
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$",
                "type": "string"
              },
              "name": {
                "maxLength": 253,
                "minLength": 1,
                "type": "string"
              },
              "namespace": {
                "type": "string",
                "x-kubernetes-validations": [
                  {
                    "message": "cross namespace referencing is not currently supported",
                    "rule": "self.size() == 0"
                  }
                ]
              }
            },
            "required": [
              "kind",
              "name"
            ],
            "type": "object",
            "x-kubernetes-validations": [
              {
                "message": "Support kinds are core/Service, networking.istio.io/ServiceEntry, gateway.networking.k8s.io/Gateway",
                "rule": "[self.group, self.kind] in [['core','Service'], ['','Service'], ['gateway.networking.k8s.io','Gateway'], ['networking.istio.io','ServiceEntry']]"
              }
            ]
          },
          "maxItems": 16,
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-validations": [
        {
          "message": "only one of targetRefs or selector can be set",
          "rule": "(has(self.selector)?1:0)+(has(self.targetRef)?1:0)+(has(self.targetRefs)?1:0)<=1"
        }
      ]
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastProbeTime": {
                "format": "date-time",
                "type": "string"
              },
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "observedGeneration": {
          "anyOf": [
            {
              "type": "integer"
            },
            {
              "type": "string"
            }
          ],
          "x-kubernetes-int-or-string": true
        },
        "validationMessages": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "documentationUrl": {
                "type": "string"
              },
              "level": {
                "enum": [
                  "UNKNOWN",
                  "ERROR",
                  "WARNING",
                  "INFO"
                ],
                "type": "string"
              },
              "type": {
                "additionalProperties": false,
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "type": "object",
      "x-kubernetes-preserve-unknown-fields": true
    }
  },
  "type": "object"
}
