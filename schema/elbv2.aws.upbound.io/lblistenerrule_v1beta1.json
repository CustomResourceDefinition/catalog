{
  "description": "LBListenerRule is the Schema for the LBListenerRules API. Provides a Load Balancer Listener Rule resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LBListenerRuleSpec defines the desired state of LBListenerRule",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "action": {
              "description": "An Action block. Action blocks are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authenticateCognito": {
                    "description": "Information for creating an authenticate action using Cognito. Required if type is authenticate-cognito.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authenticationRequestExtraParams": {
                          "description": "The query parameters to include in the redirect request to the authorization endpoint. Max: 10.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "onUnauthenticatedRequest": {
                          "description": "The behavior if the user is not authenticated. Valid values: deny, allow and authenticate",
                          "type": "string"
                        },
                        "scope": {
                          "description": "The set of user claims to be requested from the IdP.",
                          "type": "string"
                        },
                        "sessionCookieName": {
                          "description": "The name of the cookie used to maintain session information.",
                          "type": "string"
                        },
                        "sessionTimeout": {
                          "description": "The maximum duration of the authentication session, in seconds.",
                          "type": "number"
                        },
                        "userPoolArn": {
                          "description": "The ARN of the Cognito user pool.",
                          "type": "string"
                        },
                        "userPoolArnRef": {
                          "description": "Reference to a UserPool in cognitoidp to populate userPoolArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolArnSelector": {
                          "description": "Selector for a UserPool in cognitoidp to populate userPoolArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolClientId": {
                          "description": "The ID of the Cognito user pool client.",
                          "type": "string"
                        },
                        "userPoolClientIdRef": {
                          "description": "Reference to a UserPoolClient in cognitoidp to populate userPoolClientId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolClientIdSelector": {
                          "description": "Selector for a UserPoolClient in cognitoidp to populate userPoolClientId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolDomain": {
                          "description": "The domain prefix or fully-qualified domain name of the Cognito user pool.",
                          "type": "string"
                        },
                        "userPoolDomainRef": {
                          "description": "Reference to a UserPoolDomain in cognitoidp to populate userPoolDomain.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolDomainSelector": {
                          "description": "Selector for a UserPoolDomain in cognitoidp to populate userPoolDomain.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "authenticateOidc": {
                    "description": "Information for creating an authenticate action using OIDC. Required if type is authenticate-oidc.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authenticationRequestExtraParams": {
                          "description": "The query parameters to include in the redirect request to the authorization endpoint. Max: 10.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "authorizationEndpoint": {
                          "description": "The authorization endpoint of the IdP.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client identifier.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "issuer": {
                          "description": "The OIDC issuer identifier of the IdP.",
                          "type": "string"
                        },
                        "onUnauthenticatedRequest": {
                          "description": "The behavior if the user is not authenticated. Valid values: deny, allow and authenticate",
                          "type": "string"
                        },
                        "scope": {
                          "description": "The set of user claims to be requested from the IdP.",
                          "type": "string"
                        },
                        "sessionCookieName": {
                          "description": "The name of the cookie used to maintain session information.",
                          "type": "string"
                        },
                        "sessionTimeout": {
                          "description": "The maximum duration of the authentication session, in seconds.",
                          "type": "number"
                        },
                        "tokenEndpoint": {
                          "description": "The token endpoint of the IdP.",
                          "type": "string"
                        },
                        "userInfoEndpoint": {
                          "description": "The user info endpoint of the IdP.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "fixedResponse": {
                    "description": "Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentType": {
                          "description": "The content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.",
                          "type": "string"
                        },
                        "messageBody": {
                          "description": "The message body.",
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "forward": {
                    "description": "Configuration block for creating an action that distributes requests among one or more target groups.\nSpecify only if type is forward.\nCannot be specified with target_group_arn.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "stickiness": {
                          "description": "The target group stickiness for the rule.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "duration": {
                                "description": "The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).",
                                "type": "number"
                              },
                              "enabled": {
                                "description": "Indicates whether target group stickiness is enabled.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "targetGroup": {
                          "description": "One or more target group blocks.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "arn": {
                                "description": "The Amazon Resource Name (ARN) of the target group.",
                                "type": "string"
                              },
                              "arnRef": {
                                "description": "Reference to a LBTargetGroup in elbv2 to populate arn.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "arnSelector": {
                                "description": "Selector for a LBTargetGroup in elbv2 to populate arn.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "The weight. The range is 0 to 999.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "order": {
                    "description": "Order for the action.\nThe action with the lowest value for order is performed first.\nValid values are between 1 and 50000.\nDefaults to the position in the list of actions.",
                    "type": "number"
                  },
                  "redirect": {
                    "description": "Information for creating a redirect action. Required if type is redirect.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "description": "The hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.",
                          "type": "string"
                        },
                        "path": {
                          "description": "The absolute path, starting with the leading \"/\". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "The protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.",
                          "type": "string"
                        },
                        "query": {
                          "description": "The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading \"?\". Defaults to #{query}.",
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "targetGroupArn": {
                    "description": "ARN of the Target Group to which to route traffic.\nSpecify only if type is forward and you want to route to a single target group.\nTo route to one or more target groups, use a forward block instead.\nCannot be specified with forward.",
                    "type": "string"
                  },
                  "targetGroupArnRef": {
                    "description": "Reference to a LBTargetGroup in elbv2 to populate targetGroupArn.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetGroupArnSelector": {
                    "description": "Selector for a LBTargetGroup in elbv2 to populate targetGroupArn.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "The type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "condition": {
              "description": "A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostHeader": {
                    "description": "Contains a single values item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpHeader": {
                    "description": "HTTP headers to match. HTTP Header block fields documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "httpHeaderName": {
                          "description": "Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a host-header condition instead.",
                          "type": "string"
                        },
                        "values": {
                          "description": "List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRequestMethod": {
                    "description": "Contains a single values item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "pathPattern": {
                    "description": "Contains a single values item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a query_string condition.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "queryString": {
                    "description": "Query strings to match. Query String block fields documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "Query string key pattern to match.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Query string value pattern to match.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "sourceIp": {
                    "description": "Contains a single values item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the X-Forwarded-For header, use http_header condition instead.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "listenerArn": {
              "description": "The ARN of the listener to which to attach the rule.",
              "type": "string"
            },
            "listenerArnRef": {
              "description": "Reference to a LBListener in elbv2 to populate listenerArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "listenerArnSelector": {
              "description": "Selector for a LBListener in elbv2 to populate listenerArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "priority": {
              "description": "The priority for the rule between 1 and 50000. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.",
              "type": "number"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "action": {
              "description": "An Action block. Action blocks are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authenticateCognito": {
                    "description": "Information for creating an authenticate action using Cognito. Required if type is authenticate-cognito.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authenticationRequestExtraParams": {
                          "description": "The query parameters to include in the redirect request to the authorization endpoint. Max: 10.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "onUnauthenticatedRequest": {
                          "description": "The behavior if the user is not authenticated. Valid values: deny, allow and authenticate",
                          "type": "string"
                        },
                        "scope": {
                          "description": "The set of user claims to be requested from the IdP.",
                          "type": "string"
                        },
                        "sessionCookieName": {
                          "description": "The name of the cookie used to maintain session information.",
                          "type": "string"
                        },
                        "sessionTimeout": {
                          "description": "The maximum duration of the authentication session, in seconds.",
                          "type": "number"
                        },
                        "userPoolArn": {
                          "description": "The ARN of the Cognito user pool.",
                          "type": "string"
                        },
                        "userPoolArnRef": {
                          "description": "Reference to a UserPool in cognitoidp to populate userPoolArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolArnSelector": {
                          "description": "Selector for a UserPool in cognitoidp to populate userPoolArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolClientId": {
                          "description": "The ID of the Cognito user pool client.",
                          "type": "string"
                        },
                        "userPoolClientIdRef": {
                          "description": "Reference to a UserPoolClient in cognitoidp to populate userPoolClientId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolClientIdSelector": {
                          "description": "Selector for a UserPoolClient in cognitoidp to populate userPoolClientId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolDomain": {
                          "description": "The domain prefix or fully-qualified domain name of the Cognito user pool.",
                          "type": "string"
                        },
                        "userPoolDomainRef": {
                          "description": "Reference to a UserPoolDomain in cognitoidp to populate userPoolDomain.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPoolDomainSelector": {
                          "description": "Selector for a UserPoolDomain in cognitoidp to populate userPoolDomain.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "authenticateOidc": {
                    "description": "Information for creating an authenticate action using OIDC. Required if type is authenticate-oidc.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "clientSecretSecretRef"
                      ],
                      "properties": {
                        "authenticationRequestExtraParams": {
                          "description": "The query parameters to include in the redirect request to the authorization endpoint. Max: 10.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "authorizationEndpoint": {
                          "description": "The authorization endpoint of the IdP.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client identifier.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "issuer": {
                          "description": "The OIDC issuer identifier of the IdP.",
                          "type": "string"
                        },
                        "onUnauthenticatedRequest": {
                          "description": "The behavior if the user is not authenticated. Valid values: deny, allow and authenticate",
                          "type": "string"
                        },
                        "scope": {
                          "description": "The set of user claims to be requested from the IdP.",
                          "type": "string"
                        },
                        "sessionCookieName": {
                          "description": "The name of the cookie used to maintain session information.",
                          "type": "string"
                        },
                        "sessionTimeout": {
                          "description": "The maximum duration of the authentication session, in seconds.",
                          "type": "number"
                        },
                        "tokenEndpoint": {
                          "description": "The token endpoint of the IdP.",
                          "type": "string"
                        },
                        "userInfoEndpoint": {
                          "description": "The user info endpoint of the IdP.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "fixedResponse": {
                    "description": "Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentType": {
                          "description": "The content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.",
                          "type": "string"
                        },
                        "messageBody": {
                          "description": "The message body.",
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "forward": {
                    "description": "Configuration block for creating an action that distributes requests among one or more target groups.\nSpecify only if type is forward.\nCannot be specified with target_group_arn.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "stickiness": {
                          "description": "The target group stickiness for the rule.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "duration": {
                                "description": "The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).",
                                "type": "number"
                              },
                              "enabled": {
                                "description": "Indicates whether target group stickiness is enabled.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "targetGroup": {
                          "description": "One or more target group blocks.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "arn": {
                                "description": "The Amazon Resource Name (ARN) of the target group.",
                                "type": "string"
                              },
                              "arnRef": {
                                "description": "Reference to a LBTargetGroup in elbv2 to populate arn.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "arnSelector": {
                                "description": "Selector for a LBTargetGroup in elbv2 to populate arn.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "weight": {
                                "description": "The weight. The range is 0 to 999.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "order": {
                    "description": "Order for the action.\nThe action with the lowest value for order is performed first.\nValid values are between 1 and 50000.\nDefaults to the position in the list of actions.",
                    "type": "number"
                  },
                  "redirect": {
                    "description": "Information for creating a redirect action. Required if type is redirect.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "description": "The hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.",
                          "type": "string"
                        },
                        "path": {
                          "description": "The absolute path, starting with the leading \"/\". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "The protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.",
                          "type": "string"
                        },
                        "query": {
                          "description": "The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading \"?\". Defaults to #{query}.",
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "targetGroupArn": {
                    "description": "ARN of the Target Group to which to route traffic.\nSpecify only if type is forward and you want to route to a single target group.\nTo route to one or more target groups, use a forward block instead.\nCannot be specified with forward.",
                    "type": "string"
                  },
                  "targetGroupArnRef": {
                    "description": "Reference to a LBTargetGroup in elbv2 to populate targetGroupArn.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetGroupArnSelector": {
                    "description": "Selector for a LBTargetGroup in elbv2 to populate targetGroupArn.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "The type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "condition": {
              "description": "A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostHeader": {
                    "description": "Contains a single values item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpHeader": {
                    "description": "HTTP headers to match. HTTP Header block fields documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "httpHeaderName": {
                          "description": "Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a host-header condition instead.",
                          "type": "string"
                        },
                        "values": {
                          "description": "List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRequestMethod": {
                    "description": "Contains a single values item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "pathPattern": {
                    "description": "Contains a single values item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a query_string condition.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "queryString": {
                    "description": "Query strings to match. Query String block fields documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "Query string key pattern to match.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Query string value pattern to match.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "sourceIp": {
                    "description": "Contains a single values item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the X-Forwarded-For header, use http_header condition instead.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "listenerArn": {
              "description": "The ARN of the listener to which to attach the rule.",
              "type": "string"
            },
            "listenerArnRef": {
              "description": "Reference to a LBListener in elbv2 to populate listenerArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "listenerArnSelector": {
              "description": "Selector for a LBListener in elbv2 to populate listenerArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "priority": {
              "description": "The priority for the rule between 1 and 50000. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.",
              "type": "number"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.action) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.action))",
          "message": "spec.forProvider.action is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.condition) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.condition))",
          "message": "spec.forProvider.condition is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LBListenerRuleStatus defines the observed state of LBListenerRule.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "action": {
              "description": "An Action block. Action blocks are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "authenticateCognito": {
                    "description": "Information for creating an authenticate action using Cognito. Required if type is authenticate-cognito.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authenticationRequestExtraParams": {
                          "description": "The query parameters to include in the redirect request to the authorization endpoint. Max: 10.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "onUnauthenticatedRequest": {
                          "description": "The behavior if the user is not authenticated. Valid values: deny, allow and authenticate",
                          "type": "string"
                        },
                        "scope": {
                          "description": "The set of user claims to be requested from the IdP.",
                          "type": "string"
                        },
                        "sessionCookieName": {
                          "description": "The name of the cookie used to maintain session information.",
                          "type": "string"
                        },
                        "sessionTimeout": {
                          "description": "The maximum duration of the authentication session, in seconds.",
                          "type": "number"
                        },
                        "userPoolArn": {
                          "description": "The ARN of the Cognito user pool.",
                          "type": "string"
                        },
                        "userPoolClientId": {
                          "description": "The ID of the Cognito user pool client.",
                          "type": "string"
                        },
                        "userPoolDomain": {
                          "description": "The domain prefix or fully-qualified domain name of the Cognito user pool.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "authenticateOidc": {
                    "description": "Information for creating an authenticate action using OIDC. Required if type is authenticate-oidc.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authenticationRequestExtraParams": {
                          "description": "The query parameters to include in the redirect request to the authorization endpoint. Max: 10.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "authorizationEndpoint": {
                          "description": "The authorization endpoint of the IdP.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client identifier.",
                          "type": "string"
                        },
                        "issuer": {
                          "description": "The OIDC issuer identifier of the IdP.",
                          "type": "string"
                        },
                        "onUnauthenticatedRequest": {
                          "description": "The behavior if the user is not authenticated. Valid values: deny, allow and authenticate",
                          "type": "string"
                        },
                        "scope": {
                          "description": "The set of user claims to be requested from the IdP.",
                          "type": "string"
                        },
                        "sessionCookieName": {
                          "description": "The name of the cookie used to maintain session information.",
                          "type": "string"
                        },
                        "sessionTimeout": {
                          "description": "The maximum duration of the authentication session, in seconds.",
                          "type": "number"
                        },
                        "tokenEndpoint": {
                          "description": "The token endpoint of the IdP.",
                          "type": "string"
                        },
                        "userInfoEndpoint": {
                          "description": "The user info endpoint of the IdP.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "fixedResponse": {
                    "description": "Information for creating an action that returns a custom HTTP response. Required if type is fixed-response.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentType": {
                          "description": "The content type. Valid values are text/plain, text/css, text/html, application/javascript and application/json.",
                          "type": "string"
                        },
                        "messageBody": {
                          "description": "The message body.",
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "forward": {
                    "description": "Configuration block for creating an action that distributes requests among one or more target groups.\nSpecify only if type is forward.\nCannot be specified with target_group_arn.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "stickiness": {
                          "description": "The target group stickiness for the rule.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "duration": {
                                "description": "The time period, in seconds, during which requests from a client should be routed to the same target group. The range is 1-604800 seconds (7 days).",
                                "type": "number"
                              },
                              "enabled": {
                                "description": "Indicates whether target group stickiness is enabled.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "targetGroup": {
                          "description": "One or more target group blocks.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "arn": {
                                "description": "The Amazon Resource Name (ARN) of the target group.",
                                "type": "string"
                              },
                              "weight": {
                                "description": "The weight. The range is 0 to 999.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "order": {
                    "description": "Order for the action.\nThe action with the lowest value for order is performed first.\nValid values are between 1 and 50000.\nDefaults to the position in the list of actions.",
                    "type": "number"
                  },
                  "redirect": {
                    "description": "Information for creating a redirect action. Required if type is redirect.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "host": {
                          "description": "The hostname. This component is not percent-encoded. The hostname can contain #{host}. Defaults to #{host}.",
                          "type": "string"
                        },
                        "path": {
                          "description": "The absolute path, starting with the leading \"/\". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to /#{path}.",
                          "type": "string"
                        },
                        "port": {
                          "description": "The port. Specify a value from 1 to 65535 or #{port}. Defaults to #{port}.",
                          "type": "string"
                        },
                        "protocol": {
                          "description": "The protocol. Valid values are HTTP, HTTPS, or #{protocol}. Defaults to #{protocol}.",
                          "type": "string"
                        },
                        "query": {
                          "description": "The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading \"?\". Defaults to #{query}.",
                          "type": "string"
                        },
                        "statusCode": {
                          "description": "The HTTP redirect code. The redirect is either permanent (HTTP_301) or temporary (HTTP_302).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "targetGroupArn": {
                    "description": "ARN of the Target Group to which to route traffic.\nSpecify only if type is forward and you want to route to a single target group.\nTo route to one or more target groups, use a forward block instead.\nCannot be specified with forward.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of routing action. Valid values are forward, redirect, fixed-response, authenticate-cognito and authenticate-oidc.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "arn": {
              "description": "The ARN of the rule (matches id)",
              "type": "string"
            },
            "condition": {
              "description": "A Condition block. Multiple condition blocks of different types can be set and all must be satisfied for the rule to match. Condition blocks are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostHeader": {
                    "description": "Contains a single values item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpHeader": {
                    "description": "HTTP headers to match. HTTP Header block fields documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "httpHeaderName": {
                          "description": "Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a host-header condition instead.",
                          "type": "string"
                        },
                        "values": {
                          "description": "List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRequestMethod": {
                    "description": "Contains a single values item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "pathPattern": {
                    "description": "Contains a single values item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a query_string condition.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "queryString": {
                    "description": "Query strings to match. Query String block fields documented below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "Query string key pattern to match.",
                          "type": "string"
                        },
                        "value": {
                          "description": "Query string value pattern to match.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "sourceIp": {
                    "description": "Contains a single values item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the X-Forwarded-For header, use http_header condition instead.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "values": {
                          "description": "Query string pairs or values to match. Query String Value blocks documented below. Multiple values blocks can be specified, see example above. Maximum size of each string is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). To search for a literal '*' or '?' character in a query string, escape the character with a backslash (\\). Only one pair needs to match for the condition to be satisfied.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "The ARN of the rule (matches arn)",
              "type": "string"
            },
            "listenerArn": {
              "description": "The ARN of the listener to which to attach the rule.",
              "type": "string"
            },
            "priority": {
              "description": "The priority for the rule between 1 and 50000. Leaving it unset will automatically set the rule with next available priority after currently existing highest rule. A listener can't have multiple rules with the same priority.",
              "type": "number"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
