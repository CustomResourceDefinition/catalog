{
  "description": "Stack is the Schema for the Stacks API. Official documentation https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#stacks/ Required access policy scopes: stacks:readstacks:writestacks:delete",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "StackSpec defines the desired state of Stack",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "deleteProtection": {
              "description": "(Boolean) Whether to enable delete protection for the stack, preventing accidental deletion. Defaults to true.\nWhether to enable delete protection for the stack, preventing accidental deletion. Defaults to `true`.",
              "type": "boolean"
            },
            "description": {
              "description": "(String) Description of stack.\nDescription of stack.",
              "type": "string"
            },
            "labels": {
              "description": "zA-Z0-9/\\-.]+$\" and stacks cannot have more than 10 labels.\nA map of labels to assign to the stack. Label keys and values must match the following regexp: \"^[a-zA-Z0-9/\\\\-.]+$\" and stacks cannot have more than 10 labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "(String) Name of stack. Conventionally matches the url of the instance (e.g. \u003cstack_slug\u003e.grafana.net).\nName of stack. Conventionally matches the url of the instance (e.g. `\u003cstack_slug\u003e.grafana.net`).",
              "type": "string"
            },
            "regionSlug": {
              "description": "cloud/developer-resources/api-reference/cloud-api/#list-regions.\nRegion slug to assign to this stack. Changing region will destroy the existing stack and create a new one in the desired region. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.",
              "type": "string"
            },
            "slug": {
              "description": "(String) Subdomain that the Grafana instance will be available at. Setting slug to \u003cstack_slug\u003e will make the instance available at https://\u003cstack_slug\u003e.grafana.net.\nSubdomain that the Grafana instance will be available at. Setting slug to `\u003cstack_slug\u003e` will make the instance available at `https://\u003cstack_slug\u003e.grafana.net`.",
              "type": "string"
            },
            "url": {
              "description": "(String) Custom URL for the Grafana instance. Must have a CNAME setup to point to .grafana.net before creating the stack\nCustom URL for the Grafana instance. Must have a CNAME setup to point to `.grafana.net` before creating the stack",
              "type": "string"
            },
            "waitForReadiness": {
              "description": "(Boolean) Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to true.\nWhether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to `true`.",
              "type": "boolean"
            },
            "waitForReadinessTimeout": {
              "description": "(String) How long to wait for readiness (if enabled). Defaults to 5m0s.\nHow long to wait for readiness (if enabled). Defaults to `5m0s`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "deleteProtection": {
              "description": "(Boolean) Whether to enable delete protection for the stack, preventing accidental deletion. Defaults to true.\nWhether to enable delete protection for the stack, preventing accidental deletion. Defaults to `true`.",
              "type": "boolean"
            },
            "description": {
              "description": "(String) Description of stack.\nDescription of stack.",
              "type": "string"
            },
            "labels": {
              "description": "zA-Z0-9/\\-.]+$\" and stacks cannot have more than 10 labels.\nA map of labels to assign to the stack. Label keys and values must match the following regexp: \"^[a-zA-Z0-9/\\\\-.]+$\" and stacks cannot have more than 10 labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "(String) Name of stack. Conventionally matches the url of the instance (e.g. \u003cstack_slug\u003e.grafana.net).\nName of stack. Conventionally matches the url of the instance (e.g. `\u003cstack_slug\u003e.grafana.net`).",
              "type": "string"
            },
            "regionSlug": {
              "description": "cloud/developer-resources/api-reference/cloud-api/#list-regions.\nRegion slug to assign to this stack. Changing region will destroy the existing stack and create a new one in the desired region. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.",
              "type": "string"
            },
            "slug": {
              "description": "(String) Subdomain that the Grafana instance will be available at. Setting slug to \u003cstack_slug\u003e will make the instance available at https://\u003cstack_slug\u003e.grafana.net.\nSubdomain that the Grafana instance will be available at. Setting slug to `\u003cstack_slug\u003e` will make the instance available at `https://\u003cstack_slug\u003e.grafana.net`.",
              "type": "string"
            },
            "url": {
              "description": "(String) Custom URL for the Grafana instance. Must have a CNAME setup to point to .grafana.net before creating the stack\nCustom URL for the Grafana instance. Must have a CNAME setup to point to `.grafana.net` before creating the stack",
              "type": "string"
            },
            "waitForReadiness": {
              "description": "(Boolean) Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to true.\nWhether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to `true`.",
              "type": "boolean"
            },
            "waitForReadinessTimeout": {
              "description": "(String) How long to wait for readiness (if enabled). Defaults to 5m0s.\nHow long to wait for readiness (if enabled). Defaults to `5m0s`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.slug) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.slug))",
          "message": "spec.forProvider.slug is a required parameter"
        }
      ]
    },
    "status": {
      "description": "StackStatus defines the observed state of Stack.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "alertmanagerIpAllowListCname": {
              "description": "separated list of CNAMEs that can be whitelisted to access the Alertmanager instances\nComma-separated list of CNAMEs that can be whitelisted to access the Alertmanager instances (Optional)",
              "type": "string"
            },
            "alertmanagerName": {
              "description": "(String) Name of the Alertmanager instance configured for this stack.\nName of the Alertmanager instance configured for this stack.",
              "type": "string"
            },
            "alertmanagerStatus": {
              "description": "(String) Status of the Alertmanager instance configured for this stack.\nStatus of the Alertmanager instance configured for this stack.",
              "type": "string"
            },
            "alertmanagerUrl": {
              "description": "(String) Base URL of the Alertmanager instance configured for this stack.\nBase URL of the Alertmanager instance configured for this stack.",
              "type": "string"
            },
            "alertmanagerUserId": {
              "description": "(Number) User ID of the Alertmanager instance configured for this stack.\nUser ID of the Alertmanager instance configured for this stack.",
              "type": "number"
            },
            "clusterSlug": {
              "description": "(String) Slug of the cluster where this stack resides.\nSlug of the cluster where this stack resides.",
              "type": "string"
            },
            "deleteProtection": {
              "description": "(Boolean) Whether to enable delete protection for the stack, preventing accidental deletion. Defaults to true.\nWhether to enable delete protection for the stack, preventing accidental deletion. Defaults to `true`.",
              "type": "boolean"
            },
            "description": {
              "description": "(String) Description of stack.\nDescription of stack.",
              "type": "string"
            },
            "fleetManagementName": {
              "description": "(String) Name of the Fleet Management instance configured for this stack.\nName of the Fleet Management instance configured for this stack.",
              "type": "string"
            },
            "fleetManagementPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for Fleet Management when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for Fleet Management when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "fleetManagementPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for Fleet Management when using AWS PrivateLink (only for AWS stacks)\nService Name for Fleet Management when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "fleetManagementStatus": {
              "description": "(String) Status of the Fleet Management instance configured for this stack.\nStatus of the Fleet Management instance configured for this stack.",
              "type": "string"
            },
            "fleetManagementUrl": {
              "description": "(String) Base URL of the Fleet Management instance configured for this stack.\nBase URL of the Fleet Management instance configured for this stack.",
              "type": "string"
            },
            "fleetManagementUserId": {
              "description": "(Number) User ID of the Fleet Management instance configured for this stack.\nUser ID of the Fleet Management instance configured for this stack.",
              "type": "number"
            },
            "grafanasIpAllowListCname": {
              "description": "separated list of CNAMEs that can be whitelisted to access the grafana instance\nComma-separated list of CNAMEs that can be whitelisted to access the grafana instance (Optional)",
              "type": "string"
            },
            "graphiteIpAllowListCname": {
              "description": "separated list of CNAMEs that can be whitelisted to access the Graphite instance\nComma-separated list of CNAMEs that can be whitelisted to access the Graphite instance (Optional)",
              "type": "string"
            },
            "graphiteName": {
              "description": "(String)",
              "type": "string"
            },
            "graphitePrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for Graphite when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for Graphite when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "graphitePrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for Graphite when using AWS PrivateLink (only for AWS stacks)\nService Name for Graphite when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "graphiteStatus": {
              "description": "(String)",
              "type": "string"
            },
            "graphiteUrl": {
              "description": "(String)",
              "type": "string"
            },
            "graphiteUserId": {
              "description": "(Number)",
              "type": "number"
            },
            "id": {
              "description": "(String) The stack id assigned to this stack by Grafana.",
              "type": "string"
            },
            "influxUrl": {
              "description": "cloud/send-data/metrics/metrics-influxdb/push-from-telegraf/ for docs on how to use this.\nBase URL of the InfluxDB instance configured for this stack. The username is the same as the metrics' (`prometheus_user_id` attribute of this resource). See https://grafana.com/docs/grafana-cloud/send-data/metrics/metrics-influxdb/push-from-telegraf/ for docs on how to use this.",
              "type": "string"
            },
            "labels": {
              "description": "zA-Z0-9/\\-.]+$\" and stacks cannot have more than 10 labels.\nA map of labels to assign to the stack. Label keys and values must match the following regexp: \"^[a-zA-Z0-9/\\\\-.]+$\" and stacks cannot have more than 10 labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "logsIpAllowListCname": {
              "description": "separated list of CNAMEs that can be whitelisted to access the Logs instance\nComma-separated list of CNAMEs that can be whitelisted to access the Logs instance (Optional)",
              "type": "string"
            },
            "logsName": {
              "description": "(String)",
              "type": "string"
            },
            "logsPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for Logs when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for Logs when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "logsPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for Logs when using AWS PrivateLink (only for AWS stacks)\nService Name for Logs when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "logsStatus": {
              "description": "(String)",
              "type": "string"
            },
            "logsUrl": {
              "description": "(String)",
              "type": "string"
            },
            "logsUserId": {
              "description": "(Number)",
              "type": "number"
            },
            "name": {
              "description": "(String) Name of stack. Conventionally matches the url of the instance (e.g. \u003cstack_slug\u003e.grafana.net).\nName of stack. Conventionally matches the url of the instance (e.g. `\u003cstack_slug\u003e.grafana.net`).",
              "type": "string"
            },
            "oncallApiUrl": {
              "description": "(String) Base URL of the OnCall API instance configured for this stack.\nBase URL of the OnCall API instance configured for this stack.",
              "type": "string"
            },
            "orgId": {
              "description": "(Number) Organization id to assign to this stack.\nOrganization id to assign to this stack.",
              "type": "number"
            },
            "orgName": {
              "description": "(String) Organization name to assign to this stack.\nOrganization name to assign to this stack.",
              "type": "string"
            },
            "orgSlug": {
              "description": "(String) Organization slug to assign to this stack.\nOrganization slug to assign to this stack.",
              "type": "string"
            },
            "otlpPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for OTLP when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for OTLP when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "otlpPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for OTLP when using AWS PrivateLink (only for AWS stacks)\nService Name for OTLP when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "otlpUrl": {
              "description": "cloud/send-data/otlp/send-data-otlp/ for docs on how to use this.\nBase URL of the OTLP instance configured for this stack. The username is the stack's ID (`id` attribute of this resource). See https://grafana.com/docs/grafana-cloud/send-data/otlp/send-data-otlp/ for docs on how to use this.",
              "type": "string"
            },
            "pdcApiPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for PDC's API when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for PDC's API when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "pdcApiPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for PDC's API when using AWS PrivateLink (only for AWS stacks)\nService Name for PDC's API when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "pdcGatewayPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for PDC's Gateway when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for PDC's Gateway when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "pdcGatewayPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for PDC's Gateway when using AWS PrivateLink (only for AWS stacks)\nService Name for PDC's Gateway when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "profilesIpAllowListCname": {
              "description": "separated list of CNAMEs that can be whitelisted to access the Profiles instance\nComma-separated list of CNAMEs that can be whitelisted to access the Profiles instance (Optional)",
              "type": "string"
            },
            "profilesName": {
              "description": "(String)",
              "type": "string"
            },
            "profilesPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for Profiles when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for Profiles when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "profilesPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for Profiles when using AWS PrivateLink (only for AWS stacks)\nService Name for Profiles when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "profilesStatus": {
              "description": "(String)",
              "type": "string"
            },
            "profilesUrl": {
              "description": "(String)",
              "type": "string"
            },
            "profilesUserId": {
              "description": "(Number)",
              "type": "number"
            },
            "prometheusIpAllowListCname": {
              "description": "separated list of CNAMEs that can be whitelisted to access the Prometheus instance\nComma-separated list of CNAMEs that can be whitelisted to access the Prometheus instance (Optional)",
              "type": "string"
            },
            "prometheusName": {
              "description": "(String) Prometheus name for this instance.\nPrometheus name for this instance.",
              "type": "string"
            },
            "prometheusPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for Prometheus when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for Prometheus when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "prometheusPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for Prometheus when using AWS PrivateLink (only for AWS stacks)\nService Name for Prometheus when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "prometheusRemoteEndpoint": {
              "description": "(String) Use this URL to query hosted metrics data e.g. Prometheus data source in Grafana\nUse this URL to query hosted metrics data e.g. Prometheus data source in Grafana",
              "type": "string"
            },
            "prometheusRemoteWriteEndpoint": {
              "description": "(String) Use this URL to send prometheus metrics to Grafana cloud\nUse this URL to send prometheus metrics to Grafana cloud",
              "type": "string"
            },
            "prometheusStatus": {
              "description": "(String) Prometheus status for this instance.\nPrometheus status for this instance.",
              "type": "string"
            },
            "prometheusUrl": {
              "description": "(String) Prometheus url for this instance.\nPrometheus url for this instance.",
              "type": "string"
            },
            "prometheusUserId": {
              "description": "(Number) Prometheus user ID. Used for e.g. remote_write.\nPrometheus user ID. Used for e.g. remote_write.",
              "type": "number"
            },
            "regionSlug": {
              "description": "cloud/developer-resources/api-reference/cloud-api/#list-regions.\nRegion slug to assign to this stack. Changing region will destroy the existing stack and create a new one in the desired region. Use the region list API to get the list of available regions: https://grafana.com/docs/grafana-cloud/developer-resources/api-reference/cloud-api/#list-regions.",
              "type": "string"
            },
            "slug": {
              "description": "(String) Subdomain that the Grafana instance will be available at. Setting slug to \u003cstack_slug\u003e will make the instance available at https://\u003cstack_slug\u003e.grafana.net.\nSubdomain that the Grafana instance will be available at. Setting slug to `\u003cstack_slug\u003e` will make the instance available at `https://\u003cstack_slug\u003e.grafana.net`.",
              "type": "string"
            },
            "status": {
              "description": "(String) Status of the stack.\nStatus of the stack.",
              "type": "string"
            },
            "tracesIpAllowListCname": {
              "description": "separated list of CNAMEs that can be whitelisted to access the Traces instance\nComma-separated list of CNAMEs that can be whitelisted to access the Traces instance (Optional)",
              "type": "string"
            },
            "tracesName": {
              "description": "(String)",
              "type": "string"
            },
            "tracesPrivateConnectivityInfoPrivateDns": {
              "description": "(String) Private DNS for Traces when using AWS PrivateLink (only for AWS stacks)\nPrivate DNS for Traces when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "tracesPrivateConnectivityInfoServiceName": {
              "description": "(String) Service Name for Traces when using AWS PrivateLink (only for AWS stacks)\nService Name for Traces when using AWS PrivateLink (only for AWS stacks)",
              "type": "string"
            },
            "tracesStatus": {
              "description": "(String)",
              "type": "string"
            },
            "tracesUrl": {
              "description": "(String) Base URL of the Traces instance configured for this stack. To use this in the Tempo data source in Grafana, append /tempo to the URL.\nBase URL of the Traces instance configured for this stack. To use this in the Tempo data source in Grafana, append `/tempo` to the URL.",
              "type": "string"
            },
            "tracesUserId": {
              "description": "(Number)",
              "type": "number"
            },
            "url": {
              "description": "(String) Custom URL for the Grafana instance. Must have a CNAME setup to point to .grafana.net before creating the stack\nCustom URL for the Grafana instance. Must have a CNAME setup to point to `.grafana.net` before creating the stack",
              "type": "string"
            },
            "waitForReadiness": {
              "description": "(Boolean) Whether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to true.\nWhether to wait for readiness of the stack after creating it. The check is a HEAD request to the stack URL (Grafana instance). Defaults to `true`.",
              "type": "boolean"
            },
            "waitForReadinessTimeout": {
              "description": "(String) How long to wait for readiness (if enabled). Defaults to 5m0s.\nHow long to wait for readiness (if enabled). Defaults to `5m0s`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
