{
  "description": "Permissions is the Schema for the Permissionss API. Grants permissions to the principal to access metadata in the Data Catalog and data organized in underlying data storage such as Amazon S3.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PermissionsSpec defines the desired state of Permissions",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "catalogId": {
              "description": "Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
              "type": "string"
            },
            "catalogResource": {
              "description": "Whether the permissions are to be granted for the Data Catalog. Defaults to false.",
              "type": "boolean"
            },
            "dataCellsFilter": {
              "description": "Configuration block for a data cells filter resource. Detailed below.",
              "type": "object",
              "properties": {
                "databaseName": {
                  "description": "The name of the database.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the data cells filter.",
                  "type": "string"
                },
                "tableCatalogId": {
                  "description": "The ID of the Data Catalog.",
                  "type": "string"
                },
                "tableName": {
                  "description": "The name of the table.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataLocation": {
              "description": "Configuration block for a data location resource. Detailed below.",
              "type": "object",
              "properties": {
                "arn": {
                  "description": "Amazon Resource Name (ARN) that uniquely identifies the data location resource.",
                  "type": "string"
                },
                "arnRef": {
                  "description": "Reference to a Resource in lakeformation to populate arn.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "arnSelector": {
                  "description": "Selector for a Resource in lakeformation to populate arn.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "catalogId": {
                  "description": "Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "database": {
              "description": "Configuration block for a database resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the database resource. Unique to the Data Catalog.",
                  "type": "string"
                },
                "nameRef": {
                  "description": "Reference to a CatalogDatabase in glue to populate name.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "nameSelector": {
                  "description": "Selector for a CatalogDatabase in glue to populate name.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "lfTag": {
              "description": "Configuration block for an LF-tag resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "key": {
                  "description": "The key-name for the tag.",
                  "type": "string"
                },
                "values": {
                  "description": "A list of possible values an attribute can take.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "lfTagPolicy": {
              "description": "Configuration block for an LF-tag policy resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "expression": {
                  "description": "A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See expression below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "The key-name of an LF-Tag.",
                        "type": "string"
                      },
                      "values": {
                        "description": "A list of possible values of an LF-Tag.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "resourceType": {
                  "description": "The resource type for which the tag policy applies. Valid values are DATABASE and TABLE.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "permissions": {
              "description": "List of permissions granted to the principal. Valid values may include ALL, ALTER, ASSOCIATE, CREATE_DATABASE, CREATE_TABLE, DATA_LOCATION_ACCESS, DELETE, DESCRIBE, DROP, INSERT, and SELECT. For details on each permission, see Lake Formation Permissions Reference.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "permissionsWithGrantOption": {
              "description": "Subset of permissions which the principal can pass.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "principal": {
              "description": "Principal to be granted the permissions on the resource. Supported principals include IAM_ALLOWED_PRINCIPALS (see Default Behavior and  above), IAM roles, users, groups, Federated Users, SAML groups and users, QuickSight groups, OUs, and organizations as well as AWS account IDs for cross-account permissions. For more information, see Lake Formation Permissions Reference.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "table": {
              "description": "Configuration block for a table resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "databaseName": {
                  "description": "Name of the database for the table. Unique to a Data Catalog.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the table.",
                  "type": "string"
                },
                "wildcard": {
                  "description": "Whether to use a wildcard representing every table under a database. Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "tableWithColumns": {
              "description": "Configuration block for a table with columns resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "columnNames": {
                  "description": "Set of column names for the table.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "databaseName": {
                  "description": "Name of the database for the table with columns resource. Unique to the Data Catalog.",
                  "type": "string"
                },
                "excludedColumnNames": {
                  "description": "Set of column names for the table to exclude.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "name": {
                  "description": "Name of the table resource.",
                  "type": "string"
                },
                "nameRef": {
                  "description": "Reference to a CatalogTable in glue to populate name.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "nameSelector": {
                  "description": "Selector for a CatalogTable in glue to populate name.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "wildcard": {
                  "description": "Whether to use a column wildcard.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "catalogId": {
              "description": "Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
              "type": "string"
            },
            "catalogResource": {
              "description": "Whether the permissions are to be granted for the Data Catalog. Defaults to false.",
              "type": "boolean"
            },
            "dataCellsFilter": {
              "description": "Configuration block for a data cells filter resource. Detailed below.",
              "type": "object",
              "properties": {
                "databaseName": {
                  "description": "The name of the database.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the data cells filter.",
                  "type": "string"
                },
                "tableCatalogId": {
                  "description": "The ID of the Data Catalog.",
                  "type": "string"
                },
                "tableName": {
                  "description": "The name of the table.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataLocation": {
              "description": "Configuration block for a data location resource. Detailed below.",
              "type": "object",
              "properties": {
                "arn": {
                  "description": "Amazon Resource Name (ARN) that uniquely identifies the data location resource.",
                  "type": "string"
                },
                "arnRef": {
                  "description": "Reference to a Resource in lakeformation to populate arn.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "arnSelector": {
                  "description": "Selector for a Resource in lakeformation to populate arn.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "catalogId": {
                  "description": "Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "database": {
              "description": "Configuration block for a database resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the database resource. Unique to the Data Catalog.",
                  "type": "string"
                },
                "nameRef": {
                  "description": "Reference to a CatalogDatabase in glue to populate name.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "nameSelector": {
                  "description": "Selector for a CatalogDatabase in glue to populate name.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "lfTag": {
              "description": "Configuration block for an LF-tag resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "key": {
                  "description": "The key-name for the tag.",
                  "type": "string"
                },
                "values": {
                  "description": "A list of possible values an attribute can take.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "lfTagPolicy": {
              "description": "Configuration block for an LF-tag policy resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "expression": {
                  "description": "A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See expression below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "The key-name of an LF-Tag.",
                        "type": "string"
                      },
                      "values": {
                        "description": "A list of possible values of an LF-Tag.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "resourceType": {
                  "description": "The resource type for which the tag policy applies. Valid values are DATABASE and TABLE.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "permissions": {
              "description": "List of permissions granted to the principal. Valid values may include ALL, ALTER, ASSOCIATE, CREATE_DATABASE, CREATE_TABLE, DATA_LOCATION_ACCESS, DELETE, DESCRIBE, DROP, INSERT, and SELECT. For details on each permission, see Lake Formation Permissions Reference.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "permissionsWithGrantOption": {
              "description": "Subset of permissions which the principal can pass.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "principal": {
              "description": "Principal to be granted the permissions on the resource. Supported principals include IAM_ALLOWED_PRINCIPALS (see Default Behavior and  above), IAM roles, users, groups, Federated Users, SAML groups and users, QuickSight groups, OUs, and organizations as well as AWS account IDs for cross-account permissions. For more information, see Lake Formation Permissions Reference.",
              "type": "string"
            },
            "table": {
              "description": "Configuration block for a table resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "databaseName": {
                  "description": "Name of the database for the table. Unique to a Data Catalog.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the table.",
                  "type": "string"
                },
                "wildcard": {
                  "description": "Whether to use a wildcard representing every table under a database. Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "tableWithColumns": {
              "description": "Configuration block for a table with columns resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "columnNames": {
                  "description": "Set of column names for the table.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "databaseName": {
                  "description": "Name of the database for the table with columns resource. Unique to the Data Catalog.",
                  "type": "string"
                },
                "excludedColumnNames": {
                  "description": "Set of column names for the table to exclude.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "name": {
                  "description": "Name of the table resource.",
                  "type": "string"
                },
                "nameRef": {
                  "description": "Reference to a CatalogTable in glue to populate name.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "nameSelector": {
                  "description": "Selector for a CatalogTable in glue to populate name.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "wildcard": {
                  "description": "Whether to use a column wildcard.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.permissions) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.permissions))",
          "message": "spec.forProvider.permissions is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.principal) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.principal))",
          "message": "spec.forProvider.principal is a required parameter"
        }
      ]
    },
    "status": {
      "description": "PermissionsStatus defines the observed state of Permissions.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "catalogId": {
              "description": "Identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
              "type": "string"
            },
            "catalogResource": {
              "description": "Whether the permissions are to be granted for the Data Catalog. Defaults to false.",
              "type": "boolean"
            },
            "dataCellsFilter": {
              "description": "Configuration block for a data cells filter resource. Detailed below.",
              "type": "object",
              "properties": {
                "databaseName": {
                  "description": "The name of the database.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the data cells filter.",
                  "type": "string"
                },
                "tableCatalogId": {
                  "description": "The ID of the Data Catalog.",
                  "type": "string"
                },
                "tableName": {
                  "description": "The name of the table.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataLocation": {
              "description": "Configuration block for a data location resource. Detailed below.",
              "type": "object",
              "properties": {
                "arn": {
                  "description": "Amazon Resource Name (ARN) that uniquely identifies the data location resource.",
                  "type": "string"
                },
                "catalogId": {
                  "description": "Identifier for the Data Catalog where the location is registered with Lake Formation. By default, it is the account ID of the caller.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "database": {
              "description": "Configuration block for a database resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the database resource. Unique to the Data Catalog.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "type": "string"
            },
            "lfTag": {
              "description": "Configuration block for an LF-tag resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "key": {
                  "description": "The key-name for the tag.",
                  "type": "string"
                },
                "values": {
                  "description": "A list of possible values an attribute can take.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "lfTagPolicy": {
              "description": "Configuration block for an LF-tag policy resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "expression": {
                  "description": "A list of tag conditions that apply to the resource's tag policy. Configuration block for tag conditions that apply to the policy. See expression below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "The key-name of an LF-Tag.",
                        "type": "string"
                      },
                      "values": {
                        "description": "A list of possible values of an LF-Tag.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "resourceType": {
                  "description": "The resource type for which the tag policy applies. Valid values are DATABASE and TABLE.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "permissions": {
              "description": "List of permissions granted to the principal. Valid values may include ALL, ALTER, ASSOCIATE, CREATE_DATABASE, CREATE_TABLE, DATA_LOCATION_ACCESS, DELETE, DESCRIBE, DROP, INSERT, and SELECT. For details on each permission, see Lake Formation Permissions Reference.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "permissionsWithGrantOption": {
              "description": "Subset of permissions which the principal can pass.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "principal": {
              "description": "Principal to be granted the permissions on the resource. Supported principals include IAM_ALLOWED_PRINCIPALS (see Default Behavior and  above), IAM roles, users, groups, Federated Users, SAML groups and users, QuickSight groups, OUs, and organizations as well as AWS account IDs for cross-account permissions. For more information, see Lake Formation Permissions Reference.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "table": {
              "description": "Configuration block for a table resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "databaseName": {
                  "description": "Name of the database for the table. Unique to a Data Catalog.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the table.",
                  "type": "string"
                },
                "wildcard": {
                  "description": "Whether to use a wildcard representing every table under a database. Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "tableWithColumns": {
              "description": "Configuration block for a table with columns resource. Detailed below.",
              "type": "object",
              "properties": {
                "catalogId": {
                  "description": "Identifier for the Data Catalog. By default, it is the account ID of the caller.",
                  "type": "string"
                },
                "columnNames": {
                  "description": "Set of column names for the table.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "databaseName": {
                  "description": "Name of the database for the table with columns resource. Unique to the Data Catalog.",
                  "type": "string"
                },
                "excludedColumnNames": {
                  "description": "Set of column names for the table to exclude.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "name": {
                  "description": "Name of the table resource.",
                  "type": "string"
                },
                "wildcard": {
                  "description": "Whether to use a column wildcard.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
