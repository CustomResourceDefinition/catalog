{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "metadata": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 40
        }
      },
      "additionalProperties": false
    },
    "spec": {
      "type": "object",
      "required": [
        "secretName"
      ],
      "properties": {
        "backupProfiles": {
          "description": "Backup profile specifications for the cluster, which can be referenced from backup schedules and one-off backup jobs",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "dumpInstance": {
                "type": "object",
                "properties": {
                  "dumpOptions": {
                    "description": "A dictionary of key-value pairs passed directly to MySQL Shell's DumpInstance()",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "storage": {
                    "type": "object",
                    "properties": {
                      "azure": {
                        "type": "object",
                        "required": [
                          "containerName",
                          "config"
                        ],
                        "properties": {
                          "config": {
                            "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                            "type": "string"
                          },
                          "prefix": {
                            "description": "Path in the container where the dump files are stored",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "ociObjectStorage": {
                        "type": "object",
                        "required": [
                          "bucketName",
                          "credentials"
                        ],
                        "properties": {
                          "bucketName": {
                            "description": "Name of the OCI bucket where backup is stored",
                            "type": "string"
                          },
                          "credentials": {
                            "description": "Name of a Secret with data for accessing the bucket",
                            "type": "string"
                          },
                          "prefix": {
                            "description": "Path in bucket where backup is stored",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "persistentVolumeClaim": {
                        "description": "Specification of the PVC to be used. Used 'as is' in pod executing the backup.",
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "s3": {
                        "type": "object",
                        "required": [
                          "bucketName",
                          "config"
                        ],
                        "properties": {
                          "bucketName": {
                            "description": "Name of the S3 bucket where the dump is stored",
                            "type": "string"
                          },
                          "config": {
                            "description": "Name of a Secret with S3 configuration and credentials",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "Override endpoint URL",
                            "type": "string"
                          },
                          "prefix": {
                            "description": "Path in the bucket where the dump files are stored",
                            "type": "string"
                          },
                          "profile": {
                            "description": "Profile being used in configuration files",
                            "type": "string",
                            "default": ""
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "additionalProperties": false
              },
              "meb": {
                "description": "MySQL Enterprise Backup",
                "type": "object",
                "required": [
                  "storage"
                ],
                "properties": {
                  "extraOptions": {
                    "description": "Additonal Command Line Options being passed to MySQL Enterprise Backup",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "storage": {
                    "description": "Configuration of storage for MySQL Enterprise Backup",
                    "type": "object",
                    "properties": {
                      "oci": {
                        "description": "Store MySQL Enterprise Backup on OCI Object Storage",
                        "type": "object",
                        "required": [
                          "bucketName",
                          "prefix",
                          "namespace",
                          "credentials"
                        ],
                        "properties": {
                          "bucketName": {
                            "description": "Name of the OCI bucket where backup is stored",
                            "type": "string"
                          },
                          "credentials": {
                            "description": "Name of a Secret with data for accessing the bucket",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "OCI Namespace of Object Store",
                            "type": "string"
                          },
                          "prefix": {
                            "description": "Path in bucket where backup is stored",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "s3": {
                        "description": "S3 style storage",
                        "type": "object",
                        "required": [
                          "region",
                          "bucket",
                          "objectKeyPrefix",
                          "credentials"
                        ],
                        "properties": {
                          "bucket": {
                            "description": "S3 Bucket Name",
                            "type": "string"
                          },
                          "credentials": {
                            "description": "Name of a Secret holding iaccessKeyId and secretAccessKey properties",
                            "type": "string"
                          },
                          "host": {
                            "description": "Override hostname for S3-compatible backends",
                            "type": "string"
                          },
                          "objectKeyPrefix": {
                            "description": "S3 Object Key Prefix, this will be extended with the name of the actual backup",
                            "type": "string"
                          },
                          "region": {
                            "description": "S3 Region",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "description": "Embedded backup profile, referenced as backupProfileName elsewhere",
                "type": "string"
              },
              "podAnnotations": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "podLabels": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "snapshot": {
                "type": "object",
                "properties": {
                  "storage": {
                    "type": "object",
                    "properties": {
                      "azure": {
                        "type": "object",
                        "required": [
                          "containerName",
                          "config"
                        ],
                        "properties": {
                          "config": {
                            "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                            "type": "string"
                          },
                          "containerName": {
                            "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                            "type": "string"
                          },
                          "prefix": {
                            "description": "Path in the container where the dump files are stored",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "ociObjectStorage": {
                        "type": "object",
                        "required": [
                          "bucketName",
                          "credentials"
                        ],
                        "properties": {
                          "bucketName": {
                            "description": "Bucket name where backup is stored",
                            "type": "string"
                          },
                          "credentials": {
                            "description": "Name of a Secret with data for accessing the bucket",
                            "type": "string"
                          },
                          "prefix": {
                            "description": "Path in bucket where backup is stored",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "persistentVolumeClaim": {
                        "description": "Specification of the PVC to be used. Used 'as is' in pod executing the backup.",
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "s3": {
                        "type": "object",
                        "required": [
                          "bucketName",
                          "config"
                        ],
                        "properties": {
                          "bucketName": {
                            "description": "Name of the S3 bucket where the dump is stored",
                            "type": "string"
                          },
                          "config": {
                            "description": "Name of a Secret with S3 configuration and credentials",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "Override endpoint URL",
                            "type": "string"
                          },
                          "prefix": {
                            "description": "Path in the bucket where the dump files are stored",
                            "type": "string"
                          },
                          "profile": {
                            "description": "Profile being used in configuration files",
                            "type": "string",
                            "default": ""
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false,
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "backupSchedules": {
          "description": "Schedules for periodically executed backups",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "schedule"
            ],
            "properties": {
              "backupProfile": {
                "description": "backupProfile specification if backupProfileName is not specified",
                "type": "object",
                "properties": {
                  "dumpInstance": {
                    "type": "object",
                    "properties": {
                      "dumpOptions": {
                        "description": "A dictionary of key-value pairs passed directly to MySQL Shell's DumpInstance()",
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true
                      },
                      "storage": {
                        "type": "object",
                        "properties": {
                          "azure": {
                            "type": "object",
                            "required": [
                              "containerName",
                              "config"
                            ],
                            "properties": {
                              "config": {
                                "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                                "type": "string"
                              },
                              "containerName": {
                                "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                                "type": "string"
                              },
                              "prefix": {
                                "description": "Path in the container where the dump files are stored",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "ociObjectStorage": {
                            "type": "object",
                            "required": [
                              "bucketName",
                              "credentials"
                            ],
                            "properties": {
                              "bucketName": {
                                "description": "Name of the OCI Bucket where backup is stored",
                                "type": "string"
                              },
                              "credentials": {
                                "description": "Name of a Secret with data for accessing the bucket",
                                "type": "string"
                              },
                              "prefix": {
                                "description": "Path in bucket where backup is stored",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "persistentVolumeClaim": {
                            "description": "Specification of the PVC to be used. Used 'as is' in pod executing the backup.",
                            "type": "object",
                            "x-kubernetes-preserve-unknown-fields": true
                          },
                          "s3": {
                            "type": "object",
                            "required": [
                              "bucketName",
                              "config"
                            ],
                            "properties": {
                              "bucketName": {
                                "description": "Name of the S3 bucket where the dump is stored",
                                "type": "string"
                              },
                              "config": {
                                "description": "Name of a Secret with S3 configuration and credentials",
                                "type": "string"
                              },
                              "endpoint": {
                                "description": "Override endpoint URL",
                                "type": "string"
                              },
                              "prefix": {
                                "description": "Path in the bucket where the dump files are stored",
                                "type": "string"
                              },
                              "profile": {
                                "description": "Profile being used in configuration files",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "meb": {
                    "description": "MySQL Enterprise Backup",
                    "type": "object",
                    "required": [
                      "storage"
                    ],
                    "properties": {
                      "extraOptions": {
                        "description": "Additonal Command Line Options being passed to MySQL Enterprise Backup",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "storage": {
                        "description": "Configuration of storage for MySQL Enterprise Backup",
                        "type": "object",
                        "properties": {
                          "oci": {
                            "description": "Store MySQL Enterprise Backup on OCI Object Storage",
                            "type": "object",
                            "required": [
                              "bucketName",
                              "prefix",
                              "namespace",
                              "credentials"
                            ],
                            "properties": {
                              "bucketName": {
                                "description": "Name of the OCI bucket where backup is stored",
                                "type": "string"
                              },
                              "credentials": {
                                "description": "Name of a Secret with data for accessing the bucket",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "OCI Namespace of Object Store",
                                "type": "string"
                              },
                              "prefix": {
                                "description": "Path in bucket where backup is stored",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "s3": {
                            "description": "S3 style storage",
                            "type": "object",
                            "required": [
                              "region",
                              "bucket",
                              "objectKeyPrefix",
                              "credentials"
                            ],
                            "properties": {
                              "bucket": {
                                "description": "S3 Bucket Name",
                                "type": "string"
                              },
                              "credentials": {
                                "description": "Name of a Secret holding iaccessKeyId and secretAccessKey properties",
                                "type": "string"
                              },
                              "host": {
                                "description": "Override hostname for S3-compatible backends",
                                "type": "string"
                              },
                              "objectKeyPrefix": {
                                "description": "S3 Object Key Prefix, this will be extended with the name of the actual backup",
                                "type": "string"
                              },
                              "region": {
                                "description": "S3 Region",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "podAnnotations": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "podLabels": {
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-preserve-unknown-fields": true
              },
              "backupProfileName": {
                "description": "Name of the backupProfile to be used",
                "type": "string"
              },
              "deleteBackupData": {
                "description": "Whether to delete the backup data in case the MySQLBackup object created by the job is deleted",
                "type": "boolean",
                "default": false
              },
              "enabled": {
                "description": "Whether the schedule is enabled or not",
                "type": "boolean",
                "default": true
              },
              "name": {
                "description": "Name of the backup schedule",
                "type": "string"
              },
              "schedule": {
                "description": "The schedule of the job, syntax as a cron expression",
                "type": "string"
              },
              "timeZone": {
                "description": "Timezone for the backup schedule, example: 'America/New_York'",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "baseServerId": {
          "description": "Base value for MySQL server_id for instances in the cluster",
          "type": "integer",
          "default": 1000,
          "maximum": 4294967195,
          "minimum": 0
        },
        "datadirPermissions": {
          "type": "object",
          "properties": {
            "fsGroupChangePolicy": {
              "description": "Optional fsGroupChangePolicy value to be set in the pod security context. Some possible values are OnRootMismatch and Always. For more information check the official Kubernetes documentation",
              "type": "string",
              "default": ""
            },
            "setRightsUsingInitContainer": {
              "description": "Whether to use an init container to set at start the DataDir permissions ",
              "type": "boolean",
              "default": true
            }
          },
          "additionalProperties": false
        },
        "datadirVolumeClaimTemplate": {
          "description": "Template for a PersistentVolumeClaim, to be used as datadir",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "edition": {
          "description": "MySQL Server Edition (community or enterprise)",
          "type": "string",
          "pattern": "^(community|enterprise)$"
        },
        "imagePullPolicy": {
          "description": "Defaults to Always, but set to IfNotPresent in deploy-operator.yaml when deploying Operator",
          "type": "string"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "imageRepository": {
          "description": "Repository where images are pulled from; defaults to container-registry.oracle.com/mysql",
          "type": "string"
        },
        "initDB": {
          "type": "object",
          "properties": {
            "clone": {
              "type": "object",
              "required": [
                "donorUrl",
                "secretKeyRef"
              ],
              "properties": {
                "donorUrl": {
                  "description": "URL of the cluster to clone from",
                  "type": "string"
                },
                "rootUser": {
                  "description": "User name used for cloning",
                  "type": "string",
                  "default": "root"
                },
                "secretKeyRef": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Secret name with key 'rootPassword' storing the password for the user specified in rootUser",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "dump": {
              "type": "object",
              "required": [
                "storage"
              ],
              "properties": {
                "name": {
                  "description": "Name of the dump. Not used by the operator, but a descriptive hint for the cluster administrator",
                  "type": "string"
                },
                "options": {
                  "description": "A dictionary of key-value pairs passed directly to MySQL Shell's loadDump()",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "path": {
                  "description": "Path to the dump in the PVC. Use when specifying persistentVolumeClaim. Omit for ociObjectStorage, S3, or azure.",
                  "type": "string"
                },
                "storage": {
                  "type": "object",
                  "properties": {
                    "azure": {
                      "type": "object",
                      "required": [
                        "containerName",
                        "prefix",
                        "config"
                      ],
                      "properties": {
                        "config": {
                          "description": "Name of a Secret with Azure BLOB Storage configuration and credentials",
                          "type": "string"
                        },
                        "containerName": {
                          "description": "Name of the Azure  BLOB Storage container where the dump is stored",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "Path in the container where the dump files are stored",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "ociObjectStorage": {
                      "type": "object",
                      "required": [
                        "bucketName",
                        "prefix",
                        "credentials"
                      ],
                      "properties": {
                        "bucketName": {
                          "description": "Name of the OCI bucket where the dump is stored",
                          "type": "string"
                        },
                        "credentials": {
                          "description": "Name of a Secret with data for accessing the bucket",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "Path in the bucket where the dump files are stored",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "persistentVolumeClaim": {
                      "description": "Specification of the PVC to be used. Used 'as is' in the cloning pod.",
                      "type": "object",
                      "x-kubernetes-preserve-unknown-fields": true
                    },
                    "s3": {
                      "type": "object",
                      "required": [
                        "bucketName",
                        "prefix",
                        "config"
                      ],
                      "properties": {
                        "bucketName": {
                          "description": "Name of the S3 bucket where the dump is stored",
                          "type": "string"
                        },
                        "config": {
                          "description": "Name of a Secret with S3 configuration and credentials",
                          "type": "string"
                        },
                        "endpoint": {
                          "description": "Override endpoint URL",
                          "type": "string"
                        },
                        "prefix": {
                          "description": "Path in the bucket where the dump files are stored",
                          "type": "string"
                        },
                        "profile": {
                          "description": "Profile being used in configuration files",
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "meb": {
              "type": "object",
              "required": [
                "storage",
                "fullBackup"
              ],
              "properties": {
                "extraOptions": {
                  "description": "Additonal Command Line Options being passed to MySQL Enterprise Backup",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "fullBackup": {
                  "description": "Name of the full backup to restore",
                  "type": "string"
                },
                "incrementalBackups": {
                  "description": "Incremental backups to apply on top of the fullBackup",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pitr": {
                  "description": "Point-in-time recovery using a backup file on top of fullBackup and optional incrementalBackups",
                  "type": "object",
                  "required": [
                    "backupFile"
                  ],
                  "properties": {
                    "backupFile": {
                      "description": "Backup containing binary log to apply",
                      "type": "string"
                    },
                    "binlogName": {
                      "description": "Basename of binlogs to use for PITR. Often this is the server_name of the backup source",
                      "type": "string"
                    },
                    "end": {
                      "description": "End condition for not applying the full log",
                      "type": "object",
                      "properties": {
                        "afterGtids": {
                          "description": "GTID set describing last transactions to apply, see SQL_AFTER_GTIDS in CHANGE REPLICATION SOURCE statement documentation",
                          "type": "string"
                        },
                        "beforeGtids": {
                          "description": "GTID set describing last transactions to apply, see SQL_BEFORE_GTID in CHANGE REPLICATION SOURCE statement documentation",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "storage": {
                  "type": "object",
                  "properties": {
                    "ociObjectStorage": {
                      "description": "Restore from OCI ObjectStorage using an PAR",
                      "type": "object",
                      "required": [
                        "credentials"
                      ],
                      "properties": {
                        "credentials": {
                          "description": "Secret Containing PAR Base URL under key parBaseUrl",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "s3": {
                      "description": "S3 style storage",
                      "type": "object",
                      "required": [
                        "region",
                        "bucket",
                        "objectKeyPrefix",
                        "credentials"
                      ],
                      "properties": {
                        "bucket": {
                          "description": "S3 Bucket Name",
                          "type": "string"
                        },
                        "credentials": {
                          "description": "Name of a Secret holding iaccessKeyId and secretAccessKey properties",
                          "type": "string"
                        },
                        "host": {
                          "description": "Override hostname for S3-compatible backends",
                          "type": "string"
                        },
                        "objectKeyPrefix": {
                          "description": "S3 Object Key Prefix, this will be extended with the name of the actual backup",
                          "type": "string"
                        },
                        "region": {
                          "description": "S3 Region",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "x-kubernetes-preserve-unknown-fields": true
        },
        "instanceService": {
          "description": "Configuration of the Service used by the InnoDB Cluster GR members internally",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Custom annotations for the Service",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "labels": {
              "description": "Custom labels for the Service",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalProperties": false
        },
        "instances": {
          "description": "Number of MySQL replica instances for the cluster",
          "type": "integer",
          "default": 1,
          "maximum": 9,
          "minimum": 1
        },
        "keyring": {
          "description": "Keyring specification",
          "type": "object",
          "properties": {
            "encryptedFile": {
              "description": "Keyring 'Encrypted File' specification",
              "type": "object",
              "required": [
                "storage",
                "password"
              ],
              "properties": {
                "fileName": {
                  "description": "Path to the keyring file name inside the storage volume (will be prefixed by mount path)",
                  "type": "string",
                  "default": "mysql_keyring"
                },
                "password": {
                  "description": "Name of a secret that contains password for the keyring in the key 'keyring_password'",
                  "type": "string"
                },
                "readOnly": {
                  "description": "Whether to open the keyring file in read-only mode",
                  "type": "boolean",
                  "default": false
                },
                "storage": {
                  "description": "Specification of the volume to be mounted where the keyring file resides",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "file": {
              "description": "Keyring 'File' specification",
              "type": "object",
              "required": [
                "storage"
              ],
              "properties": {
                "fileName": {
                  "description": "Path to the keyring file name inside the storage volume (will be prefixed by mount path)",
                  "type": "string",
                  "default": "mysql_keyring"
                },
                "readOnly": {
                  "description": "Whether to open the keyring file in read-only mode",
                  "type": "boolean",
                  "default": false
                },
                "storage": {
                  "description": "Specification of the volume to be mounted where the keyring file resides",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "oci": {
              "description": "Keyring 'OCI' specification",
              "type": "object",
              "required": [
                "user",
                "keySecret",
                "keyFingerprint",
                "tenancy"
              ],
              "properties": {
                "caCertificate": {
                  "description": "Secret that contains ca.crt field with CA certificate bundle file that the keyring_oci plugin uses for Oracle Cloud Infrastructure certificate verification",
                  "type": "string"
                },
                "compartment": {
                  "description": "Compartment identifier in the form ocid1.compartment.oc1...",
                  "type": "string",
                  "pattern": "^ocid1\\.compartment\\."
                },
                "endpoints": {
                  "type": "object",
                  "properties": {
                    "encryption": {
                      "description": "Encryption endpoint URI like {identifier}-crypto.kms.{region}.oraclecloud.com",
                      "type": "string"
                    },
                    "management": {
                      "description": "Management endpoint URI like {identifier}-management.kms.{region}.oraclecloud.com",
                      "type": "string"
                    },
                    "secrets": {
                      "description": "Secrets endpoint URI like secrets.vaults.{region}.oci.oraclecloud.com",
                      "type": "string"
                    },
                    "vaults": {
                      "description": "Vaults endpoint URI like vaults.{region}.oci.oraclecloud.com",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "keyFingerprint": {
                  "description": "Private key fingerprint",
                  "type": "string",
                  "pattern": "([0-9a-f]{2}:){15}[0-9a-f]{2}$"
                },
                "keySecret": {
                  "description": "A secret that contains the private key under the field 'privatekey'",
                  "type": "string"
                },
                "masterKey": {
                  "description": "Master key identified in the form ocid1.key.oc1...",
                  "type": "string",
                  "pattern": "^ocid1\\.key\\."
                },
                "tenancy": {
                  "description": "Tenancy identifier in the form ocid1.tenancy.oc1...",
                  "type": "string",
                  "pattern": "^ocid1\\.tenancy\\."
                },
                "user": {
                  "description": "User identifier in the form of ocid1.user.oc1...",
                  "type": "string",
                  "pattern": "^ocid1\\.user\\."
                },
                "virtualVault": {
                  "description": "Vault identifier in the form ocid1.vault.oc1...",
                  "type": "string",
                  "pattern": "^ocid1\\.vault\\."
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "logs": {
          "type": "object",
          "properties": {
            "collector": {
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "image",
                    "fluentd"
                  ]
                }
              ],
              "properties": {
                "containerName": {
                  "description": "Name of the collector container sidecar",
                  "type": "string",
                  "default": "logcollector"
                },
                "env": {
                  "type": "array",
                  "items": {
                    "description": "Environment variables to be passed to the image. Definition will be directly copied like podSpec fields are",
                    "type": "object",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                },
                "fluentd": {
                  "description": "Properties of the fluentd log collector",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "sinks"
                      ]
                    }
                  ],
                  "properties": {
                    "additionalFilterConfiguration": {
                      "description": "Raw configuration of additional Fluentd filters to be added to the configuration file",
                      "type": "string"
                    },
                    "errorLog": {
                      "type": "object",
                      "properties": {
                        "options": {
                          "description": "fluentd specific options for the error log",
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "tag": {
                          "description": "Tag for the error log records",
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false
                    },
                    "generalLog": {
                      "type": "object",
                      "properties": {
                        "options": {
                          "description": "fluentd specific options for the general log",
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "tag": {
                          "description": "Tag for the general log records",
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false
                    },
                    "recordAugmentation": {
                      "type": "object",
                      "properties": {
                        "annotations": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "fieldName",
                              "annotationName"
                            ],
                            "properties": {
                              "annotationName": {
                                "description": "Name of the pod label that holds the value to be stored under fieldName in the log record",
                                "type": "string"
                              },
                              "fieldName": {
                                "description": "Name of the field added to the log record with value from annotationName",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "enabled": {
                          "description": "Whether to enable record augmentation with additional data",
                          "type": "boolean",
                          "default": false
                        },
                        "labels": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "fieldName",
                              "labelName"
                            ],
                            "properties": {
                              "fieldName": {
                                "description": "Name of the field added to the log record with value from labelName",
                                "type": "string"
                              },
                              "labelName": {
                                "description": "Name of the pod label that holds the value to be stored under fieldName in the log record",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "podFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "fieldName",
                              "fieldPath"
                            ],
                            "properties": {
                              "fieldName": {
                                "description": "Name of the field added to the log record with value taken from a field with path stored in fieldPath",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "Value for the field fieldName. The path should be of the same syntax as the one used for mounting environment variables from field reference - valueFrom.fieldRef.fieldPath . The field will be mounted in the pod as a environment variable, prefixed with a prefix and used then added to the log record. Examples for fieldRef are : spec.nodeName, metadata.namespace, status.podIP, etc.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "resourceFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "fieldName",
                              "containerName",
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "fieldName": {
                                "description": "Name of the field added to the log record with value taken from a field with path stored in fieldPath",
                                "type": "string"
                              },
                              "resource": {
                                "description": "See https://kubernetes.io/docs/tasks/inject-data-application/environment-variable-expose-pod-information/#use-container-fields-as-values-for-environment-variables",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "staticFields": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "fieldName",
                              "fieldValue"
                            ],
                            "properties": {
                              "fieldName": {
                                "description": "Name of the field added to the log record with value from fieldValue",
                                "type": "string"
                              },
                              "fieldValue": {
                                "description": "Value for the static field with name taken from fieldName",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "sinks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "rawConfig"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the sink. Used only for documentation purposes",
                            "type": "string"
                          },
                          "rawConfig": {
                            "description": "Raw configuration of the sink",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "slowQueryLog": {
                      "type": "object",
                      "properties": {
                        "options": {
                          "description": "fluentd specific options for the slow log",
                          "type": "object",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "tag": {
                          "description": "Tag for the slow log records",
                          "type": "string",
                          "default": ""
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "image": {
                  "description": "Name of an image, including registry and repository, to be used for the log collector sidecar. If provided it needs to be an image for the configured collector type.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "error": {
              "type": "object",
              "properties": {
                "collect": {
                  "description": "Whether error logging data should be collected. Implies that the logging should be enabled. If enabled the error log will be switched to JSON format output",
                  "type": "boolean",
                  "default": false
                },
                "verbosity": {
                  "description": "Log error verbosity. For details, see the MySQL Server --log-error-verbosity documentation.",
                  "type": "integer",
                  "default": 3,
                  "maximum": 3,
                  "minimum": 1
                }
              },
              "additionalProperties": false
            },
            "general": {
              "type": "object",
              "properties": {
                "collect": {
                  "description": "Whether general logging data should be collected. Implies that the logging should be enabled.",
                  "type": "boolean",
                  "default": false
                },
                "enabled": {
                  "description": "Whether general logging should be enabled",
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": false
            },
            "slowQuery": {
              "type": "object",
              "properties": {
                "collect": {
                  "description": "Whether slow query logging data should be collected. Implies that the logging should be enabled.",
                  "type": "boolean",
                  "default": false
                },
                "enabled": {
                  "description": "Whether slow query logging should be enabled",
                  "type": "boolean",
                  "default": false
                },
                "longQueryTime": {
                  "description": "Long query time threshold",
                  "type": "number",
                  "default": 10,
                  "minimum": 0
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "metrics": {
          "description": "Configuration of a Prometheus-style metrics provider",
          "type": "object",
          "required": [
            "enable",
            "image"
          ],
          "properties": {
            "enable": {
              "description": "Toggle to enable or disable the metrics sidecar",
              "type": "boolean",
              "default": false
            },
            "image": {
              "description": "Name of an image to be used for the metrics sidecar, if provided metrics will be enabled",
              "type": "string"
            },
            "monitor": {
              "description": "Create a ServiceMonitor for Prometheus Operator",
              "type": "boolean",
              "default": false
            },
            "monitorSpec": {
              "description": "Custom configuration for the ServiceMonitor object",
              "type": "object",
              "default": {},
              "x-kubernetes-preserve-unknown-fields": true
            },
            "options": {
              "description": "Options passed to the metrics provider as command line arguments",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "tlsSecret": {
              "description": "Name of a Secret with TLS certificate, key and CA, which will be mounted at /tls into the container an can be used from webConfig",
              "type": "string"
            },
            "webConfig": {
              "description": "Name of a ConfigMap with a web.config file, if this option is provided a command line option --web.config.file is added",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "mycnf": {
          "description": "Custom configuration additions for my.cnf",
          "type": "string"
        },
        "podAnnotations": {
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "podLabels": {
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "podSpec": {
          "description": "Customization specification to be merged into the InnoDBCluster StatefulSet pod template. IMPORTANT: podSpec is regarded only during StatefulSet buildup and the operator neither checks the values in podSpec nor later watches for changes of this field. Thus if changes are made to this field the InnoDBCluster StatefulSet will not be updated",
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "readReplicas": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "baseServerId"
            ],
            "properties": {
              "baseServerId": {
                "description": "Base value for MySQL server_id for instances of the readReplica, if 0 it will be assigned automatically",
                "type": "integer",
                "default": 0,
                "maximum": 4294967195,
                "minimum": 0
              },
              "datadirVolumeClaimTemplate": {
                "description": "Template for a PersistentVolumeClaim, to be used as datadir",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "instances": {
                "description": "Number of MySQL instances for the set of read replica",
                "type": "integer",
                "default": 1,
                "maximum": 999,
                "minimum": 1
              },
              "mycnf": {
                "description": "Custom configuration additions for my.cnf",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "podAnnotations": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "podLabels": {
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "podSpec": {
                "description": "Customization specification to be merged into the InnoDBCluster StatefulSet pod template. IMPORTANT: podSpec is regarded only during StatefulSet buildup and the operator neither checks the values in podSpec nor later watches for changes of this field. Thus if changes are made to this field the InnoDBCluster StatefulSet will not be updated",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              },
              "version": {
                "description": "MySQL Server version",
                "type": "string",
                "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
              }
            },
            "additionalProperties": false
          }
        },
        "router": {
          "description": "MySQL Router specification",
          "type": "object",
          "properties": {
            "bootstrapOptions": {
              "description": "Command line options passed to MySQL Router while bootstrapping",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "instances": {
              "description": "Number of MySQL Router instances to deploy",
              "type": "integer",
              "default": 1,
              "minimum": 0
            },
            "options": {
              "description": "Command line options passed to MySQL Router while running",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "podAnnotations": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "podLabels": {
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "podSpec": {
              "description": "Customization specification to be merged into the Router Deployment pod template. IMPORTANT: podSpec is regarded only during Deployment buildup and the operator neither checks the values in podSpec nor later watches for changes of this field. Thus if changes are made to this field the Router Deployment will not be updated",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "routingOptions": {
              "description": "Set routing options for the cluster",
              "type": "object",
              "properties": {
                "invalidated_cluster_policy": {
                  "type": "string",
                  "enum": [
                    "drop_all",
                    "accept_ro"
                  ]
                },
                "read_only_targets": {
                  "type": "string",
                  "enum": [
                    "all",
                    "read_replicas",
                    "secondaries"
                  ]
                },
                "stats_updates_frequency": {
                  "type": "integer",
                  "default": 0,
                  "minimum": 0
                }
              },
              "additionalProperties": false
            },
            "tlsSecretName": {
              "description": "Name of a TLS type Secret containing MySQL Router certificate and private key used for SSL",
              "type": "string"
            },
            "version": {
              "description": "Override MySQL Router version",
              "type": "string",
              "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
            }
          },
          "additionalProperties": false
        },
        "secretName": {
          "description": "Name of a generic type Secret containing root/default account password",
          "type": "string"
        },
        "service": {
          "description": "Configuration of the Service used by applications connecting to the InnoDB Cluster",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Custom annotations for the Service",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "defaultPort": {
              "description": "Target for the Service's default (3306) port. If mysql-rw traffic will go to the primary and allow read and write operations, with mysql-ro traffic goes to the replica and allows only read operations, with mysql-rw-split the router's read-write-splitting will be targeted",
              "type": "string",
              "default": "mysql-rw",
              "enum": [
                "mysql-rw",
                "mysql-ro",
                "mysql-rw-split"
              ]
            },
            "labels": {
              "description": "Custom labels for the Service",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "type": {
              "type": "string",
              "default": "ClusterIP",
              "enum": [
                "ClusterIP",
                "NodePort",
                "LoadBalancer"
              ]
            }
          },
          "additionalProperties": false
        },
        "serviceAccountName": {
          "type": "string"
        },
        "serviceFqdnTemplate": {
          "description": "Template for a FQDN resolving to the cluster's headless instance Service and individual Pods",
          "type": "string"
        },
        "tlsCASecretName": {
          "description": "Name of a generic type Secret containing CA (ca.pem) and optional CRL (crl.pem) for SSL",
          "type": "string"
        },
        "tlsSecretName": {
          "description": "Name of a TLS type Secret containing Server certificate and private key for SSL",
          "type": "string"
        },
        "tlsUseSelfSigned": {
          "description": "Enables use of self-signed TLS certificates, reducing or disabling TLS based security verifications",
          "type": "boolean",
          "default": false
        },
        "version": {
          "description": "MySQL Server version",
          "type": "string",
          "pattern": "^\\d+\\.\\d+\\.\\d+(-.+)?"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "x-kubernetes-preserve-unknown-fields": true
    }
  }
}
