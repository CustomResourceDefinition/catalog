{
  "description": "KeycloakRealmUser is the Schema for the keycloak user API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KeycloakRealmUserSpec defines the desired state of KeycloakRealmUser.",
      "type": "object",
      "required": [
        "realmRef",
        "username"
      ],
      "properties": {
        "attributes": {
          "description": "Attributes is a map of user attributes.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "nullable": true
        },
        "clientRoles": {
          "description": "ClientRoles is a list of client roles assigned to user.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "clientId"
            ],
            "properties": {
              "clientId": {
                "description": "ClientID is a client ID.",
                "type": "string"
              },
              "roles": {
                "description": "Roles is a list of client roles names assigned to user.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              }
            },
            "additionalProperties": false
          },
          "nullable": true
        },
        "email": {
          "description": "Email is a user email.",
          "type": "string"
        },
        "emailVerified": {
          "description": "EmailVerified is a user email verified flag.",
          "type": "boolean"
        },
        "enabled": {
          "description": "Enabled is a user enabled flag.",
          "type": "boolean"
        },
        "firstName": {
          "description": "FirstName is a user first name.",
          "type": "string"
        },
        "groups": {
          "description": "Groups is a list of groups assigned to user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "identityProviders": {
          "description": "IdentityProviders is a list of identity providers aliases linked to the user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "keepResource": {
          "description": "KeepResource, when set to false, results in the deletion of the KeycloakRealmUser Custom Resource (CR)\nfrom the cluster after the corresponding user is created in Keycloak. The user will continue to exist in Keycloak.\nWhen set to true, the CR will not be deleted after processing.",
          "type": "boolean",
          "default": true
        },
        "lastName": {
          "description": "LastName is a user last name.",
          "type": "string"
        },
        "password": {
          "description": "Password is a user password. Allows to keep user password within Custom Resource. For security concerns, it is recommended to use PasswordSecret instead.\nDeperecated: use PasswordSecret instead.",
          "type": "string"
        },
        "passwordSecret": {
          "description": "PasswordSecret defines Kubernetes secret Name and Key, which holds User secret.",
          "type": "object",
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "description": "Key is the key in the secret.",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "realmRef": {
          "description": "RealmRef is reference to Realm custom resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind specifies the kind of the Keycloak resource.",
              "type": "string",
              "default": "KeycloakRealm",
              "enum": [
                "KeycloakRealm",
                "ClusterKeycloakRealm"
              ]
            },
            "name": {
              "description": "Name specifies the name of the Keycloak resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "reconciliationStrategy": {
          "description": "ReconciliationStrategy is a strategy for reconciliation. Possible values: full, create-only.\nDefault value: full. If set to create-only, user will be created only if it does not exist. If user exists, it will not be updated.\nIf set to full, user will be created if it does not exist, or updated if it exists.",
          "type": "string"
        },
        "requiredUserActions": {
          "description": "RequiredUserActions is required action when user log in, example: CONFIGURE_TOTP, UPDATE_PASSWORD, UPDATE_PROFILE, VERIFY_EMAIL.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "roles": {
          "description": "Roles is a list of roles assigned to user.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "username": {
          "description": "Username is a username in keycloak.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "KeycloakRealmUserStatus defines the observed state of KeycloakRealmUser.",
      "type": "object",
      "properties": {
        "failureCount": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
