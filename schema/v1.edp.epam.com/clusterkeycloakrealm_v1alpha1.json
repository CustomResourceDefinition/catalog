{
  "description": "ClusterKeycloakRealm is the Schema for the clusterkeycloakrealms API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClusterKeycloakRealmSpec defines the desired state of ClusterKeycloakRealm.",
      "type": "object",
      "required": [
        "clusterKeycloakRef",
        "realmName"
      ],
      "properties": {
        "authenticationFlows": {
          "description": "AuthenticationFlow is the configuration for authentication flows in the realm.",
          "type": "object",
          "properties": {
            "browserFlow": {
              "description": "BrowserFlow specifies the authentication flow to use for the realm's browser clients.",
              "type": "string",
              "example": "browser"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "browserSecurityHeaders": {
          "description": "BrowserSecurityHeaders is a map of security headers to apply to HTTP responses from the realm's browser clients.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "nullable": true
        },
        "clusterKeycloakRef": {
          "description": "ClusterKeycloakRef is a name of the ClusterKeycloak instance that owns the realm.",
          "type": "string"
        },
        "displayHtmlName": {
          "description": "DisplayHTMLName name to render in the UI.",
          "type": "string"
        },
        "displayName": {
          "description": "DisplayName is the display name of the realm.",
          "type": "string"
        },
        "frontendUrl": {
          "description": "FrontendURL Set the frontend URL for the realm.\nUse in combination with the default hostname provider to override the base URL for frontend requests for a specific realm.",
          "type": "string"
        },
        "localization": {
          "description": "Localization is the configuration for localization in the realm.",
          "type": "object",
          "properties": {
            "internationalizationEnabled": {
              "description": "InternationalizationEnabled indicates whether to enable internationalization.",
              "type": "boolean",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "organizationsEnabled": {
          "description": "OrganizationsEnabled enables Keycloak Organizations feature for this realm.\nWhen enabled, this realm can support Organization resources for multi-tenant scenarios,\nidentity provider groupings, and domain-based user routing.",
          "type": "boolean",
          "default": false
        },
        "passwordPolicy": {
          "description": "PasswordPolicies is a list of password policies to apply to the realm.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "type",
              "value"
            ],
            "properties": {
              "type": {
                "description": "Type of password policy.",
                "type": "string"
              },
              "value": {
                "description": "Value of password policy.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "nullable": true
        },
        "realmEventConfig": {
          "description": "RealmEventConfig is the configuration for events in the realm.",
          "type": "object",
          "properties": {
            "adminEventsDetailsEnabled": {
              "description": "AdminEventsDetailsEnabled indicates whether to enable detailed admin events.",
              "type": "boolean"
            },
            "adminEventsEnabled": {
              "description": "AdminEventsEnabled indicates whether to enable admin events.",
              "type": "boolean"
            },
            "adminEventsExpiration": {
              "description": "AdminEventsExpiration sets the expiration for events in seconds.\nExpired events are periodically deleted from the database.",
              "type": "integer"
            },
            "enabledEventTypes": {
              "description": "EnabledEventTypes is a list of event types to enable.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "eventsEnabled": {
              "description": "EventsEnabled indicates whether to enable events.",
              "type": "boolean"
            },
            "eventsExpiration": {
              "description": "EventsExpiration is the number of seconds after which events expire.",
              "type": "integer"
            },
            "eventsListeners": {
              "description": "EventsListeners is a list of event listeners to enable.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "realmName": {
          "description": "RealmName specifies the name of the realm.",
          "type": "string"
        },
        "smtp": {
          "description": "Smtp is the configuration for email in the realm.",
          "type": "object",
          "required": [
            "connection",
            "template"
          ],
          "properties": {
            "connection": {
              "description": "Connection specifies the email connection configuration.",
              "type": "object",
              "required": [
                "host"
              ],
              "properties": {
                "authentication": {
                  "description": "Authentication specifies the email authentication configuration.",
                  "type": "object",
                  "required": [
                    "password",
                    "username"
                  ],
                  "properties": {
                    "password": {
                      "description": "Password specifies login password.",
                      "type": "object",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Selects a key of a ConfigMap.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "secretKeyRef": {
                          "description": "Selects a key of a secret.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    },
                    "username": {
                      "description": "Username specifies login username.",
                      "type": "object",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Selects a key of a ConfigMap.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "secretKeyRef": {
                          "description": "Selects a key of a secret.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "value": {
                          "description": "Directly specifies a value.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "enableSSL": {
                  "description": "EnableSSL specifies if SSL is enabled.",
                  "type": "boolean"
                },
                "enableStartTLS": {
                  "description": "EnableStartTLS specifies if StartTLS is enabled.",
                  "type": "boolean"
                },
                "host": {
                  "description": "Host specifies the email server host.",
                  "type": "string"
                },
                "port": {
                  "description": "Port specifies the email server port.",
                  "type": "integer",
                  "default": 25
                }
              },
              "additionalProperties": false
            },
            "template": {
              "description": "Template specifies the email template configuration.",
              "type": "object",
              "required": [
                "from"
              ],
              "properties": {
                "envelopeFrom": {
                  "description": "EnvelopeFrom is an email address used for bounces .",
                  "type": "string"
                },
                "from": {
                  "description": "From specifies the sender email address.",
                  "type": "string"
                },
                "fromDisplayName": {
                  "description": "FromDisplayName specifies the sender display for sender email address.",
                  "type": "string"
                },
                "replyTo": {
                  "description": "ReplyTo specifies the reply-to email address.",
                  "type": "string"
                },
                "replyToDisplayName": {
                  "description": "ReplyToDisplayName specifies display name for reply-to email address.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "themes": {
          "description": "Themes is a map of themes to apply to the realm.",
          "type": "object",
          "properties": {
            "accountTheme": {
              "description": "AccountTheme specifies the account theme to use for the realm.",
              "type": "string",
              "nullable": true
            },
            "adminConsoleTheme": {
              "description": "AdminConsoleTheme specifies the admin console theme to use for the realm.",
              "type": "string",
              "nullable": true
            },
            "emailTheme": {
              "description": "EmailTheme specifies the email theme to use for the realm.",
              "type": "string",
              "nullable": true
            },
            "loginTheme": {
              "description": "LoginTheme specifies the login theme to use for the realm.",
              "type": "string",
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "tokenSettings": {
          "description": "TokenSettings is the configuration for tokens in the realm.",
          "type": "object",
          "properties": {
            "accessCodeLifespan": {
              "description": "AccessCodeLifespan specifies max time(in seconds)a client has to finish the access token protocol.\nThis should normally be 1 minute.",
              "type": "integer",
              "default": 60
            },
            "accessToken": {
              "description": "AccessTokenLifespanForImplicitFlow specifies max time(in seconds) before an access token is expired for implicit flow.",
              "type": "integer",
              "default": 900
            },
            "accessTokenLifespan": {
              "description": "AccessTokenLifespan specifies max time(in seconds) before an access token is expired.\nThis value is recommended to be short relative to the SSO timeout.",
              "type": "integer",
              "default": 300
            },
            "actionTokenGeneratedByAdminLifespan": {
              "description": "ActionTokenGeneratedByAdminLifespan specifies max time(in seconds) before an action permit sent to a user by administrator is expired.\nThis value is recommended to be long to allow administrators to send e-mails for users that are currently offline.\nThe default timeout can be overridden immediately before issuing the token.",
              "type": "integer",
              "default": 43200
            },
            "actionTokenGeneratedByUserLifespan": {
              "description": "AccessCodeLifespanUserAction specifies max time(in seconds) before an action permit sent by a user (such as a forgot password e-mail) is expired.\nThis value is recommended to be short because it's expected that the user would react to self-created action quickly.",
              "type": "integer",
              "default": 300
            },
            "defaultSignatureAlgorithm": {
              "description": "DefaultSignatureAlgorithm specifies the default algorithm used to sign tokens for the realm",
              "type": "string",
              "default": "RS256",
              "enum": [
                "ES256",
                "ES384",
                "ES512",
                "EdDSA",
                "HS256",
                "HS384",
                "HS512",
                "PS256",
                "PS384",
                "PS512",
                "RS256",
                "RS384",
                "RS512"
              ],
              "example": "RS256"
            },
            "refreshTokenMaxReuse": {
              "description": "RefreshTokenMaxReuse specifies maximum number of times a refresh token can be reused.\nWhen a different token is used, revocation is immediate.",
              "type": "integer",
              "default": 0
            },
            "revokeRefreshToken": {
              "description": "RevokeRefreshToken if enabled a refresh token can only be used up to 'refreshTokenMaxReuse' and\nis revoked when a different token is used.\nOtherwise, refresh tokens are not revoked when used and can be used multiple times.",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "userProfileConfig": {
          "description": "UserProfileConfig is the configuration for user profiles in the realm.",
          "type": "object",
          "properties": {
            "attributes": {
              "description": "Attributes specifies the list of user profile attributes.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "annotations": {
                    "description": "Annotations specifies the annotations for the attribute.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "displayName": {
                    "description": "Display name for the attribute.",
                    "type": "string"
                  },
                  "group": {
                    "description": "Group to which the attribute belongs.",
                    "type": "string"
                  },
                  "multivalued": {
                    "description": "Multivalued specifies if this attribute supports multiple values.\nThis setting is an indicator and does not enable any validation",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name of the user attribute, used to uniquely identify an attribute.",
                    "type": "string"
                  },
                  "permissions": {
                    "description": "Permissions specifies the permissions for the attribute.",
                    "type": "object",
                    "properties": {
                      "edit": {
                        "description": "Edit specifies who can edit the attribute.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "view": {
                        "description": "View specifies who can view the attribute.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "required": {
                    "description": "Required indicates that the attribute must be set by users and administrators.",
                    "type": "object",
                    "properties": {
                      "roles": {
                        "description": "Roles specifies the roles for whom the attribute is required.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "scopes": {
                        "description": "Scopes specifies the scopes when the attribute is required.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "selector": {
                    "description": "Selector specifies the scopes for which the attribute is available.",
                    "type": "object",
                    "properties": {
                      "scopes": {
                        "description": "Scopes specifies the scopes for which the attribute is available.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "validations": {
                    "description": "Validations specifies the validations for the attribute.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "intVal": {
                            "type": "integer"
                          },
                          "mapVal": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            },
                            "nullable": true
                          },
                          "sliceVal": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "nullable": true
                          },
                          "stringVal": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "groups": {
              "description": "Groups specifies the list of user profile groups.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "annotations": {
                    "description": "Annotations specifies the annotations for the group.\nnullable",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "displayDescription": {
                    "description": "DisplayDescription specifies a user-friendly name for the group that should be used when rendering a group of attributes in user-facing forms.",
                    "type": "string"
                  },
                  "displayHeader": {
                    "description": "DisplayHeader specifies a text that should be used as a header when rendering user-facing forms.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is unique name of the group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "unmanagedAttributePolicy": {
              "description": "UnmanagedAttributePolicy are user attributes not explicitly defined in the user profile configuration.\nEmpty value means that unmanaged attributes are disabled.\nPossible values:\nENABLED - unmanaged attributes are allowed.\nADMIN_VIEW - unmanaged attributes are read-only and only available through the administration console and API.\nADMIN_EDIT - unmanaged attributes can be managed only through the administration console and API.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterKeycloakRealmStatus defines the observed state of ClusterKeycloakRealm.",
      "type": "object",
      "properties": {
        "available": {
          "type": "boolean"
        },
        "failureCount": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
