{
  "description": "Alert is the Schema for the alerts API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AlertSpec defines an alerting rule for events involving a list of objects",
      "type": "object",
      "required": [
        "eventSources",
        "providerRef"
      ],
      "properties": {
        "eventSeverity": {
          "description": "Filter events based on severity, defaults to ('info').\nIf set to 'info' no events will be filtered.",
          "type": "string",
          "default": "info",
          "enum": [
            "info",
            "error"
          ]
        },
        "eventSources": {
          "description": "Filter events based on the involved objects.",
          "type": "array",
          "items": {
            "description": "CrossNamespaceObjectReference contains enough information to let you locate the\ntyped referenced object at cluster level",
            "type": "object",
            "required": [
              "kind",
              "name"
            ],
            "properties": {
              "apiVersion": {
                "description": "API version of the referent",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the referent",
                "type": "string",
                "enum": [
                  "Bucket",
                  "GitRepository",
                  "Kustomization",
                  "HelmRelease",
                  "HelmChart",
                  "HelmRepository",
                  "ImageRepository",
                  "ImagePolicy",
                  "ImageUpdateAutomation",
                  "OCIRepository"
                ]
              },
              "matchLabels": {
                "description": "MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "name": {
                "description": "Name of the referent",
                "type": "string",
                "maxLength": 53,
                "minLength": 1
              },
              "namespace": {
                "description": "Namespace of the referent",
                "type": "string",
                "maxLength": 53,
                "minLength": 1
              }
            },
            "additionalProperties": false
          }
        },
        "exclusionList": {
          "description": "A list of Golang regular expressions to be used for excluding messages.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providerRef": {
          "description": "Send events using this provider.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referent.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "summary": {
          "description": "Short description of the impact and affected cluster.",
          "type": "string"
        },
        "suspend": {
          "description": "This flag tells the controller to suspend subsequent events dispatching.\nDefaults to false.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "AlertStatus defines the observed state of Alert",
      "type": "object",
      "default": {
        "observedGeneration": -1
      },
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the last observed generation.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
