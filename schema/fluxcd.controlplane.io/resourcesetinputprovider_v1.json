{
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "certSecretRef": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "defaultValues": {
          "type": "object",
          "additionalProperties": {
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "filter": {
          "type": "object",
          "properties": {
            "excludeBranch": {
              "type": "string"
            },
            "excludeTag": {
              "type": "string"
            },
            "includeBranch": {
              "type": "string"
            },
            "includeTag": {
              "type": "string"
            },
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "limit": {
              "type": "integer",
              "default": 100
            },
            "semver": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "schedule": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "cron"
            ],
            "properties": {
              "cron": {
                "type": "string"
              },
              "timeZone": {
                "type": "string",
                "default": "UTC"
              },
              "window": {
                "type": "string",
                "default": "0s",
                "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$"
              }
            },
            "additionalProperties": false
          }
        },
        "secretRef": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "serviceAccountName": {
          "type": "string"
        },
        "skip": {
          "type": "object",
          "properties": {
            "labels": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "type": {
          "type": "string",
          "enum": [
            "Static",
            "GitHubBranch",
            "GitHubTag",
            "GitHubPullRequest",
            "GitLabBranch",
            "GitLabTag",
            "GitLabMergeRequest",
            "AzureDevOpsBranch",
            "AzureDevOpsTag",
            "AzureDevOpsPullRequest",
            "OCIArtifactTag",
            "ACRArtifactTag",
            "ECRArtifactTag",
            "GARArtifactTag"
          ]
        },
        "url": {
          "type": "string",
          "pattern": "^((http|https|oci)://.*){0,1}$"
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "self.type != 'Static' || !has(self.url)",
          "message": "spec.url must be empty when spec.type is 'Static'"
        },
        {
          "rule": "self.type == 'Static' || has(self.url)",
          "message": "spec.url must not be empty when spec.type is not 'Static'"
        },
        {
          "rule": "!self.type.startsWith('Git') || self.url.startsWith('http')",
          "message": "spec.url must start with 'http://' or 'https://' when spec.type is a Git provider"
        },
        {
          "rule": "!self.type.startsWith('AzureDevOps') || self.url.startsWith('http')",
          "message": "spec.url must start with 'http://' or 'https://' when spec.type is a Git provider"
        },
        {
          "rule": "!self.type.endsWith('ArtifactTag') || self.url.startsWith('oci')",
          "message": "spec.url must start with 'oci://' when spec.type is an OCI provider"
        },
        {
          "rule": "!has(self.serviceAccountName) || self.type.startsWith('AzureDevOps') || self.type.endsWith('ArtifactTag')",
          "message": "cannot specify spec.serviceAccountName when spec.type is not one of AzureDevOps* or *ArtifactTag"
        },
        {
          "rule": "!has(self.certSecretRef) || !(self.url == 'Static' || self.type.startsWith('AzureDevOps') || (self.type.endsWith('ArtifactTag') \u0026\u0026 self.type != 'OCIArtifactTag'))",
          "message": "cannot specify spec.certSecretRef when spec.type is one of Static, AzureDevOps*, ACRArtifactTag, ECRArtifactTag or GARArtifactTag"
        },
        {
          "rule": "!has(self.secretRef) || !(self.url == 'Static' || (self.type.endsWith('ArtifactTag') \u0026\u0026 self.type != 'OCIArtifactTag'))",
          "message": "cannot specify spec.secretRef when spec.type is one of Static, ACRArtifactTag, ECRArtifactTag or GARArtifactTag"
        }
      ]
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "exportedInputs": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "x-kubernetes-preserve-unknown-fields": true
            }
          }
        },
        "lastExportedRevision": {
          "type": "string"
        },
        "lastHandledForceAt": {
          "type": "string"
        },
        "lastHandledReconcileAt": {
          "type": "string"
        },
        "nextSchedule": {
          "type": "object",
          "required": [
            "cron",
            "when"
          ],
          "properties": {
            "cron": {
              "type": "string"
            },
            "timeZone": {
              "type": "string",
              "default": "UTC"
            },
            "when": {
              "type": "string",
              "format": "date-time"
            },
            "window": {
              "type": "string",
              "default": "0s",
              "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
