{
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "distribution"
      ],
      "properties": {
        "cluster": {
          "type": "object",
          "properties": {
            "domain": {
              "type": "string",
              "default": "cluster.local"
            },
            "multitenant": {
              "type": "boolean",
              "default": false
            },
            "networkPolicy": {
              "type": "boolean",
              "default": true
            },
            "objectLevelWorkloadIdentity": {
              "type": "boolean"
            },
            "size": {
              "type": "string",
              "enum": [
                "small",
                "medium",
                "large"
              ]
            },
            "tenantDefaultServiceAccount": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "default": "kubernetes",
              "enum": [
                "kubernetes",
                "openshift",
                "aws",
                "azure",
                "gcp"
              ]
            }
          },
          "additionalProperties": false
        },
        "commonMetadata": {
          "type": "object",
          "properties": {
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "components": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "source-controller",
              "kustomize-controller",
              "helm-controller",
              "notification-controller",
              "image-reflector-controller",
              "image-automation-controller"
            ]
          }
        },
        "distribution": {
          "type": "object",
          "required": [
            "registry",
            "version"
          ],
          "properties": {
            "artifact": {
              "type": "string",
              "pattern": "^oci://.*$"
            },
            "artifactPullSecret": {
              "type": "string"
            },
            "imagePullSecret": {
              "type": "string"
            },
            "registry": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "kustomize": {
          "type": "object",
          "properties": {
            "patches": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "patch"
                ],
                "properties": {
                  "patch": {
                    "type": "string"
                  },
                  "target": {
                    "type": "object",
                    "properties": {
                      "annotationSelector": {
                        "type": "string"
                      },
                      "group": {
                        "type": "string"
                      },
                      "kind": {
                        "type": "string"
                      },
                      "labelSelector": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      },
                      "version": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "migrateResources": {
          "type": "boolean",
          "default": true
        },
        "sharding": {
          "type": "object",
          "required": [
            "shards"
          ],
          "properties": {
            "key": {
              "type": "string",
              "default": "sharding.fluxcd.io/key"
            },
            "shards": {
              "type": "array",
              "minItems": 1,
              "items": {
                "type": "string"
              }
            },
            "storage": {
              "type": "string",
              "enum": [
                "ephemeral",
                "persistent"
              ]
            }
          },
          "additionalProperties": false
        },
        "storage": {
          "type": "object",
          "required": [
            "class",
            "size"
          ],
          "properties": {
            "class": {
              "type": "string"
            },
            "size": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "sync": {
          "type": "object",
          "required": [
            "kind",
            "path",
            "ref",
            "url"
          ],
          "properties": {
            "interval": {
              "type": "string",
              "default": "1m",
              "pattern": "^([0-9]+(\\.[0-9]+)?(ms|s|m|h))+$"
            },
            "kind": {
              "type": "string",
              "enum": [
                "OCIRepository",
                "GitRepository",
                "Bucket"
              ]
            },
            "name": {
              "type": "string",
              "maxLength": 63,
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Sync name is immutable"
                }
              ]
            },
            "path": {
              "type": "string"
            },
            "provider": {
              "type": "string",
              "enum": [
                "generic",
                "aws",
                "azure",
                "gcp",
                "github"
              ]
            },
            "pullSecret": {
              "type": "string"
            },
            "ref": {
              "type": "string"
            },
            "url": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "wait": {
          "type": "boolean",
          "default": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "properties": {
        "components": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "repository",
              "tag"
            ],
            "properties": {
              "digest": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "repository": {
                "type": "string"
              },
              "tag": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "inventory": {
          "type": "object",
          "required": [
            "entries"
          ],
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "v"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "v": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "lastAppliedRevision": {
          "type": "string"
        },
        "lastArtifactRevision": {
          "type": "string"
        },
        "lastAttemptedRevision": {
          "type": "string"
        },
        "lastHandledReconcileAt": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-validations": [
    {
      "rule": "self.metadata.name == 'flux'",
      "message": "the only accepted name for a FluxInstance is 'flux'"
    }
  ]
}
