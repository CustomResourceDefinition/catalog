{
  "description": "OriginRequestPolicy is the Schema for the OriginRequestPolicies API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "OriginRequestPolicySpec defines the desired state of OriginRequestPolicy.\n\nAn origin request policy.\n\nWhen it's attached to a cache behavior, the origin request policy determines\nthe values that CloudFront includes in requests that it sends to the origin.\nEach request that CloudFront sends to the origin includes the following:\n\n   * The request body and the URL path (without the domain name) from the\n   viewer request.\n\n   * The headers that CloudFront automatically includes in every origin request,\n   including Host, User-Agent, and X-Amz-Cf-Id.\n\n   * All HTTP headers, cookies, and URL query strings that are specified\n   in the cache policy or the origin request policy. These can include items\n   from the viewer request and, in the case of headers, additional ones that\n   are added by CloudFront.\n\nCloudFront sends a request when it can't find an object in its cache that\nmatches the request. If you want to send values to the origin and also include\nthem in the cache key, use CachePolicy.",
      "type": "object",
      "required": [
        "originRequestPolicyConfig"
      ],
      "properties": {
        "originRequestPolicyConfig": {
          "description": "An origin request policy configuration.",
          "type": "object",
          "properties": {
            "comment": {
              "type": "string"
            },
            "cookiesConfig": {
              "description": "An object that determines whether any cookies in viewer requests (and if\nso, which cookies) are included in requests that CloudFront sends to the\norigin.",
              "type": "object",
              "properties": {
                "cookieBehavior": {
                  "type": "string"
                },
                "cookies": {
                  "description": "Contains a list of cookie names.",
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "headersConfig": {
              "description": "An object that determines whether any HTTP headers (and if so, which headers)\nare included in requests that CloudFront sends to the origin.",
              "type": "object",
              "properties": {
                "headerBehavior": {
                  "type": "string"
                },
                "headers": {
                  "description": "Contains a list of HTTP header names.",
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "name": {
              "type": "string"
            },
            "queryStringsConfig": {
              "description": "An object that determines whether any URL query strings in viewer requests\n(and if so, which query strings) are included in requests that CloudFront\nsends to the origin.",
              "type": "object",
              "properties": {
                "queryStringBehavior": {
                  "type": "string"
                },
                "queryStrings": {
                  "description": "Contains a list of query string names.",
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "OriginRequestPolicyStatus defines the observed state of OriginRequestPolicy",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "eTag": {
          "type": "string"
        },
        "id": {
          "description": "The unique identifier for the origin request policy.",
          "type": "string"
        },
        "lastModifiedTime": {
          "description": "The date and time when the origin request policy was last modified.",
          "type": "string",
          "format": "date-time"
        },
        "location": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
