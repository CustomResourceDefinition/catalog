{
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "scopes": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "spec": {
      "type": "object",
      "required": [
        "policies",
        "targets"
      ],
      "properties": {
        "policies": {
          "type": "object",
          "properties": {
            "circuitBreakers": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "interval": {
                    "type": "string"
                  },
                  "maxRequests": {
                    "type": "integer"
                  },
                  "timeout": {
                    "type": "string"
                  },
                  "trip": {
                    "type": "string"
                  }
                }
              }
            },
            "retries": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "duration": {
                    "type": "string"
                  },
                  "matching": {
                    "description": "RetryMatching represents the rules to trigger retry in specific scenarios.",
                    "type": "object",
                    "properties": {
                      "gRPCStatusCodes": {
                        "description": "GRPCStatusCodes represents gRPC status codes to be retried.",
                        "type": "string"
                      },
                      "httpStatusCodes": {
                        "description": "HTTPStatusCodes represents HTTP status codes to be retried.",
                        "type": "string"
                      }
                    }
                  },
                  "maxInterval": {
                    "type": "string"
                  },
                  "maxRetries": {
                    "type": "integer"
                  },
                  "policy": {
                    "type": "string"
                  }
                }
              }
            },
            "timeouts": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "targets": {
          "type": "object",
          "properties": {
            "actors": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "circuitBreaker": {
                    "type": "string"
                  },
                  "circuitBreakerCacheSize": {
                    "type": "integer"
                  },
                  "circuitBreakerScope": {
                    "type": "string"
                  },
                  "retry": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "string"
                  }
                }
              }
            },
            "apps": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "circuitBreaker": {
                    "type": "string"
                  },
                  "circuitBreakerCacheSize": {
                    "type": "integer"
                  },
                  "retry": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "string"
                  }
                }
              }
            },
            "components": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "inbound": {
                    "type": "object",
                    "properties": {
                      "circuitBreaker": {
                        "type": "string"
                      },
                      "retry": {
                        "type": "string"
                      },
                      "timeout": {
                        "type": "string"
                      }
                    }
                  },
                  "outbound": {
                    "type": "object",
                    "properties": {
                      "circuitBreaker": {
                        "type": "string"
                      },
                      "retry": {
                        "type": "string"
                      },
                      "timeout": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
