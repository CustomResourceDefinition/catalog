{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "properties": {
        "hostnames": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "string",
            "maxLength": 253,
            "minLength": 1,
            "pattern": "^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
          }
        },
        "parentRefs": {
          "type": "array",
          "maxItems": 32,
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "group": {
                "type": "string",
                "default": "gateway.networking.k8s.io",
                "maxLength": 253,
                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "kind": {
                "type": "string",
                "default": "Gateway",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
              },
              "name": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              },
              "namespace": {
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
              },
              "port": {
                "type": "integer",
                "format": "int32",
                "maximum": 65535,
                "minimum": 1
              },
              "sectionName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(p1, self.all(p2, p1.group == p2.group \u0026\u0026 p1.kind == p2.kind \u0026\u0026 p1.name == p2.name \u0026\u0026 (((!has(p1.__namespace__) || p1.__namespace__ == '') \u0026\u0026 (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) \u0026\u0026 has(p2.__namespace__) \u0026\u0026 p1.__namespace__ == p2.__namespace__ )) ? ((!has(p1.sectionName) || p1.sectionName == '') == (!has(p2.sectionName) || p2.sectionName == '')) : true))",
              "message": "sectionName must be specified when parentRefs includes 2 or more references to the same parent"
            },
            {
              "rule": "self.all(p1, self.exists_one(p2, p1.group == p2.group \u0026\u0026 p1.kind == p2.kind \u0026\u0026 p1.name == p2.name \u0026\u0026 (((!has(p1.__namespace__) || p1.__namespace__ == '') \u0026\u0026 (!has(p2.__namespace__) || p2.__namespace__ == '')) || (has(p1.__namespace__) \u0026\u0026 has(p2.__namespace__) \u0026\u0026 p1.__namespace__ == p2.__namespace__ )) \u0026\u0026 (((!has(p1.sectionName) || p1.sectionName == '') \u0026\u0026 (!has(p2.sectionName) || p2.sectionName == '')) || (has(p1.sectionName) \u0026\u0026 has(p2.sectionName) \u0026\u0026 p1.sectionName == p2.sectionName))))",
              "message": "sectionName must be unique when parentRefs includes 2 or more references to the same parent"
            }
          ]
        },
        "rules": {
          "type": "array",
          "default": [
            {
              "matches": [
                {
                  "path": {
                    "type": "PathPrefix",
                    "value": "/"
                  }
                }
              ]
            }
          ],
          "maxItems": 16,
          "items": {
            "type": "object",
            "properties": {
              "backendRefs": {
                "type": "array",
                "maxItems": 16,
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "filters": {
                      "type": "array",
                      "maxItems": 16,
                      "items": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "extensionRef": {
                            "type": "object",
                            "required": [
                              "group",
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "group": {
                                "type": "string",
                                "maxLength": 253,
                                "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                              },
                              "kind": {
                                "type": "string",
                                "maxLength": 63,
                                "minLength": 1,
                                "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                              },
                              "name": {
                                "type": "string",
                                "maxLength": 253,
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "requestHeaderModifier": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "maxItems": 16,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "maxLength": 256,
                                      "minLength": 1,
                                      "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                                    },
                                    "value": {
                                      "type": "string",
                                      "maxLength": 4096,
                                      "minLength": 1
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "remove": {
                                "type": "array",
                                "maxItems": 16,
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "set": {
                                "type": "array",
                                "maxItems": 16,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "maxLength": 256,
                                      "minLength": 1,
                                      "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                                    },
                                    "value": {
                                      "type": "string",
                                      "maxLength": 4096,
                                      "minLength": 1
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              }
                            },
                            "additionalProperties": false
                          },
                          "requestMirror": {
                            "type": "object",
                            "required": [
                              "backendRef"
                            ],
                            "properties": {
                              "backendRef": {
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "group": {
                                    "type": "string",
                                    "default": "",
                                    "maxLength": 253,
                                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                  },
                                  "kind": {
                                    "type": "string",
                                    "default": "Service",
                                    "maxLength": 63,
                                    "minLength": 1,
                                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                                  },
                                  "name": {
                                    "type": "string",
                                    "maxLength": 253,
                                    "minLength": 1
                                  },
                                  "namespace": {
                                    "type": "string",
                                    "maxLength": 63,
                                    "minLength": 1,
                                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                  },
                                  "port": {
                                    "type": "integer",
                                    "format": "int32",
                                    "maximum": 65535,
                                    "minimum": 1
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-validations": [
                                  {
                                    "rule": "(size(self.group) == 0 \u0026\u0026 self.kind == 'Service') ? has(self.port) : true",
                                    "message": "Must have port for Service reference"
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "requestRedirect": {
                            "type": "object",
                            "properties": {
                              "hostname": {
                                "type": "string",
                                "maxLength": 253,
                                "minLength": 1,
                                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                              },
                              "path": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "replaceFullPath": {
                                    "type": "string",
                                    "maxLength": 1024
                                  },
                                  "replacePrefixMatch": {
                                    "type": "string",
                                    "maxLength": 1024
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "ReplaceFullPath",
                                      "ReplacePrefixMatch"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-validations": [
                                  {
                                    "rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
                                    "message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
                                  },
                                  {
                                    "rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
                                    "message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
                                  },
                                  {
                                    "rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
                                    "message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
                                  },
                                  {
                                    "rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
                                    "message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
                                  }
                                ]
                              },
                              "port": {
                                "type": "integer",
                                "format": "int32",
                                "maximum": 65535,
                                "minimum": 1
                              },
                              "scheme": {
                                "type": "string",
                                "enum": [
                                  "http",
                                  "https"
                                ]
                              },
                              "statusCode": {
                                "type": "integer",
                                "default": 302,
                                "enum": [
                                  301,
                                  302
                                ]
                              }
                            },
                            "additionalProperties": false
                          },
                          "responseHeaderModifier": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "maxItems": 16,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "maxLength": 256,
                                      "minLength": 1,
                                      "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                                    },
                                    "value": {
                                      "type": "string",
                                      "maxLength": 4096,
                                      "minLength": 1
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "remove": {
                                "type": "array",
                                "maxItems": 16,
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "set": {
                                "type": "array",
                                "maxItems": 16,
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "value"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "maxLength": 256,
                                      "minLength": 1,
                                      "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                                    },
                                    "value": {
                                      "type": "string",
                                      "maxLength": 4096,
                                      "minLength": 1
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              }
                            },
                            "additionalProperties": false
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "RequestHeaderModifier",
                              "ResponseHeaderModifier",
                              "RequestMirror",
                              "RequestRedirect",
                              "URLRewrite",
                              "ExtensionRef"
                            ]
                          },
                          "urlRewrite": {
                            "type": "object",
                            "properties": {
                              "hostname": {
                                "type": "string",
                                "maxLength": 253,
                                "minLength": 1,
                                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                              },
                              "path": {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "replaceFullPath": {
                                    "type": "string",
                                    "maxLength": 1024
                                  },
                                  "replacePrefixMatch": {
                                    "type": "string",
                                    "maxLength": 1024
                                  },
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "ReplaceFullPath",
                                      "ReplacePrefixMatch"
                                    ]
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-validations": [
                                  {
                                    "rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
                                    "message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
                                  },
                                  {
                                    "rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
                                    "message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
                                  },
                                  {
                                    "rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
                                    "message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
                                  },
                                  {
                                    "rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
                                    "message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
                                  }
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-validations": [
                          {
                            "rule": "!(has(self.requestHeaderModifier) \u0026\u0026 self.type != 'RequestHeaderModifier')",
                            "message": "filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier"
                          },
                          {
                            "rule": "!(!has(self.requestHeaderModifier) \u0026\u0026 self.type == 'RequestHeaderModifier')",
                            "message": "filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type"
                          },
                          {
                            "rule": "!(has(self.responseHeaderModifier) \u0026\u0026 self.type != 'ResponseHeaderModifier')",
                            "message": "filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier"
                          },
                          {
                            "rule": "!(!has(self.responseHeaderModifier) \u0026\u0026 self.type == 'ResponseHeaderModifier')",
                            "message": "filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type"
                          },
                          {
                            "rule": "!(has(self.requestMirror) \u0026\u0026 self.type != 'RequestMirror')",
                            "message": "filter.requestMirror must be nil if the filter.type is not RequestMirror"
                          },
                          {
                            "rule": "!(!has(self.requestMirror) \u0026\u0026 self.type == 'RequestMirror')",
                            "message": "filter.requestMirror must be specified for RequestMirror filter.type"
                          },
                          {
                            "rule": "!(has(self.requestRedirect) \u0026\u0026 self.type != 'RequestRedirect')",
                            "message": "filter.requestRedirect must be nil if the filter.type is not RequestRedirect"
                          },
                          {
                            "rule": "!(!has(self.requestRedirect) \u0026\u0026 self.type == 'RequestRedirect')",
                            "message": "filter.requestRedirect must be specified for RequestRedirect filter.type"
                          },
                          {
                            "rule": "!(has(self.urlRewrite) \u0026\u0026 self.type != 'URLRewrite')",
                            "message": "filter.urlRewrite must be nil if the filter.type is not URLRewrite"
                          },
                          {
                            "rule": "!(!has(self.urlRewrite) \u0026\u0026 self.type == 'URLRewrite')",
                            "message": "filter.urlRewrite must be specified for URLRewrite filter.type"
                          },
                          {
                            "rule": "!(has(self.extensionRef) \u0026\u0026 self.type != 'ExtensionRef')",
                            "message": "filter.extensionRef must be nil if the filter.type is not ExtensionRef"
                          },
                          {
                            "rule": "!(!has(self.extensionRef) \u0026\u0026 self.type == 'ExtensionRef')",
                            "message": "filter.extensionRef must be specified for ExtensionRef filter.type"
                          }
                        ]
                      },
                      "x-kubernetes-validations": [
                        {
                          "rule": "!(self.exists(f, f.type == 'RequestRedirect') \u0026\u0026 self.exists(f, f.type == 'URLRewrite'))",
                          "message": "May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both"
                        },
                        {
                          "rule": "!(self.exists(f, f.type == 'RequestRedirect') \u0026\u0026 self.exists(f, f.type == 'URLRewrite'))",
                          "message": "May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both"
                        },
                        {
                          "rule": "self.filter(f, f.type == 'RequestHeaderModifier').size() \u003c= 1",
                          "message": "RequestHeaderModifier filter cannot be repeated"
                        },
                        {
                          "rule": "self.filter(f, f.type == 'ResponseHeaderModifier').size() \u003c= 1",
                          "message": "ResponseHeaderModifier filter cannot be repeated"
                        },
                        {
                          "rule": "self.filter(f, f.type == 'RequestRedirect').size() \u003c= 1",
                          "message": "RequestRedirect filter cannot be repeated"
                        },
                        {
                          "rule": "self.filter(f, f.type == 'URLRewrite').size() \u003c= 1",
                          "message": "URLRewrite filter cannot be repeated"
                        }
                      ]
                    },
                    "group": {
                      "type": "string",
                      "default": "",
                      "maxLength": 253,
                      "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "kind": {
                      "type": "string",
                      "default": "Service",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                    },
                    "name": {
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1
                    },
                    "namespace": {
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int32",
                      "maximum": 65535,
                      "minimum": 1
                    },
                    "weight": {
                      "type": "integer",
                      "format": "int32",
                      "default": 1,
                      "maximum": 1000000,
                      "minimum": 0
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "(size(self.group) == 0 \u0026\u0026 self.kind == 'Service') ? has(self.port) : true",
                      "message": "Must have port for Service reference"
                    }
                  ]
                }
              },
              "filters": {
                "type": "array",
                "maxItems": 16,
                "items": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "extensionRef": {
                      "type": "object",
                      "required": [
                        "group",
                        "kind",
                        "name"
                      ],
                      "properties": {
                        "group": {
                          "type": "string",
                          "maxLength": 253,
                          "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        },
                        "kind": {
                          "type": "string",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "requestHeaderModifier": {
                      "type": "object",
                      "properties": {
                        "add": {
                          "type": "array",
                          "maxItems": 16,
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                              },
                              "value": {
                                "type": "string",
                                "maxLength": 4096,
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "remove": {
                          "type": "array",
                          "maxItems": 16,
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "set": {
                          "type": "array",
                          "maxItems": 16,
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                              },
                              "value": {
                                "type": "string",
                                "maxLength": 4096,
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "additionalProperties": false
                    },
                    "requestMirror": {
                      "type": "object",
                      "required": [
                        "backendRef"
                      ],
                      "properties": {
                        "backendRef": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "group": {
                              "type": "string",
                              "default": "",
                              "maxLength": 253,
                              "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "kind": {
                              "type": "string",
                              "default": "Service",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                            },
                            "name": {
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1
                            },
                            "namespace": {
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            },
                            "port": {
                              "type": "integer",
                              "format": "int32",
                              "maximum": 65535,
                              "minimum": 1
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-validations": [
                            {
                              "rule": "(size(self.group) == 0 \u0026\u0026 self.kind == 'Service') ? has(self.port) : true",
                              "message": "Must have port for Service reference"
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "requestRedirect": {
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        },
                        "path": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "replaceFullPath": {
                              "type": "string",
                              "maxLength": 1024
                            },
                            "replacePrefixMatch": {
                              "type": "string",
                              "maxLength": 1024
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceFullPath",
                                "ReplacePrefixMatch"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
                              "message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
                            },
                            {
                              "rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
                              "message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
                            },
                            {
                              "rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
                              "message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
                            },
                            {
                              "rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
                              "message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
                            }
                          ]
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "maximum": 65535,
                          "minimum": 1
                        },
                        "scheme": {
                          "type": "string",
                          "enum": [
                            "http",
                            "https"
                          ]
                        },
                        "statusCode": {
                          "type": "integer",
                          "default": 302,
                          "enum": [
                            301,
                            302
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "responseHeaderModifier": {
                      "type": "object",
                      "properties": {
                        "add": {
                          "type": "array",
                          "maxItems": 16,
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                              },
                              "value": {
                                "type": "string",
                                "maxLength": 4096,
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        },
                        "remove": {
                          "type": "array",
                          "maxItems": 16,
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "set": {
                          "type": "array",
                          "maxItems": 16,
                          "items": {
                            "type": "object",
                            "required": [
                              "name",
                              "value"
                            ],
                            "properties": {
                              "name": {
                                "type": "string",
                                "maxLength": 256,
                                "minLength": 1,
                                "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                              },
                              "value": {
                                "type": "string",
                                "maxLength": 4096,
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "x-kubernetes-list-map-keys": [
                            "name"
                          ],
                          "x-kubernetes-list-type": "map"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "RequestHeaderModifier",
                        "ResponseHeaderModifier",
                        "RequestMirror",
                        "RequestRedirect",
                        "URLRewrite",
                        "ExtensionRef"
                      ]
                    },
                    "urlRewrite": {
                      "type": "object",
                      "properties": {
                        "hostname": {
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        },
                        "path": {
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "replaceFullPath": {
                              "type": "string",
                              "maxLength": 1024
                            },
                            "replacePrefixMatch": {
                              "type": "string",
                              "maxLength": 1024
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "ReplaceFullPath",
                                "ReplacePrefixMatch"
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-validations": [
                            {
                              "rule": "self.type == 'ReplaceFullPath' ? has(self.replaceFullPath) : true",
                              "message": "replaceFullPath must be specified when type is set to 'ReplaceFullPath'"
                            },
                            {
                              "rule": "has(self.replaceFullPath) ? self.type == 'ReplaceFullPath' : true",
                              "message": "type must be 'ReplaceFullPath' when replaceFullPath is set"
                            },
                            {
                              "rule": "self.type == 'ReplacePrefixMatch' ? has(self.replacePrefixMatch) : true",
                              "message": "replacePrefixMatch must be specified when type is set to 'ReplacePrefixMatch'"
                            },
                            {
                              "rule": "has(self.replacePrefixMatch) ? self.type == 'ReplacePrefixMatch' : true",
                              "message": "type must be 'ReplacePrefixMatch' when replacePrefixMatch is set"
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "!(has(self.requestHeaderModifier) \u0026\u0026 self.type != 'RequestHeaderModifier')",
                      "message": "filter.requestHeaderModifier must be nil if the filter.type is not RequestHeaderModifier"
                    },
                    {
                      "rule": "!(!has(self.requestHeaderModifier) \u0026\u0026 self.type == 'RequestHeaderModifier')",
                      "message": "filter.requestHeaderModifier must be specified for RequestHeaderModifier filter.type"
                    },
                    {
                      "rule": "!(has(self.responseHeaderModifier) \u0026\u0026 self.type != 'ResponseHeaderModifier')",
                      "message": "filter.responseHeaderModifier must be nil if the filter.type is not ResponseHeaderModifier"
                    },
                    {
                      "rule": "!(!has(self.responseHeaderModifier) \u0026\u0026 self.type == 'ResponseHeaderModifier')",
                      "message": "filter.responseHeaderModifier must be specified for ResponseHeaderModifier filter.type"
                    },
                    {
                      "rule": "!(has(self.requestMirror) \u0026\u0026 self.type != 'RequestMirror')",
                      "message": "filter.requestMirror must be nil if the filter.type is not RequestMirror"
                    },
                    {
                      "rule": "!(!has(self.requestMirror) \u0026\u0026 self.type == 'RequestMirror')",
                      "message": "filter.requestMirror must be specified for RequestMirror filter.type"
                    },
                    {
                      "rule": "!(has(self.requestRedirect) \u0026\u0026 self.type != 'RequestRedirect')",
                      "message": "filter.requestRedirect must be nil if the filter.type is not RequestRedirect"
                    },
                    {
                      "rule": "!(!has(self.requestRedirect) \u0026\u0026 self.type == 'RequestRedirect')",
                      "message": "filter.requestRedirect must be specified for RequestRedirect filter.type"
                    },
                    {
                      "rule": "!(has(self.urlRewrite) \u0026\u0026 self.type != 'URLRewrite')",
                      "message": "filter.urlRewrite must be nil if the filter.type is not URLRewrite"
                    },
                    {
                      "rule": "!(!has(self.urlRewrite) \u0026\u0026 self.type == 'URLRewrite')",
                      "message": "filter.urlRewrite must be specified for URLRewrite filter.type"
                    },
                    {
                      "rule": "!(has(self.extensionRef) \u0026\u0026 self.type != 'ExtensionRef')",
                      "message": "filter.extensionRef must be nil if the filter.type is not ExtensionRef"
                    },
                    {
                      "rule": "!(!has(self.extensionRef) \u0026\u0026 self.type == 'ExtensionRef')",
                      "message": "filter.extensionRef must be specified for ExtensionRef filter.type"
                    }
                  ]
                },
                "x-kubernetes-validations": [
                  {
                    "rule": "!(self.exists(f, f.type == 'RequestRedirect') \u0026\u0026 self.exists(f, f.type == 'URLRewrite'))",
                    "message": "May specify either httpRouteFilterRequestRedirect or httpRouteFilterRequestRewrite, but not both"
                  },
                  {
                    "rule": "self.filter(f, f.type == 'RequestHeaderModifier').size() \u003c= 1",
                    "message": "RequestHeaderModifier filter cannot be repeated"
                  },
                  {
                    "rule": "self.filter(f, f.type == 'ResponseHeaderModifier').size() \u003c= 1",
                    "message": "ResponseHeaderModifier filter cannot be repeated"
                  },
                  {
                    "rule": "self.filter(f, f.type == 'RequestRedirect').size() \u003c= 1",
                    "message": "RequestRedirect filter cannot be repeated"
                  },
                  {
                    "rule": "self.filter(f, f.type == 'URLRewrite').size() \u003c= 1",
                    "message": "URLRewrite filter cannot be repeated"
                  }
                ]
              },
              "matches": {
                "type": "array",
                "default": [
                  {
                    "path": {
                      "type": "PathPrefix",
                      "value": "/"
                    }
                  }
                ],
                "maxItems": 64,
                "items": {
                  "type": "object",
                  "properties": {
                    "headers": {
                      "type": "array",
                      "maxItems": 16,
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "value"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                          },
                          "type": {
                            "type": "string",
                            "default": "Exact",
                            "enum": [
                              "Exact",
                              "RegularExpression"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "maxLength": 4096,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "GET",
                        "HEAD",
                        "POST",
                        "PUT",
                        "DELETE",
                        "CONNECT",
                        "OPTIONS",
                        "TRACE",
                        "PATCH"
                      ]
                    },
                    "path": {
                      "type": "object",
                      "default": {
                        "type": "PathPrefix",
                        "value": "/"
                      },
                      "properties": {
                        "type": {
                          "type": "string",
                          "default": "PathPrefix",
                          "enum": [
                            "Exact",
                            "PathPrefix",
                            "RegularExpression"
                          ]
                        },
                        "value": {
                          "type": "string",
                          "default": "/",
                          "maxLength": 1024
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-validations": [
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? self.value.startsWith('/') : true",
                          "message": "value must be an absolute path and start with '/' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('//') : true",
                          "message": "must not contain '//' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('/./') : true",
                          "message": "must not contain '/./' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('/../') : true",
                          "message": "must not contain '/../' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('%2f') : true",
                          "message": "must not contain '%2f' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('%2F') : true",
                          "message": "must not contain '%2F' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.contains('#') : true",
                          "message": "must not contain '#' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.endsWith('/..') : true",
                          "message": "must not end with '/..' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? !self.value.endsWith('/.') : true",
                          "message": "must not end with '/.' when type one of ['Exact', 'PathPrefix']"
                        },
                        {
                          "rule": "self.type in ['Exact','PathPrefix'] || self.type == 'RegularExpression'",
                          "message": "type must be one of ['Exact', 'PathPrefix', 'RegularExpression']"
                        },
                        {
                          "rule": "(self.type in ['Exact','PathPrefix']) ? self.value.matches(r\"\"\"^(?:[-A-Za-z0-9/._~!$\u0026'()*+,;=:@]|[%][0-9a-fA-F]{2})+$\"\"\") : true",
                          "message": "must only contain valid characters (matching ^(?:[-A-Za-z0-9/._~!$\u0026'()*+,;=:@]|[%][0-9a-fA-F]{2})+$) for types ['Exact', 'PathPrefix']"
                        }
                      ]
                    },
                    "queryParams": {
                      "type": "array",
                      "maxItems": 16,
                      "items": {
                        "type": "object",
                        "required": [
                          "name",
                          "value"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "maxLength": 256,
                            "minLength": 1,
                            "pattern": "^[A-Za-z0-9!#$%\u0026'*+\\-.^_\\x60|~]+$"
                          },
                          "type": {
                            "type": "string",
                            "default": "Exact",
                            "enum": [
                              "Exact",
                              "RegularExpression"
                            ]
                          },
                          "value": {
                            "type": "string",
                            "maxLength": 1024,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "x-kubernetes-list-map-keys": [
                        "name"
                      ],
                      "x-kubernetes-list-type": "map"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "timeouts": {
                "type": "object",
                "properties": {
                  "backendRequest": {
                    "type": "string",
                    "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                  },
                  "request": {
                    "type": "string",
                    "pattern": "^([0-9]{1,5}(h|m|s|ms)){1,4}$"
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-validations": [
                  {
                    "rule": "!(has(self.request) \u0026\u0026 has(self.backendRequest) \u0026\u0026 duration(self.request) != duration('0s') \u0026\u0026 duration(self.backendRequest) \u003e duration(self.request))",
                    "message": "backendRequest timeout cannot be longer than request timeout"
                  }
                ]
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "(has(self.backendRefs) \u0026\u0026 size(self.backendRefs) \u003e 0) ? (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))): true",
                "message": "RequestRedirect filter must not be used together with backendRefs"
              },
              {
                "rule": "(has(self.filters) \u0026\u0026 self.filters.exists_one(f, has(f.requestRedirect) \u0026\u0026 has(f.requestRedirect.path) \u0026\u0026 f.requestRedirect.path.type == 'ReplacePrefixMatch' \u0026\u0026 has(f.requestRedirect.path.replacePrefixMatch))) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
                "message": "When using RequestRedirect filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
              },
              {
                "rule": "(has(self.filters) \u0026\u0026 self.filters.exists_one(f, has(f.urlRewrite) \u0026\u0026 has(f.urlRewrite.path) \u0026\u0026 f.urlRewrite.path.type == 'ReplacePrefixMatch' \u0026\u0026 has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
                "message": "When using URLRewrite filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
              },
              {
                "rule": "(has(self.backendRefs) \u0026\u0026 self.backendRefs.exists_one(b, (has(b.filters) \u0026\u0026 b.filters.exists_one(f, has(f.requestRedirect) \u0026\u0026 has(f.requestRedirect.path) \u0026\u0026 f.requestRedirect.path.type == 'ReplacePrefixMatch' \u0026\u0026 has(f.requestRedirect.path.replacePrefixMatch))) )) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
                "message": "Within backendRefs, when using RequestRedirect filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
              },
              {
                "rule": "(has(self.backendRefs) \u0026\u0026 self.backendRefs.exists_one(b, (has(b.filters) \u0026\u0026 b.filters.exists_one(f, has(f.urlRewrite) \u0026\u0026 has(f.urlRewrite.path) \u0026\u0026 f.urlRewrite.path.type == 'ReplacePrefixMatch' \u0026\u0026 has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches) != 1 || !has(self.matches[0].path) || self.matches[0].path.type != 'PathPrefix') ? false : true) : true",
                "message": "Within backendRefs, When using URLRewrite filter with path.replacePrefixMatch, exactly one PathPrefix match must be specified"
              }
            ]
          },
          "x-kubernetes-validations": [
            {
              "rule": "(self.size() \u003e 0 ? self[0].matches.size() : 0) + (self.size() \u003e 1 ? self[1].matches.size() : 0) + (self.size() \u003e 2 ? self[2].matches.size() : 0) + (self.size() \u003e 3 ? self[3].matches.size() : 0) + (self.size() \u003e 4 ? self[4].matches.size() : 0) + (self.size() \u003e 5 ? self[5].matches.size() : 0) + (self.size() \u003e 6 ? self[6].matches.size() : 0) + (self.size() \u003e 7 ? self[7].matches.size() : 0) + (self.size() \u003e 8 ? self[8].matches.size() : 0) + (self.size() \u003e 9 ? self[9].matches.size() : 0) + (self.size() \u003e 10 ? self[10].matches.size() : 0) + (self.size() \u003e 11 ? self[11].matches.size() : 0) + (self.size() \u003e 12 ? self[12].matches.size() : 0) + (self.size() \u003e 13 ? self[13].matches.size() : 0) + (self.size() \u003e 14 ? self[14].matches.size() : 0) + (self.size() \u003e 15 ? self[15].matches.size() : 0) \u003c= 128",
              "message": "While 16 rules and 64 matches per rule are allowed, the total number of matches across all rules in a route must be less than 128"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "required": [
        "parents"
      ],
      "properties": {
        "parents": {
          "type": "array",
          "maxItems": 32,
          "items": {
            "type": "object",
            "required": [
              "controllerName",
              "parentRef"
            ],
            "properties": {
              "conditions": {
                "type": "array",
                "maxItems": 8,
                "minItems": 1,
                "items": {
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "type": "string",
                      "maxLength": 32768
                    },
                    "observedGeneration": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 0
                    },
                    "reason": {
                      "type": "string",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "controllerName": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$\u0026'()*+,;=:]+$"
              },
              "parentRef": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "group": {
                    "type": "string",
                    "default": "gateway.networking.k8s.io",
                    "maxLength": 253,
                    "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  },
                  "kind": {
                    "type": "string",
                    "default": "Gateway",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                  },
                  "name": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1
                  },
                  "namespace": {
                    "type": "string",
                    "maxLength": 63,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                  },
                  "port": {
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "sectionName": {
                    "type": "string",
                    "maxLength": 253,
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
