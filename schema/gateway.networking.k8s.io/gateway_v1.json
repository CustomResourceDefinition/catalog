{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "gatewayClassName",
        "listeners"
      ],
      "properties": {
        "addresses": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "oneOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "IPAddress"
                    ]
                  },
                  "value": {
                    "anyOf": [
                      {
                        "format": "ipv4"
                      },
                      {
                        "format": "ipv6"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "not": {
                      "enum": [
                        "IPAddress"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            ],
            "properties": {
              "type": {
                "type": "string",
                "default": "IPAddress",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$\u0026'()*+,;=:]+$"
              },
              "value": {
                "type": "string",
                "maxLength": 253
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "self.type == 'Hostname' ? self.value.matches(r\"\"\"^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"\"\"): true",
                "message": "Hostname value must only contain valid characters (matching ^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)"
              }
            ]
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(a1, a1.type == 'IPAddress' ? self.exists_one(a2, a2.type == a1.type \u0026\u0026 a2.value == a1.value) : true )",
              "message": "IPAddress values must be unique"
            },
            {
              "rule": "self.all(a1, a1.type == 'Hostname' ? self.exists_one(a2, a2.type == a1.type \u0026\u0026 a2.value == a1.value) : true )",
              "message": "Hostname values must be unique"
            }
          ]
        },
        "gatewayClassName": {
          "type": "string",
          "maxLength": 253,
          "minLength": 1
        },
        "infrastructure": {
          "type": "object",
          "properties": {
            "annotations": {
              "type": "object",
              "maxProperties": 8,
              "additionalProperties": {
                "description": "AnnotationValue is the value of an annotation in Gateway API. This is used\nfor validation of maps such as TLS options. This roughly matches Kubernetes\nannotation validation, although the length validation in that case is based\non the entire size of the annotations struct.",
                "type": "string",
                "maxLength": 4096,
                "minLength": 0
              },
              "x-kubernetes-validations": [
                {
                  "rule": "self.all(key, key.matches(r\"\"\"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$\"\"\"))",
                  "message": "Annotation keys must be in the form of an optional DNS subdomain prefix followed by a required name segment of up to 63 characters."
                },
                {
                  "rule": "self.all(key, key.split(\"/\")[0].size() \u003c 253)",
                  "message": "If specified, the annotation key's prefix must be a DNS subdomain not longer than 253 characters in total."
                }
              ]
            },
            "labels": {
              "type": "object",
              "maxProperties": 8,
              "additionalProperties": {
                "description": "LabelValue is the value of a label in the Gateway API. This is used for validation\nof maps such as Gateway infrastructure labels. This matches the Kubernetes\nlabel validation rules:\n* must be 63 characters or less (can be empty),\n* unless empty, must begin and end with an alphanumeric character ([a-z0-9A-Z]),\n* could contain dashes (-), underscores (_), dots (.), and alphanumerics between.\n\nValid values include:\n\n* MyValue\n* my.name\n* 123-my-value",
                "type": "string",
                "maxLength": 63,
                "minLength": 0,
                "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
              },
              "x-kubernetes-validations": [
                {
                  "rule": "self.all(key, key.matches(r\"\"\"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?([A-Za-z0-9][-A-Za-z0-9_.]{0,61})?[A-Za-z0-9]$\"\"\"))",
                  "message": "Label keys must be in the form of an optional DNS subdomain prefix followed by a required name segment of up to 63 characters."
                },
                {
                  "rule": "self.all(key, key.split(\"/\")[0].size() \u003c 253)",
                  "message": "If specified, the label key's prefix must be a DNS subdomain not longer than 253 characters in total."
                }
              ]
            },
            "parametersRef": {
              "type": "object",
              "required": [
                "group",
                "kind",
                "name"
              ],
              "properties": {
                "group": {
                  "type": "string",
                  "maxLength": 253,
                  "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                },
                "kind": {
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                },
                "name": {
                  "type": "string",
                  "maxLength": 253,
                  "minLength": 1
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "listeners": {
          "type": "array",
          "maxItems": 64,
          "minItems": 1,
          "items": {
            "type": "object",
            "required": [
              "name",
              "port",
              "protocol"
            ],
            "properties": {
              "allowedRoutes": {
                "type": "object",
                "default": {
                  "namespaces": {
                    "from": "Same"
                  }
                },
                "properties": {
                  "kinds": {
                    "type": "array",
                    "maxItems": 8,
                    "items": {
                      "type": "object",
                      "required": [
                        "kind"
                      ],
                      "properties": {
                        "group": {
                          "type": "string",
                          "default": "gateway.networking.k8s.io",
                          "maxLength": 253,
                          "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        },
                        "kind": {
                          "type": "string",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "namespaces": {
                    "type": "object",
                    "default": {
                      "from": "Same"
                    },
                    "properties": {
                      "from": {
                        "type": "string",
                        "default": "Same",
                        "enum": [
                          "All",
                          "Selector",
                          "Same"
                        ]
                      },
                      "selector": {
                        "type": "object",
                        "properties": {
                          "matchExpressions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "operator": {
                                  "type": "string"
                                },
                                "values": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "matchLabels": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "hostname": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "name": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "port": {
                "type": "integer",
                "format": "int32",
                "maximum": 65535,
                "minimum": 1
              },
              "protocol": {
                "type": "string",
                "maxLength": 255,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]([-a-zA-Z0-9]*[a-zA-Z0-9])?$|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9]+$"
              },
              "tls": {
                "type": "object",
                "properties": {
                  "certificateRefs": {
                    "type": "array",
                    "maxItems": 64,
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "group": {
                          "type": "string",
                          "default": "",
                          "maxLength": 253,
                          "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        },
                        "kind": {
                          "type": "string",
                          "default": "Secret",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                        },
                        "name": {
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1
                        },
                        "namespace": {
                          "type": "string",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "mode": {
                    "type": "string",
                    "default": "Terminate",
                    "enum": [
                      "Terminate",
                      "Passthrough"
                    ]
                  },
                  "options": {
                    "type": "object",
                    "maxProperties": 16,
                    "additionalProperties": {
                      "description": "AnnotationValue is the value of an annotation in Gateway API. This is used\nfor validation of maps such as TLS options. This roughly matches Kubernetes\nannotation validation, although the length validation in that case is based\non the entire size of the annotations struct.",
                      "type": "string",
                      "maxLength": 4096,
                      "minLength": 0
                    }
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-validations": [
                  {
                    "rule": "self.mode == 'Terminate' ? size(self.certificateRefs) \u003e 0 || size(self.options) \u003e 0 : true",
                    "message": "certificateRefs or options must be specified when mode is Terminate"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map",
          "x-kubernetes-validations": [
            {
              "rule": "self.all(l, l.protocol in ['HTTP', 'TCP', 'UDP'] ? !has(l.tls) : true)",
              "message": "tls must not be specified for protocols ['HTTP', 'TCP', 'UDP']"
            },
            {
              "rule": "self.all(l, (l.protocol == 'HTTPS' \u0026\u0026 has(l.tls)) ? (l.tls.mode == '' || l.tls.mode == 'Terminate') : true)",
              "message": "tls mode must be Terminate for protocol HTTPS"
            },
            {
              "rule": "self.all(l, l.protocol in ['TCP', 'UDP']  ? (!has(l.hostname) || l.hostname == '') : true)",
              "message": "hostname must not be specified for protocols ['TCP', 'UDP']"
            },
            {
              "rule": "self.all(l1, self.exists_one(l2, l1.name == l2.name))",
              "message": "Listener name must be unique within the Gateway"
            },
            {
              "rule": "self.all(l1, self.exists_one(l2, l1.port == l2.port \u0026\u0026 l1.protocol == l2.protocol \u0026\u0026 (has(l1.hostname) \u0026\u0026 has(l2.hostname) ? l1.hostname == l2.hostname : !has(l1.hostname) \u0026\u0026 !has(l2.hostname))))",
              "message": "Combination of port, protocol and hostname must be unique for each listener"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "default": {
        "conditions": [
          {
            "lastTransitionTime": "1970-01-01T00:00:00Z",
            "message": "Waiting for controller",
            "reason": "Pending",
            "status": "Unknown",
            "type": "Accepted"
          },
          {
            "lastTransitionTime": "1970-01-01T00:00:00Z",
            "message": "Waiting for controller",
            "reason": "Pending",
            "status": "Unknown",
            "type": "Programmed"
          }
        ]
      },
      "properties": {
        "addresses": {
          "type": "array",
          "maxItems": 16,
          "items": {
            "type": "object",
            "required": [
              "value"
            ],
            "oneOf": [
              {
                "properties": {
                  "type": {
                    "enum": [
                      "IPAddress"
                    ]
                  },
                  "value": {
                    "anyOf": [
                      {
                        "format": "ipv4"
                      },
                      {
                        "format": "ipv6"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              {
                "properties": {
                  "type": {
                    "not": {
                      "enum": [
                        "IPAddress"
                      ]
                    }
                  }
                },
                "additionalProperties": false
              }
            ],
            "properties": {
              "type": {
                "type": "string",
                "default": "IPAddress",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^Hostname|IPAddress|NamedAddress|[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\\/[A-Za-z0-9\\/\\-._~%!$\u0026'()*+,;=:]+$"
              },
              "value": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "self.type == 'Hostname' ? self.value.matches(r\"\"\"^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$\"\"\"): true",
                "message": "Hostname value must only contain valid characters (matching ^(\\*\\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$)"
              }
            ]
          }
        },
        "conditions": {
          "type": "array",
          "default": [
            {
              "lastTransitionTime": "1970-01-01T00:00:00Z",
              "message": "Waiting for controller",
              "reason": "Pending",
              "status": "Unknown",
              "type": "Accepted"
            },
            {
              "lastTransitionTime": "1970-01-01T00:00:00Z",
              "message": "Waiting for controller",
              "reason": "Pending",
              "status": "Unknown",
              "type": "Programmed"
            }
          ],
          "maxItems": 8,
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "listeners": {
          "type": "array",
          "maxItems": 64,
          "items": {
            "type": "object",
            "required": [
              "attachedRoutes",
              "conditions",
              "name",
              "supportedKinds"
            ],
            "properties": {
              "attachedRoutes": {
                "type": "integer",
                "format": "int32"
              },
              "conditions": {
                "type": "array",
                "maxItems": 8,
                "items": {
                  "type": "object",
                  "required": [
                    "lastTransitionTime",
                    "message",
                    "reason",
                    "status",
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "type": "string",
                      "maxLength": 32768
                    },
                    "observedGeneration": {
                      "type": "integer",
                      "format": "int64",
                      "minimum": 0
                    },
                    "reason": {
                      "type": "string",
                      "maxLength": 1024,
                      "minLength": 1,
                      "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False",
                        "Unknown"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "maxLength": 316,
                      "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-map-keys": [
                  "type"
                ],
                "x-kubernetes-list-type": "map"
              },
              "name": {
                "type": "string",
                "maxLength": 253,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
              },
              "supportedKinds": {
                "type": "array",
                "maxItems": 8,
                "items": {
                  "type": "object",
                  "required": [
                    "kind"
                  ],
                  "properties": {
                    "group": {
                      "type": "string",
                      "default": "gateway.networking.k8s.io",
                      "maxLength": 253,
                      "pattern": "^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "kind": {
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "name"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "additionalProperties": false
    }
  }
}
