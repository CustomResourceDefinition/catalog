{
  "description": "GCRAccessToken generates an GCP access token\nthat can be used to authenticate with GCR.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "auth",
        "projectID"
      ],
      "properties": {
        "auth": {
          "description": "Auth defines the means for authenticating with GCP",
          "type": "object",
          "properties": {
            "secretRef": {
              "type": "object",
              "properties": {
                "secretAccessKeySecretRef": {
                  "description": "The SecretAccessKey is used for authentication",
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[-._a-zA-Z0-9]+$"
                    },
                    "name": {
                      "description": "The name of the Secret resource being referred to.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "namespace": {
                      "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "workloadIdentity": {
              "type": "object",
              "required": [
                "clusterLocation",
                "clusterName",
                "serviceAccountRef"
              ],
              "properties": {
                "clusterLocation": {
                  "type": "string"
                },
                "clusterName": {
                  "type": "string"
                },
                "clusterProjectID": {
                  "type": "string"
                },
                "serviceAccountRef": {
                  "description": "A reference to a ServiceAccount resource.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "audiences": {
                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "description": "The name of the ServiceAccount resource being referred to.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "workloadIdentityFederation": {
              "description": "GCPWorkloadIdentityFederation holds the configurations required for generating federated access tokens.",
              "type": "object",
              "properties": {
                "audience": {
                  "description": "audience is the Secure Token Service (STS) audience which contains the resource name for the workload identity pool and the provider identifier in that pool.\nIf specified, Audience found in the external account credential config will be overridden with the configured value.\naudience must be provided when serviceAccountRef or awsSecurityCredentials is configured.",
                  "type": "string"
                },
                "awsSecurityCredentials": {
                  "description": "awsSecurityCredentials is for configuring AWS region and credentials to use for obtaining the access token,\nwhen using the AWS metadata server is not an option.",
                  "type": "object",
                  "required": [
                    "awsCredentialsSecretRef",
                    "region"
                  ],
                  "properties": {
                    "awsCredentialsSecretRef": {
                      "description": "awsCredentialsSecretRef is the reference to the secret which holds the AWS credentials.\nSecret should be created with below names for keys\n- aws_access_key_id: Access Key ID, which is the unique identifier for the AWS account or the IAM user.\n- aws_secret_access_key: Secret Access Key, which is used to authenticate requests made to AWS services.\n- aws_session_token: Session Token, is the short-lived token to authenticate requests made to AWS services.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "name of the secret.",
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        },
                        "namespace": {
                          "description": "namespace in which the secret exists. If empty, secret will looked up in local namespace.",
                          "type": "string",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                        }
                      },
                      "additionalProperties": false
                    },
                    "region": {
                      "description": "region is for configuring the AWS region to be used.",
                      "type": "string",
                      "maxLength": 50,
                      "minLength": 1,
                      "pattern": "^[a-z0-9-]+$",
                      "example": "ap-south-1"
                    }
                  },
                  "additionalProperties": false
                },
                "credConfig": {
                  "description": "credConfig holds the configmap reference containing the GCP external account credential configuration in JSON format and the key name containing the json data.\nFor using Kubernetes cluster as the identity provider, use serviceAccountRef instead. Operators mounted serviceaccount token cannot be used as the token source, instead\nserviceAccountRef must be used by providing operators service account details.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "description": "key name holding the external account credential config.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[-._a-zA-Z0-9]+$"
                    },
                    "name": {
                      "description": "name of the configmap.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "namespace": {
                      "description": "namespace in which the configmap exists. If empty, configmap will looked up in local namespace.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                },
                "externalTokenEndpoint": {
                  "description": "externalTokenEndpoint is the endpoint explicitly set up to provide tokens, which will be matched against the\ncredential_source.url in the provided credConfig. This field is merely to double-check the external token source\nURL is having the expected value.",
                  "type": "string"
                },
                "serviceAccountRef": {
                  "description": "serviceAccountRef is the reference to the kubernetes ServiceAccount to be used for obtaining the tokens,\nwhen Kubernetes is configured as provider in workload identity pool.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "audiences": {
                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "description": "The name of the ServiceAccount resource being referred to.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "projectID": {
          "description": "ProjectID defines which project to use to authenticate with",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
