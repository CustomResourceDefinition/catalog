{
  "description": "ClusterGenerator represents a cluster-wide generator which can be referenced as part of `generatorRef` fields.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "generator",
        "kind"
      ],
      "properties": {
        "generator": {
          "description": "Generator the spec for this generator, must match the kind.",
          "type": "object",
          "maxProperties": 1,
          "minProperties": 1,
          "properties": {
            "acrAccessTokenSpec": {
              "description": "ACRAccessTokenSpec defines how to generate the access token\ne.g. how to authenticate and which registry to use.\nsee: https://github.com/Azure/acr/blob/main/docs/AAD-OAuth.md#overview",
              "type": "object",
              "required": [
                "auth",
                "registry"
              ],
              "properties": {
                "auth": {
                  "type": "object",
                  "properties": {
                    "managedIdentity": {
                      "description": "ManagedIdentity uses Azure Managed Identity to authenticate with Azure.",
                      "type": "object",
                      "properties": {
                        "identityId": {
                          "description": "If multiple Managed Identity is assigned to the pod, you can select the one to be used",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "servicePrincipal": {
                      "description": "ServicePrincipal uses Azure Service Principal credentials to authenticate with Azure.",
                      "type": "object",
                      "required": [
                        "secretRef"
                      ],
                      "properties": {
                        "secretRef": {
                          "description": "Configuration used to authenticate with Azure using static\ncredentials stored in a Kind=Secret.",
                          "type": "object",
                          "properties": {
                            "clientId": {
                              "description": "The Azure clientId of the service principle used for authentication.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            },
                            "clientSecret": {
                              "description": "The Azure ClientSecret of the service principle used for authentication.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "workloadIdentity": {
                      "description": "WorkloadIdentity uses Azure Workload Identity to authenticate with Azure.",
                      "type": "object",
                      "properties": {
                        "serviceAccountRef": {
                          "description": "ServiceAccountRef specified the service account\nthat should be used when authenticating with WorkloadIdentity.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "environmentType": {
                  "description": "EnvironmentType specifies the Azure cloud environment endpoints to use for\nconnecting and authenticating with Azure. By default it points to the public cloud AAD endpoint.\nThe following endpoints are available, also see here: https://github.com/Azure/go-autorest/blob/main/autorest/azure/environments.go#L152\nPublicCloud, USGovernmentCloud, ChinaCloud, GermanCloud",
                  "type": "string",
                  "default": "PublicCloud",
                  "enum": [
                    "PublicCloud",
                    "USGovernmentCloud",
                    "ChinaCloud",
                    "GermanCloud"
                  ]
                },
                "registry": {
                  "description": "the domain name of the ACR registry\ne.g. foobarexample.azurecr.io",
                  "type": "string"
                },
                "scope": {
                  "description": "Define the scope for the access token, e.g. pull/push access for a repository.\nif not provided it will return a refresh token that has full scope.\nNote: you need to pin it down to the repository level, there is no wildcard available.\n\nexamples:\nrepository:my-repository:pull,push\nrepository:my-repository:pull\n\nsee docs for details: https://docs.docker.com/registry/spec/auth/scope/",
                  "type": "string"
                },
                "tenantId": {
                  "description": "TenantID configures the Azure Tenant to send requests to. Required for ServicePrincipal auth type.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ecrAuthorizationTokenSpec": {
              "type": "object",
              "required": [
                "region"
              ],
              "properties": {
                "auth": {
                  "description": "Auth defines how to authenticate with AWS",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "description": "Authenticate against AWS using service account tokens.",
                      "type": "object",
                      "properties": {
                        "serviceAccountRef": {
                          "description": "A reference to a ServiceAccount resource.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "secretRef": {
                      "description": "AWSAuthSecretRef holds secret references for AWS credentials\nboth AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.",
                      "type": "object",
                      "properties": {
                        "accessKeyIDSecretRef": {
                          "description": "The AccessKeyID is used for authentication",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "secretAccessKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "sessionTokenSecretRef": {
                          "description": "The SessionToken used for authentication\nThis must be defined if AccessKeyID and SecretAccessKey are temporary credentials\nsee: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region specifies the region to operate in.",
                  "type": "string"
                },
                "role": {
                  "description": "You can assume a role before making calls to the\ndesired AWS service.",
                  "type": "string"
                },
                "scope": {
                  "description": "Scope specifies the ECR service scope.\nValid options are private and public.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "fakeSpec": {
              "description": "FakeSpec contains the static data.",
              "type": "object",
              "properties": {
                "controller": {
                  "description": "Used to select the correct ESO controller (think: ingress.ingressClassName)\nThe ESO controller is instantiated with a specific controller name and filters VDS based on this property",
                  "type": "string"
                },
                "data": {
                  "description": "Data defines the static data returned\nby this generator.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "gcrAccessTokenSpec": {
              "type": "object",
              "required": [
                "auth",
                "projectID"
              ],
              "properties": {
                "auth": {
                  "description": "Auth defines the means for authenticating with GCP",
                  "type": "object",
                  "properties": {
                    "secretRef": {
                      "type": "object",
                      "properties": {
                        "secretAccessKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "workloadIdentity": {
                      "type": "object",
                      "required": [
                        "clusterLocation",
                        "clusterName",
                        "serviceAccountRef"
                      ],
                      "properties": {
                        "clusterLocation": {
                          "type": "string"
                        },
                        "clusterName": {
                          "type": "string"
                        },
                        "clusterProjectID": {
                          "type": "string"
                        },
                        "serviceAccountRef": {
                          "description": "A reference to a ServiceAccount resource.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "projectID": {
                  "description": "ProjectID defines which project to use to authenticate with",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "githubAccessTokenSpec": {
              "type": "object",
              "required": [
                "appID",
                "auth",
                "installID"
              ],
              "properties": {
                "appID": {
                  "type": "string"
                },
                "auth": {
                  "description": "Auth configures how ESO authenticates with a Github instance.",
                  "type": "object",
                  "required": [
                    "privateKey"
                  ],
                  "properties": {
                    "privateKey": {
                      "type": "object",
                      "required": [
                        "secretRef"
                      ],
                      "properties": {
                        "secretRef": {
                          "description": "A reference to a specific 'key' within a Secret resource.\nIn some instances, `key` is a required field.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "installID": {
                  "type": "string"
                },
                "permissions": {
                  "description": "Map of permissions the token will have. If omitted, defaults to all permissions the GitHub App has.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "repositories": {
                  "description": "List of repositories the token will have access to. If omitted, defaults to all repositories the GitHub App\nis installed to.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "url": {
                  "description": "URL configures the Github instance URL. Defaults to https://github.com/.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "grafanaSpec": {
              "description": "GrafanaSpec controls the behavior of the grafana generator.",
              "type": "object",
              "required": [
                "auth",
                "serviceAccount",
                "url"
              ],
              "properties": {
                "auth": {
                  "description": "Auth is the authentication configuration to authenticate\nagainst the Grafana instance.",
                  "type": "object",
                  "properties": {
                    "basic": {
                      "description": "Basic auth credentials used to authenticate against the Grafana instance.\nNote: you need a token which has elevated permissions to create service accounts.\nSee here for the documentation on basic roles offered by Grafana:\nhttps://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/rbac-fixed-basic-role-definitions/",
                      "type": "object",
                      "required": [
                        "password",
                        "username"
                      ],
                      "properties": {
                        "password": {
                          "description": "A basic auth password used to authenticate against the Grafana instance.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "The key where the token is found.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "username": {
                          "description": "A basic auth username used to authenticate against the Grafana instance.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "token": {
                      "description": "A service account token used to authenticate against the Grafana instance.\nNote: you need a token which has elevated permissions to create service accounts.\nSee here for the documentation on basic roles offered by Grafana:\nhttps://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/rbac-fixed-basic-role-definitions/",
                      "type": "object",
                      "properties": {
                        "key": {
                          "description": "The key where the token is found.",
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[-._a-zA-Z0-9]+$"
                        },
                        "name": {
                          "description": "The name of the Secret resource being referred to.",
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "serviceAccount": {
                  "description": "ServiceAccount is the configuration for the service account that\nis supposed to be generated by the generator.",
                  "type": "object",
                  "required": [
                    "name",
                    "role"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name is the name of the service account that will be created by ESO.",
                      "type": "string"
                    },
                    "role": {
                      "description": "Role is the role of the service account.\nSee here for the documentation on basic roles offered by Grafana:\nhttps://grafana.com/docs/grafana/latest/administration/roles-and-permissions/access-control/rbac-fixed-basic-role-definitions/",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "url": {
                  "description": "URL is the URL of the Grafana instance.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "mfaSpec": {
              "description": "MFASpec controls the behavior of the mfa generator.",
              "type": "object",
              "required": [
                "secret"
              ],
              "properties": {
                "algorithm": {
                  "description": "Algorithm to use for encoding. Defaults to SHA1 as per the RFC.",
                  "type": "string"
                },
                "length": {
                  "description": "Length defines the token length. Defaults to 6 characters.",
                  "type": "integer"
                },
                "secret": {
                  "description": "Secret is a secret selector to a secret containing the seed secret to generate the TOTP value from.",
                  "type": "object",
                  "properties": {
                    "key": {
                      "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[-._a-zA-Z0-9]+$"
                    },
                    "name": {
                      "description": "The name of the Secret resource being referred to.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "namespace": {
                      "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                },
                "timePeriod": {
                  "description": "TimePeriod defines how long the token can be active. Defaults to 30 seconds.",
                  "type": "integer"
                },
                "when": {
                  "description": "When defines a time parameter that can be used to pin the origin time of the generated token.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            },
            "passwordSpec": {
              "description": "PasswordSpec controls the behavior of the password generator.",
              "type": "object",
              "required": [
                "allowRepeat",
                "length",
                "noUpper"
              ],
              "properties": {
                "allowRepeat": {
                  "description": "set AllowRepeat to true to allow repeating characters.",
                  "type": "boolean",
                  "default": false
                },
                "digits": {
                  "description": "Digits specifies the number of digits in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                  "type": "integer"
                },
                "length": {
                  "description": "Length of the password to be generated.\nDefaults to 24",
                  "type": "integer",
                  "default": 24
                },
                "noUpper": {
                  "description": "Set NoUpper to disable uppercase characters",
                  "type": "boolean",
                  "default": false
                },
                "symbolCharacters": {
                  "description": "SymbolCharacters specifies the special characters that should be used\nin the generated password.",
                  "type": "string"
                },
                "symbols": {
                  "description": "Symbols specifies the number of symbol characters in the generated\npassword. If omitted it defaults to 25% of the length of the password",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "quayAccessTokenSpec": {
              "type": "object",
              "required": [
                "robotAccount",
                "serviceAccountRef"
              ],
              "properties": {
                "robotAccount": {
                  "description": "Name of the robot account you are federating with",
                  "type": "string"
                },
                "serviceAccountRef": {
                  "description": "Name of the service account you are federating with",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "audiences": {
                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "description": "The name of the ServiceAccount resource being referred to.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "namespace": {
                      "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    }
                  },
                  "additionalProperties": false
                },
                "url": {
                  "description": "URL configures the Quay instance URL. Defaults to quay.io.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "sshKeySpec": {
              "description": "SSHKeySpec controls the behavior of the ssh key generator.",
              "type": "object",
              "properties": {
                "comment": {
                  "description": "Comment specifies an optional comment for the SSH key",
                  "type": "string"
                },
                "keySize": {
                  "description": "KeySize specifies the key size for RSA keys (default: 2048)\nFor RSA keys: 2048, 3072, 4096\nIgnored for ed25519 keys",
                  "type": "integer",
                  "maximum": 8192,
                  "minimum": 256
                },
                "keyType": {
                  "description": "KeyType specifies the SSH key type (rsa, ed25519)",
                  "type": "string",
                  "default": "rsa",
                  "enum": [
                    "rsa",
                    "ed25519"
                  ]
                }
              },
              "additionalProperties": false
            },
            "stsSessionTokenSpec": {
              "type": "object",
              "required": [
                "region"
              ],
              "properties": {
                "auth": {
                  "description": "Auth defines how to authenticate with AWS",
                  "type": "object",
                  "properties": {
                    "jwt": {
                      "description": "Authenticate against AWS using service account tokens.",
                      "type": "object",
                      "properties": {
                        "serviceAccountRef": {
                          "description": "A reference to a ServiceAccount resource.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "audiences": {
                              "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "name": {
                              "description": "The name of the ServiceAccount resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "secretRef": {
                      "description": "AWSAuthSecretRef holds secret references for AWS credentials\nboth AccessKeyID and SecretAccessKey must be defined in order to properly authenticate.",
                      "type": "object",
                      "properties": {
                        "accessKeyIDSecretRef": {
                          "description": "The AccessKeyID is used for authentication",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "secretAccessKeySecretRef": {
                          "description": "The SecretAccessKey is used for authentication",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "sessionTokenSecretRef": {
                          "description": "The SessionToken used for authentication\nThis must be defined if AccessKeyID and SecretAccessKey are temporary credentials\nsee: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "region": {
                  "description": "Region specifies the region to operate in.",
                  "type": "string"
                },
                "requestParameters": {
                  "description": "RequestParameters contains parameters that can be passed to the STS service.",
                  "type": "object",
                  "properties": {
                    "serialNumber": {
                      "description": "SerialNumber is the identification number of the MFA device that is associated with the IAM user who is making\nthe GetSessionToken call.\nPossible values: hardware device (such as GAHT12345678) or an Amazon Resource Name (ARN) for a virtual device\n(such as arn:aws:iam::123456789012:mfa/user)",
                      "type": "string"
                    },
                    "sessionDuration": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "tokenCode": {
                      "description": "TokenCode is the value provided by the MFA device, if MFA is required.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "role": {
                  "description": "You can assume a role before making calls to the\ndesired AWS service.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "uuidSpec": {
              "description": "UUIDSpec controls the behavior of the uuid generator.",
              "type": "object"
            },
            "vaultDynamicSecretSpec": {
              "type": "object",
              "required": [
                "path",
                "provider"
              ],
              "properties": {
                "allowEmptyResponse": {
                  "description": "Do not fail if no secrets are found. Useful for requests where no data is expected.",
                  "type": "boolean",
                  "default": false
                },
                "controller": {
                  "description": "Used to select the correct ESO controller (think: ingress.ingressClassName)\nThe ESO controller is instantiated with a specific controller name and filters VDS based on this property",
                  "type": "string"
                },
                "method": {
                  "description": "Vault API method to use (GET/POST/other)",
                  "type": "string"
                },
                "parameters": {
                  "description": "Parameters to pass to Vault write (for non-GET methods)",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "path": {
                  "description": "Vault path to obtain the dynamic secret from",
                  "type": "string"
                },
                "provider": {
                  "description": "Vault provider common spec",
                  "type": "object",
                  "required": [
                    "server"
                  ],
                  "properties": {
                    "auth": {
                      "description": "Auth configures how secret-manager authenticates with the Vault server.",
                      "type": "object",
                      "properties": {
                        "appRole": {
                          "description": "AppRole authenticates with Vault using the App Role auth mechanism,\nwith the role and secret stored in a Kubernetes Secret resource.",
                          "type": "object",
                          "required": [
                            "path",
                            "secretRef"
                          ],
                          "properties": {
                            "path": {
                              "description": "Path where the App Role authentication backend is mounted\nin Vault, e.g: \"approle\"",
                              "type": "string",
                              "default": "approle"
                            },
                            "roleId": {
                              "description": "RoleID configured in the App Role authentication backend when setting\nup the authentication backend in Vault.",
                              "type": "string"
                            },
                            "roleRef": {
                              "description": "Reference to a key in a Secret that contains the App Role ID used\nto authenticate with Vault.\nThe `key` field must be specified and denotes which entry within the Secret\nresource is used as the app role id.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            },
                            "secretRef": {
                              "description": "Reference to a key in a Secret that contains the App Role secret used\nto authenticate with Vault.\nThe `key` field must be specified and denotes which entry within the Secret\nresource is used as the app role secret.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "cert": {
                          "description": "Cert authenticates with TLS Certificates by passing client certificate, private key and ca certificate\nCert authentication method",
                          "type": "object",
                          "properties": {
                            "clientCert": {
                              "description": "ClientCert is a certificate to authenticate using the Cert Vault\nauthentication method",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            },
                            "secretRef": {
                              "description": "SecretRef to a key in a Secret resource containing client private key to\nauthenticate with Vault using the Cert authentication method",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "iam": {
                          "description": "Iam authenticates with vault by passing a special AWS request signed with AWS IAM credentials\nAWS IAM authentication method",
                          "type": "object",
                          "required": [
                            "vaultRole"
                          ],
                          "properties": {
                            "externalID": {
                              "description": "AWS External ID set on assumed IAM roles",
                              "type": "string"
                            },
                            "jwt": {
                              "description": "Specify a service account with IRSA enabled",
                              "type": "object",
                              "properties": {
                                "serviceAccountRef": {
                                  "description": "A reference to a ServiceAccount resource.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "audiences": {
                                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "description": "The name of the ServiceAccount resource being referred to.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                      "type": "string",
                                      "maxLength": 63,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "path": {
                              "description": "Path where the AWS auth method is enabled in Vault, e.g: \"aws\"",
                              "type": "string"
                            },
                            "region": {
                              "description": "AWS region",
                              "type": "string"
                            },
                            "role": {
                              "description": "This is the AWS role to be assumed before talking to vault",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Specify credentials in a Secret object",
                              "type": "object",
                              "properties": {
                                "accessKeyIDSecretRef": {
                                  "description": "The AccessKeyID is used for authentication",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[-._a-zA-Z0-9]+$"
                                    },
                                    "name": {
                                      "description": "The name of the Secret resource being referred to.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                    },
                                    "namespace": {
                                      "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                      "type": "string",
                                      "maxLength": 63,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "secretAccessKeySecretRef": {
                                  "description": "The SecretAccessKey is used for authentication",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[-._a-zA-Z0-9]+$"
                                    },
                                    "name": {
                                      "description": "The name of the Secret resource being referred to.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                    },
                                    "namespace": {
                                      "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                      "type": "string",
                                      "maxLength": 63,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "sessionTokenSecretRef": {
                                  "description": "The SessionToken used for authentication\nThis must be defined if AccessKeyID and SecretAccessKey are temporary credentials\nsee: https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[-._a-zA-Z0-9]+$"
                                    },
                                    "name": {
                                      "description": "The name of the Secret resource being referred to.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                    },
                                    "namespace": {
                                      "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                      "type": "string",
                                      "maxLength": 63,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "vaultAwsIamServerID": {
                              "description": "X-Vault-AWS-IAM-Server-ID is an additional header used by Vault IAM auth method to mitigate against different types of replay attacks. More details here: https://developer.hashicorp.com/vault/docs/auth/aws",
                              "type": "string"
                            },
                            "vaultRole": {
                              "description": "Vault Role. In vault, a role describes an identity with a set of permissions, groups, or policies you want to attach a user of the secrets engine",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "jwt": {
                          "description": "Jwt authenticates with Vault by passing role and JWT token using the\nJWT/OIDC authentication method",
                          "type": "object",
                          "required": [
                            "path"
                          ],
                          "properties": {
                            "kubernetesServiceAccountToken": {
                              "description": "Optional ServiceAccountToken specifies the Kubernetes service account for which to request\na token for with the `TokenRequest` API.",
                              "type": "object",
                              "required": [
                                "serviceAccountRef"
                              ],
                              "properties": {
                                "audiences": {
                                  "description": "Optional audiences field that will be used to request a temporary Kubernetes service\naccount token for the service account referenced by `serviceAccountRef`.\nDefaults to a single audience `vault` it not specified.\nDeprecated: use serviceAccountRef.Audiences instead",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "expirationSeconds": {
                                  "description": "Optional expiration time in seconds that will be used to request a temporary\nKubernetes service account token for the service account referenced by\n`serviceAccountRef`.\nDeprecated: this will be removed in the future.\nDefaults to 10 minutes.",
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "serviceAccountRef": {
                                  "description": "Service account field containing the name of a kubernetes ServiceAccount.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "audiences": {
                                      "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "name": {
                                      "description": "The name of the ServiceAccount resource being referred to.",
                                      "type": "string",
                                      "maxLength": 253,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                    },
                                    "namespace": {
                                      "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                      "type": "string",
                                      "maxLength": 63,
                                      "minLength": 1,
                                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "path": {
                              "description": "Path where the JWT authentication backend is mounted\nin Vault, e.g: \"jwt\"",
                              "type": "string",
                              "default": "jwt"
                            },
                            "role": {
                              "description": "Role is a JWT role to authenticate using the JWT/OIDC Vault\nauthentication method",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Optional SecretRef that refers to a key in a Secret resource containing JWT token to\nauthenticate with Vault using the JWT/OIDC authentication method.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "kubernetes": {
                          "description": "Kubernetes authenticates with Vault by passing the ServiceAccount\ntoken stored in the named Secret resource to the Vault server.",
                          "type": "object",
                          "required": [
                            "mountPath",
                            "role"
                          ],
                          "properties": {
                            "mountPath": {
                              "description": "Path where the Kubernetes authentication backend is mounted in Vault, e.g:\n\"kubernetes\"",
                              "type": "string",
                              "default": "kubernetes"
                            },
                            "role": {
                              "description": "A required field containing the Vault Role to assume. A Role binds a\nKubernetes ServiceAccount with a set of Vault policies.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "Optional secret field containing a Kubernetes ServiceAccount JWT used\nfor authenticating with Vault. If a name is specified without a key,\n`token` is the default. If one is not specified, the one bound to\nthe controller will be used.",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            },
                            "serviceAccountRef": {
                              "description": "Optional service account field containing the name of a kubernetes ServiceAccount.\nIf the service account is specified, the service account secret token JWT will be used\nfor authenticating with Vault. If the service account selector is not supplied,\nthe secretRef will be used instead.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "audiences": {
                                  "description": "Audience specifies the `aud` claim for the service account token\nIf the service account uses a well-known annotation for e.g. IRSA or GCP Workload Identity\nthen this audiences will be appended to the list",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "The name of the ServiceAccount resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "Namespace of the resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "ldap": {
                          "description": "Ldap authenticates with Vault by passing username/password pair using\nthe LDAP authentication method",
                          "type": "object",
                          "required": [
                            "path",
                            "username"
                          ],
                          "properties": {
                            "path": {
                              "description": "Path where the LDAP authentication backend is mounted\nin Vault, e.g: \"ldap\"",
                              "type": "string",
                              "default": "ldap"
                            },
                            "secretRef": {
                              "description": "SecretRef to a key in a Secret resource containing password for the LDAP\nuser used to authenticate with Vault using the LDAP authentication\nmethod",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            },
                            "username": {
                              "description": "Username is an LDAP username used to authenticate using the LDAP Vault\nauthentication method",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "namespace": {
                          "description": "Name of the vault namespace to authenticate to. This can be different than the namespace your secret is in.\nNamespaces is a set of features within Vault Enterprise that allows\nVault environments to support Secure Multi-tenancy. e.g: \"ns1\".\nMore about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces\nThis will default to Vault.Namespace field if set, or empty otherwise",
                          "type": "string"
                        },
                        "tokenSecretRef": {
                          "description": "TokenSecretRef authenticates with Vault by presenting a token.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "userPass": {
                          "description": "UserPass authenticates with Vault by passing username/password pair",
                          "type": "object",
                          "required": [
                            "path",
                            "username"
                          ],
                          "properties": {
                            "path": {
                              "description": "Path where the UserPassword authentication backend is mounted\nin Vault, e.g: \"userpass\"",
                              "type": "string",
                              "default": "userpass"
                            },
                            "secretRef": {
                              "description": "SecretRef to a key in a Secret resource containing password for the\nuser used to authenticate with Vault using the UserPass authentication\nmethod",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[-._a-zA-Z0-9]+$"
                                },
                                "name": {
                                  "description": "The name of the Secret resource being referred to.",
                                  "type": "string",
                                  "maxLength": 253,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                                },
                                "namespace": {
                                  "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                                  "type": "string",
                                  "maxLength": 63,
                                  "minLength": 1,
                                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                                }
                              },
                              "additionalProperties": false
                            },
                            "username": {
                              "description": "Username is a username used to authenticate using the UserPass Vault\nauthentication method",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "caBundle": {
                      "description": "PEM encoded CA bundle used to validate Vault server certificate. Only used\nif the Server URL is using HTTPS protocol. This parameter is ignored for\nplain HTTP protocol connection. If not set the system root certificates\nare used to validate the TLS connection.",
                      "type": "string",
                      "format": "byte"
                    },
                    "caProvider": {
                      "description": "The provider for the CA bundle to use to validate Vault server certificate.",
                      "type": "object",
                      "required": [
                        "name",
                        "type"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key where the CA certificate can be found in the Secret or ConfigMap.",
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[-._a-zA-Z0-9]+$"
                        },
                        "name": {
                          "description": "The name of the object located at the provider type.",
                          "type": "string",
                          "maxLength": 253,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                        },
                        "namespace": {
                          "description": "The namespace the Provider type is in.\nCan only be defined when used in a ClusterSecretStore.",
                          "type": "string",
                          "maxLength": 63,
                          "minLength": 1,
                          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                        },
                        "type": {
                          "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                          "type": "string",
                          "enum": [
                            "Secret",
                            "ConfigMap"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "forwardInconsistent": {
                      "description": "ForwardInconsistent tells Vault to forward read-after-write requests to the Vault\nleader instead of simply retrying within a loop. This can increase performance if\nthe option is enabled serverside.\nhttps://www.vaultproject.io/docs/configuration/replication#allow_forwarding_via_header",
                      "type": "boolean"
                    },
                    "headers": {
                      "description": "Headers to be added in Vault request",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Name of the vault namespace. Namespaces is a set of features within Vault Enterprise that allows\nVault environments to support Secure Multi-tenancy. e.g: \"ns1\".\nMore about namespaces can be found here https://www.vaultproject.io/docs/enterprise/namespaces",
                      "type": "string"
                    },
                    "path": {
                      "description": "Path is the mount path of the Vault KV backend endpoint, e.g:\n\"secret\". The v2 KV secret engine version specific \"/data\" path suffix\nfor fetching secrets from Vault is optional and will be appended\nif not present in specified path.",
                      "type": "string"
                    },
                    "readYourWrites": {
                      "description": "ReadYourWrites ensures isolated read-after-write semantics by\nproviding discovered cluster replication states in each request.\nMore information about eventual consistency in Vault can be found here\nhttps://www.vaultproject.io/docs/enterprise/consistency",
                      "type": "boolean"
                    },
                    "server": {
                      "description": "Server is the connection address for the Vault server, e.g: \"https://vault.example.com:8200\".",
                      "type": "string"
                    },
                    "tls": {
                      "description": "The configuration used for client side related TLS communication, when the Vault server\nrequires mutual authentication. Only used if the Server URL is using HTTPS protocol.\nThis parameter is ignored for plain HTTP protocol connection.\nIt's worth noting this configuration is different from the \"TLS certificates auth method\",\nwhich is available under the `auth.cert` section.",
                      "type": "object",
                      "properties": {
                        "certSecretRef": {
                          "description": "CertSecretRef is a certificate added to the transport layer\nwhen communicating with the Vault server.\nIf no key for the Secret is specified, external-secret will default to 'tls.crt'.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "keySecretRef": {
                          "description": "KeySecretRef to a key in a Secret resource containing client private key\nadded to the transport layer when communicating with the Vault server.\nIf no key for the Secret is specified, external-secret will default to 'tls.key'.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "version": {
                      "description": "Version is the Vault KV secret engine version. This can be either \"v1\" or\n\"v2\". Version defaults to \"v2\".",
                      "type": "string",
                      "default": "v2",
                      "enum": [
                        "v1",
                        "v2"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "resultType": {
                  "description": "Result type defines which data is returned from the generator.\nBy default it is the \"data\" section of the Vault API response.\nWhen using e.g. /auth/token/create the \"data\" section is empty but\nthe \"auth\" section contains the generated token.\nPlease refer to the vault docs regarding the result data structure.\nAdditionally, accessing the raw response is possibly by using \"Raw\" result type.",
                  "type": "string",
                  "default": "Data",
                  "enum": [
                    "Data",
                    "Auth",
                    "Raw"
                  ]
                },
                "retrySettings": {
                  "description": "Used to configure http retries if failed",
                  "type": "object",
                  "properties": {
                    "maxRetries": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "retryInterval": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "webhookSpec": {
              "description": "WebhookSpec controls the behavior of the external generator. Any body parameters should be passed to the server through the parameters field.",
              "type": "object",
              "required": [
                "result",
                "url"
              ],
              "properties": {
                "auth": {
                  "description": "Auth specifies a authorization protocol. Only one protocol may be set.",
                  "type": "object",
                  "maxProperties": 1,
                  "minProperties": 1,
                  "properties": {
                    "ntlm": {
                      "description": "NTLMProtocol configures the store to use NTLM for auth",
                      "type": "object",
                      "required": [
                        "passwordSecret",
                        "usernameSecret"
                      ],
                      "properties": {
                        "passwordSecret": {
                          "description": "A reference to a specific 'key' within a Secret resource.\nIn some instances, `key` is a required field.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        },
                        "usernameSecret": {
                          "description": "A reference to a specific 'key' within a Secret resource.\nIn some instances, `key` is a required field.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "A key in the referenced Secret.\nSome instances of this field may be defaulted, in others it may be required.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[-._a-zA-Z0-9]+$"
                            },
                            "name": {
                              "description": "The name of the Secret resource being referred to.",
                              "type": "string",
                              "maxLength": 253,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                            },
                            "namespace": {
                              "description": "The namespace of the Secret resource being referred to.\nIgnored if referent is not cluster-scoped, otherwise defaults to the namespace of the referent.",
                              "type": "string",
                              "maxLength": 63,
                              "minLength": 1,
                              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "body": {
                  "description": "Body",
                  "type": "string"
                },
                "caBundle": {
                  "description": "PEM encoded CA bundle used to validate webhook server certificate. Only used\nif the Server URL is using HTTPS protocol. This parameter is ignored for\nplain HTTP protocol connection. If not set the system root certificates\nare used to validate the TLS connection.",
                  "type": "string",
                  "format": "byte"
                },
                "caProvider": {
                  "description": "The provider for the CA bundle to use to validate webhook server certificate.",
                  "type": "object",
                  "required": [
                    "name",
                    "type"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key where the CA certificate can be found in the Secret or ConfigMap.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[-._a-zA-Z0-9]+$"
                    },
                    "name": {
                      "description": "The name of the object located at the provider type.",
                      "type": "string",
                      "maxLength": 253,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                    },
                    "namespace": {
                      "description": "The namespace the Provider type is in.",
                      "type": "string",
                      "maxLength": 63,
                      "minLength": 1,
                      "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                    },
                    "type": {
                      "description": "The type of provider to use such as \"Secret\", or \"ConfigMap\".",
                      "type": "string",
                      "enum": [
                        "Secret",
                        "ConfigMap"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "headers": {
                  "description": "Headers",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "method": {
                  "description": "Webhook Method",
                  "type": "string"
                },
                "result": {
                  "description": "Result formatting",
                  "type": "object",
                  "properties": {
                    "jsonPath": {
                      "description": "Json path of return value",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "secrets": {
                  "description": "Secrets to fill in templates\nThese secrets will be passed to the templating function as key value pairs under the given name",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "secretRef"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of this secret in templates",
                        "type": "string"
                      },
                      "secretRef": {
                        "description": "Secret ref to fill in credentials",
                        "type": "object",
                        "properties": {
                          "key": {
                            "description": "The key where the token is found.",
                            "type": "string",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^[-._a-zA-Z0-9]+$"
                          },
                          "name": {
                            "description": "The name of the Secret resource being referred to.",
                            "type": "string",
                            "maxLength": 253,
                            "minLength": 1,
                            "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "timeout": {
                  "description": "Timeout",
                  "type": "string"
                },
                "url": {
                  "description": "Webhook url to call",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "kind": {
          "description": "Kind the kind of this generator.",
          "type": "string",
          "enum": [
            "ACRAccessToken",
            "ECRAuthorizationToken",
            "Fake",
            "GCRAccessToken",
            "GithubAccessToken",
            "QuayAccessToken",
            "Password",
            "SSHKey",
            "STSSessionToken",
            "UUID",
            "VaultDynamicSecret",
            "Webhook",
            "Grafana"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
