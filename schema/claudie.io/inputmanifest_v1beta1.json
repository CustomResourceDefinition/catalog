{
  "description": "InputManifest is a definition of the user's infrastructure.\nIt contains cloud provider specification,\nnodepool specification, Kubernetes and loadbalancer clusters.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Specification of the desired behaviour of the InputManifest",
      "type": "object",
      "properties": {
        "kubernetes": {
          "description": "Kubernetes list of Kubernetes cluster this manifest will manage.",
          "type": "object",
          "properties": {
            "clusters": {
              "description": "List of Kubernetes clusters Claudie will create.",
              "type": "array",
              "items": {
                "description": "Collection of data used to define a Kubernetes cluster.",
                "type": "object",
                "required": [
                  "name",
                  "network",
                  "pools",
                  "version"
                ],
                "properties": {
                  "installationProxy": {
                    "description": "General information about a proxy used to build a K8s cluster.",
                    "type": "object",
                    "required": [
                      "mode"
                    ],
                    "properties": {
                      "endpoint": {
                        "description": "Endpoint defines the proxy endpoint. If undefined, the default value is http://proxy.claudie.io:8880.",
                        "type": "string"
                      },
                      "mode": {
                        "description": "Mode defines if the proxy mode (on/off/default). If undefined, the default mode is used.",
                        "type": "string"
                      },
                      "noProxy": {
                        "description": "NoProxy is a comma-separated list of values that will be added to the default NoProxy list used by Claudie.\n\nThe default no proxy list is: 127.0.0.1/8,localhost,cluster.local,10.244.0.0/16,10.96.0.0/12\"\nAny values specified will be appended to the end of the default NoProxy list.\nThis field only has an effect if the Proxy is turned on.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "Name of the Kubernetes cluster. Each cluster will have a random hash appended to the name, so the whole name will be of format \u003cname\u003e-\u003chash\u003e.",
                    "type": "string"
                  },
                  "network": {
                    "description": "Network range for the VPN of the cluster. The value should be defined in format A.B.C.D/mask.",
                    "type": "string"
                  },
                  "pools": {
                    "description": "List of nodepool names this cluster will use.",
                    "type": "object",
                    "required": [
                      "compute",
                      "control"
                    ],
                    "properties": {
                      "compute": {
                        "description": "List of nodepool names, that will represent compute nodes.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "control": {
                        "description": "List of nodepool names, that will represent control plane nodes.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "version": {
                    "description": "Version should be defined in format vX.Y. In terms of supported versions of Kubernetes,\nClaudie follows kubeone releases and their supported versions.\nThe current kubeone version used in Claudie is 1.8.1.\nTo see the list of supported versions, please refer to kubeone documentation.\nhttps://docs.kubermatic.com/kubeone/v1.8/architecture/compatibility/supported-versions/",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "loadBalancers": {
          "type": "object",
          "properties": {
            "clusters": {
              "description": "A list of load balancers clusters.",
              "type": "array",
              "items": {
                "description": "Collection of data used to define a loadbalancer cluster. Defines loadbalancer clusters.",
                "type": "object",
                "required": [
                  "name",
                  "pools",
                  "roles",
                  "targetedK8s"
                ],
                "properties": {
                  "dns": {
                    "description": "Specification of the loadbalancer's DNS record.",
                    "type": "object",
                    "required": [
                      "dnsZone",
                      "provider"
                    ],
                    "properties": {
                      "alternativeNames": {
                        "description": "Alternative names that will be created in addition to the hostname. Giving the ability\nto have a loadbalancer for multiple hostnames.\n\n- api.example.com\n\n- apiv2.example.com",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dnsZone": {
                        "description": "DNS zone inside of which the records will be created. GCP/AWS/OCI/Azure/Cloudflare/Hetzner DNS zone is accepted",
                        "type": "string"
                      },
                      "hostname": {
                        "description": "Custom hostname for your A record. If left empty, the hostname will be a random hash.",
                        "type": "string"
                      },
                      "provider": {
                        "description": "Name of provider to be used for creating an A record entry in defined DNS zone.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "Name of the loadbalancer.",
                    "type": "string"
                  },
                  "pools": {
                    "description": "List of nodepool names this loadbalancer will use. Remember, that nodepools defined\nin nodepools are only \"blueprints\". The actual nodepool will be created once referenced here.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "roles": {
                    "description": "List of roles the loadbalancer uses.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "targetedK8s": {
                    "description": "Name of the Kubernetes cluster targeted by this loadbalancer.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "roles": {
              "description": "List of roles loadbalancers use to forward the traffic. Single role can be used in multiple loadbalancer clusters.",
              "type": "array",
              "items": {
                "description": "Role defines a concrete loadbalancer configuration. A Single loadbalancer can have multiple roles.",
                "type": "object",
                "required": [
                  "name",
                  "port",
                  "protocol",
                  "targetPools",
                  "targetPort"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the role. Used as a reference in clusters.",
                    "type": "string",
                    "minLength": 1
                  },
                  "port": {
                    "description": "Port of the incoming traffic on the loadbalancer.",
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 0
                  },
                  "protocol": {
                    "description": "Protocol of the rule. Allowed values are: tcp, udp.",
                    "type": "string",
                    "enum": [
                      "tcp",
                      "udp"
                    ]
                  },
                  "settings": {
                    "description": "Additional settings for a role.",
                    "type": "object",
                    "required": [
                      "proxyProtocol",
                      "stickySessions"
                    ],
                    "properties": {
                      "proxyProtocol": {
                        "type": "boolean"
                      },
                      "stickySessions": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetPools": {
                    "description": "Defines nodepools of the targeted K8s cluster, from which nodes will be used for loadbalancing.",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string"
                    }
                  },
                  "targetPort": {
                    "description": "Port where loadbalancer forwards the traffic.",
                    "type": "integer",
                    "format": "int32",
                    "maximum": 65535,
                    "minimum": 0
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "nodePools": {
          "description": "NodePool is a map of dynamic nodepools and static nodepools which will be used to\nform kubernetes or loadbalancer clusters.",
          "type": "object",
          "properties": {
            "dynamic": {
              "description": "Dynamic nodepools define nodepools dynamically created by Claudie.",
              "type": "array",
              "items": {
                "description": "DynamicNodePool List of dynamically to-be-created nodepools of not yet existing machines, used for Kubernetes or loadbalancer clusters.\nThese are only blueprints, and will only be created per reference in kubernetes or loadBalancer clusters.\n\nE.g. if the nodepool isn't used, it won't even be created. Or if the same nodepool is used in two different clusters,\nit will be created twice. In OOP analogy, a dynamic nodepool would be a class\nthat would get instantiated N \u003e= 0 times depending on which clusters reference it.",
                "type": "object",
                "required": [
                  "image",
                  "name",
                  "providerSpec",
                  "serverType"
                ],
                "properties": {
                  "annotations": {
                    "description": "User defined annotations for this nodepool.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "autoscaler": {
                    "description": "Autoscaler configuration for this nodepool. Mutually exclusive with count.",
                    "type": "object",
                    "properties": {
                      "max": {
                        "description": "Maximum number of nodes in nodepool.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "min": {
                        "description": "Minimum number of nodes in nodepool.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "count": {
                    "description": "Number of the nodes in the nodepool. Mutually exclusive with autoscaler.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "image": {
                    "description": "OS image of the machine. Currently, only Ubuntu 22.04 AMD64 images are supported.",
                    "type": "string"
                  },
                  "labels": {
                    "description": "User defined labels for this nodepool.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "machineSpec": {
                    "description": "MachineSpec further describe the properties of the selected server type.",
                    "type": "object",
                    "required": [
                      "cpuCount",
                      "memory"
                    ],
                    "properties": {
                      "cpuCount": {
                        "description": "CpuCount specifies the number of CPU cores to be used.",
                        "type": "integer"
                      },
                      "memory": {
                        "type": "integer"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "Name of the nodepool. Each nodepool will have a random hash appended to the name, so the whole name will be of format \u003cname\u003e-\u003chash\u003e.",
                    "type": "string"
                  },
                  "providerSpec": {
                    "description": "Collection of provider data to be used while creating the nodepool.",
                    "type": "object",
                    "required": [
                      "name",
                      "region"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the provider instance specified in providers",
                        "type": "string"
                      },
                      "region": {
                        "description": "Region of the nodepool.",
                        "type": "string"
                      },
                      "zone": {
                        "description": "Zone of the nodepool.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "serverType": {
                    "description": "\tType of the machines in the nodepool. Currently, only AMD64 machines are supported.",
                    "type": "string"
                  },
                  "storageDiskSize": {
                    "description": "Size of the storage disk on the nodes in the nodepool in GB. The OS disk is created automatically\nwith predefined size of 100GB for kubernetes nodes and 50GB for Loadbalancer nodes.\nThe value must be either -1 (no disk is created), or \u003e= 50. If no value is specified, 50 is used.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "taints": {
                    "description": "User defined taints for this nodepool.",
                    "type": "array",
                    "items": {
                      "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
                      "type": "object",
                      "required": [
                        "effect",
                        "key"
                      ],
                      "properties": {
                        "effect": {
                          "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Required. The taint key to be applied to a node.",
                          "type": "string"
                        },
                        "timeAdded": {
                          "description": "TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "value": {
                          "description": "The taint value corresponding to the taint key.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "static": {
              "description": "Static nodepools define nodepools of already existing nodes.",
              "type": "array",
              "items": {
                "description": "StaticNodePool defines nodepool of already existing nodes, managed outside of Claudie.",
                "type": "object",
                "required": [
                  "name",
                  "nodes"
                ],
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "description": "Name of the nodepool.",
                    "type": "string"
                  },
                  "nodes": {
                    "description": "List of static nodes for a particular static nodepool.",
                    "type": "array",
                    "items": {
                      "description": "StaticNode defines a single static node for a particular static nodepool.",
                      "type": "object",
                      "required": [
                        "endpoint",
                        "secretRef"
                      ],
                      "properties": {
                        "endpoint": {
                          "description": "Endpoint under which Claudie will access this node.",
                          "type": "string"
                        },
                        "secretRef": {
                          "description": "Secret reference to the private key of the node.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "name is unique within a namespace to reference a secret resource.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "namespace defines the space within which the secret name must be unique.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "username": {
                          "description": "Username with root access. Used in SSH connection also.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "taints": {
                    "type": "array",
                    "items": {
                      "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
                      "type": "object",
                      "required": [
                        "effect",
                        "key"
                      ],
                      "properties": {
                        "effect": {
                          "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Required. The taint key to be applied to a node.",
                          "type": "string"
                        },
                        "timeAdded": {
                          "description": "TimeAdded represents the time at which the taint was added.\nIt is only written for NoExecute taints.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "value": {
                          "description": "The taint value corresponding to the taint key.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "providers": {
          "description": "Providers list of defined cloud provider configuration\nthat will be used while infrastructure provisioning.",
          "type": "array",
          "items": {
            "description": "Providers list of defined cloud provider configuration\nthat will be used while infrastructure provisioning.",
            "type": "object",
            "required": [
              "name",
              "providerType",
              "secretRef"
            ],
            "properties": {
              "name": {
                "description": "Name is the name of the provider specification. It has to be unique across all providers.",
                "type": "string",
                "maxLength": 32,
                "minLength": 1
              },
              "providerType": {
                "description": "ProviderType type of a provider.\nA list of available providers can be found at https://docs.claudie.io/latest/input-manifest/providers/aws/",
                "type": "string",
                "enum": [
                  "gcp",
                  "hetzner",
                  "aws",
                  "oci",
                  "azure",
                  "cloudflare",
                  "hetznerdns",
                  "genesiscloud"
                ]
              },
              "secretRef": {
                "description": "SecretReference represents a Secret Reference. It has enough information to retrieve secret\nin any namespace",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "name is unique within a namespace to reference a secret resource.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "namespace defines the space within which the secret name must be unique.",
                    "type": "string"
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-map-type": "atomic"
              },
              "templates": {
                "description": "External templates for building the cluster infrastructure.",
                "type": "object",
                "required": [
                  "path",
                  "repository"
                ],
                "properties": {
                  "path": {
                    "type": "string"
                  },
                  "repository": {
                    "type": "string"
                  },
                  "tag": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Most recently observed status of the InputManifest",
      "type": "object",
      "properties": {
        "clusters": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "phase": {
                "type": "string"
              },
              "state": {
                "type": "string"
              }
            }
          }
        },
        "state": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
