{
  "description": "ManagedKafkaConsumerGroup is the Schema for the ManagedKafkaConsumerGroup API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ManagedKafkaConsumerGroupSpec defines the desired state of ManagedKafkaConsumerGroup",
      "type": "object",
      "required": [
        "clusterRef",
        "location"
      ],
      "properties": {
        "clusterRef": {
          "description": "ClusterRef defines the resource reference to ManagedKafkaCluster, which \"External\" field holds the GCP identifier for the KRM object.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed ManagedKafkaCluster resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/clusters/{{clusterID}}\".",
              "type": "string"
            },
            "name": {
              "description": "The name of a ManagedKafkaCluster resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a ManagedKafkaCluster resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "location": {
          "type": "string"
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The ManagedKafkaConsumerGroup name. If not given, the metadata.name will be used.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ManagedKafkaConsumerGroupStatus defines the config connector machine state of ManagedKafkaConsumerGroup",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the ManagedKafkaConsumerGroup resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "topics": {
              "description": "Optional. Metadata for this consumer group for all topics it has metadata for. The key of the map is a topic name, structured like: projects/{project}/locations/{location}/clusters/{cluster}/topics/{topic}",
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "partitions": {
                    "description": "Optional. Metadata for this consumer group and topic for all partition indexes it has metadata for.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "key",
                        "offset"
                      ],
                      "properties": {
                        "key": {
                          "description": "Required. Key of the partition index for topic metadata in this consumer group.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "metadata": {
                          "description": "Optional. The associated metadata for this partition, or empty if it does not exist.",
                          "type": "string"
                        },
                        "offset": {
                          "description": "Required. The current offset for this partition, or 0 if no offset has been committed.",
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
