{
  "description": "RunJob is the Schema for the RunJob API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "RunJobSpec defines the desired state of RunJob",
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "annotations": {
          "description": "Optional. User-provided annotations, which are stored in GCP.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "binaryAuthorization": {
          "description": "Optional. Settings for Binary Authorization feature.",
          "type": "object",
          "properties": {
            "breakglassJustification": {
              "description": "Optional. If present, indicates to use Breakglass using this justification. If use_default is False, then it must be empty. For more information on breakglass, see https://cloud.google.com/binary-authorization/docs/using-breakglass",
              "type": "string"
            },
            "useDefault": {
              "description": "Optional. If True, indicates to use the default project's binary authorization policy. If False, binary authorization will be disabled.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "client": {
          "description": "Optional. Arbitrary identifier for the API client.",
          "type": "string"
        },
        "clientVersion": {
          "description": "Optional. Arbitrary version identifier for the API client.",
          "type": "string"
        },
        "launchStage": {
          "description": "Optional. The launch stage of the job. Possible values are `LAUNCH_STAGE_UNSPECIFIED`, `UNIMPLEMENTED`, `PRELAUNCH`, `EARLY_ACCESS`, `ALPHA`, `BETA`, `GA`, `DEPRECATED`.",
          "type": "string"
        },
        "location": {
          "description": "The location of the cloud run job",
          "type": "string"
        },
        "projectRef": {
          "description": "The project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The RunJob name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "template": {
          "description": "Required. The template used to create executions for this Job.",
          "type": "object",
          "properties": {
            "annotations": {
              "description": "Unstructured key value map that may be set by external tools to store and\n arbitrary metadata. They are not queryable and should be preserved\n when modifying objects.\n\n \u003cp\u003eCloud Run API v2 does not support annotations with `run.googleapis.com`,\n `cloud.googleapis.com`, `serving.knative.dev`, or `autoscaling.knative.dev`\n namespaces, and they will be rejected. All system annotations in v1 now\n have a corresponding field in v2 ExecutionTemplate.\n\n \u003cp\u003eThis field follows Kubernetes annotations' namespacing, limits, and\n rules.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "parallelism": {
              "description": "Optional. Specifies the maximum desired number of tasks the execution should run at given time. When the job is run, if this field is 0 or unset, the maximum possible value will be used for that execution. The actual number of tasks running in steady state will be less than this number when there are fewer tasks waiting to be completed remaining, i.e. when the work left to do is less than max parallelism.",
              "type": "integer",
              "format": "int32"
            },
            "taskCount": {
              "description": "Specifies the desired number of tasks the execution should run. Setting to 1 means that parallelism is limited to 1 and the success of that task signals the success of the execution. Defaults to 1.",
              "type": "integer",
              "format": "int32"
            },
            "template": {
              "description": "Required. Describes the task(s) that will be created when executing an execution.",
              "type": "object",
              "properties": {
                "containers": {
                  "description": "Holds the single container that defines the unit of execution for this task.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "description": "List of environment variables to set in the container.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Required. Name of the environment variable. Must not exceed 32768 characters.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Literal value of the environment variable. Defaults to \"\", and the maximum length is 32768 bytes. Variable references are not supported in Cloud Run.",
                              "type": "string"
                            },
                            "valueSource": {
                              "description": "Source for the environment variable's value.",
                              "type": "object",
                              "properties": {
                                "secretKeyRef": {
                                  "description": "Selects a secret and a specific version from Cloud Secret Manager.",
                                  "type": "object",
                                  "properties": {
                                    "secretRef": {
                                      "description": "Required. The name of the secret in Cloud Secret  Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret}",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "required": [
                                            "name"
                                          ],
                                          "not": {
                                            "required": [
                                              "external"
                                            ]
                                          }
                                        },
                                        {
                                          "required": [
                                            "external"
                                          ],
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": [
                                                  "name"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "namespace"
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "properties": {
                                        "external": {
                                          "description": " If provided must be in the format `projects/*/secrets/*`.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The `name` field of a `SecretManagerSecret` resource.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "The `metadata.namespace` field of a `SecretManagerSecret` resource.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "versionRef": {
                                      "description": "The Cloud Secret Manager secret version. Can be 'latest' for the latest version, an integer for a specific version, or a version alias.",
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "required": [
                                            "name"
                                          ],
                                          "not": {
                                            "required": [
                                              "external"
                                            ]
                                          }
                                        },
                                        {
                                          "required": [
                                            "external"
                                          ],
                                          "not": {
                                            "anyOf": [
                                              {
                                                "required": [
                                                  "name"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "namespace"
                                                ]
                                              }
                                            ]
                                          }
                                        }
                                      ],
                                      "properties": {
                                        "external": {
                                          "description": " If provided must be in the format `projects/*/secrets/*/versions/*`.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "The `name` field of a `SecretManagerSecretVersion` resource.",
                                          "type": "string"
                                        },
                                        "namespace": {
                                          "description": "The `metadata.namespace` field of a `SecretManagerSecretVersion` resource.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "description": "Required. Name of the container image in Dockerhub, Google Artifact Registry, or Google Container Registry. If the host is not provided, Dockerhub is assumed.",
                        "type": "string"
                      },
                      "livenessProbe": {
                        "description": "Periodic probe of container liveness. Container will be restarted if the probe fails.",
                        "type": "object",
                        "properties": {
                          "failureThreshold": {
                            "description": "Optional. Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "Optional. HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified.",
                            "type": "object",
                            "properties": {
                              "httpHeaders": {
                                "description": "Optional. Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Required. The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Optional. The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Optional. Path to access on the HTTP server. Defaults to '/'.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Optional. Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "Optional. How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "Optional. TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified.",
                            "type": "object",
                            "properties": {
                              "port": {
                                "description": "Optional. Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Optional. Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name of the container specified as a DNS_LABEL (RFC 1123).",
                        "type": "string"
                      },
                      "ports": {
                        "description": "List of ports to expose from the container. Only a single port can be\n specified. The specified ports must be listening on all interfaces\n (0.0.0.0) within the container to be accessible.\n\n If omitted, a port number will be chosen and passed to the container\n through the PORT environment variable for the container to listen on.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "containerPort": {
                              "description": "Port number the container listens on. This must be a valid TCP port number, 0 \u003c container_port \u003c 65536.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "name": {
                              "description": "If specified, used to specify which protocol to use. Allowed values are \"http1\" and \"h2c\".",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "resources": {
                        "description": "Compute Resource requirements by this container.",
                        "type": "object",
                        "properties": {
                          "limits": {
                            "description": "Only `memory` and `cpu` keys in the map are supported.\n\n \u003cp\u003eNotes:\n  * The only supported values for CPU are '1', '2', '4', and '8'. Setting 4\n CPU requires at least 2Gi of memory. For more information, go to\n https://cloud.google.com/run/docs/configuring/cpu.\n   * For supported 'memory' values and syntax, go to\n  https://cloud.google.com/run/docs/configuring/memory-limits",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "startupProbe": {
                        "description": "Startup probe of application within the container. All other probes are disabled if a startup probe is provided, until it succeeds. Container will not be added to service endpoints if the probe fails.",
                        "type": "object",
                        "properties": {
                          "failureThreshold": {
                            "description": "Optional. Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "httpGet": {
                            "description": "Optional. HTTPGet specifies the http request to perform. Exactly one of httpGet, tcpSocket, or grpc must be specified.",
                            "type": "object",
                            "properties": {
                              "httpHeaders": {
                                "description": "Optional. Custom headers to set in the request. HTTP allows repeated headers.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Required. The header field name",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Optional. The header field value",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Optional. Path to access on the HTTP server. Defaults to '/'.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "initialDelaySeconds": {
                            "description": "Optional. Number of seconds after the container has started before the probe is initiated. Defaults to 0 seconds. Minimum value is 0. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "periodSeconds": {
                            "description": "Optional. How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. Maximum value for liveness probe is 3600. Maximum value for startup probe is 240. Must be greater or equal than timeout_seconds.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "tcpSocket": {
                            "description": "Optional. TCPSocket specifies an action involving a TCP port. Exactly one of httpGet, tcpSocket, or grpc must be specified.",
                            "type": "object",
                            "properties": {
                              "port": {
                                "description": "Optional. Port number to access on the container. Must be in the range 1 to 65535. If not specified, defaults to the exposed port of the container, which is the value of container.ports[0].containerPort.",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeoutSeconds": {
                            "description": "Optional. Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. Maximum value is 3600. Must be smaller than period_seconds.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "volumeMounts": {
                        "description": "Volume to mount into the container's filesystem.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "mountPath": {
                              "description": "Required. Path within the container at which the volume should be mounted. Must not contain ':'. For Cloud SQL volumes, it can be left empty, or must otherwise be `/cloudsql`. All instances defined in the Volume will be available as `/cloudsql/[instance]`. For more information on Cloud SQL volumes, visit https://cloud.google.com/sql/docs/mysql/connect-run",
                              "type": "string"
                            },
                            "name": {
                              "description": "Required. This must match the Name of a Volume.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "encryptionKeyRef": {
                  "description": "A reference to a customer managed encryption key (CMEK) to use to encrypt this container image. For more information, go to https://cloud.google.com/run/docs/securing/using-cmek",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "A reference to an externally managed KMSCryptoKey. Should be in the format `projects/[kms_project_id]/locations/[region]/keyRings/[key_ring_id]/cryptoKeys/[key]`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The `name` of a `KMSCryptoKey` resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `namespace` of a `KMSCryptoKey` resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "executionEnvironment": {
                  "description": "Optional. The execution environment being used to host this Task.",
                  "type": "string"
                },
                "maxRetries": {
                  "description": "Number of retries allowed per Task, before marking this Task failed. Defaults to 3.",
                  "type": "integer",
                  "format": "int32"
                },
                "serviceAccountRef": {
                  "description": "Optional. Email address of the IAM service account associated with the Task of a Job. The service account represents the identity of the running task, and determines what permissions the task has. If not provided, the task will use the project's default service account.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "The `email` field of an `IAMServiceAccount` resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "timeout": {
                  "description": "Optional. Max allowed time duration the Task may be active before the system will actively try to mark it failed and kill associated containers. This applies per attempt of a task, meaning each retry can run for the full timeout. Defaults to 600 seconds.",
                  "type": "string"
                },
                "volumes": {
                  "description": "Optional. A list of Volumes to make available to containers.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cloudSqlInstance": {
                        "description": "For Cloud SQL volumes, contains the specific instances that should be mounted. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run.",
                        "type": "object",
                        "properties": {
                          "instanceRefs": {
                            "description": "The Cloud SQL instance connection names, as can be found in https://console.cloud.google.com/sql/instances. Visit https://cloud.google.com/sql/docs/mysql/connect-run for more information on how to connect Cloud SQL and Cloud Run. Format: {project}:{location}:{instance}",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "required": [
                                    "name"
                                  ],
                                  "not": {
                                    "required": [
                                      "external"
                                    ]
                                  }
                                },
                                {
                                  "required": [
                                    "external"
                                  ],
                                  "not": {
                                    "anyOf": [
                                      {
                                        "required": [
                                          "name"
                                        ]
                                      },
                                      {
                                        "required": [
                                          "namespace"
                                        ]
                                      }
                                    ]
                                  }
                                }
                              ],
                              "properties": {
                                "external": {
                                  "description": "The SQLInstance selfLink, when not managed by Config Connector.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "The `name` field of a `SQLInstance` resource.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "The `namespace` field of a `SQLInstance` resource.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "emptyDir": {
                        "description": "Ephemeral storage used as a shared volume.",
                        "type": "object",
                        "properties": {
                          "medium": {
                            "description": "The medium on which the data is stored. Acceptable values today is only MEMORY or none. When none, the default will currently be backed by memory but could change over time. +optional",
                            "type": "string"
                          },
                          "sizeLimit": {
                            "description": "Limit on the storage usable by this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers. The default is nil which means that the limit is undefined. More info: https://cloud.google.com/run/docs/configuring/in-memory-volumes#configure-volume. Info in Kubernetes: https://kubernetes.io/docs/concepts/storage/volumes/#emptydir",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Required. Volume's name.",
                        "type": "string"
                      },
                      "secret": {
                        "description": "Secret represents a secret that should populate this volume.",
                        "type": "object",
                        "properties": {
                          "defaultMode": {
                            "description": "Integer representation of mode bits to use on created files by default.\n Must be a value between 0000 and 0777 (octal), defaulting to 0444.\n Directories within the path are not affected by  this setting.\n\n Notes\n\n * Internally, a umask of 0222 will be applied to any non-zero value.\n * This is an integer representation of the mode bits. So, the octal\n integer value should look exactly as the chmod numeric notation with a\n leading zero. Some examples: for chmod 640 (u=rw,g=r), set to 0640 (octal)\n or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or\n 493 (base-10).\n * This might be in conflict with other options that affect the\n file mode, like fsGroup, and the result can be other mode bits set.\n\n This might be in conflict with other options that affect the\n file mode, like fsGroup, and as a result, other mode bits could be set.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "items": {
                            "description": "If unspecified, the volume will expose a file whose name is the secret, relative to VolumeMount.mount_path. If specified, the key will be used as the version to fetch from Cloud Secret Manager and the path will be the name of the file exposed in the volume. When items are defined, they must specify a path and a version.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "description": "Integer octal mode bits to use on this file, must be a value between\n 01 and 0777 (octal). If 0 or not set, the Volume's default mode will be\n used.\n\n Notes\n\n * Internally, a umask of 0222 will be applied to any non-zero value.\n * This is an integer representation of the mode bits. So, the octal\n integer value should look exactly as the chmod numeric notation with a\n leading zero. Some examples: for chmod 640 (u=rw,g=r), set to 0640 (octal)\n or 416 (base-10). For chmod 755 (u=rwx,g=rx,o=rx), set to 0755 (octal) or\n 493 (base-10).\n * This might be in conflict with other options that affect the\n file mode, like fsGroup, and the result can be other mode bits set.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "path": {
                                  "description": "Required. The relative path of the secret in the container.",
                                  "type": "string"
                                },
                                "versionRef": {
                                  "description": "The Cloud Secret Manager secret version. Can be 'latest' for the latest value, or an integer or a secret alias for a specific version.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "name"
                                      ],
                                      "not": {
                                        "required": [
                                          "external"
                                        ]
                                      }
                                    },
                                    {
                                      "required": [
                                        "external"
                                      ],
                                      "not": {
                                        "anyOf": [
                                          {
                                            "required": [
                                              "name"
                                            ]
                                          },
                                          {
                                            "required": [
                                              "namespace"
                                            ]
                                          }
                                        ]
                                      }
                                    }
                                  ],
                                  "properties": {
                                    "external": {
                                      "description": " If provided must be in the format `projects/*/secrets/*/versions/*`.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The `name` field of a `SecretManagerSecretVersion` resource.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "The `metadata.namespace` field of a `SecretManagerSecretVersion` resource.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "secretRef": {
                            "description": "Required. The name of the secret in Cloud Secret Manager. Format: {secret} if the secret is in the same project. projects/{project}/secrets/{secret} if the secret is in a different project.",
                            "type": "object",
                            "oneOf": [
                              {
                                "required": [
                                  "name"
                                ],
                                "not": {
                                  "required": [
                                    "external"
                                  ]
                                }
                              },
                              {
                                "required": [
                                  "external"
                                ],
                                "not": {
                                  "anyOf": [
                                    {
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "namespace"
                                      ]
                                    }
                                  ]
                                }
                              }
                            ],
                            "properties": {
                              "external": {
                                "description": " If provided must be in the format `projects/*/secrets/*`.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The `name` field of a `SecretManagerSecret` resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "The `metadata.namespace` field of a `SecretManagerSecret` resource.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "vpcAccess": {
                  "description": "Optional. VPC Access configuration to use for this Task. For more information, visit https://cloud.google.com/run/docs/configuring/connecting-vpc.",
                  "type": "object",
                  "properties": {
                    "connectorRef": {
                      "description": "VPC Access connector name. Format: `projects/{project}/locations/{location}/connectors/{connector}`, where `{project}` can be project id or number. For more information on sending traffic to a VPC network via a connector, visit https://cloud.google.com/run/docs/configuring/vpc-connectors.",
                      "type": "object",
                      "oneOf": [
                        {
                          "required": [
                            "name"
                          ],
                          "not": {
                            "required": [
                              "external"
                            ]
                          }
                        },
                        {
                          "required": [
                            "external"
                          ],
                          "not": {
                            "anyOf": [
                              {
                                "required": [
                                  "name"
                                ]
                              },
                              {
                                "required": [
                                  "namespace"
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "properties": {
                        "external": {
                          "description": "A reference to an externally managed VPCAccessConnector resource. Should be in the format `projects/{project_id}/locations/{location}/connectors/{connector_id}`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of a VPCAccessConnector resource.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "The namespace of a VPCAccessConnector resource.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "egress": {
                      "description": "Optional. Traffic VPC egress settings. If not provided, it defaults to PRIVATE_RANGES_ONLY.",
                      "type": "string"
                    },
                    "networkInterfaces": {
                      "description": "Optional. Direct VPC egress settings. Currently only single network interface is supported.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "networkRef": {
                            "description": "Optional. The VPC network that the Cloud Run resource will be able to send traffic to. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If network is not specified, it will be looked up from the subnetwork.",
                            "type": "object",
                            "oneOf": [
                              {
                                "required": [
                                  "name"
                                ],
                                "not": {
                                  "required": [
                                    "external"
                                  ]
                                }
                              },
                              {
                                "required": [
                                  "external"
                                ],
                                "not": {
                                  "anyOf": [
                                    {
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "namespace"
                                      ]
                                    }
                                  ]
                                }
                              }
                            ],
                            "properties": {
                              "external": {
                                "description": "A reference to an externally managed Compute Network resource. Should be in the format `projects/{{projectID}}/global/networks/{{network}}`.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The `name` field of a `ComputeNetwork` resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "The `namespace` field of a `ComputeNetwork` resource.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "subnetworkRef": {
                            "description": "Optional. The VPC subnetwork that the Cloud Run resource will get IPs from. At least one of network or subnetwork must be specified. If both network and subnetwork are specified, the given VPC subnetwork must belong to the given VPC network. If subnetwork is not specified, the subnetwork with the same name with the network will be used.",
                            "type": "object",
                            "oneOf": [
                              {
                                "required": [
                                  "name"
                                ],
                                "not": {
                                  "required": [
                                    "external"
                                  ]
                                }
                              },
                              {
                                "required": [
                                  "external"
                                ],
                                "not": {
                                  "anyOf": [
                                    {
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "namespace"
                                      ]
                                    }
                                  ]
                                }
                              }
                            ],
                            "properties": {
                              "external": {
                                "description": "The ComputeSubnetwork selflink of form \"projects/{{project}}/regions/{{region}}/subnetworks/{{name}}\", when not managed by Config Connector.",
                                "type": "string"
                              },
                              "name": {
                                "description": "The `name` field of a `ComputeSubnetwork` resource.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "The `namespace` field of a `ComputeSubnetwork` resource.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "tags": {
                            "description": "Optional. Network tags applied to this Cloud Run resource.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "RunJobStatus defines the config connector machine state of RunJob",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "createTime": {
          "description": "Output only. The creation time.",
          "type": "string"
        },
        "creator": {
          "description": "Output only. Email address of the authenticated creator.",
          "type": "string"
        },
        "deleteTime": {
          "description": "Output only. The deletion time. It is only populated as a response to a Delete request.",
          "type": "string"
        },
        "etag": {
          "description": "Output only. A system-generated fingerprint for this version of the resource. May be used to detect modification conflict during updates.",
          "type": "string"
        },
        "executionCount": {
          "description": "Output only. Number of executions created for this job.",
          "type": "integer",
          "format": "int32"
        },
        "expireTime": {
          "description": "Output only. For a deleted resource, the time after which it will be permanently deleted.",
          "type": "string"
        },
        "externalRef": {
          "description": "A unique specifier for the RunJob resource in GCP.",
          "type": "string"
        },
        "lastModifier": {
          "description": "Output only. Email address of the last authenticated modifier.",
          "type": "string"
        },
        "latestCreatedExecution": {
          "description": "Output only. Name of the last created execution.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "completionStatus": {
                "description": "Status for the execution completion.",
                "type": "string"
              },
              "completionTime": {
                "description": "Creation timestamp of the execution.",
                "type": "string"
              },
              "createTime": {
                "description": "Creation timestamp of the execution.",
                "type": "string"
              },
              "deleteTime": {
                "description": "The deletion time of the execution. It is only populated as a response to a Delete request.",
                "type": "string"
              },
              "name": {
                "description": "Name of the execution.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "reconciling": {
          "description": "Output only. Returns true if the Job is currently being acted upon by the\nsystem to bring it into the desired state.\n\nWhen a new Job is created, or an existing one is updated, Cloud Run\nwill asynchronously perform all necessary steps to bring the Job to the\ndesired state. This process is called reconciliation.\nWhile reconciliation is in process, `observed_generation` and\n`latest_succeeded_execution`, will have transient values that might\nmismatch the intended state: Once reconciliation is over (and this field is\nfalse), there are two possible outcomes: reconciliation succeeded and the\nstate matches the Job, or there was an error,  and reconciliation failed.\nThis state can be found in `terminal_condition.state`.\n\nIf reconciliation succeeded, the following fields will match:\n`observed_generation` and `generation`, `latest_succeeded_execution` and\n`latest_created_execution`.\n\nIf reconciliation failed, `observed_generation` and\n`latest_succeeded_execution` will have the state of the last succeeded\nexecution or empty for newly created Job. Additional information on the\nfailure can be found in `terminal_condition` and `conditions`.",
          "type": "boolean"
        },
        "terminalCondition": {
          "description": "Output only. The Condition of this Job, containing its readiness status, and detailed error information in case it did not reach the desired state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "executionReason": {
                "description": "A reason for the execution condition.",
                "type": "string"
              },
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human readable message indicating details about the current status.",
                "type": "string"
              },
              "reason": {
                "description": "A common (service-level) reason for this condition.",
                "type": "string"
              },
              "revisionReason": {
                "description": "A reason for the revision condition.",
                "type": "string"
              },
              "severity": {
                "description": "How to interpret failures of this condition, one of Error, Warning, Info",
                "type": "string"
              },
              "state": {
                "description": "State of the condition.",
                "type": "string"
              },
              "type": {
                "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/main/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "uid": {
          "description": "Output only. Server assigned unique identifier for the Execution. The value is a UUID4 string and guaranteed to remain unchanged until the resource is deleted.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The last-modified time.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
