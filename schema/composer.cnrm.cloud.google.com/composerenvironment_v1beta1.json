{
  "description": "ComposerEnvironment is the Schema for the ComposerEnvironment API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ComposerEnvironmentSpec defines the desired state of ComposerEnvironment",
      "type": "object",
      "required": [
        "location",
        "projectRef"
      ],
      "properties": {
        "config": {
          "description": "Optional. Configuration parameters for this environment.",
          "type": "object",
          "properties": {
            "dataRetentionConfig": {
              "description": "Optional. The configuration setting for Airflow database data retention mechanism.",
              "type": "object",
              "properties": {
                "airflowMetadataRetentionConfig": {
                  "description": "Optional. The retention policy for airflow metadata database.",
                  "type": "object",
                  "properties": {
                    "retentionDays": {
                      "description": "Optional. How many days data should be retained for.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "retentionMode": {
                      "description": "Optional. Retention can be either enabled or disabled.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "taskLogsRetentionConfig": {
                  "description": "Optional. The configuration settings for task logs retention",
                  "type": "object",
                  "properties": {
                    "storageMode": {
                      "description": "Optional. The mode of storage for Airflow workers task logs.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "databaseConfig": {
              "description": "Optional. The configuration settings for Cloud SQL instance used internally by Apache Airflow software.",
              "type": "object",
              "properties": {
                "machineType": {
                  "description": "Optional. Cloud SQL machine type used by Airflow database. It has to be one of: db-n1-standard-2, db-n1-standard-4, db-n1-standard-8 or db-n1-standard-16. If not specified, db-n1-standard-2 will be used. Supported for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
                  "type": "string"
                },
                "zone": {
                  "description": "Optional. The Compute Engine zone where the Airflow database is created. If zone is provided, it must be in the region selected for the environment. If zone is not provided, a zone is automatically selected. The zone can only be set during environment creation. Supported for Cloud Composer environments in versions composer-2.*.*-airflow-*.*.*.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "encryptionConfig": {
              "description": "Optional. The encryption options for the Cloud Composer environment and its dependencies. Cannot be updated.",
              "type": "object",
              "properties": {
                "kmsKeyRef": {
                  "description": "Optional. Customer-managed Encryption Key available through Google's Key Management Service. Cannot be updated. If not specified, Google-managed key will be used.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "A reference to an externally managed KMSCryptoKey. Should be in the format `projects/[kms_project_id]/locations/[region]/keyRings/[key_ring_id]/cryptoKeys/[key]`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The `name` of a `KMSCryptoKey` resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `namespace` of a `KMSCryptoKey` resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "environmentSize": {
              "description": "Optional. The size of the Cloud Composer environment.\n\n This field is supported for Cloud Composer environments in versions\n composer-2.*.*-airflow-*.*.* and newer.",
              "type": "string"
            },
            "maintenanceWindow": {
              "description": "Optional. The maintenance window is the period when Cloud Composer\n components may undergo maintenance. It is defined so that maintenance is\n not executed during peak hours or critical time periods.\n\n The system will not be under maintenance for every occurrence of this\n window, but when maintenance is planned, it will be scheduled\n during the window.\n\n The maintenance window period must encompass at least 12 hours per week.\n This may be split into multiple chunks, each with a size of\n at least 4 hours.\n\n If this value is omitted, the default value for maintenance window is\n applied. By default, maintenance windows are from 00:00:00 to 04:00:00\n (GMT) on Friday, Saturday, and Sunday every week.",
              "type": "object",
              "properties": {
                "endTime": {
                  "description": "Required. Maintenance window end time. It is used only to calculate the duration of the maintenance window. The value for end-time must be in the future, relative to `start_time`.",
                  "type": "string"
                },
                "recurrence": {
                  "description": "Required. Maintenance window recurrence. Format is a subset of [RFC-5545](https://tools.ietf.org/html/rfc5545) `RRULE`. The only allowed values for `FREQ` field are `FREQ=DAILY` and `FREQ=WEEKLY;BYDAY=...` Example values: `FREQ=WEEKLY;BYDAY=TU,WE`, `FREQ=DAILY`.",
                  "type": "string"
                },
                "startTime": {
                  "description": "Required. Start time of the first recurrence of the maintenance window.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "masterAuthorizedNetworksConfig": {
              "description": "Optional. The configuration options for GKE cluster master authorized networks. By default master authorized networks feature is: - in case of private environment: enabled with no external networks allowlisted. - in case of public environment: disabled.",
              "type": "object",
              "properties": {
                "cidrBlocks": {
                  "description": "Up to 50 external networks that could access Kubernetes master through HTTPS.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cidrBlock": {
                        "description": "CIDR block that must be specified in CIDR notation.",
                        "type": "string"
                      },
                      "displayName": {
                        "description": "User-defined name that identifies the CIDR block.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "enabled": {
                  "description": "Optional. Whether or not master authorized networks feature is enabled.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "nodeConfig": {
              "description": "Optional. The configuration used for the Kubernetes Engine cluster.",
              "type": "object",
              "properties": {
                "composerInternalIPv4CIDRBlock": {
                  "description": "Optional. The IP range in CIDR notation to use internally by Cloud\n Composer. IP addresses are not reserved - and the same range can be used by\n multiple Cloud Composer environments. In case of overlap, IPs from this\n range will not be accessible in the user's VPC network. Cannot be updated.\n If not specified, the default value of '100.64.128.0/20' is used.\n\n This field is supported for Cloud Composer environments in versions\n composer-3.*.*-airflow-*.*.* and newer.",
                  "type": "string"
                },
                "composerNetworkAttachmentRef": {
                  "description": "Optional. Network Attachment that Cloud Composer environment is connected\n to, which provides connectivity with a user's VPC network. Takes precedence\n over network and subnetwork settings. If not provided, but network and\n subnetwork are defined during environment, it will be provisioned. If not\n provided and network and subnetwork are also empty, then connectivity to\n user's VPC network is disabled. Network attachment must be provided in\n format\n projects/{project}/regions/{region}/networkAttachments/{networkAttachment}.\n\n This field is supported for Cloud Composer environments in versions\n composer-3.*.*-airflow-*.*.* and newer.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "The value of an externally managed ComputeNetworkAttachment resource in the form \"projects/{{project}}/regions/{{region}}/networkAttachments/{{name}}\".",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of a ComputeNetworkAttachment resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace of a ComputeNetworkAttachment resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "diskSizeGB": {
                  "description": "Optional. The disk size in GB used for node VMs. Minimum size is 30GB.\n If unspecified, defaults to 100GB. Cannot be updated.\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*.",
                  "type": "integer",
                  "format": "int32"
                },
                "enableIPMasqAgent": {
                  "description": "Optional. Deploys 'ip-masq-agent' daemon set in the GKE cluster and defines\n nonMasqueradeCIDRs equals to pod IP range so IP masquerading is used for\n all destination addresses, except between pods traffic.\n\n See:\n https://cloud.google.com/kubernetes-engine/docs/how-to/ip-masquerade-agent",
                  "type": "boolean"
                },
                "ipAllocationPolicy": {
                  "description": "Optional. The configuration for controlling how IPs are allocated in the GKE cluster.",
                  "type": "object",
                  "properties": {
                    "clusterIPV4CIDRBlock": {
                      "description": "Optional. The IP address range used to allocate IP addresses to pods in\n the GKE cluster.\n\n For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*,\n this field is applicable only when `use_ip_aliases` is true.\n\n Set to blank to have GKE choose a range with the default size.\n\n Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific\n netmask.\n\n Set to a\n [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\n notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.\n `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range\n to use.",
                      "type": "string"
                    },
                    "clusterSecondaryRangeName": {
                      "description": "Optional. The name of the GKE cluster's secondary range used to allocate\n IP addresses to pods.\n\n For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*,\n this field is applicable only when `use_ip_aliases` is true.",
                      "type": "string"
                    },
                    "servicesIPV4CIDRBlock": {
                      "description": "Optional. The IP address range of the services IP addresses in this\n GKE cluster.\n\n For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*,\n this field is applicable only when `use_ip_aliases` is true.\n\n Set to blank to have GKE choose a range with the default size.\n\n Set to /netmask (e.g. `/14`) to have GKE choose a range with a specific\n netmask.\n\n Set to a\n [CIDR](https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)\n notation (e.g. `10.96.0.0/14`) from the RFC-1918 private networks (e.g.\n `10.0.0.0/8`, `172.16.0.0/12`, `192.168.0.0/16`) to pick a specific range\n to use.",
                      "type": "string"
                    },
                    "servicesSecondaryRangeName": {
                      "description": "Optional. The name of the services' secondary range used to allocate\n IP addresses to the GKE cluster.\n\n For Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*,\n this field is applicable only when `use_ip_aliases` is true.",
                      "type": "string"
                    },
                    "useIPAliases": {
                      "description": "Optional. Whether or not to enable Alias IPs in the GKE cluster.\n If `true`, a VPC-native cluster is created.\n\n This field is only supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*. Environments in newer versions always use\n VPC-native GKE clusters.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "location": {
                  "description": "Optional. The Compute Engine [zone](/compute/docs/regions-zones) in which\n to deploy the VMs used to run the Apache Airflow software, specified as a\n [relative resource\n name](/apis/design/resource_names#relative_resource_name). For example:\n \"projects/{projectId}/zones/{zoneId}\".\n\n This `location` must belong to the enclosing environment's project and\n location. If both this field and `nodeConfig.machineType` are specified,\n `nodeConfig.machineType` must belong to this `location`; if both are\n unspecified, the service will pick a zone in the Compute Engine region\n corresponding to the Cloud Composer location, and propagate that choice to\n both fields. If only one field (`location` or `nodeConfig.machineType`) is\n specified, the location information from the specified field will be\n propagated to the unspecified field.\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*.",
                  "type": "string"
                },
                "machineType": {
                  "description": "Optional. The Compute Engine\n [machine type](/compute/docs/machine-types) used for cluster instances,\n specified as a\n [relative resource\n name](/apis/design/resource_names#relative_resource_name). For example:\n \"projects/{projectId}/zones/{zoneId}/machineTypes/{machineTypeId}\".\n\n The `machineType` must belong to the enclosing environment's project and\n location. If both this field and `nodeConfig.location` are specified,\n this `machineType` must belong to the `nodeConfig.location`; if both are\n unspecified, the service will pick a zone in the Compute Engine region\n corresponding to the Cloud Composer location, and propagate that choice to\n both fields. If exactly one of this field and `nodeConfig.location` is\n specified, the location information from the specified field will be\n propagated to the unspecified field.\n\n The `machineTypeId` must not be a [shared-core machine\n type](/compute/docs/machine-types#sharedcore).\n\n If this field is unspecified, the `machineTypeId` defaults\n to \"n1-standard-1\".\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*.",
                  "type": "string"
                },
                "networkRef": {
                  "description": "Optional. The Compute Engine network to be used for machine\n communications, specified as a\n [relative resource\n name](/apis/design/resource_names#relative_resource_name). For example:\n \"projects/{projectId}/global/networks/{networkId}\".\n\n If unspecified, the \"default\" network ID in the environment's project is\n used. If a [Custom Subnet Network](/vpc/docs/vpc#vpc_networks_and_subnets)\n is provided, `nodeConfig.subnetwork` must also be provided. For\n [Shared VPC](/vpc/docs/shared-vpc) subnetwork requirements, see\n `nodeConfig.subnetwork`.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "A reference to an externally managed Compute Network resource. Should be in the format `projects/{{projectID}}/global/networks/{{network}}`.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The `name` field of a `ComputeNetwork` resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `namespace` field of a `ComputeNetwork` resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "oauthScopes": {
                  "description": "Optional. The set of Google API scopes to be made available on all\n node VMs. If `oauth_scopes` is empty, defaults to\n [\"https://www.googleapis.com/auth/cloud-platform\"]. Cannot be updated.\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "serviceAccountRef": {
                  "description": "Optional. The Google Cloud Platform Service Account to be used by the node VMs. If a service account is not specified, the \"default\" Compute Engine service account is used. Cannot be updated.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "The `email` field of an `IAMServiceAccount` resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "subnetworkRef": {
                  "description": "Optional. The Compute Engine subnetwork to be used for machine\n communications, specified as a\n [relative resource\n name](/apis/design/resource_names#relative_resource_name). For example:\n \"projects/{projectId}/regions/{regionId}/subnetworks/{subnetworkId}\"\n\n If a subnetwork is provided, `nodeConfig.network` must also be provided,\n and the subnetwork must belong to the enclosing environment's project and\n location.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "The ComputeSubnetwork selflink of form \"projects/{{project}}/regions/{{region}}/subnetworks/{{name}}\", when not managed by Config Connector.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The `name` field of a `ComputeSubnetwork` resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `namespace` field of a `ComputeSubnetwork` resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "tags": {
                  "description": "Optional. The list of instance tags applied to all node VMs. Tags are used to identify valid sources or targets for network firewalls. Each tag within the list must comply with [RFC1035](https://www.ietf.org/rfc/rfc1035.txt). Cannot be updated.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "nodeCount": {
              "description": "The number of nodes in the Kubernetes Engine cluster that will be\n used to run this environment.\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*.",
              "type": "integer",
              "format": "int32"
            },
            "privateEnvironmentConfig": {
              "description": "Optional. The configuration used for the Private IP Cloud Composer environment.",
              "type": "object",
              "properties": {
                "cloudComposerConnectionSubnetworkRef": {
                  "description": "Optional. When specified, the environment will use Private Service Connect instead of VPC peerings to connect to Cloud SQL in the Tenant Project, and the PSC endpoint in the Customer Project will use an IP address from this subnetwork.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "The ComputeSubnetwork selflink of form \"projects/{{project}}/regions/{{region}}/subnetworks/{{name}}\", when not managed by Config Connector.",
                      "type": "string"
                    },
                    "name": {
                      "description": "The `name` field of a `ComputeSubnetwork` resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The `namespace` field of a `ComputeSubnetwork` resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "cloudComposerNetworkIPv4CIDRBlock": {
                  "description": "Optional. The CIDR block from which IP range for Cloud Composer Network in\n tenant project will be reserved. Needs to be disjoint from\n private_cluster_config.master_ipv4_cidr_block and\n cloud_sql_ipv4_cidr_block.\n\n This field is supported for Cloud Composer environments in versions\n composer-2.*.*-airflow-*.*.* and newer.",
                  "type": "string"
                },
                "cloudSQLIPv4CIDRBlock": {
                  "description": "Optional. The CIDR block from which IP range in tenant project will be reserved for Cloud SQL. Needs to be disjoint from `web_server_ipv4_cidr_block`.",
                  "type": "string"
                },
                "enablePrivateBuildsOnly": {
                  "description": "Optional. If `true`, builds performed during operations that install Python\n packages have only private connectivity to Google services (including\n Artifact Registry) and VPC network (if either `NodeConfig.network` and\n `NodeConfig.subnetwork` fields or `NodeConfig.composer_network_attachment`\n field are specified). If `false`, the builds also have access to the\n internet.\n\n This field is supported for Cloud Composer environments in versions\n composer-3.*.*-airflow-*.*.* and newer.",
                  "type": "boolean"
                },
                "enablePrivateEnvironment": {
                  "description": "Optional. If `true`, a Private IP Cloud Composer environment is created. If this field is set to true, `IPAllocationPolicy.use_ip_aliases` must be set to true for Cloud Composer environments in versions composer-1.*.*-airflow-*.*.*.",
                  "type": "boolean"
                },
                "enablePrivatelyUsedPublicIPs": {
                  "description": "Optional. When enabled, IPs from public (non-RFC1918) ranges can be used for `IPAllocationPolicy.cluster_ipv4_cidr_block` and `IPAllocationPolicy.service_ipv4_cidr_block`.",
                  "type": "boolean"
                },
                "networkingConfig": {
                  "description": "Optional. Configuration for the network connections configuration in the environment.",
                  "type": "object",
                  "properties": {
                    "connectionType": {
                      "description": "Optional. Indicates the user requested specific connection type between Tenant and Customer projects. You cannot set networking connection type in public IP environment.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "privateClusterConfig": {
                  "description": "Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment.",
                  "type": "object",
                  "properties": {
                    "enablePrivateEndpoint": {
                      "description": "Optional. If `true`, access to the public endpoint of the GKE cluster is denied.",
                      "type": "boolean"
                    },
                    "masterIPV4CIDRBlock": {
                      "description": "Optional. The CIDR block from which IPv4 range for GKE master will be reserved. If left blank, the default value of '172.16.0.0/23' is used.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "webServerIPv4CIDRBlock": {
                  "description": "Optional. The CIDR block from which IP range for web server will be\n reserved. Needs to be disjoint from\n `private_cluster_config.master_ipv4_cidr_block` and\n `cloud_sql_ipv4_cidr_block`.\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "recoveryConfig": {
              "description": "Optional. The Recovery settings configuration of an environment.\n\n This field is supported for Cloud Composer environments in versions\n composer-2.*.*-airflow-*.*.* and newer.",
              "type": "object",
              "properties": {
                "scheduledSnapshotsConfig": {
                  "description": "Optional. The configuration for scheduled snapshot creation mechanism.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Optional. Whether scheduled snapshots creation is enabled.",
                      "type": "boolean"
                    },
                    "snapshotCreationSchedule": {
                      "description": "Optional. The cron expression representing the time when snapshots creation mechanism runs. This field is subject to additional validation around frequency of execution.",
                      "type": "string"
                    },
                    "snapshotLocation": {
                      "description": "Optional. The Cloud Storage location for storing automatically created snapshots.",
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "Optional. Time zone that sets the context to interpret snapshot_creation_schedule.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resilienceMode": {
              "description": "Optional. Resilience mode of the Cloud Composer Environment.\n\n This field is supported for Cloud Composer environments in versions\n composer-2.2.0-airflow-*.*.* and newer.",
              "type": "string"
            },
            "softwareConfig": {
              "description": "Optional. The configuration settings for software inside the environment.",
              "type": "object",
              "properties": {
                "airflowConfigOverrides": {
                  "description": "Optional. Apache Airflow configuration properties to override.\n\n Property keys contain the section and property names, separated by a\n hyphen, for example \"core-dags_are_paused_at_creation\". Section names must\n not contain hyphens (\"-\"), opening square brackets (\"[\"),  or closing\n square brackets (\"]\"). The property name must not be empty and must not\n contain an equals sign (\"=\") or semicolon (\";\"). Section and property names\n must not contain a period (\".\"). Apache Airflow configuration property\n names must be written in\n [snake_case](https://en.wikipedia.org/wiki/Snake_case). Property values can\n contain any character, and can be written in any lower/upper case format.\n\n Certain Apache Airflow configuration property values are\n [blocked](/composer/docs/concepts/airflow-configurations),\n and cannot be overridden.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "cloudDataLineageIntegration": {
                  "description": "Optional. The configuration for Cloud Data Lineage integration.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "Optional. Whether or not Cloud Data Lineage integration is enabled.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "envVariables": {
                  "description": "Optional. Additional environment variables to provide to the Apache Airflow\n scheduler, worker, and webserver processes.\n\n Environment variable names must match the regular expression\n `[a-zA-Z_][a-zA-Z0-9_]*`. They cannot specify Apache Airflow\n software configuration overrides (they cannot match the regular expression\n `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`), and they cannot match any of the\n following reserved names:\n\n * `AIRFLOW_HOME`\n * `C_FORCE_ROOT`\n * `CONTAINER_NAME`\n * `DAGS_FOLDER`\n * `GCP_PROJECT`\n * `GCS_BUCKET`\n * `GKE_CLUSTER_NAME`\n * `SQL_DATABASE`\n * `SQL_INSTANCE`\n * `SQL_PASSWORD`\n * `SQL_PROJECT`\n * `SQL_REGION`\n * `SQL_USER`",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "imageVersion": {
                  "description": "Optional. The version of the software running in the environment.\n This encapsulates both the version of Cloud Composer functionality and the\n version of Apache Airflow. It must match the regular expression\n `composer-([0-9]+(\\.[0-9]+\\.[0-9]+(-preview\\.[0-9]+)?)?|latest)-airflow-([0-9]+(\\.[0-9]+(\\.[0-9]+)?)?)`.\n When used as input, the server also checks if the provided version is\n supported and denies the request for an unsupported version.\n\n The Cloud Composer portion of the image version is a full\n [semantic version](https://semver.org), or an alias in the form of major\n version number or `latest`. When an alias is provided, the server replaces\n it with the current Cloud Composer version that satisfies the alias.\n\n The Apache Airflow portion of the image version is a full semantic version\n that points to one of the supported Apache Airflow versions, or an alias in\n the form of only major or major.minor versions specified. When an alias is\n provided, the server replaces it with the latest Apache Airflow version\n that satisfies the alias and is supported in the given Cloud Composer\n version.\n\n In all cases, the resolved image version is stored in the same field.\n\n See also [version\n list](/composer/docs/concepts/versioning/composer-versions) and [versioning\n overview](/composer/docs/concepts/versioning/composer-versioning-overview).",
                  "type": "string"
                },
                "pypiPackages": {
                  "description": "Optional. Custom Python Package Index (PyPI) packages to be installed in\n the environment.\n\n Keys refer to the lowercase package name such as \"numpy\"\n and values are the lowercase extras and version specifier such as\n \"==1.12.0\", \"[devel,gcp_api]\", or \"[devel]\u003e=1.8.2, \u003c1.9.2\". To specify a\n package without pinning it to a version specifier, use the empty string as\n the value.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "pythonVersion": {
                  "description": "Optional. The major version of Python used to run the Apache Airflow\n scheduler, worker, and webserver processes.\n\n Can be set to '2' or '3'. If not specified, the default is '3'. Cannot be\n updated.\n\n This field is only supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*. Environments in newer versions always use\n Python major version 3.",
                  "type": "string"
                },
                "schedulerCount": {
                  "description": "Optional. The number of schedulers for Airflow.\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-2.*.*.",
                  "type": "integer",
                  "format": "int32"
                },
                "webServerPluginsMode": {
                  "description": "Optional. Whether or not the web server uses custom plugins.\n If unspecified, the field defaults to `PLUGINS_ENABLED`.\n\n This field is supported for Cloud Composer environments in versions\n composer-3-airflow-*.*.*-build.* and newer.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "webServerConfig": {
              "description": "Optional. The configuration settings for the Airflow web server App Engine instance.",
              "type": "object",
              "properties": {
                "machineType": {
                  "description": "Optional. Machine type on which Airflow web server is running. It has to be one of: composer-n1-webserver-2, composer-n1-webserver-4 or composer-n1-webserver-8. If not specified, composer-n1-webserver-2 will be used. Value custom is returned only in response, if Airflow web server parameters were manually changed to a non-standard values.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "webServerNetworkAccessControl": {
              "description": "Optional. The network-level access control policy for the Airflow web server. If unspecified, no network-level access restrictions will be applied.",
              "type": "object",
              "properties": {
                "allowedIPRanges": {
                  "description": "A collection of allowed IP ranges with descriptions.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "description": "Optional. User-provided description. It must contain at most 300 characters.",
                        "type": "string"
                      },
                      "value": {
                        "description": "IP address or range, defined using CIDR notation, of requests that this\n rule applies to.\n Examples: `192.168.1.1` or `192.168.0.0/16` or `2001:db8::/32`\n           or `2001:0db8:0000:0042:0000:8a2e:0370:7334`.\n\n IP range prefixes should be properly truncated. For example,\n `1.2.3.4/24` should be truncated to `1.2.3.0/24`. Similarly, for IPv6,\n `2001:db8::1/32` should be truncated to `2001:db8::/32`.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "workloadsConfig": {
              "description": "Optional. The workloads configuration settings for the GKE cluster\n associated with the Cloud Composer environment. The GKE cluster runs\n Airflow scheduler, web server and workers workloads.\n\n This field is supported for Cloud Composer environments in versions\n composer-2.*.*-airflow-*.*.* and newer.",
              "type": "object",
              "properties": {
                "dagProcessor": {
                  "description": "Optional. Resources used by Airflow DAG processors.\n\n This field is supported for Cloud Composer environments in versions\n composer-3-airflow-*.*.*-build.* and newer.",
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "Optional. The number of DAG processors. If not provided or set to 0, a single DAG processor instance will be created.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "cpu": {
                      "description": "Optional. CPU request and limit for a single Airflow DAG processor replica.",
                      "type": "string"
                    },
                    "memoryGB": {
                      "description": "Optional. Memory (GB) request and limit for a single Airflow DAG processor replica.",
                      "type": "string"
                    },
                    "storageGB": {
                      "description": "Optional. Storage (GB) request and limit for a single Airflow DAG processor replica.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "scheduler": {
                  "description": "Optional. Resources used by Airflow schedulers.",
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "Optional. The number of schedulers.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "cpu": {
                      "description": "Optional. CPU request and limit for a single Airflow scheduler replica.",
                      "type": "string"
                    },
                    "memoryGB": {
                      "description": "Optional. Memory (GB) request and limit for a single Airflow scheduler replica.",
                      "type": "string"
                    },
                    "storageGB": {
                      "description": "Optional. Storage (GB) request and limit for a single Airflow scheduler replica.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "triggerer": {
                  "description": "Optional. Resources used by Airflow triggerers.",
                  "type": "object",
                  "properties": {
                    "count": {
                      "description": "Optional. The number of triggerers.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "cpu": {
                      "description": "Optional. CPU request and limit for a single Airflow triggerer replica.",
                      "type": "string"
                    },
                    "memoryGB": {
                      "description": "Optional. Memory (GB) request and limit for a single Airflow triggerer replica.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "webServer": {
                  "description": "Optional. Resources used by Airflow web server.",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "Optional. CPU request and limit for Airflow web server.",
                      "type": "string"
                    },
                    "memoryGB": {
                      "description": "Optional. Memory (GB) request and limit for Airflow web server.",
                      "type": "string"
                    },
                    "storageGB": {
                      "description": "Optional. Storage (GB) request and limit for Airflow web server.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "worker": {
                  "description": "Optional. Resources used by Airflow workers.",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "Optional. CPU request and limit for a single Airflow worker replica.",
                      "type": "string"
                    },
                    "maxCount": {
                      "description": "Optional. Maximum number of workers for autoscaling.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "memoryGB": {
                      "description": "Optional. Memory (GB) request and limit for a single Airflow worker replica.",
                      "type": "string"
                    },
                    "minCount": {
                      "description": "Optional. Minimum number of workers for autoscaling.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "storageGB": {
                      "description": "Optional. Storage (GB) request and limit for a single Airflow worker replica.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "labels": {
          "description": "Optional. User-defined labels for this environment.\n The labels map can contain no more than 64 entries. Entries of the labels\n map are UTF8 strings that comply with the following restrictions:\n\n * Keys must conform to regexp: [\\p{Ll}\\p{Lo}][\\p{Ll}\\p{Lo}\\p{N}_-]{0,62}\n * Values must conform to regexp:  [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}\n * Both keys and values are additionally constrained to be \u003c= 128 bytes in\n size.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Immutable. The name of the location where the Environment will be created. Required.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Location is immutable."
            }
          ]
        },
        "projectRef": {
          "description": "Immutable. The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The ComposerEnvironment name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "storageConfig": {
          "description": "Optional. Storage configuration for this environment.",
          "type": "object",
          "properties": {
            "bucketRef": {
              "description": "Optional. The name of the Cloud Storage bucket used by the environment. No `gs://` prefix.",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "A reference to an externally managed StorageBucket resource.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of a StorageBucket resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The namespace of a StorageBucket resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ComposerEnvironmentStatus defines the config connector machine state of ComposerEnvironment",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the ComposerEnvironment resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "config": {
              "description": "Optional. Configuration parameters for this environment.",
              "type": "object",
              "properties": {
                "airflowBYOIDURI": {
                  "description": "Output only. The 'bring your own identity' variant of the URI of the Apache Airflow Web UI hosted within this environment, to be accessed with external identities using workforce identity federation (see [Access environments with workforce identity federation](/composer/docs/composer-2/access-environments-with-workforce-identity-federation)).",
                  "type": "string"
                },
                "airflowURI": {
                  "description": "Output only. The URI of the Apache Airflow Web UI hosted within this environment (see [Airflow web interface](/composer/docs/how-to/accessing/airflow-web-interface)).",
                  "type": "string"
                },
                "dagGCSPrefix": {
                  "description": "Output only. The Cloud Storage prefix of the DAGs for this environment. Although Cloud Storage objects reside in a flat namespace, a hierarchical file tree can be simulated using \"/\"-delimited object name prefixes. DAG objects for this environment reside in a simulated directory with the given prefix.",
                  "type": "string"
                },
                "gkeCluster": {
                  "description": "Output only. The Kubernetes Engine cluster used to run this environment.",
                  "type": "string"
                },
                "privateEnvironmentConfig": {
                  "description": "Optional. The configuration used for the Private IP Cloud Composer environment.",
                  "type": "object",
                  "properties": {
                    "cloudComposerNetworkIPv4ReservedRange": {
                      "description": "Output only. The IP range reserved for the tenant project's Cloud Composer\n network.\n\n This field is supported for Cloud Composer environments in versions\n composer-2.*.*-airflow-*.*.* and newer.",
                      "type": "string"
                    },
                    "privateClusterConfig": {
                      "description": "Optional. Configuration for the private GKE cluster for a Private IP Cloud Composer environment.",
                      "type": "object",
                      "properties": {
                        "masterIPV4ReservedRange": {
                          "description": "Output only. The IP range in CIDR notation to use for the hosted master network. This range is used for assigning internal IP addresses to the GKE cluster master or set of masters and to the internal load balancer virtual IP. This range must not overlap with any other ranges in use within the cluster's network.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "webServerIPv4ReservedRange": {
                      "description": "Output only. The IP range reserved for the tenant project's App Engine VMs.\n\n This field is supported for Cloud Composer environments in versions\n composer-1.*.*-airflow-*.*.*.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "createTime": {
              "description": "Output only. The time at which this environment was created.",
              "type": "string"
            },
            "state": {
              "description": "The current state of the environment.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. The time at which this environment was last modified.",
              "type": "string"
            },
            "uuid": {
              "description": "Output only. The UUID (Universally Unique IDentifier) associated with this environment. This value is generated when the environment is created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
