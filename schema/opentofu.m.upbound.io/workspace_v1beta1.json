{
  "description": "A Workspace of OpenTofu Configuration.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "A WorkspaceSpec defines the desired state of a Workspace.",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "description": "WorkspaceParameters are the configurable fields of a Workspace.",
          "type": "object",
          "required": [
            "module",
            "source"
          ],
          "properties": {
            "applyArgs": {
              "description": "Arguments to be included in the tofu apply CLI command",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "destroyArgs": {
              "description": "Arguments to be included in the tofu destroy CLI command",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "enableTofuCLILogging": {
              "description": "Boolean value to indicate CLI logging of tofu execution is enabled or not",
              "type": "boolean"
            },
            "entrypoint": {
              "description": "Entrypoint for `tofu init` within the module",
              "type": "string",
              "default": ""
            },
            "env": {
              "description": "Environment variables.",
              "type": "array",
              "items": {
                "description": "An EnvVar specifies an environment variable to be set for the workspace.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "configMapKeyRef": {
                    "description": "A ConfigMap key containing the desired env var value.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key within the referenced resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referenced resource.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "type": "string"
                  },
                  "secretKeyRef": {
                    "description": "A Secret key containing the desired env var value.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key within the referenced resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referenced resource.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "initArgs": {
              "description": "Arguments to be included in the tofu init CLI command",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "inlineFormat": {
              "description": "Specifies the format of the inline Terraform content\nif Source is 'Inline'",
              "type": "string",
              "enum": [
                "HCL",
                "JSON"
              ]
            },
            "module": {
              "description": "The root module of this workspace; i.e. the module containing its main.tf\nfile. When the workspace's source is 'Remote' (the default) this can be\nany address supported by tofu init -from-module, for example a git\nrepository or an S3 bucket. When the workspace's source is 'Inline' the\ncontent of a simple main.tf or main.tf.json file may be written inline.",
              "type": "string"
            },
            "planArgs": {
              "description": "Arguments to be included in the tofu plan CLI command",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "source": {
              "description": "Source of the root module of this workspace.",
              "type": "string",
              "enum": [
                "Remote",
                "Inline"
              ]
            },
            "varFiles": {
              "description": "Files of configuration variables. Explicitly declared vars take\nprecedence.",
              "type": "array",
              "items": {
                "description": "A VarFile is a file containing many Terraform variables.",
                "type": "object",
                "required": [
                  "source"
                ],
                "properties": {
                  "configMapKeyRef": {
                    "description": "A ConfigMap key containing the vars file.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key within the referenced resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referenced resource.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "format": {
                    "description": "Format of this vars file.",
                    "type": "string",
                    "default": "HCL",
                    "enum": [
                      "HCL",
                      "JSON"
                    ]
                  },
                  "secretKeyRef": {
                    "description": "A Secret key containing the vars file.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "description": "Key within the referenced resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referenced resource.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "source": {
                    "description": "Source of this vars file.",
                    "type": "string",
                    "enum": [
                      "ConfigMapKey",
                      "SecretKey"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "varmap": {
              "description": "Terraform Variable Map. Should be a valid JSON representation of the input vars",
              "type": "object",
              "x-kubernetes-preserve-unknown-fields": true
            },
            "vars": {
              "description": "Configuration variables.",
              "type": "array",
              "items": {
                "description": "A Var represents a tofu configuration variable.",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "A WorkspaceStatus represents the observed state of a Workspace.",
      "type": "object",
      "properties": {
        "atProvider": {
          "description": "WorkspaceObservation are the observable fields of a Workspace.",
          "type": "object",
          "properties": {
            "checksum": {
              "type": "string"
            },
            "outputs": {
              "type": "object",
              "additionalProperties": {
                "x-kubernetes-preserve-unknown-fields": true
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
