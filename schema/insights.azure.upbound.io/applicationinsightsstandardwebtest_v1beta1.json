{
  "description": "ApplicationInsightsStandardWebTest is the Schema for the ApplicationInsightsStandardWebTests API. Manages a Application Insights Standard WebTest.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ApplicationInsightsStandardWebTestSpec defines the desired state of ApplicationInsightsStandardWebTest",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "applicationInsightsId": {
              "description": "The ID of the Application Insights instance on which the WebTest operates. Changing this forces a new Application Insights Standard WebTest to be created.",
              "type": "string"
            },
            "applicationInsightsIdRef": {
              "description": "Reference to a ApplicationInsights in insights to populate applicationInsightsId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "applicationInsightsIdSelector": {
              "description": "Selector for a ApplicationInsights in insights to populate applicationInsightsId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Purpose/user defined descriptive test for this WebTest.",
              "type": "string"
            },
            "enabled": {
              "description": "Should the WebTest be enabled?",
              "type": "boolean"
            },
            "frequency": {
              "description": "Interval in seconds between test runs for this WebTest. Valid options are 300, 600 and 900. Defaults to 300.",
              "type": "number"
            },
            "geoLocations": {
              "description": "Specifies a list of where to physically run the tests from to give global coverage for accessibility of your application.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "location": {
              "description": "The Azure Region where the Application Insights Standard WebTest should exist. Changing this forces a new Application Insights Standard WebTest to be created. It needs to correlate with location of the parent resource (azurerm_application_insights)",
              "type": "string"
            },
            "request": {
              "description": "A request block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "The WebTest request body.",
                    "type": "string"
                  },
                  "followRedirectsEnabled": {
                    "description": "Should the following of redirects be enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "header": {
                    "description": "One or more header blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name which should be used for this Application Insights Standard WebTest. Changing this forces a new Application Insights Standard WebTest to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value which should be used for a header in the request.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpVerb": {
                    "description": "Which HTTP verb to use for the call. Options are 'GET', 'POST', 'PUT', 'PATCH', and 'DELETE'. Defaults to GET.",
                    "type": "string"
                  },
                  "parseDependentRequestsEnabled": {
                    "description": "Should the parsing of dependend requests be enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "url": {
                    "description": "The WebTest request URL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Application Insights Standard WebTest should exist. Changing this forces a new Application Insights Standard WebTest to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "retryEnabled": {
              "description": "Should the retry on WebTest failure be enabled?",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Application Insights Standard WebTest.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Seconds until this WebTest will timeout and fail. Default is 30.",
              "type": "number"
            },
            "validationRules": {
              "description": "A validation_rules block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "content": {
                    "description": "A content block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentMatch": {
                          "description": "A string value containing the content to match on.",
                          "type": "string"
                        },
                        "ignoreCase": {
                          "description": "Ignore the casing in the content_match value.",
                          "type": "boolean"
                        },
                        "passIfTextFound": {
                          "description": "If the content of content_match is found, pass the test. If set to false, the WebTest is failing if the content of content_match is found.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "expectedStatusCode": {
                    "description": "The expected status code of the response. Default is '200', '0' means 'response code \u003c 400'",
                    "type": "number"
                  },
                  "sslCertRemainingLifetime": {
                    "description": "The number of days of SSL certificate validity remaining for the checked endpoint. If the certificate has a shorter remaining lifetime left, the test will fail. This number should be between 1 and 365.",
                    "type": "number"
                  },
                  "sslCheckEnabled": {
                    "description": "Should the SSL check be enabled?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "applicationInsightsId": {
              "description": "The ID of the Application Insights instance on which the WebTest operates. Changing this forces a new Application Insights Standard WebTest to be created.",
              "type": "string"
            },
            "applicationInsightsIdRef": {
              "description": "Reference to a ApplicationInsights in insights to populate applicationInsightsId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "applicationInsightsIdSelector": {
              "description": "Selector for a ApplicationInsights in insights to populate applicationInsightsId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Purpose/user defined descriptive test for this WebTest.",
              "type": "string"
            },
            "enabled": {
              "description": "Should the WebTest be enabled?",
              "type": "boolean"
            },
            "frequency": {
              "description": "Interval in seconds between test runs for this WebTest. Valid options are 300, 600 and 900. Defaults to 300.",
              "type": "number"
            },
            "geoLocations": {
              "description": "Specifies a list of where to physically run the tests from to give global coverage for accessibility of your application.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "location": {
              "description": "The Azure Region where the Application Insights Standard WebTest should exist. Changing this forces a new Application Insights Standard WebTest to be created. It needs to correlate with location of the parent resource (azurerm_application_insights)",
              "type": "string"
            },
            "request": {
              "description": "A request block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "The WebTest request body.",
                    "type": "string"
                  },
                  "followRedirectsEnabled": {
                    "description": "Should the following of redirects be enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "header": {
                    "description": "One or more header blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name which should be used for this Application Insights Standard WebTest. Changing this forces a new Application Insights Standard WebTest to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value which should be used for a header in the request.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpVerb": {
                    "description": "Which HTTP verb to use for the call. Options are 'GET', 'POST', 'PUT', 'PATCH', and 'DELETE'. Defaults to GET.",
                    "type": "string"
                  },
                  "parseDependentRequestsEnabled": {
                    "description": "Should the parsing of dependend requests be enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "url": {
                    "description": "The WebTest request URL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "retryEnabled": {
              "description": "Should the retry on WebTest failure be enabled?",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Application Insights Standard WebTest.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Seconds until this WebTest will timeout and fail. Default is 30.",
              "type": "number"
            },
            "validationRules": {
              "description": "A validation_rules block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "content": {
                    "description": "A content block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentMatch": {
                          "description": "A string value containing the content to match on.",
                          "type": "string"
                        },
                        "ignoreCase": {
                          "description": "Ignore the casing in the content_match value.",
                          "type": "boolean"
                        },
                        "passIfTextFound": {
                          "description": "If the content of content_match is found, pass the test. If set to false, the WebTest is failing if the content of content_match is found.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "expectedStatusCode": {
                    "description": "The expected status code of the response. Default is '200', '0' means 'response code \u003c 400'",
                    "type": "number"
                  },
                  "sslCertRemainingLifetime": {
                    "description": "The number of days of SSL certificate validity remaining for the checked endpoint. If the certificate has a shorter remaining lifetime left, the test will fail. This number should be between 1 and 365.",
                    "type": "number"
                  },
                  "sslCheckEnabled": {
                    "description": "Should the SSL check be enabled?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.geoLocations) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.geoLocations))",
          "message": "spec.forProvider.geoLocations is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.request) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.request))",
          "message": "spec.forProvider.request is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ApplicationInsightsStandardWebTestStatus defines the observed state of ApplicationInsightsStandardWebTest.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "applicationInsightsId": {
              "description": "The ID of the Application Insights instance on which the WebTest operates. Changing this forces a new Application Insights Standard WebTest to be created.",
              "type": "string"
            },
            "description": {
              "description": "Purpose/user defined descriptive test for this WebTest.",
              "type": "string"
            },
            "enabled": {
              "description": "Should the WebTest be enabled?",
              "type": "boolean"
            },
            "frequency": {
              "description": "Interval in seconds between test runs for this WebTest. Valid options are 300, 600 and 900. Defaults to 300.",
              "type": "number"
            },
            "geoLocations": {
              "description": "Specifies a list of where to physically run the tests from to give global coverage for accessibility of your application.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "id": {
              "description": "The ID of the Application Insights Standard WebTest.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the Application Insights Standard WebTest should exist. Changing this forces a new Application Insights Standard WebTest to be created. It needs to correlate with location of the parent resource (azurerm_application_insights)",
              "type": "string"
            },
            "request": {
              "description": "A request block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "body": {
                    "description": "The WebTest request body.",
                    "type": "string"
                  },
                  "followRedirectsEnabled": {
                    "description": "Should the following of redirects be enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "header": {
                    "description": "One or more header blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name which should be used for this Application Insights Standard WebTest. Changing this forces a new Application Insights Standard WebTest to be created.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value which should be used for a header in the request.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpVerb": {
                    "description": "Which HTTP verb to use for the call. Options are 'GET', 'POST', 'PUT', 'PATCH', and 'DELETE'. Defaults to GET.",
                    "type": "string"
                  },
                  "parseDependentRequestsEnabled": {
                    "description": "Should the parsing of dependend requests be enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "url": {
                    "description": "The WebTest request URL.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Application Insights Standard WebTest should exist. Changing this forces a new Application Insights Standard WebTest to be created.",
              "type": "string"
            },
            "retryEnabled": {
              "description": "Should the retry on WebTest failure be enabled?",
              "type": "boolean"
            },
            "syntheticMonitorId": {
              "description": "Unique ID of this WebTest. This is typically the same value as the Name field.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Application Insights Standard WebTest.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "timeout": {
              "description": "Seconds until this WebTest will timeout and fail. Default is 30.",
              "type": "number"
            },
            "validationRules": {
              "description": "A validation_rules block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "content": {
                    "description": "A content block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "contentMatch": {
                          "description": "A string value containing the content to match on.",
                          "type": "string"
                        },
                        "ignoreCase": {
                          "description": "Ignore the casing in the content_match value.",
                          "type": "boolean"
                        },
                        "passIfTextFound": {
                          "description": "If the content of content_match is found, pass the test. If set to false, the WebTest is failing if the content of content_match is found.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "expectedStatusCode": {
                    "description": "The expected status code of the response. Default is '200', '0' means 'response code \u003c 400'",
                    "type": "number"
                  },
                  "sslCertRemainingLifetime": {
                    "description": "The number of days of SSL certificate validity remaining for the checked endpoint. If the certificate has a shorter remaining lifetime left, the test will fail. This number should be between 1 and 365.",
                    "type": "number"
                  },
                  "sslCheckEnabled": {
                    "description": "Should the SSL check be enabled?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
