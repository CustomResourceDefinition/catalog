{
  "description": "MonitorAutoscaleSetting is the Schema for the MonitorAutoscaleSettings API. Manages an AutoScale Setting which can be applied to Virtual Machine Scale Sets, App Services and other scalable resources.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MonitorAutoscaleSettingSpec defines the desired state of MonitorAutoscaleSetting",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Specifies whether automatic scaling is enabled for the target resource. Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "The name of the AutoScale Setting. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "notification": {
              "description": "Specifies a notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "A email block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customEmails": {
                          "description": "Specifies a list of custom email addresses to which the email notifications will be sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "sendToSubscriptionAdministrator": {
                          "description": "Should email notifications be sent to the subscription administrator? Defaults to false.",
                          "type": "boolean"
                        },
                        "sendToSubscriptionCoAdministrator": {
                          "description": "Should email notifications be sent to the subscription co-administrator? Defaults to false.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "webhook": {
                    "description": "One or more webhook blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "A map of settings.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "serviceUri": {
                          "description": "The HTTPS URI which should receive scale notifications.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "predictive": {
              "description": "A predictive block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lookAheadTime": {
                    "description": "Specifies the amount of time by which instances are launched in advance. It must be between PT1M and PT1H in ISO 8601 format.",
                    "type": "string"
                  },
                  "scaleMode": {
                    "description": "Specifies the predictive scale mode. Possible values are Enabled or ForecastOnly.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "profile": {
              "description": "Specifies one or more (up to 20) profile blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "description": "A capacity block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between 0 and 1000.",
                          "type": "number"
                        },
                        "maximum": {
                          "description": "The maximum number of instances for this resource. Valid values are between 0 and 1000.",
                          "type": "number"
                        },
                        "minimum": {
                          "description": "The minimum number of instances for this resource. Valid values are between 0 and 1000.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "fixedDate": {
                    "description": "A fixed_date block as defined below. This cannot be specified if a recurrence block is specified.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "end": {
                          "description": "Specifies the end date for the profile, formatted as an RFC3339 date string.",
                          "type": "string"
                        },
                        "start": {
                          "description": "Specifies the start date for the profile, formatted as an RFC3339 date string.",
                          "type": "string"
                        },
                        "timezone": {
                          "description": "The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "name": {
                    "description": "Specifies the name of the profile.",
                    "type": "string"
                  },
                  "recurrence": {
                    "description": "A recurrence block as defined below. This cannot be specified if a fixed_date block is specified.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "days": {
                          "description": "A list of days that this profile takes effect on. Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hours": {
                          "description": "A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from 0 to 23.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "minutes": {
                          "description": "A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "timezone": {
                          "description": "The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "rule": {
                    "description": "One or more (up to 10) rule blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metricTrigger": {
                          "description": "A metric_trigger block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dimensions": {
                                "description": "One or more dimensions block as defined below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Specifies the name of the profile.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "A list of dimension values.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "divideByInstanceCount": {
                                "description": "Whether to enable metric divide by instance count.",
                                "type": "boolean"
                              },
                              "metricName": {
                                "description": "The name of the metric that defines what the rule monitors, such as Percentage CPU for Virtual Machine Scale Sets and CpuPercentage for App Service Plan.",
                                "type": "string"
                              },
                              "metricNamespace": {
                                "description": "The namespace of the metric that defines what the rule monitors, such as microsoft.compute/virtualmachinescalesets for Virtual Machine Scale Sets.",
                                "type": "string"
                              },
                              "metricResourceId": {
                                "description": "The ID of the Resource which the Rule monitors.",
                                "type": "string"
                              },
                              "metricResourceIdRef": {
                                "description": "Reference to a LinuxVirtualMachineScaleSet in compute to populate metricResourceId.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "metricResourceIdSelector": {
                                "description": "Selector for a LinuxVirtualMachineScaleSet in compute to populate metricResourceId.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "operator": {
                                "description": "Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.",
                                "type": "string"
                              },
                              "statistic": {
                                "description": "Specifies how the metrics from multiple instances are combined. Possible values are Average, Max, Min and Sum.",
                                "type": "string"
                              },
                              "threshold": {
                                "description": "Specifies the threshold of the metric that triggers the scale action.",
                                "type": "number"
                              },
                              "timeAggregation": {
                                "description": "Specifies how the data that's collected should be combined over time. Possible values include Average, Count, Maximum, Minimum, Last and Total.",
                                "type": "string"
                              },
                              "timeGrain": {
                                "description": "Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.",
                                "type": "string"
                              },
                              "timeWindow": {
                                "description": "Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "scaleAction": {
                          "description": "A scale_action block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cooldown": {
                                "description": "The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.",
                                "type": "string"
                              },
                              "direction": {
                                "description": "The scale direction. Possible values are Increase and Decrease.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of action that should occur. Possible values are ChangeCount, ExactCount, PercentChangeCount and ServiceAllowedNextValue.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The number of instances involved in the scaling action.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "targetResourceId": {
              "description": "Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "targetResourceIdRef": {
              "description": "Reference to a LinuxVirtualMachineScaleSet in compute to populate targetResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "targetResourceIdSelector": {
              "description": "Selector for a LinuxVirtualMachineScaleSet in compute to populate targetResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Specifies whether automatic scaling is enabled for the target resource. Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "The name of the AutoScale Setting. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "notification": {
              "description": "Specifies a notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "A email block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customEmails": {
                          "description": "Specifies a list of custom email addresses to which the email notifications will be sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "sendToSubscriptionAdministrator": {
                          "description": "Should email notifications be sent to the subscription administrator? Defaults to false.",
                          "type": "boolean"
                        },
                        "sendToSubscriptionCoAdministrator": {
                          "description": "Should email notifications be sent to the subscription co-administrator? Defaults to false.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "webhook": {
                    "description": "One or more webhook blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "A map of settings.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "serviceUri": {
                          "description": "The HTTPS URI which should receive scale notifications.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "predictive": {
              "description": "A predictive block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lookAheadTime": {
                    "description": "Specifies the amount of time by which instances are launched in advance. It must be between PT1M and PT1H in ISO 8601 format.",
                    "type": "string"
                  },
                  "scaleMode": {
                    "description": "Specifies the predictive scale mode. Possible values are Enabled or ForecastOnly.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "profile": {
              "description": "Specifies one or more (up to 20) profile blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "description": "A capacity block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between 0 and 1000.",
                          "type": "number"
                        },
                        "maximum": {
                          "description": "The maximum number of instances for this resource. Valid values are between 0 and 1000.",
                          "type": "number"
                        },
                        "minimum": {
                          "description": "The minimum number of instances for this resource. Valid values are between 0 and 1000.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "fixedDate": {
                    "description": "A fixed_date block as defined below. This cannot be specified if a recurrence block is specified.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "end": {
                          "description": "Specifies the end date for the profile, formatted as an RFC3339 date string.",
                          "type": "string"
                        },
                        "start": {
                          "description": "Specifies the start date for the profile, formatted as an RFC3339 date string.",
                          "type": "string"
                        },
                        "timezone": {
                          "description": "The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "name": {
                    "description": "Specifies the name of the profile.",
                    "type": "string"
                  },
                  "recurrence": {
                    "description": "A recurrence block as defined below. This cannot be specified if a fixed_date block is specified.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "days": {
                          "description": "A list of days that this profile takes effect on. Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hours": {
                          "description": "A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from 0 to 23.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "minutes": {
                          "description": "A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "timezone": {
                          "description": "The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "rule": {
                    "description": "One or more (up to 10) rule blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metricTrigger": {
                          "description": "A metric_trigger block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dimensions": {
                                "description": "One or more dimensions block as defined below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Specifies the name of the profile.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "A list of dimension values.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "divideByInstanceCount": {
                                "description": "Whether to enable metric divide by instance count.",
                                "type": "boolean"
                              },
                              "metricName": {
                                "description": "The name of the metric that defines what the rule monitors, such as Percentage CPU for Virtual Machine Scale Sets and CpuPercentage for App Service Plan.",
                                "type": "string"
                              },
                              "metricNamespace": {
                                "description": "The namespace of the metric that defines what the rule monitors, such as microsoft.compute/virtualmachinescalesets for Virtual Machine Scale Sets.",
                                "type": "string"
                              },
                              "metricResourceId": {
                                "description": "The ID of the Resource which the Rule monitors.",
                                "type": "string"
                              },
                              "metricResourceIdRef": {
                                "description": "Reference to a LinuxVirtualMachineScaleSet in compute to populate metricResourceId.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "metricResourceIdSelector": {
                                "description": "Selector for a LinuxVirtualMachineScaleSet in compute to populate metricResourceId.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "operator": {
                                "description": "Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.",
                                "type": "string"
                              },
                              "statistic": {
                                "description": "Specifies how the metrics from multiple instances are combined. Possible values are Average, Max, Min and Sum.",
                                "type": "string"
                              },
                              "threshold": {
                                "description": "Specifies the threshold of the metric that triggers the scale action.",
                                "type": "number"
                              },
                              "timeAggregation": {
                                "description": "Specifies how the data that's collected should be combined over time. Possible values include Average, Count, Maximum, Minimum, Last and Total.",
                                "type": "string"
                              },
                              "timeGrain": {
                                "description": "Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.",
                                "type": "string"
                              },
                              "timeWindow": {
                                "description": "Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "scaleAction": {
                          "description": "A scale_action block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cooldown": {
                                "description": "The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.",
                                "type": "string"
                              },
                              "direction": {
                                "description": "The scale direction. Possible values are Increase and Decrease.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of action that should occur. Possible values are ChangeCount, ExactCount, PercentChangeCount and ServiceAllowedNextValue.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The number of instances involved in the scaling action.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "targetResourceId": {
              "description": "Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "targetResourceIdRef": {
              "description": "Reference to a LinuxVirtualMachineScaleSet in compute to populate targetResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "targetResourceIdSelector": {
              "description": "Selector for a LinuxVirtualMachineScaleSet in compute to populate targetResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.profile) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.profile))",
          "message": "spec.forProvider.profile is a required parameter"
        }
      ]
    },
    "status": {
      "description": "MonitorAutoscaleSettingStatus defines the observed state of MonitorAutoscaleSetting.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Specifies whether automatic scaling is enabled for the target resource. Defaults to true.",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the AutoScale Setting.",
              "type": "string"
            },
            "location": {
              "description": "Specifies the supported Azure location where the AutoScale Setting should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "The name of the AutoScale Setting. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "notification": {
              "description": "Specifies a notification block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "email": {
                    "description": "A email block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customEmails": {
                          "description": "Specifies a list of custom email addresses to which the email notifications will be sent.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "sendToSubscriptionAdministrator": {
                          "description": "Should email notifications be sent to the subscription administrator? Defaults to false.",
                          "type": "boolean"
                        },
                        "sendToSubscriptionCoAdministrator": {
                          "description": "Should email notifications be sent to the subscription co-administrator? Defaults to false.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "webhook": {
                    "description": "One or more webhook blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "properties": {
                          "description": "A map of settings.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "serviceUri": {
                          "description": "The HTTPS URI which should receive scale notifications.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "predictive": {
              "description": "A predictive block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "lookAheadTime": {
                    "description": "Specifies the amount of time by which instances are launched in advance. It must be between PT1M and PT1H in ISO 8601 format.",
                    "type": "string"
                  },
                  "scaleMode": {
                    "description": "Specifies the predictive scale mode. Possible values are Enabled or ForecastOnly.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "profile": {
              "description": "Specifies one or more (up to 20) profile blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "capacity": {
                    "description": "A capacity block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The number of instances that are available for scaling if metrics are not available for evaluation. The default is only used if the current instance count is lower than the default. Valid values are between 0 and 1000.",
                          "type": "number"
                        },
                        "maximum": {
                          "description": "The maximum number of instances for this resource. Valid values are between 0 and 1000.",
                          "type": "number"
                        },
                        "minimum": {
                          "description": "The minimum number of instances for this resource. Valid values are between 0 and 1000.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "fixedDate": {
                    "description": "A fixed_date block as defined below. This cannot be specified if a recurrence block is specified.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "end": {
                          "description": "Specifies the end date for the profile, formatted as an RFC3339 date string.",
                          "type": "string"
                        },
                        "start": {
                          "description": "Specifies the start date for the profile, formatted as an RFC3339 date string.",
                          "type": "string"
                        },
                        "timezone": {
                          "description": "The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "name": {
                    "description": "Specifies the name of the profile.",
                    "type": "string"
                  },
                  "recurrence": {
                    "description": "A recurrence block as defined below. This cannot be specified if a fixed_date block is specified.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "days": {
                          "description": "A list of days that this profile takes effect on. Possible values include Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "hours": {
                          "description": "A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered (in 24-hour time). Possible values are from 0 to 23.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "minutes": {
                          "description": "A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          }
                        },
                        "timezone": {
                          "description": "The Time Zone used for the hours field. A list of possible values can be found here. Defaults to UTC.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "rule": {
                    "description": "One or more (up to 10) rule blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metricTrigger": {
                          "description": "A metric_trigger block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "dimensions": {
                                "description": "One or more dimensions block as defined below.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Specifies the name of the profile.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "A list of dimension values.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "divideByInstanceCount": {
                                "description": "Whether to enable metric divide by instance count.",
                                "type": "boolean"
                              },
                              "metricName": {
                                "description": "The name of the metric that defines what the rule monitors, such as Percentage CPU for Virtual Machine Scale Sets and CpuPercentage for App Service Plan.",
                                "type": "string"
                              },
                              "metricNamespace": {
                                "description": "The namespace of the metric that defines what the rule monitors, such as microsoft.compute/virtualmachinescalesets for Virtual Machine Scale Sets.",
                                "type": "string"
                              },
                              "metricResourceId": {
                                "description": "The ID of the Resource which the Rule monitors.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Specifies the operator used to compare the metric data and threshold. Possible values are: Equals, NotEquals, GreaterThan, GreaterThanOrEqual, LessThan, LessThanOrEqual.",
                                "type": "string"
                              },
                              "statistic": {
                                "description": "Specifies how the metrics from multiple instances are combined. Possible values are Average, Max, Min and Sum.",
                                "type": "string"
                              },
                              "threshold": {
                                "description": "Specifies the threshold of the metric that triggers the scale action.",
                                "type": "number"
                              },
                              "timeAggregation": {
                                "description": "Specifies how the data that's collected should be combined over time. Possible values include Average, Count, Maximum, Minimum, Last and Total.",
                                "type": "string"
                              },
                              "timeGrain": {
                                "description": "Specifies the granularity of metrics that the rule monitors, which must be one of the pre-defined values returned from the metric definitions for the metric. This value must be between 1 minute and 12 hours an be formatted as an ISO 8601 string.",
                                "type": "string"
                              },
                              "timeWindow": {
                                "description": "Specifies the time range for which data is collected, which must be greater than the delay in metric collection (which varies from resource to resource). This value must be between 5 minutes and 12 hours and be formatted as an ISO 8601 string.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "scaleAction": {
                          "description": "A scale_action block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cooldown": {
                                "description": "The amount of time to wait since the last scaling action before this action occurs. Must be between 1 minute and 1 week and formatted as a ISO 8601 string.",
                                "type": "string"
                              },
                              "direction": {
                                "description": "The scale direction. Possible values are Increase and Decrease.",
                                "type": "string"
                              },
                              "type": {
                                "description": "The type of action that should occur. Possible values are ChangeCount, ExactCount, PercentChangeCount and ServiceAllowedNextValue.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The number of instances involved in the scaling action.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group in the AutoScale Setting should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "targetResourceId": {
              "description": "Specifies the resource ID of the resource that the autoscale setting should be added to. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
