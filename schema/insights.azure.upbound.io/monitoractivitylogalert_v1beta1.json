{
  "description": "MonitorActivityLogAlert is the Schema for the MonitorActivityLogAlerts API. Manages an Activity Log Alert within Azure Monitor",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MonitorActivityLogAlertSpec defines the desired state of MonitorActivityLogAlert",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "action": {
              "description": "One or more action blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actionGroupId": {
                    "description": "The ID of the Action Group can be sourced from the .",
                    "type": "string"
                  },
                  "actionGroupIdRef": {
                    "description": "Reference to a MonitorActionGroup in insights to populate actionGroupId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "actionGroupIdSelector": {
                    "description": "Selector for a MonitorActionGroup in insights to populate actionGroupId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "webhookProperties": {
                    "description": "The map of custom string properties to include with the post operation. These data are appended to the webhook payload.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  }
                },
                "additionalProperties": false
              }
            },
            "criteria": {
              "description": "A criteria block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caller": {
                    "description": "The email address or Azure Active Directory identifier of the user who performed the operation.",
                    "type": "string"
                  },
                  "category": {
                    "description": "The category of the operation. Possible values are Administrative, Autoscale, Policy, Recommendation, ResourceHealth, Security and ServiceHealth.",
                    "type": "string"
                  },
                  "level": {
                    "description": "The severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.",
                    "type": "string"
                  },
                  "levels": {
                    "description": "A list of severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "operationName": {
                    "description": "The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: \u003cresourceProvider\u003e/\u003cresourceType\u003e/\u003coperation\u003e.",
                    "type": "string"
                  },
                  "recommendationCategory": {
                    "description": "The recommendation category of the event. Possible values are Cost, Reliability, OperationalExcellence, HighAvailability and Performance. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "recommendationImpact": {
                    "description": "The recommendation impact of the event. Possible values are High, Medium and Low. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "recommendationType": {
                    "description": "The recommendation type of the event. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of resource group monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceGroups": {
                    "description": "A list of names of resource groups monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceHealth": {
                    "description": "A block to define fine grain resource health settings.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "description": "The current resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "previous": {
                          "description": "The previous resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "reason": {
                          "description": "The reason that will log an alert. Possible values are PlatformInitiated (such as a problem with the resource in an affected region of an Azure incident), UserInitiated (such as a shutdown request of a VM) and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "resourceId": {
                    "description": "The specific resource monitored by the activity log alert. It should be within one of the scopes.",
                    "type": "string"
                  },
                  "resourceIdRef": {
                    "description": "Reference to a Account in storage to populate resourceId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "resourceIdSelector": {
                    "description": "Selector for a Account in storage to populate resourceId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "resourceIds": {
                    "description": "A list of specific resources monitored by the activity log alert. It should be within one of the scopes.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceProvider": {
                    "description": "The name of the resource provider monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceProviders": {
                    "description": "A list of names of resource providers monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceType": {
                    "description": "The resource type monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceTypes": {
                    "description": "A list of resource types monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "serviceHealth": {
                    "description": "A block to define fine grain service health settings.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "description": "Events this alert will monitor Possible values are Incident, Maintenance, Informational, ActionRequired and Security.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "locations": {
                          "description": "Locations this alert will monitor. For example, West Europe.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "services": {
                          "description": "Services this alert will monitor. For example, Activity Logs \u0026 Alerts, Action Groups. Defaults to all Services.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "status": {
                    "description": "The status of the event. For example, Started, Failed, or Succeeded.",
                    "type": "string"
                  },
                  "statuses": {
                    "description": "A list of status of the event. For example, Started, Failed, or Succeeded.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "subStatus": {
                    "description": "The sub status of the event.",
                    "type": "string"
                  },
                  "subStatuses": {
                    "description": "A list of sub status of the event.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of this activity log alert.",
              "type": "string"
            },
            "enabled": {
              "description": "Should this Activity Log Alert be enabled? Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "The Azure Region where the activity log alert rule should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "The name of the activity log alert. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the activity log alert instance. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "scopes": {
              "description": "The Scope at which the Activity Log should be applied. A list of strings which could be a resource group , or a subscription, or a resource ID (such as a Storage Account).",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "scopesRefs": {
              "description": "References to ResourceGroup in azure to populate scopes.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "scopesSelector": {
              "description": "Selector for a list of ResourceGroup in azure to populate scopes.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "action": {
              "description": "One or more action blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actionGroupId": {
                    "description": "The ID of the Action Group can be sourced from the .",
                    "type": "string"
                  },
                  "actionGroupIdRef": {
                    "description": "Reference to a MonitorActionGroup in insights to populate actionGroupId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "actionGroupIdSelector": {
                    "description": "Selector for a MonitorActionGroup in insights to populate actionGroupId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "webhookProperties": {
                    "description": "The map of custom string properties to include with the post operation. These data are appended to the webhook payload.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  }
                },
                "additionalProperties": false
              }
            },
            "criteria": {
              "description": "A criteria block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caller": {
                    "description": "The email address or Azure Active Directory identifier of the user who performed the operation.",
                    "type": "string"
                  },
                  "category": {
                    "description": "The category of the operation. Possible values are Administrative, Autoscale, Policy, Recommendation, ResourceHealth, Security and ServiceHealth.",
                    "type": "string"
                  },
                  "level": {
                    "description": "The severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.",
                    "type": "string"
                  },
                  "levels": {
                    "description": "A list of severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "operationName": {
                    "description": "The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: \u003cresourceProvider\u003e/\u003cresourceType\u003e/\u003coperation\u003e.",
                    "type": "string"
                  },
                  "recommendationCategory": {
                    "description": "The recommendation category of the event. Possible values are Cost, Reliability, OperationalExcellence, HighAvailability and Performance. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "recommendationImpact": {
                    "description": "The recommendation impact of the event. Possible values are High, Medium and Low. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "recommendationType": {
                    "description": "The recommendation type of the event. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of resource group monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceGroups": {
                    "description": "A list of names of resource groups monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceHealth": {
                    "description": "A block to define fine grain resource health settings.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "description": "The current resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "previous": {
                          "description": "The previous resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "reason": {
                          "description": "The reason that will log an alert. Possible values are PlatformInitiated (such as a problem with the resource in an affected region of an Azure incident), UserInitiated (such as a shutdown request of a VM) and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "resourceId": {
                    "description": "The specific resource monitored by the activity log alert. It should be within one of the scopes.",
                    "type": "string"
                  },
                  "resourceIdRef": {
                    "description": "Reference to a Account in storage to populate resourceId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "resourceIdSelector": {
                    "description": "Selector for a Account in storage to populate resourceId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "resourceIds": {
                    "description": "A list of specific resources monitored by the activity log alert. It should be within one of the scopes.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceProvider": {
                    "description": "The name of the resource provider monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceProviders": {
                    "description": "A list of names of resource providers monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceType": {
                    "description": "The resource type monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceTypes": {
                    "description": "A list of resource types monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "serviceHealth": {
                    "description": "A block to define fine grain service health settings.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "description": "Events this alert will monitor Possible values are Incident, Maintenance, Informational, ActionRequired and Security.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "locations": {
                          "description": "Locations this alert will monitor. For example, West Europe.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "services": {
                          "description": "Services this alert will monitor. For example, Activity Logs \u0026 Alerts, Action Groups. Defaults to all Services.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "status": {
                    "description": "The status of the event. For example, Started, Failed, or Succeeded.",
                    "type": "string"
                  },
                  "statuses": {
                    "description": "A list of status of the event. For example, Started, Failed, or Succeeded.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "subStatus": {
                    "description": "The sub status of the event.",
                    "type": "string"
                  },
                  "subStatuses": {
                    "description": "A list of sub status of the event.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of this activity log alert.",
              "type": "string"
            },
            "enabled": {
              "description": "Should this Activity Log Alert be enabled? Defaults to true.",
              "type": "boolean"
            },
            "location": {
              "description": "The Azure Region where the activity log alert rule should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "The name of the activity log alert. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the activity log alert instance. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "scopes": {
              "description": "The Scope at which the Activity Log should be applied. A list of strings which could be a resource group , or a subscription, or a resource ID (such as a Storage Account).",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "scopesRefs": {
              "description": "References to ResourceGroup in azure to populate scopes.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "scopesSelector": {
              "description": "Selector for a list of ResourceGroup in azure to populate scopes.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.criteria) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.criteria))",
          "message": "spec.forProvider.criteria is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        }
      ]
    },
    "status": {
      "description": "MonitorActivityLogAlertStatus defines the observed state of MonitorActivityLogAlert.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "action": {
              "description": "One or more action blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actionGroupId": {
                    "description": "The ID of the Action Group can be sourced from the .",
                    "type": "string"
                  },
                  "webhookProperties": {
                    "description": "The map of custom string properties to include with the post operation. These data are appended to the webhook payload.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  }
                },
                "additionalProperties": false
              }
            },
            "criteria": {
              "description": "A criteria block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caller": {
                    "description": "The email address or Azure Active Directory identifier of the user who performed the operation.",
                    "type": "string"
                  },
                  "category": {
                    "description": "The category of the operation. Possible values are Administrative, Autoscale, Policy, Recommendation, ResourceHealth, Security and ServiceHealth.",
                    "type": "string"
                  },
                  "level": {
                    "description": "The severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.",
                    "type": "string"
                  },
                  "levels": {
                    "description": "A list of severity level of the event. Possible values are Verbose, Informational, Warning, Error, and Critical.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "operationName": {
                    "description": "The Resource Manager Role-Based Access Control operation name. Supported operation should be of the form: \u003cresourceProvider\u003e/\u003cresourceType\u003e/\u003coperation\u003e.",
                    "type": "string"
                  },
                  "recommendationCategory": {
                    "description": "The recommendation category of the event. Possible values are Cost, Reliability, OperationalExcellence, HighAvailability and Performance. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "recommendationImpact": {
                    "description": "The recommendation impact of the event. Possible values are High, Medium and Low. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "recommendationType": {
                    "description": "The recommendation type of the event. It is only allowed when category is Recommendation.",
                    "type": "string"
                  },
                  "resourceGroup": {
                    "description": "The name of resource group monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceGroups": {
                    "description": "A list of names of resource groups monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceHealth": {
                    "description": "A block to define fine grain resource health settings.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "current": {
                          "description": "The current resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "previous": {
                          "description": "The previous resource health statuses that will log an alert. Possible values are Available, Degraded, Unavailable and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "reason": {
                          "description": "The reason that will log an alert. Possible values are PlatformInitiated (such as a problem with the resource in an affected region of an Azure incident), UserInitiated (such as a shutdown request of a VM) and Unknown.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "resourceId": {
                    "description": "The specific resource monitored by the activity log alert. It should be within one of the scopes.",
                    "type": "string"
                  },
                  "resourceIds": {
                    "description": "A list of specific resources monitored by the activity log alert. It should be within one of the scopes.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceProvider": {
                    "description": "The name of the resource provider monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceProviders": {
                    "description": "A list of names of resource providers monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "resourceType": {
                    "description": "The resource type monitored by the activity log alert.",
                    "type": "string"
                  },
                  "resourceTypes": {
                    "description": "A list of resource types monitored by the activity log alert.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "serviceHealth": {
                    "description": "A block to define fine grain service health settings.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "events": {
                          "description": "Events this alert will monitor Possible values are Incident, Maintenance, Informational, ActionRequired and Security.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "locations": {
                          "description": "Locations this alert will monitor. For example, West Europe.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "services": {
                          "description": "Services this alert will monitor. For example, Activity Logs \u0026 Alerts, Action Groups. Defaults to all Services.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "status": {
                    "description": "The status of the event. For example, Started, Failed, or Succeeded.",
                    "type": "string"
                  },
                  "statuses": {
                    "description": "A list of status of the event. For example, Started, Failed, or Succeeded.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "subStatus": {
                    "description": "The sub status of the event.",
                    "type": "string"
                  },
                  "subStatuses": {
                    "description": "A list of sub status of the event.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of this activity log alert.",
              "type": "string"
            },
            "enabled": {
              "description": "Should this Activity Log Alert be enabled? Defaults to true.",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the activity log alert.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the activity log alert rule should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "name": {
              "description": "The name of the activity log alert. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the activity log alert instance. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "scopes": {
              "description": "The Scope at which the Activity Log should be applied. A list of strings which could be a resource group , or a subscription, or a resource ID (such as a Storage Account).",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
