{
  "description": "Image is the Schema for the Images API. Manages an Image Builder Image",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ImageSpec defines the desired state of Image",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "containerRecipeArn": {
              "description": "- Amazon Resource Name (ARN) of the container recipe.",
              "type": "string"
            },
            "distributionConfigurationArn": {
              "description": "Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.",
              "type": "string"
            },
            "distributionConfigurationArnRef": {
              "description": "Reference to a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "distributionConfigurationArnSelector": {
              "description": "Selector for a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "enhancedImageMetadataEnabled": {
              "description": "Whether additional information about the image being created is collected. Defaults to true.",
              "type": "boolean"
            },
            "executionRole": {
              "description": "Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to execute workflows.",
              "type": "string"
            },
            "imageRecipeArn": {
              "description": "Amazon Resource Name (ARN) of the image recipe.",
              "type": "string"
            },
            "imageRecipeArnRef": {
              "description": "Reference to a ImageRecipe in imagebuilder to populate imageRecipeArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "imageRecipeArnSelector": {
              "description": "Selector for a ImageRecipe in imagebuilder to populate imageRecipeArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "imageScanningConfiguration": {
              "description": "Configuration block with image scanning configuration. Detailed below.",
              "type": "object",
              "properties": {
                "ecrConfiguration": {
                  "description": "Configuration block with ECR configuration. Detailed below.",
                  "type": "object",
                  "properties": {
                    "containerTags": {
                      "description": "Set of tags for Image Builder to apply to the output container image that that Amazon Inspector scans.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "repositoryName": {
                      "description": "The name of the container repository that Amazon Inspector scans to identify findings for your container images.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "imageScanningEnabled": {
                  "description": "Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "imageTestsConfiguration": {
              "description": "Configuration block with image tests configuration. Detailed below.",
              "type": "object",
              "properties": {
                "imageTestsEnabled": {
                  "description": "Whether image tests are enabled. Defaults to true.",
                  "type": "boolean"
                },
                "timeoutMinutes": {
                  "description": "Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "infrastructureConfigurationArn": {
              "description": "Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.",
              "type": "string"
            },
            "infrastructureConfigurationArnRef": {
              "description": "Reference to a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "infrastructureConfigurationArnSelector": {
              "description": "Selector for a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "workflow": {
              "description": "Configuration block with the workflow configuration. Detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "onFailure": {
                    "description": "The action to take if the workflow fails. Must be one of CONTINUE or ABORT.",
                    "type": "string"
                  },
                  "parallelGroup": {
                    "description": "The parallel group in which to run a test Workflow.",
                    "type": "string"
                  },
                  "parameter": {
                    "description": "Configuration block for the workflow parameters. Detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the Workflow parameter.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the Workflow parameter.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workflowArn": {
                    "description": "Amazon Resource Name (ARN) of the Image Builder Workflow.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "containerRecipeArn": {
              "description": "- Amazon Resource Name (ARN) of the container recipe.",
              "type": "string"
            },
            "distributionConfigurationArn": {
              "description": "Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.",
              "type": "string"
            },
            "distributionConfigurationArnRef": {
              "description": "Reference to a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "distributionConfigurationArnSelector": {
              "description": "Selector for a DistributionConfiguration in imagebuilder to populate distributionConfigurationArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "enhancedImageMetadataEnabled": {
              "description": "Whether additional information about the image being created is collected. Defaults to true.",
              "type": "boolean"
            },
            "executionRole": {
              "description": "Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to execute workflows.",
              "type": "string"
            },
            "imageRecipeArn": {
              "description": "Amazon Resource Name (ARN) of the image recipe.",
              "type": "string"
            },
            "imageRecipeArnRef": {
              "description": "Reference to a ImageRecipe in imagebuilder to populate imageRecipeArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "imageRecipeArnSelector": {
              "description": "Selector for a ImageRecipe in imagebuilder to populate imageRecipeArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "imageScanningConfiguration": {
              "description": "Configuration block with image scanning configuration. Detailed below.",
              "type": "object",
              "properties": {
                "ecrConfiguration": {
                  "description": "Configuration block with ECR configuration. Detailed below.",
                  "type": "object",
                  "properties": {
                    "containerTags": {
                      "description": "Set of tags for Image Builder to apply to the output container image that that Amazon Inspector scans.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "repositoryName": {
                      "description": "The name of the container repository that Amazon Inspector scans to identify findings for your container images.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "imageScanningEnabled": {
                  "description": "Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "imageTestsConfiguration": {
              "description": "Configuration block with image tests configuration. Detailed below.",
              "type": "object",
              "properties": {
                "imageTestsEnabled": {
                  "description": "Whether image tests are enabled. Defaults to true.",
                  "type": "boolean"
                },
                "timeoutMinutes": {
                  "description": "Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "infrastructureConfigurationArn": {
              "description": "Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.",
              "type": "string"
            },
            "infrastructureConfigurationArnRef": {
              "description": "Reference to a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "infrastructureConfigurationArnSelector": {
              "description": "Selector for a InfrastructureConfiguration in imagebuilder to populate infrastructureConfigurationArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "workflow": {
              "description": "Configuration block with the workflow configuration. Detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "onFailure": {
                    "description": "The action to take if the workflow fails. Must be one of CONTINUE or ABORT.",
                    "type": "string"
                  },
                  "parallelGroup": {
                    "description": "The parallel group in which to run a test Workflow.",
                    "type": "string"
                  },
                  "parameter": {
                    "description": "Configuration block for the workflow parameters. Detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the Workflow parameter.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the Workflow parameter.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workflowArn": {
                    "description": "Amazon Resource Name (ARN) of the Image Builder Workflow.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ImageStatus defines the observed state of Image.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "Amazon Resource Name (ARN) of the image.",
              "type": "string"
            },
            "containerRecipeArn": {
              "description": "- Amazon Resource Name (ARN) of the container recipe.",
              "type": "string"
            },
            "dateCreated": {
              "description": "Date the image was created.",
              "type": "string"
            },
            "distributionConfigurationArn": {
              "description": "Amazon Resource Name (ARN) of the Image Builder Distribution Configuration.",
              "type": "string"
            },
            "enhancedImageMetadataEnabled": {
              "description": "Whether additional information about the image being created is collected. Defaults to true.",
              "type": "boolean"
            },
            "executionRole": {
              "description": "Amazon Resource Name (ARN) of the service-linked role to be used by Image Builder to execute workflows.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "imageRecipeArn": {
              "description": "Amazon Resource Name (ARN) of the image recipe.",
              "type": "string"
            },
            "imageScanningConfiguration": {
              "description": "Configuration block with image scanning configuration. Detailed below.",
              "type": "object",
              "properties": {
                "ecrConfiguration": {
                  "description": "Configuration block with ECR configuration. Detailed below.",
                  "type": "object",
                  "properties": {
                    "containerTags": {
                      "description": "Set of tags for Image Builder to apply to the output container image that that Amazon Inspector scans.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "repositoryName": {
                      "description": "The name of the container repository that Amazon Inspector scans to identify findings for your container images.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "imageScanningEnabled": {
                  "description": "Indicates whether Image Builder keeps a snapshot of the vulnerability scans that Amazon Inspector runs against the build instance when you create a new image. Defaults to false.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "imageTestsConfiguration": {
              "description": "Configuration block with image tests configuration. Detailed below.",
              "type": "object",
              "properties": {
                "imageTestsEnabled": {
                  "description": "Whether image tests are enabled. Defaults to true.",
                  "type": "boolean"
                },
                "timeoutMinutes": {
                  "description": "Number of minutes before image tests time out. Valid values are between 60 and 1440. Defaults to 720.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "infrastructureConfigurationArn": {
              "description": "Amazon Resource Name (ARN) of the Image Builder Infrastructure Configuration.",
              "type": "string"
            },
            "name": {
              "description": "Name of the AMI.",
              "type": "string"
            },
            "osVersion": {
              "description": "Operating System version of the image.",
              "type": "string"
            },
            "outputResources": {
              "description": "List of objects with resources created by the image.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "amis": {
                    "description": "Set of objects with each Amazon Machine Image (AMI) created.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "description": "Account identifier of the AMI.",
                          "type": "string"
                        },
                        "description": {
                          "description": "Description of the AMI.",
                          "type": "string"
                        },
                        "image": {
                          "description": "Identifier of the AMI.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name of the Workflow parameter.",
                          "type": "string"
                        },
                        "region": {
                          "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "containers": {
                    "description": "Set of objects with each container image created and stored in the output repository.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "imageUris": {
                          "description": "Set of URIs for created containers.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "region": {
                          "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "platform": {
              "description": "Platform of the image.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "version": {
              "description": "Version of the image.",
              "type": "string"
            },
            "workflow": {
              "description": "Configuration block with the workflow configuration. Detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "onFailure": {
                    "description": "The action to take if the workflow fails. Must be one of CONTINUE or ABORT.",
                    "type": "string"
                  },
                  "parallelGroup": {
                    "description": "The parallel group in which to run a test Workflow.",
                    "type": "string"
                  },
                  "parameter": {
                    "description": "Configuration block for the workflow parameters. Detailed below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the Workflow parameter.",
                          "type": "string"
                        },
                        "value": {
                          "description": "The value of the Workflow parameter.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workflowArn": {
                    "description": "Amazon Resource Name (ARN) of the Image Builder Workflow.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
