{
  "description": "WorkloadIdentityV1 is the Schema for the workloadidentitiesv1 API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "WorkloadIdentity resource definition v1 from Teleport",
      "type": "object",
      "properties": {
        "rules": {
          "description": "The rules which are evaluated before the WorkloadIdentity can be issued.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "A list of rules used to determine if a WorkloadIdentity can be issued. If none are provided, it will be considered a pass. If any are provided, then at least one must pass for the rules to be considered passed.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "conditions": {
                    "description": "The conditions that must be met for this rule to be considered passed.  Mutually exclusive with expression.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "attribute": {
                          "description": "The name of the attribute to evaluate the condition against.",
                          "type": "string"
                        },
                        "eq": {
                          "description": "The attribute casted to a string must be equal to the value.",
                          "type": "object",
                          "properties": {
                            "value": {
                              "description": "The value to compare the attribute against.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        },
                        "in": {
                          "description": "The attribute casted to a string must be in the list of values.",
                          "type": "object",
                          "properties": {
                            "values": {
                              "description": "The list of values to compare the attribute against.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        },
                        "not_eq": {
                          "description": "The attribute casted to a string must not be equal to the value.",
                          "type": "object",
                          "properties": {
                            "value": {
                              "description": "The value to compare the attribute against.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        },
                        "not_in": {
                          "description": "The attribute casted to a string must not be in the list of values.",
                          "type": "object",
                          "properties": {
                            "values": {
                              "description": "The list of values to compare the attribute against.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "nullable": true
                            }
                          },
                          "additionalProperties": false,
                          "nullable": true
                        }
                      },
                      "additionalProperties": false
                    },
                    "nullable": true
                  },
                  "expression": {
                    "description": "An expression written in Teleport's predicate language that must evaluate to true for this rule to be considered passed.  Mutually exclusive with conditions.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "spiffe": {
          "description": "Configuration pertaining to the issuance of SPIFFE-compatible workload identity credentials.",
          "type": "object",
          "properties": {
            "hint": {
              "description": "A freeform text field which is provided to workloads along with a credential produced by this WorkloadIdentity. This can be used to provide additional context that can be used to select between multiple credentials.",
              "type": "string"
            },
            "id": {
              "description": "The path of the SPIFFE ID that will be issued to the workload.  This should be prefixed with a forward-slash (\"/\").  This field supports templating using attributes.",
              "type": "string"
            },
            "jwt": {
              "description": "Configuration specific to JWT-SVIDs.",
              "type": "object",
              "properties": {
                "extra_claims": {
                  "description": "Additional claims that will be added to the JWT.",
                  "type": "object",
                  "additionalProperties": true,
                  "nullable": true
                },
                "maximum_ttl": {
                  "description": "Control the maximum TTL of JWT-SVIDs issued using this WorkloadIdentity.  If a JWT-SVID is requested with a TTL greater than this value, then the returned JWT-SVID will have a TTL of this value.  Defaults to 24 hours. The maximum this value can be set to is 24 hours.",
                  "type": "string",
                  "format": "duration"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "x509": {
              "description": "Configuration specific to X509-SVIDs.",
              "type": "object",
              "properties": {
                "dns_sans": {
                  "description": "The DNS Subject Alternative Names (SANs) that should be included in an X509-SVID issued using this WorkloadIdentity.  Each entry in this list supports templating using attributes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "nullable": true
                },
                "maximum_ttl": {
                  "description": "Control the maximum TTL of X509-SVIDs issued using this WorkloadIdentity.  If a X509-SVID is requested with a TTL greater than this value, then the returned X509-SVID will have a TTL of this value.  Defaults to 24 hours. The maximum this value can be set to is 14 days.",
                  "type": "string",
                  "format": "duration"
                },
                "subject_template": {
                  "description": "Used to configure the Subject Distinguished Name (DN) of the X509-SVID.  In most circumstances, it is recommended to prefer relying on the SPIFFE ID encoded in the URI SAN. However, the Subject DN may be needed to support legacy systems designed for X509 and not SPIFFE/WIMSE.  If not provided, the X509-SVID will be issued with an empty Subject DN.",
                  "type": "object",
                  "properties": {
                    "common_name": {
                      "description": "Common Name (CN) - 2.5.4.3 If empty, the RDN will be omitted from the DN.",
                      "type": "string"
                    },
                    "organization": {
                      "description": "Organization (O) - 2.5.4.10 If empty, the RDN will be omitted from the DN.",
                      "type": "string"
                    },
                    "organizational_unit": {
                      "description": "Organizational Unit (OU) - 2.5.4.11 If empty, the RDN will be omitted from the DN.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "nullable": true
                }
              },
              "additionalProperties": false,
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the observed state of the Teleport resource",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "teleportResourceID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
