{
  "description": "ProvisionToken is the Schema for the provisiontokens API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ProvisionToken resource definition v2 from Teleport",
      "type": "object",
      "properties": {
        "allow": {
          "description": "Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "aws_account": {
                "description": "AWSAccount is the AWS account ID.",
                "type": "string"
              },
              "aws_arn": {
                "description": "AWSARN is used for the IAM join method, the AWS identity of joining nodes must match this ARN. Supports wildcards \"*\" and \"?\".",
                "type": "string"
              },
              "aws_regions": {
                "description": "AWSRegions is used for the EC2 join method and is a list of AWS regions a node is allowed to join from.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "aws_role": {
                "description": "AWSRole is used for the EC2 join method and is the ARN of the AWS role that the Auth Service will assume in order to call the ec2 API.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "nullable": true
        },
        "aws_iid_ttl": {
          "description": "AWSIIDTTL is the TTL to use for AWS EC2 Instance Identity Documents used to join the cluster with this token.",
          "type": "string",
          "format": "duration"
        },
        "azure": {
          "description": "Azure allows the configuration of options specific to the \"azure\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource_groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "subscription": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "azure_devops": {
          "description": "AzureDevops allows the configuration of options specific to the \"azure_devops\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token. At least one allow rule must be specified.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "definition_id": {
                    "type": "string"
                  },
                  "pipeline_name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "project_name": {
                    "type": "string"
                  },
                  "repository_ref": {
                    "type": "string"
                  },
                  "repository_uri": {
                    "type": "string"
                  },
                  "repository_version": {
                    "type": "string"
                  },
                  "sub": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "organization_id": {
              "description": "OrganizationID specifies the UUID of the Azure DevOps organization that this join token will grant access to. This is used to identify the correct issuer verification of the ID token. This is a required field.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "bitbucket": {
          "description": "Bitbucket allows the configuration of options specific to the \"bitbucket\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "branch_name": {
                    "type": "string"
                  },
                  "deployment_environment_uuid": {
                    "type": "string"
                  },
                  "repository_uuid": {
                    "type": "string"
                  },
                  "workspace_uuid": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "audience": {
              "description": "Audience is a Bitbucket-specified audience value for this token. It is unique to each Bitbucket repository, and must be set to the value as written in the Pipelines -\u003e OpenID Connect section of the repository settings.",
              "type": "string"
            },
            "identity_provider_url": {
              "description": "IdentityProviderURL is a Bitbucket-specified issuer URL for incoming OIDC tokens. It is unique to each Bitbucket repository, and must be set to the value as written in the Pipelines -\u003e OpenID Connect section of the repository settings.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "bot_name": {
          "description": "BotName is the name of the bot this token grants access to, if any",
          "type": "string"
        },
        "bound_keypair": {
          "description": "BoundKeypair allows the configuration of options specific to the \"bound_keypair\" join method.",
          "type": "object",
          "properties": {
            "onboarding": {
              "description": "Onboarding contains parameters related to initial onboarding and keypair registration.",
              "type": "object",
              "properties": {
                "initial_public_key": {
                  "type": "string"
                },
                "must_register_before": {
                  "type": "string",
                  "format": "date-time"
                },
                "registration_secret": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "recovery": {
              "description": "Recovery contains parameters related to recovery after identity expiration.",
              "type": "object",
              "properties": {
                "limit": {
                  "type": "integer",
                  "format": "int32"
                },
                "mode": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "rotate_after": {
              "description": "RotateAfter is an optional timestamp that forces clients to perform a keypair rotation on the next join or recovery attempt after the given date. If `LastRotatedAt` is unset or before this timestamp, a rotation will be requested. It is recommended to set this value to the current timestamp if a rotation should be triggered on the next join attempt.",
              "type": "string",
              "format": "date-time"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "circleci": {
          "description": "CircleCI allows the configuration of options specific to the \"circleci\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "context_id": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "organization_id": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "gcp": {
          "description": "GCP allows the configuration of options specific to the \"gcp\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "locations": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "project_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "service_accounts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "github": {
          "description": "GitHub allows the configuration of options specific to the \"github\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "actor": {
                    "type": "string"
                  },
                  "environment": {
                    "type": "string"
                  },
                  "ref": {
                    "type": "string"
                  },
                  "ref_type": {
                    "type": "string"
                  },
                  "repository": {
                    "type": "string"
                  },
                  "repository_owner": {
                    "type": "string"
                  },
                  "sub": {
                    "type": "string"
                  },
                  "workflow": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "enterprise_server_host": {
              "description": "EnterpriseServerHost allows joining from runners associated with a GitHub Enterprise Server instance. When unconfigured, tokens will be validated against github.com, but when configured to the host of a GHES instance, then the tokens will be validated against host.  This value should be the hostname of the GHES instance, and should not include the scheme or a path. The instance must be accessible over HTTPS at this hostname and the certificate must be trusted by the Auth Service.",
              "type": "string"
            },
            "enterprise_slug": {
              "description": "EnterpriseSlug allows the slug of a GitHub Enterprise organisation to be included in the expected issuer of the OIDC tokens. This is for compatibility with the `include_enterprise_slug` option in GHE.  This field should be set to the slug of your enterprise if this is enabled. If this is not enabled, then this field must be left empty. This field cannot be specified if `enterprise_server_host` is specified.  See https://docs.github.com/en/enterprise-cloud@latest/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect#customizing-the-issuer-value-for-an-enterprise for more information about customized issuer values.",
              "type": "string"
            },
            "static_jwks": {
              "description": "StaticJWKS disables fetching of the GHES signing keys via the JWKS/OIDC endpoints, and allows them to be directly specified. This allows joining from GitHub Actions in GHES instances that are not reachable by the Teleport Auth Service.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "gitlab": {
          "description": "GitLab allows the configuration of options specific to the \"gitlab\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of TokenRules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ci_config_ref_uri": {
                    "type": "string"
                  },
                  "ci_config_sha": {
                    "type": "string"
                  },
                  "deployment_tier": {
                    "type": "string"
                  },
                  "environment": {
                    "type": "string"
                  },
                  "environment_protected": {
                    "type": "boolean"
                  },
                  "namespace_path": {
                    "type": "string"
                  },
                  "pipeline_source": {
                    "type": "string"
                  },
                  "project_path": {
                    "type": "string"
                  },
                  "project_visibility": {
                    "type": "string"
                  },
                  "ref": {
                    "type": "string"
                  },
                  "ref_protected": {
                    "type": "boolean"
                  },
                  "ref_type": {
                    "type": "string"
                  },
                  "sub": {
                    "type": "string"
                  },
                  "user_email": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string"
                  },
                  "user_login": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "domain": {
              "description": "Domain is the domain of your GitLab instance. This will default to `gitlab.com` - but can be set to the domain of your self-hosted GitLab e.g `gitlab.example.com`.",
              "type": "string"
            },
            "static_jwks": {
              "description": "StaticJWKS disables fetching of the GitLab signing keys via the JWKS/OIDC endpoints, and allows them to be directly specified. This allows joining from GitLab CI instances that are not reachable by the Teleport Auth Service.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "join_method": {
          "description": "JoinMethod is the joining method required in order to use this token. Supported joining methods include: azure, circleci, ec2, gcp, github, gitlab, iam, kubernetes, spacelift, token, tpm",
          "type": "string"
        },
        "kubernetes": {
          "description": "Kubernetes allows the configuration of options specific to the \"kubernetes\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "service_account": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "oidc": {
              "description": "OIDCConfig configures the `oidc` type.",
              "type": "object",
              "properties": {
                "insecure_allow_http_issuer": {
                  "type": "boolean"
                },
                "issuer": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "static_jwks": {
              "description": "StaticJWKS is the configuration specific to the `static_jwks` type.",
              "type": "object",
              "properties": {
                "jwks": {
                  "type": "string"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "type": {
              "description": "Type controls which behavior should be used for validating the Kubernetes Service Account token. Support values: - `in_cluster` - `static_jwks` - `oidc` If unset, this defaults to `in_cluster`.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "oracle": {
          "description": "Oracle allows the configuration of options specific to the \"oracle\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "parent_compartments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "regions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "nullable": true
                  },
                  "tenancy": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "roles": {
          "description": "Roles is a list of roles associated with the token, that will be converted to metadata in the SSH and X509 certificates issued to the user of the token",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "spacelift": {
          "description": "Spacelift allows the configuration of options specific to the \"spacelift\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "caller_id": {
                    "type": "string"
                  },
                  "caller_type": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "space_id": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "enable_glob_matching": {
              "description": "EnableGlobMatching enables glob-style matching for the space_id and caller_id fields in the rules.",
              "type": "boolean"
            },
            "hostname": {
              "description": "Hostname is the hostname of the Spacelift tenant that tokens will originate from. E.g `example.app.spacelift.io`",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "suggested_agent_matcher_labels": {
          "description": "SuggestedAgentMatcherLabels is a set of labels to be used by agents to match on resources. When an agent uses this token, the agent should monitor resources that match those labels. For databases, this means adding the labels to `db_service.resources.labels`. Currently, only node-join scripts create a configuration according to the suggestion.",
          "type": "object",
          "additionalProperties": {
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "suggested_labels": {
          "description": "SuggestedLabels is a set of labels that resources should set when using this token to enroll themselves in the cluster. Currently, only node-join scripts create a configuration according to the suggestion.",
          "type": "object",
          "additionalProperties": {
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "terraform_cloud": {
          "description": "TerraformCloud allows the configuration of options specific to the \"terraform_cloud\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, nodes using this token must match one allow rule to use this token.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "organization_id": {
                    "type": "string"
                  },
                  "organization_name": {
                    "type": "string"
                  },
                  "project_id": {
                    "type": "string"
                  },
                  "project_name": {
                    "type": "string"
                  },
                  "run_phase": {
                    "type": "string"
                  },
                  "workspace_id": {
                    "type": "string"
                  },
                  "workspace_name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "audience": {
              "description": "Audience is the JWT audience as configured in the TFC_WORKLOAD_IDENTITY_AUDIENCE(_$TAG) variable in Terraform Cloud. If unset, defaults to the Teleport cluster name. For example, if `TFC_WORKLOAD_IDENTITY_AUDIENCE_TELEPORT=foo` is set in Terraform Cloud, this value should be `foo`. If the variable is set to match the cluster name, it does not need to be set here.",
              "type": "string"
            },
            "hostname": {
              "description": "Hostname is the hostname of the Terraform Enterprise instance expected to issue JWTs allowed by this token. This may be unset for regular Terraform Cloud use, in which case it will be assumed to be `app.terraform.io`. Otherwise, it must both match the `iss` (issuer) field included in JWTs, and provide standard JWKS endpoints.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "tpm": {
          "description": "TPM allows the configuration of options specific to the \"tpm\" join method.",
          "type": "object",
          "properties": {
            "allow": {
              "description": "Allow is a list of Rules, the presented delegated identity must match one allow rule to permit joining.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "ek_certificate_serial": {
                    "type": "string"
                  },
                  "ek_public_hash": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "nullable": true
            },
            "ekcert_allowed_cas": {
              "description": "EKCertAllowedCAs is a list of CA certificates that will be used to validate TPM EKCerts. When specified, joining TPMs must present an EKCert signed by one of the specified CAs. TPMs that do not present an EKCert will be not permitted to join. When unspecified, TPMs will be allowed to join with either an EKCert or an EKPubHash.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the observed state of the Teleport resource",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "teleportResourceID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
