{
  "description": "GithubConnector is the Schema for the githubconnectors API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "GithubConnector resource definition v3 from Teleport",
      "type": "object",
      "properties": {
        "api_endpoint_url": {
          "description": "APIEndpointURL is the URL of the API endpoint of the Github instance this connector is for.",
          "type": "string"
        },
        "client_id": {
          "description": "ClientID is the Github OAuth app client ID.",
          "type": "string"
        },
        "client_redirect_settings": {
          "description": "ClientRedirectSettings defines which client redirect URLs are allowed for non-browser SSO logins other than the standard localhost ones.",
          "type": "object",
          "properties": {
            "allowed_https_hostnames": {
              "description": "a list of hostnames allowed for https client redirect URLs",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "insecure_allowed_cidr_ranges": {
              "description": "a list of CIDRs allowed for HTTP or HTTPS client redirect URLs",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "client_secret": {
          "description": "ClientSecret is the Github OAuth app client secret. This field supports secret lookup. See the operator documentation for more details.",
          "type": "string"
        },
        "display": {
          "description": "Display is the connector display name.",
          "type": "string"
        },
        "endpoint_url": {
          "description": "EndpointURL is the URL of the GitHub instance this connector is for.",
          "type": "string"
        },
        "redirect_url": {
          "description": "RedirectURL is the authorization callback URL.",
          "type": "string"
        },
        "teams_to_roles": {
          "description": "TeamsToRoles maps Github team memberships onto allowed roles.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "organization": {
                "description": "Organization is a Github organization a user belongs to.",
                "type": "string"
              },
              "roles": {
                "description": "Roles is a list of allowed logins for this org/team.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "nullable": true
              },
              "team": {
                "description": "Team is a team within the organization a user belongs to.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "user_matchers": {
          "description": "UserMatchers is a set of glob patterns to narrow down which username(s) this auth connector should match for identifier-first login.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the observed state of the Teleport resource",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "teleportResourceID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
