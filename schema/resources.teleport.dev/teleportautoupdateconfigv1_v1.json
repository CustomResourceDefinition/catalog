{
  "description": "AutoupdateConfigV1 is the Schema for the autoupdateconfigsv1 API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AutoupdateConfig resource definition v1 from Teleport",
      "type": "object",
      "properties": {
        "agents": {
          "type": "object",
          "properties": {
            "maintenance_window_duration": {
              "description": "maintenance_window_duration is the maintenance window duration. This can only be set if `strategy` is \"time-based\". Once the window is over, the group transitions to the done state. Existing agents won't be updated until the next maintenance window.",
              "type": "string",
              "format": "duration"
            },
            "mode": {
              "description": "mode specifies whether agent autoupdates are enabled, disabled, or paused.",
              "type": "string"
            },
            "schedules": {
              "description": "schedules specifies schedules for updates of grouped agents.",
              "type": "object",
              "properties": {
                "regular": {
                  "description": "regular schedules for non-critical versions.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "canary_count": {
                        "description": "canary_count is the number of canary agents that will be updated before the whole group is updated. when set to 0, the group does not enter the canary phase. This number is capped to 5. This number must always be lower than the total number of agents in the group, else the rollout will be stuck.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "days": {
                        "description": "days when the update can run. Supported values are \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\" and \"*\"",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "nullable": true
                      },
                      "name": {
                        "description": "name of the group",
                        "type": "string"
                      },
                      "start_hour": {
                        "description": "start_hour to initiate update",
                        "type": "integer",
                        "format": "int32"
                      },
                      "wait_hours": {
                        "description": "wait_hours after last group succeeds before this group can run. This can only be used when the strategy is \"halt-on-failure\". This field must be positive.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  },
                  "nullable": true
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "strategy": {
              "description": "strategy to use for updating the agents.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "tools": {
          "type": "object",
          "properties": {
            "mode": {
              "description": "Mode defines state of the client tools auto update.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the observed state of the Teleport resource",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "teleportResourceID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
