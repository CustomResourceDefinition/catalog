{
  "description": "AccessList is the Schema for the accesslists API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AccessList resource definition v1 from Teleport",
      "type": "object",
      "properties": {
        "audit": {
          "description": "audit describes the frequency that this Access List must be audited.",
          "type": "object",
          "properties": {
            "next_audit_date": {
              "description": "next_audit_date is when the next audit date should be done by.",
              "type": "string",
              "format": "date-time"
            },
            "notifications": {
              "description": "notifications is the configuration for notifying users.",
              "type": "object",
              "properties": {
                "start": {
                  "description": "start specifies when to start notifying users that the next audit date is coming up.",
                  "type": "string",
                  "format": "duration"
                }
              },
              "additionalProperties": false,
              "nullable": true
            },
            "recurrence": {
              "description": "recurrence is the recurrence definition",
              "type": "object",
              "properties": {
                "day_of_month": {
                  "description": "day_of_month is the day of month that reviews will be scheduled on. Supported values are 0, 1, 15, and 31.",
                  "x-kubernetes-int-or-string": true
                },
                "frequency": {
                  "description": "frequency is the frequency of reviews. This represents the period in months between two reviews. Supported values are 0, 1, 3, 6, and 12.",
                  "x-kubernetes-int-or-string": true
                }
              },
              "additionalProperties": false,
              "nullable": true
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "description": {
          "description": "description is an optional plaintext description of the Access List.",
          "type": "string"
        },
        "grants": {
          "description": "grants describes the access granted by membership to this Access List.",
          "type": "object",
          "properties": {
            "roles": {
              "description": "roles are the roles that are granted to users who are members of the Access List.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "traits": {
              "description": "traits are the traits that are granted to users who are members of the Access List.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "membership_requires": {
          "description": "membership_requires describes the requirements for a user to be a member of the Access List. For a membership to an Access List to be effective, the user must meet the requirements of Membership_requires and must be in the members list.",
          "type": "object",
          "properties": {
            "roles": {
              "description": "roles are the user roles that must be present for the user to obtain access.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "traits": {
              "description": "traits are the traits that must be present for the user to obtain access.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "owner_grants": {
          "description": "owner_grants describes the access granted by owners to this Access List.",
          "type": "object",
          "properties": {
            "roles": {
              "description": "roles are the roles that are granted to users who are members of the Access List.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "traits": {
              "description": "traits are the traits that are granted to users who are members of the Access List.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "owners": {
          "description": "owners is a list of owners of the Access List.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "description": "description is the plaintext description of the owner and why they are an owner.",
                "type": "string"
              },
              "ineligible_status": {
                "description": "ineligible_status describes if this owner is eligible or not and if not, describes how they're lacking eligibility.",
                "x-kubernetes-int-or-string": true
              },
              "membership_kind": {
                "description": "membership_kind describes the type of membership, either `MEMBERSHIP_KIND_USER` or `MEMBERSHIP_KIND_LIST`.",
                "x-kubernetes-int-or-string": true
              },
              "name": {
                "description": "name is the username of the owner.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "nullable": true
        },
        "ownership_requires": {
          "description": "ownership_requires describes the requirements for a user to be an owner of the Access List. For ownership of an Access List to be effective, the user must meet the requirements of ownership_requires and must be in the owners list.",
          "type": "object",
          "properties": {
            "roles": {
              "description": "roles are the user roles that must be present for the user to obtain access.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            },
            "traits": {
              "description": "traits are the traits that must be present for the user to obtain access.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false,
          "nullable": true
        },
        "title": {
          "description": "title is a plaintext short description of the Access List.",
          "type": "string"
        },
        "type": {
          "description": "type can be an empty string which denotes a regular Access List, \"scim\" which represents an Access List created from SCIM group or \"static\" for Access Lists managed by IaC tools.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the observed state of the Teleport resource",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "teleportResourceID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
