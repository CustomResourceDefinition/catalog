{
  "description": "User is the Schema for the users API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "User resource definition v2 from Teleport",
      "type": "object",
      "properties": {
        "github_identities": {
          "description": "GithubIdentities list associated Github OAuth2 identities that let user log in using externally verified identity",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "connector_id": {
                "description": "ConnectorID is id of registered OIDC connector, e.g. 'google-example.com'",
                "type": "string"
              },
              "samlSingleLogoutUrl": {
                "description": "SAMLSingleLogoutURL is the SAML Single log-out URL to initiate SAML SLO (single log-out), if applicable.",
                "type": "string"
              },
              "user_id": {
                "description": "UserID is the ID of the identity. Some connectors like GitHub have an unique ID apart from the username.",
                "type": "string"
              },
              "username": {
                "description": "Username is username supplied by external identity provider",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "oidc_identities": {
          "description": "OIDCIdentities lists associated OpenID Connect identities that let user log in using externally verified identity",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "connector_id": {
                "description": "ConnectorID is id of registered OIDC connector, e.g. 'google-example.com'",
                "type": "string"
              },
              "samlSingleLogoutUrl": {
                "description": "SAMLSingleLogoutURL is the SAML Single log-out URL to initiate SAML SLO (single log-out), if applicable.",
                "type": "string"
              },
              "user_id": {
                "description": "UserID is the ID of the identity. Some connectors like GitHub have an unique ID apart from the username.",
                "type": "string"
              },
              "username": {
                "description": "Username is username supplied by external identity provider",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "roles": {
          "description": "Roles is a list of roles assigned to user",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        },
        "saml_identities": {
          "description": "SAMLIdentities lists associated SAML identities that let user log in using externally verified identity",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "connector_id": {
                "description": "ConnectorID is id of registered OIDC connector, e.g. 'google-example.com'",
                "type": "string"
              },
              "samlSingleLogoutUrl": {
                "description": "SAMLSingleLogoutURL is the SAML Single log-out URL to initiate SAML SLO (single log-out), if applicable.",
                "type": "string"
              },
              "user_id": {
                "description": "UserID is the ID of the identity. Some connectors like GitHub have an unique ID apart from the username.",
                "type": "string"
              },
              "username": {
                "description": "Username is username supplied by external identity provider",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "traits": {
          "description": "Traits are key/value pairs received from an identity provider (through OIDC claims or SAML assertions) or from a system administrator for local accounts. Traits are used to populate role variables.",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "trusted_device_ids": {
          "description": "TrustedDeviceIDs contains the IDs of trusted devices enrolled by the user.  Note that SSO users are transient and thus may contain an empty TrustedDeviceIDs field, even though the user-\u003edevice association exists under the Device Trust subsystem. Do not rely on this field to determine device associations or ownership, it exists for legacy/informative purposes only.  Managed by the Device Trust subsystem, avoid manual edits.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "nullable": true
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Status defines the observed state of the Teleport resource",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "teleportResourceID": {
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
