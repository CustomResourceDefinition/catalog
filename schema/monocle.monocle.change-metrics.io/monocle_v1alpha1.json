{
  "description": "Monocle is the Schema for the monocles API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MonocleSpec defines the desired state of Monocle",
      "type": "object",
      "properties": {
        "image": {
          "description": "Monocle container image",
          "type": "string",
          "default": "quay.io/change-metrics/monocle:1.9.0"
        },
        "publicURL": {
          "description": "Public URL to access the Monocle API",
          "type": "string",
          "pattern": "^https?:\\/\\/.+$"
        },
        "route": {
          "description": "If set a Route (Openshift) resource will be spawned",
          "type": "object",
          "properties": {
            "host": {
              "description": "Hostname to use for setting the Route",
              "type": "string"
            },
            "labels": {
              "description": "Labels to add to the Route resource",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "storageClassName": {
          "description": "Storage class name when creating the PVC",
          "type": "string"
        },
        "storageSize": {
          "description": "Initial Storage Size for the database storage",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "MonocleStatus defines the observed state of Monocle",
      "type": "object",
      "properties": {
        "monocle-api": {
          "type": "string"
        },
        "monocle-crawler": {
          "type": "string"
        },
        "monocle-elastic": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
