{
  "description": "GatewayRoute is the Schema for the GatewayRoutes API. Provides an AWS App Mesh gateway route resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "GatewayRouteSpec defines the desired state of GatewayRoute",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "spec": {
              "description": "Gateway route specification to apply.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "grpcRoute": {
                    "description": "Specification of a gRPC gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "serviceName": {
                                "description": "Fully qualified domain name for the service to match from the request.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "http2Route": {
                    "description": "Specification of an HTTP/2 gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "path": {
                                      "description": "Exact path to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Exact path to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRoute": {
                    "description": "Specification of an HTTP gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "path": {
                                      "description": "Exact path to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          },
                                          "virtualServiceNameRef": {
                                            "description": "Reference to a VirtualService in appmesh to populate virtualServiceName.",
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referenced object.",
                                                "type": "string"
                                              },
                                              "policy": {
                                                "description": "Policies for referencing.",
                                                "type": "object",
                                                "properties": {
                                                  "resolution": {
                                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                                    "type": "string",
                                                    "default": "Required",
                                                    "enum": [
                                                      "Required",
                                                      "Optional"
                                                    ]
                                                  },
                                                  "resolve": {
                                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                                    "type": "string",
                                                    "enum": [
                                                      "Always",
                                                      "IfNotPresent"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "virtualServiceNameSelector": {
                                            "description": "Selector for a VirtualService in appmesh to populate virtualServiceName.",
                                            "type": "object",
                                            "properties": {
                                              "matchControllerRef": {
                                                "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                                "type": "boolean"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels ensures an object with matching labels is selected.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "policy": {
                                                "description": "Policies for selection.",
                                                "type": "object",
                                                "properties": {
                                                  "resolution": {
                                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                                    "type": "string",
                                                    "default": "Required",
                                                    "enum": [
                                                      "Required",
                                                      "Optional"
                                                    ]
                                                  },
                                                  "resolve": {
                                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                                    "type": "string",
                                                    "enum": [
                                                      "Always",
                                                      "IfNotPresent"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Exact path to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "priority": {
                    "description": "Priority for the gateway route, between 0 and 1000.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualGatewayName": {
              "description": "Name of the virtual gateway to associate the gateway route with. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "virtualGatewayNameRef": {
              "description": "Reference to a VirtualGateway in appmesh to populate virtualGatewayName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "virtualGatewayNameSelector": {
              "description": "Selector for a VirtualGateway in appmesh to populate virtualGatewayName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "meshName": {
              "description": "Name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "spec": {
              "description": "Gateway route specification to apply.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "grpcRoute": {
                    "description": "Specification of a gRPC gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "serviceName": {
                                "description": "Fully qualified domain name for the service to match from the request.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "http2Route": {
                    "description": "Specification of an HTTP/2 gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "path": {
                                      "description": "Exact path to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Exact path to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRoute": {
                    "description": "Specification of an HTTP gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "path": {
                                      "description": "Exact path to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          },
                                          "virtualServiceNameRef": {
                                            "description": "Reference to a VirtualService in appmesh to populate virtualServiceName.",
                                            "type": "object",
                                            "required": [
                                              "name"
                                            ],
                                            "properties": {
                                              "name": {
                                                "description": "Name of the referenced object.",
                                                "type": "string"
                                              },
                                              "policy": {
                                                "description": "Policies for referencing.",
                                                "type": "object",
                                                "properties": {
                                                  "resolution": {
                                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                                    "type": "string",
                                                    "default": "Required",
                                                    "enum": [
                                                      "Required",
                                                      "Optional"
                                                    ]
                                                  },
                                                  "resolve": {
                                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                                    "type": "string",
                                                    "enum": [
                                                      "Always",
                                                      "IfNotPresent"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          },
                                          "virtualServiceNameSelector": {
                                            "description": "Selector for a VirtualService in appmesh to populate virtualServiceName.",
                                            "type": "object",
                                            "properties": {
                                              "matchControllerRef": {
                                                "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                                "type": "boolean"
                                              },
                                              "matchLabels": {
                                                "description": "MatchLabels ensures an object with matching labels is selected.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              },
                                              "policy": {
                                                "description": "Policies for selection.",
                                                "type": "object",
                                                "properties": {
                                                  "resolution": {
                                                    "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                                    "type": "string",
                                                    "default": "Required",
                                                    "enum": [
                                                      "Required",
                                                      "Optional"
                                                    ]
                                                  },
                                                  "resolve": {
                                                    "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                                    "type": "string",
                                                    "enum": [
                                                      "Always",
                                                      "IfNotPresent"
                                                    ]
                                                  }
                                                },
                                                "additionalProperties": false
                                              }
                                            },
                                            "additionalProperties": false
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Exact path to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "priority": {
                    "description": "Priority for the gateway route, between 0 and 1000.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualGatewayName": {
              "description": "Name of the virtual gateway to associate the gateway route with. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "virtualGatewayNameRef": {
              "description": "Reference to a VirtualGateway in appmesh to populate virtualGatewayName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "virtualGatewayNameSelector": {
              "description": "Selector for a VirtualGateway in appmesh to populate virtualGatewayName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.meshName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.meshName))",
          "message": "spec.forProvider.meshName is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.spec) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.spec))",
          "message": "spec.forProvider.spec is a required parameter"
        }
      ]
    },
    "status": {
      "description": "GatewayRouteStatus defines the observed state of GatewayRoute.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "ARN of the gateway route.",
              "type": "string"
            },
            "createdDate": {
              "description": "Creation date of the gateway route.",
              "type": "string"
            },
            "id": {
              "description": "ID of the gateway route.",
              "type": "string"
            },
            "lastUpdatedDate": {
              "description": "Last update date of the gateway route.",
              "type": "string"
            },
            "meshName": {
              "description": "Name of the service mesh in which to create the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "meshOwner": {
              "description": "AWS account ID of the service mesh's owner. Defaults to the account ID the AWS provider is currently connected to.",
              "type": "string"
            },
            "name": {
              "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "resourceOwner": {
              "description": "Resource owner's AWS account ID.",
              "type": "string"
            },
            "spec": {
              "description": "Gateway route specification to apply.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "grpcRoute": {
                    "description": "Specification of a gRPC gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "serviceName": {
                                "description": "Fully qualified domain name for the service to match from the request.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "http2Route": {
                    "description": "Specification of an HTTP/2 gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "path": {
                                      "description": "Exact path to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Exact path to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRoute": {
                    "description": "Specification of an HTTP gateway route.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "Action to take if a match is determined.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "rewrite": {
                                "description": "Gateway route action to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "hostname": {
                                      "description": "Host name to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultTargetHostname": {
                                            "description": "Default target host name to write to. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "path": {
                                      "description": "Exact path to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "prefix": {
                                      "description": "Specified beginning characters to rewrite.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "defaultPrefix": {
                                            "description": "Default prefix used to replace the incoming route prefix when rewritten. Valid values: ENABLED, DISABLED.",
                                            "type": "string"
                                          },
                                          "value": {
                                            "description": "Value used to replace the incoming route prefix when rewritten.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "target": {
                                "description": "Target that traffic is routed to when a request matches the gateway route.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                      "type": "number"
                                    },
                                    "virtualService": {
                                      "description": "Virtual service gateway route target.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "virtualServiceName": {
                                            "description": "Name of the virtual service that traffic is routed to. Must be between 1 and 255 characters in length.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "match": {
                          "description": "Criteria for determining a request match.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "header": {
                                "description": "Client request headers to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "invert": {
                                      "description": "If true, the match is on the opposite of the match method and value. Default is false.",
                                      "type": "boolean"
                                    },
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          },
                                          "prefix": {
                                            "description": "Specified beginning characters to rewrite.",
                                            "type": "string"
                                          },
                                          "range": {
                                            "description": "Object that specifies the range of numbers that the header value sent by the client must be included in.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "end": {
                                                  "description": "End of the range.",
                                                  "type": "number"
                                                },
                                                "start": {
                                                  "description": "(Requited) Start of the range.",
                                                  "type": "number"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "regex": {
                                            "description": "Header value sent by the client must include the specified characters.",
                                            "type": "string"
                                          },
                                          "suffix": {
                                            "description": "Header value sent by the client must end with the specified characters.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "hostname": {
                                "description": "Host name to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "suffix": {
                                      "description": "Header value sent by the client must end with the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "path": {
                                "description": "Exact path to rewrite.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "exact": {
                                      "description": "Value used to replace matched path.",
                                      "type": "string"
                                    },
                                    "regex": {
                                      "description": "Header value sent by the client must include the specified characters.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "port": {
                                "description": "The port number that corresponds to the target for Virtual Service provider port. This is required when the provider (router or node) of the Virtual Service has multiple listeners.",
                                "type": "number"
                              },
                              "prefix": {
                                "description": "Specified beginning characters to rewrite.",
                                "type": "string"
                              },
                              "queryParameter": {
                                "description": "Client request query parameters to match on.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "match": {
                                      "description": "Criteria for determining a request match.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "exact": {
                                            "description": "Value used to replace matched path.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "name": {
                                      "description": "Name to use for the gateway route. Must be between 1 and 255 characters in length.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "priority": {
                    "description": "Priority for the gateway route, between 0 and 1000.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualGatewayName": {
              "description": "Name of the virtual gateway to associate the gateway route with. Must be between 1 and 255 characters in length.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
