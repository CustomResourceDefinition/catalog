{
  "description": "StepIssuer is the Schema for the stepissuers API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "StepIssuerSpec defines the desired state of StepIssuer",
      "type": "object",
      "required": [
        "caBundle",
        "provisioner",
        "url"
      ],
      "properties": {
        "caBundle": {
          "description": "CABundle is a base64 encoded TLS certificate used to verify connections to the step certificates server. If not set the system root certificates are used to validate the TLS connection.",
          "type": "string",
          "format": "byte"
        },
        "provisioner": {
          "description": "Provisioner contains the step certificates provisioner configuration.",
          "type": "object",
          "required": [
            "kid",
            "name",
            "passwordRef"
          ],
          "properties": {
            "kid": {
              "description": "KeyID is the kid property of the JWK provisioner.",
              "type": "string"
            },
            "name": {
              "description": "Names is the name of the JWK provisioner.",
              "type": "string"
            },
            "passwordRef": {
              "description": "PasswordRef is a reference to a Secret containing the provisioner password used to decrypt the provisioner private key.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "key": {
                  "description": "The key of the secret to select from. Must be a valid secret key.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the secret in the pod's namespace to select from.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "url": {
          "description": "URL is the base URL for the step certificates instance.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "StepIssuerStatus defines the observed state of StepIssuer",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "description": "StepIssuerCondition contains condition information for the step issuer.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the timestamp corresponding to the last status change of this condition.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Message is a human readable description of the details of the last transition, complementing reason.",
                "type": "string"
              },
              "reason": {
                "description": "Reason is a brief machine readable explanation for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of ('True', 'False', 'Unknown').",
                "type": "string",
                "allOf": [
                  {
                    "enum": [
                      "True",
                      "False",
                      "Unknown"
                    ]
                  },
                  {
                    "enum": [
                      "True",
                      "False",
                      "Unknown"
                    ]
                  }
                ]
              },
              "type": {
                "description": "Type of the condition, currently ('Ready').",
                "type": "string",
                "enum": [
                  "Ready"
                ]
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
