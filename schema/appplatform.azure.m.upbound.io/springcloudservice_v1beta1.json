{
  "description": "SpringCloudService is the Schema for the SpringCloudServices API. Manages an Azure Spring Cloud Service.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SpringCloudServiceSpec defines the desired state of SpringCloudService",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "buildAgentPoolSize": {
              "description": "Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are S1, S2, S3, S4 and S5. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "string"
            },
            "configServerGitSetting": {
              "description": "A config_server_git_setting block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.",
              "type": "object",
              "properties": {
                "httpBasicAuth": {
                  "description": "A http_basic_auth block as defined below.",
                  "type": "object",
                  "properties": {
                    "passwordSecretRef": {
                      "description": "The password used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "username": {
                      "description": "The username that's used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "label": {
                  "description": "The default label of the Git repository, should be the branch name, tag name, or commit-id of the repository.",
                  "type": "string"
                },
                "repository": {
                  "description": "One or more repository blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "httpBasicAuth": {
                        "description": "A http_basic_auth block as defined below.",
                        "type": "object",
                        "properties": {
                          "passwordSecretRef": {
                            "description": "The password used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                            "type": "object",
                            "required": [
                              "key",
                              "name"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "username": {
                            "description": "The username that's used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "label": {
                        "description": "The default label of the Git repository, should be the branch name, tag name, or commit-id of the repository.",
                        "type": "string"
                      },
                      "name": {
                        "description": "A name to identify on the Git repository, required only if repos exists.",
                        "type": "string"
                      },
                      "pattern": {
                        "description": "An array of strings used to match an application name. For each pattern, use the {application}/{profile} format with wildcards.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "searchPaths": {
                        "description": "An array of strings used to search subdirectories of the Git repository.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sshAuth": {
                        "description": "A ssh_auth block as defined below.",
                        "type": "object",
                        "properties": {
                          "hostKeyAlgorithm": {
                            "description": "The host key algorithm, should be ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, or ecdsa-sha2-nistp521. Required only if host-key exists.",
                            "type": "string"
                          },
                          "hostKeySecretRef": {
                            "description": "The host key of the Git repository server, should not include the algorithm prefix as covered by host-key-algorithm.",
                            "type": "object",
                            "required": [
                              "key",
                              "name"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "privateKeySecretRef": {
                            "description": "The SSH private key to access the Git repository, required when the URI starts with git@ or ssh://.",
                            "type": "object",
                            "required": [
                              "key",
                              "name"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "strictHostKeyCheckingEnabled": {
                            "description": "Indicates whether the Config Server instance will fail to start if the host_key does not match. Defaults to true.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "uri": {
                        "description": "The URI of the Git repository that's used as the Config Server back end should be started with http://, https://, git@, or ssh://.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "searchPaths": {
                  "description": "An array of strings used to search subdirectories of the Git repository.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sshAuth": {
                  "description": "A ssh_auth block as defined below.",
                  "type": "object",
                  "properties": {
                    "hostKeyAlgorithm": {
                      "description": "The host key algorithm, should be ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, or ecdsa-sha2-nistp521. Required only if host-key exists.",
                      "type": "string"
                    },
                    "hostKeySecretRef": {
                      "description": "The host key of the Git repository server, should not include the algorithm prefix as covered by host-key-algorithm.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "privateKeySecretRef": {
                      "description": "The SSH private key to access the Git repository, required when the URI starts with git@ or ssh://.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "strictHostKeyCheckingEnabled": {
                      "description": "Indicates whether the Config Server instance will fail to start if the host_key does not match. Defaults to true.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "uri": {
                  "description": "The URI of the default Git repository used as the Config Server back end, should be started with http://, https://, git@, or ssh://.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "containerRegistry": {
              "description": "One or more container_registry block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the name of the container registry.",
                    "type": "string"
                  },
                  "passwordSecretRef": {
                    "description": "Specifies the password of the container registry.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "server": {
                    "description": "Specifies the login server of the container registry.",
                    "type": "string"
                  },
                  "username": {
                    "description": "Specifies the username of the container registry.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "defaultBuildService": {
              "description": "A default_build_service block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "object",
              "properties": {
                "containerRegistryName": {
                  "description": "Specifies the name of the container registry used in the default build service.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logStreamPublicEndpointEnabled": {
              "description": "Should the log stream in vnet injection instance could be accessed from Internet?",
              "type": "boolean"
            },
            "managedEnvironmentId": {
              "description": "The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when sku_tier is set to StandardGen2.",
              "type": "string"
            },
            "marketplace": {
              "description": "A marketplace block as defined below. Can only be specified when sku is set to E0.",
              "type": "object",
              "properties": {
                "plan": {
                  "description": "Specifies the plan ID of the 3rd Party Artifact that is being procured.",
                  "type": "string"
                },
                "product": {
                  "description": "Specifies the 3rd Party artifact that is being procured.",
                  "type": "string"
                },
                "publisher": {
                  "description": "Specifies the publisher ID of the 3rd Party Artifact that is being procured.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network": {
              "description": "A network block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "appNetworkResourceGroup": {
                  "description": "Specifies the Name of the resource group containing network resources of Azure Spring Cloud Apps. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "appSubnetId": {
                  "description": "Specifies the ID of the Subnet which should host the Spring Boot Applications deployed in this Spring Cloud Service. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "appSubnetIdRef": {
                  "description": "Reference to a Subnet in network to populate appSubnetId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "appSubnetIdSelector": {
                  "description": "Selector for a Subnet in network to populate appSubnetId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "cidrRanges": {
                  "description": "A list of (at least 3) CIDR ranges (at least /16) which are used to host the Spring Cloud infrastructure, which must not overlap with any existing CIDR ranges in the Subnet. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "outboundType": {
                  "description": "Specifies the egress traffic type of the Spring Cloud Service. Possible values are loadBalancer and userDefinedRouting. Defaults to loadBalancer. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "readTimeoutSeconds": {
                  "description": "Ingress read time out in seconds.",
                  "type": "number"
                },
                "serviceRuntimeNetworkResourceGroup": {
                  "description": "Specifies the Name of the resource group containing network resources of Azure Spring Cloud Service Runtime. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "serviceRuntimeSubnetId": {
                  "description": "Specifies the ID of the Subnet where the Service Runtime components of the Spring Cloud Service will exist. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "serviceRuntimeSubnetIdRef": {
                  "description": "Reference to a Subnet in network to populate serviceRuntimeSubnetId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "serviceRuntimeSubnetIdSelector": {
                  "description": "Selector for a Subnet in network to populate serviceRuntimeSubnetId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceRegistryEnabled": {
              "description": "Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "boolean"
            },
            "skuName": {
              "description": "Specifies the SKU Name for this Spring Cloud Service. Possible values are B0, S0 and E0. Defaults to S0. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "skuTier": {
              "description": "Specifies the SKU Tier for this Spring Cloud Service. Possible values are Basic, Enterprise, Standard and StandardGen2. The attribute is automatically computed from API response except when managed_environment_id is defined. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "trace": {
              "description": "A trace block as defined below.",
              "type": "object",
              "properties": {
                "connectionString": {
                  "description": "The connection string used for Application Insights.",
                  "type": "string"
                },
                "connectionStringRef": {
                  "description": "Reference to a ApplicationInsights in insights to populate connectionString.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "connectionStringSelector": {
                  "description": "Selector for a ApplicationInsights in insights to populate connectionString.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sampleRate": {
                  "description": "The sampling rate of Application Insights Agent. Must be between 0.0 and 100.0. Defaults to 10.0.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "zoneRedundant": {
              "description": "Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to false.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "buildAgentPoolSize": {
              "description": "Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are S1, S2, S3, S4 and S5. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "string"
            },
            "configServerGitSetting": {
              "description": "A config_server_git_setting block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.",
              "type": "object",
              "properties": {
                "httpBasicAuth": {
                  "description": "A http_basic_auth block as defined below.",
                  "type": "object",
                  "required": [
                    "passwordSecretRef"
                  ],
                  "properties": {
                    "passwordSecretRef": {
                      "description": "The password used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "username": {
                      "description": "The username that's used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "label": {
                  "description": "The default label of the Git repository, should be the branch name, tag name, or commit-id of the repository.",
                  "type": "string"
                },
                "repository": {
                  "description": "One or more repository blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "httpBasicAuth": {
                        "description": "A http_basic_auth block as defined below.",
                        "type": "object",
                        "required": [
                          "passwordSecretRef"
                        ],
                        "properties": {
                          "passwordSecretRef": {
                            "description": "The password used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                            "type": "object",
                            "required": [
                              "key",
                              "name"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "username": {
                            "description": "The username that's used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "label": {
                        "description": "The default label of the Git repository, should be the branch name, tag name, or commit-id of the repository.",
                        "type": "string"
                      },
                      "name": {
                        "description": "A name to identify on the Git repository, required only if repos exists.",
                        "type": "string"
                      },
                      "pattern": {
                        "description": "An array of strings used to match an application name. For each pattern, use the {application}/{profile} format with wildcards.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "searchPaths": {
                        "description": "An array of strings used to search subdirectories of the Git repository.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sshAuth": {
                        "description": "A ssh_auth block as defined below.",
                        "type": "object",
                        "required": [
                          "privateKeySecretRef"
                        ],
                        "properties": {
                          "hostKeyAlgorithm": {
                            "description": "The host key algorithm, should be ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, or ecdsa-sha2-nistp521. Required only if host-key exists.",
                            "type": "string"
                          },
                          "hostKeySecretRef": {
                            "description": "The host key of the Git repository server, should not include the algorithm prefix as covered by host-key-algorithm.",
                            "type": "object",
                            "required": [
                              "key",
                              "name"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "privateKeySecretRef": {
                            "description": "The SSH private key to access the Git repository, required when the URI starts with git@ or ssh://.",
                            "type": "object",
                            "required": [
                              "key",
                              "name"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the secret.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "strictHostKeyCheckingEnabled": {
                            "description": "Indicates whether the Config Server instance will fail to start if the host_key does not match. Defaults to true.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "uri": {
                        "description": "The URI of the Git repository that's used as the Config Server back end should be started with http://, https://, git@, or ssh://.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "searchPaths": {
                  "description": "An array of strings used to search subdirectories of the Git repository.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sshAuth": {
                  "description": "A ssh_auth block as defined below.",
                  "type": "object",
                  "required": [
                    "privateKeySecretRef"
                  ],
                  "properties": {
                    "hostKeyAlgorithm": {
                      "description": "The host key algorithm, should be ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, or ecdsa-sha2-nistp521. Required only if host-key exists.",
                      "type": "string"
                    },
                    "hostKeySecretRef": {
                      "description": "The host key of the Git repository server, should not include the algorithm prefix as covered by host-key-algorithm.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "privateKeySecretRef": {
                      "description": "The SSH private key to access the Git repository, required when the URI starts with git@ or ssh://.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "strictHostKeyCheckingEnabled": {
                      "description": "Indicates whether the Config Server instance will fail to start if the host_key does not match. Defaults to true.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "uri": {
                  "description": "The URI of the default Git repository used as the Config Server back end, should be started with http://, https://, git@, or ssh://.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "containerRegistry": {
              "description": "One or more container_registry block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "passwordSecretRef"
                ],
                "properties": {
                  "name": {
                    "description": "Specifies the name of the container registry.",
                    "type": "string"
                  },
                  "passwordSecretRef": {
                    "description": "Specifies the password of the container registry.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "server": {
                    "description": "Specifies the login server of the container registry.",
                    "type": "string"
                  },
                  "username": {
                    "description": "Specifies the username of the container registry.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "defaultBuildService": {
              "description": "A default_build_service block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "object",
              "properties": {
                "containerRegistryName": {
                  "description": "Specifies the name of the container registry used in the default build service.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logStreamPublicEndpointEnabled": {
              "description": "Should the log stream in vnet injection instance could be accessed from Internet?",
              "type": "boolean"
            },
            "managedEnvironmentId": {
              "description": "The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when sku_tier is set to StandardGen2.",
              "type": "string"
            },
            "marketplace": {
              "description": "A marketplace block as defined below. Can only be specified when sku is set to E0.",
              "type": "object",
              "properties": {
                "plan": {
                  "description": "Specifies the plan ID of the 3rd Party Artifact that is being procured.",
                  "type": "string"
                },
                "product": {
                  "description": "Specifies the 3rd Party artifact that is being procured.",
                  "type": "string"
                },
                "publisher": {
                  "description": "Specifies the publisher ID of the 3rd Party Artifact that is being procured.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network": {
              "description": "A network block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "appNetworkResourceGroup": {
                  "description": "Specifies the Name of the resource group containing network resources of Azure Spring Cloud Apps. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "appSubnetId": {
                  "description": "Specifies the ID of the Subnet which should host the Spring Boot Applications deployed in this Spring Cloud Service. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "appSubnetIdRef": {
                  "description": "Reference to a Subnet in network to populate appSubnetId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "appSubnetIdSelector": {
                  "description": "Selector for a Subnet in network to populate appSubnetId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "cidrRanges": {
                  "description": "A list of (at least 3) CIDR ranges (at least /16) which are used to host the Spring Cloud infrastructure, which must not overlap with any existing CIDR ranges in the Subnet. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "outboundType": {
                  "description": "Specifies the egress traffic type of the Spring Cloud Service. Possible values are loadBalancer and userDefinedRouting. Defaults to loadBalancer. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "readTimeoutSeconds": {
                  "description": "Ingress read time out in seconds.",
                  "type": "number"
                },
                "serviceRuntimeNetworkResourceGroup": {
                  "description": "Specifies the Name of the resource group containing network resources of Azure Spring Cloud Service Runtime. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "serviceRuntimeSubnetId": {
                  "description": "Specifies the ID of the Subnet where the Service Runtime components of the Spring Cloud Service will exist. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "serviceRuntimeSubnetIdRef": {
                  "description": "Reference to a Subnet in network to populate serviceRuntimeSubnetId.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "serviceRuntimeSubnetIdSelector": {
                  "description": "Selector for a Subnet in network to populate serviceRuntimeSubnetId.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceRegistryEnabled": {
              "description": "Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "boolean"
            },
            "skuName": {
              "description": "Specifies the SKU Name for this Spring Cloud Service. Possible values are B0, S0 and E0. Defaults to S0. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "skuTier": {
              "description": "Specifies the SKU Tier for this Spring Cloud Service. Possible values are Basic, Enterprise, Standard and StandardGen2. The attribute is automatically computed from API response except when managed_environment_id is defined. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "trace": {
              "description": "A trace block as defined below.",
              "type": "object",
              "properties": {
                "connectionString": {
                  "description": "The connection string used for Application Insights.",
                  "type": "string"
                },
                "connectionStringRef": {
                  "description": "Reference to a ApplicationInsights in insights to populate connectionString.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the referenced object",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "connectionStringSelector": {
                  "description": "Selector for a ApplicationInsights in insights to populate connectionString.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespace": {
                      "description": "Namespace for the selector",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "sampleRate": {
                  "description": "The sampling rate of Application Insights Agent. Must be between 0.0 and 100.0. Defaults to 10.0.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "zoneRedundant": {
              "description": "Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to false.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SpringCloudServiceStatus defines the observed state of SpringCloudService.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "buildAgentPoolSize": {
              "description": "Specifies the size for this Spring Cloud Service's default build agent pool. Possible values are S1, S2, S3, S4 and S5. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "string"
            },
            "configServerGitSetting": {
              "description": "A config_server_git_setting block as defined below. This field is applicable only for Spring Cloud Service with basic and standard tier.",
              "type": "object",
              "properties": {
                "httpBasicAuth": {
                  "description": "A http_basic_auth block as defined below.",
                  "type": "object",
                  "properties": {
                    "username": {
                      "description": "The username that's used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "label": {
                  "description": "The default label of the Git repository, should be the branch name, tag name, or commit-id of the repository.",
                  "type": "string"
                },
                "repository": {
                  "description": "One or more repository blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "httpBasicAuth": {
                        "description": "A http_basic_auth block as defined below.",
                        "type": "object",
                        "properties": {
                          "username": {
                            "description": "The username that's used to access the Git repository server, required when the Git repository server supports HTTP Basic Authentication.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "label": {
                        "description": "The default label of the Git repository, should be the branch name, tag name, or commit-id of the repository.",
                        "type": "string"
                      },
                      "name": {
                        "description": "A name to identify on the Git repository, required only if repos exists.",
                        "type": "string"
                      },
                      "pattern": {
                        "description": "An array of strings used to match an application name. For each pattern, use the {application}/{profile} format with wildcards.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "searchPaths": {
                        "description": "An array of strings used to search subdirectories of the Git repository.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "sshAuth": {
                        "description": "A ssh_auth block as defined below.",
                        "type": "object",
                        "properties": {
                          "hostKeyAlgorithm": {
                            "description": "The host key algorithm, should be ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, or ecdsa-sha2-nistp521. Required only if host-key exists.",
                            "type": "string"
                          },
                          "strictHostKeyCheckingEnabled": {
                            "description": "Indicates whether the Config Server instance will fail to start if the host_key does not match. Defaults to true.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "uri": {
                        "description": "The URI of the Git repository that's used as the Config Server back end should be started with http://, https://, git@, or ssh://.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "searchPaths": {
                  "description": "An array of strings used to search subdirectories of the Git repository.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sshAuth": {
                  "description": "A ssh_auth block as defined below.",
                  "type": "object",
                  "properties": {
                    "hostKeyAlgorithm": {
                      "description": "The host key algorithm, should be ssh-dss, ssh-rsa, ecdsa-sha2-nistp256, ecdsa-sha2-nistp384, or ecdsa-sha2-nistp521. Required only if host-key exists.",
                      "type": "string"
                    },
                    "strictHostKeyCheckingEnabled": {
                      "description": "Indicates whether the Config Server instance will fail to start if the host_key does not match. Defaults to true.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "uri": {
                  "description": "The URI of the default Git repository used as the Config Server back end, should be started with http://, https://, git@, or ssh://.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "containerRegistry": {
              "description": "One or more container_registry block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Specifies the name of the container registry.",
                    "type": "string"
                  },
                  "server": {
                    "description": "Specifies the login server of the container registry.",
                    "type": "string"
                  },
                  "username": {
                    "description": "Specifies the username of the container registry.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "defaultBuildService": {
              "description": "A default_build_service block as defined below. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "object",
              "properties": {
                "containerRegistryName": {
                  "description": "Specifies the name of the container registry used in the default build service.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "The ID of the Spring Cloud Service.",
              "type": "string"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logStreamPublicEndpointEnabled": {
              "description": "Should the log stream in vnet injection instance could be accessed from Internet?",
              "type": "boolean"
            },
            "managedEnvironmentId": {
              "description": "The resource Id of the Managed Environment that the Spring Apps instance builds on. Can only be specified when sku_tier is set to StandardGen2.",
              "type": "string"
            },
            "marketplace": {
              "description": "A marketplace block as defined below. Can only be specified when sku is set to E0.",
              "type": "object",
              "properties": {
                "plan": {
                  "description": "Specifies the plan ID of the 3rd Party Artifact that is being procured.",
                  "type": "string"
                },
                "product": {
                  "description": "Specifies the 3rd Party artifact that is being procured.",
                  "type": "string"
                },
                "publisher": {
                  "description": "Specifies the publisher ID of the 3rd Party Artifact that is being procured.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network": {
              "description": "A network block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "appNetworkResourceGroup": {
                  "description": "Specifies the Name of the resource group containing network resources of Azure Spring Cloud Apps. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "appSubnetId": {
                  "description": "Specifies the ID of the Subnet which should host the Spring Boot Applications deployed in this Spring Cloud Service. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "cidrRanges": {
                  "description": "A list of (at least 3) CIDR ranges (at least /16) which are used to host the Spring Cloud infrastructure, which must not overlap with any existing CIDR ranges in the Subnet. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "outboundType": {
                  "description": "Specifies the egress traffic type of the Spring Cloud Service. Possible values are loadBalancer and userDefinedRouting. Defaults to loadBalancer. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "readTimeoutSeconds": {
                  "description": "Ingress read time out in seconds.",
                  "type": "number"
                },
                "serviceRuntimeNetworkResourceGroup": {
                  "description": "Specifies the Name of the resource group containing network resources of Azure Spring Cloud Service Runtime. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "serviceRuntimeSubnetId": {
                  "description": "Specifies the ID of the Subnet where the Service Runtime components of the Spring Cloud Service will exist. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "outboundPublicIpAddresses": {
              "description": "A list of the outbound Public IP Addresses used by this Spring Cloud Service.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "requiredNetworkTrafficRules": {
              "description": "A list of required_network_traffic_rules blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "direction": {
                    "description": "The direction of required traffic. Possible values are Inbound, Outbound.",
                    "type": "string"
                  },
                  "fqdns": {
                    "description": "The FQDN list of required traffic.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ipAddresses": {
                    "description": "The IP list of required traffic.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "port": {
                    "description": "The port of required traffic.",
                    "type": "number"
                  },
                  "protocol": {
                    "description": "The protocol of required traffic.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "Specifies The name of the resource group in which to create the Spring Cloud Service. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "serviceRegistryEnabled": {
              "description": "Whether enable the default Service Registry. This field is applicable only for Spring Cloud Service with enterprise tier.",
              "type": "boolean"
            },
            "serviceRegistryId": {
              "description": "The ID of the Spring Cloud Service Registry.",
              "type": "string"
            },
            "skuName": {
              "description": "Specifies the SKU Name for this Spring Cloud Service. Possible values are B0, S0 and E0. Defaults to S0. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "skuTier": {
              "description": "Specifies the SKU Tier for this Spring Cloud Service. Possible values are Basic, Enterprise, Standard and StandardGen2. The attribute is automatically computed from API response except when managed_environment_id is defined. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "trace": {
              "description": "A trace block as defined below.",
              "type": "object",
              "properties": {
                "connectionString": {
                  "description": "The connection string used for Application Insights.",
                  "type": "string"
                },
                "sampleRate": {
                  "description": "The sampling rate of Application Insights Agent. Must be between 0.0 and 100.0. Defaults to 10.0.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "zoneRedundant": {
              "description": "Whether zone redundancy is enabled for this Spring Cloud Service. Defaults to false.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
