{
  "description": "SpringCloudGateway is the Schema for the SpringCloudGateways API. Manages a Spring Cloud Gateway.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SpringCloudGatewaySpec defines the desired state of SpringCloudGateway",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "apiMetadata": {
              "description": "A api_metadata block as defined below.",
              "type": "object",
              "properties": {
                "description": {
                  "description": "Detailed description of the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "documentationUrl": {
                  "description": "Location of additional documentation for the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "serverUrl": {
                  "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                  "type": "string"
                },
                "title": {
                  "description": "Specifies the title describing the context of the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "version": {
                  "description": "Specifies the version of APIs available on this Gateway instance.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "applicationPerformanceMonitoringIds": {
              "description": "Specifies a list of Spring Cloud Application Performance Monitoring IDs.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "applicationPerformanceMonitoringTypes": {
              "description": "Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientAuthorization": {
              "description": "A client_authorization block as defined below.",
              "type": "object",
              "properties": {
                "certificateIds": {
                  "description": "Specifies the Spring Cloud Certificate IDs of the Spring Cloud Gateway.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verificationEnabled": {
                  "description": "Specifies whether the client certificate verification is enabled.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "cors": {
              "description": "A cors block as defined below.",
              "type": "object",
              "properties": {
                "allowedHeaders": {
                  "description": "Allowed headers in cross-site requests. The special value * allows actual requests to send any header.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedMethods": {
                  "description": "Allowed HTTP methods on cross-site requests. The special value * allows all methods. If not set, GET and HEAD are allowed by default. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS and PUT.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedOriginPatterns": {
                  "description": "Allowed origin patterns to make cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedOrigins": {
                  "description": "Allowed origins to make cross-site requests. The special value * allows all domains.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "credentialsAllowed": {
                  "description": "is user credentials are supported on cross-site requests?",
                  "type": "boolean"
                },
                "exposedHeaders": {
                  "description": "HTTP response headers to expose for cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "maxAgeSeconds": {
                  "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "environmentVariables": {
              "description": "Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "httpsOnly": {
              "description": "is only https is allowed?",
              "type": "boolean"
            },
            "instanceCount": {
              "description": "Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between 1 and 500. Defaults to 1 if not specified.",
              "type": "number"
            },
            "localResponseCachePerInstance": {
              "description": "A local_response_cache_per_instance block as defined below. Only one of local_response_cache_per_instance or local_response_cache_per_route can be specified.",
              "type": "object",
              "properties": {
                "size": {
                  "description": "Specifies the maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.",
                  "type": "string"
                },
                "timeToLive": {
                  "description": "Specifies the time before a cached entry is expired (300s, 5m, 1h...).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "localResponseCachePerRoute": {
              "description": "A local_response_cache_per_route block as defined below. Only one of local_response_cache_per_instance or local_response_cache_per_route can be specified.",
              "type": "object",
              "properties": {
                "size": {
                  "description": "Specifies the maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.",
                  "type": "string"
                },
                "timeToLive": {
                  "description": "Specifies the time before a cached entry is expired (300s, 5m, 1h...).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "publicNetworkAccessEnabled": {
              "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
              "type": "boolean"
            },
            "quota": {
              "description": "A quota block as defined below.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.",
                  "type": "string"
                },
                "memory": {
                  "description": "Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 2Gi if not specified.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "sensitiveEnvironmentVariablesSecretRef": {
              "description": "Specifies the sensitive environment variables of the Spring Cloud Gateway as a map of key-value pairs.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "springCloudServiceId": {
              "description": "The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.",
              "type": "string"
            },
            "springCloudServiceIdRef": {
              "description": "Reference to a SpringCloudService in appplatform to populate springCloudServiceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "springCloudServiceIdSelector": {
              "description": "Selector for a SpringCloudService in appplatform to populate springCloudServiceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "sso": {
              "description": "A sso block as defined below.",
              "type": "object",
              "properties": {
                "clientId": {
                  "description": "The public identifier for the application.",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "The secret known only to the application and the authorization server.",
                  "type": "string"
                },
                "issuerUri": {
                  "description": "The URI of Issuer Identifier.",
                  "type": "string"
                },
                "scope": {
                  "description": "It defines the specific actions applications can be allowed to do on a user's behalf.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "apiMetadata": {
              "description": "A api_metadata block as defined below.",
              "type": "object",
              "properties": {
                "description": {
                  "description": "Detailed description of the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "documentationUrl": {
                  "description": "Location of additional documentation for the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "serverUrl": {
                  "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                  "type": "string"
                },
                "title": {
                  "description": "Specifies the title describing the context of the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "version": {
                  "description": "Specifies the version of APIs available on this Gateway instance.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "applicationPerformanceMonitoringIds": {
              "description": "Specifies a list of Spring Cloud Application Performance Monitoring IDs.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "applicationPerformanceMonitoringTypes": {
              "description": "Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientAuthorization": {
              "description": "A client_authorization block as defined below.",
              "type": "object",
              "properties": {
                "certificateIds": {
                  "description": "Specifies the Spring Cloud Certificate IDs of the Spring Cloud Gateway.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verificationEnabled": {
                  "description": "Specifies whether the client certificate verification is enabled.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "cors": {
              "description": "A cors block as defined below.",
              "type": "object",
              "properties": {
                "allowedHeaders": {
                  "description": "Allowed headers in cross-site requests. The special value * allows actual requests to send any header.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedMethods": {
                  "description": "Allowed HTTP methods on cross-site requests. The special value * allows all methods. If not set, GET and HEAD are allowed by default. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS and PUT.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedOriginPatterns": {
                  "description": "Allowed origin patterns to make cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedOrigins": {
                  "description": "Allowed origins to make cross-site requests. The special value * allows all domains.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "credentialsAllowed": {
                  "description": "is user credentials are supported on cross-site requests?",
                  "type": "boolean"
                },
                "exposedHeaders": {
                  "description": "HTTP response headers to expose for cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "maxAgeSeconds": {
                  "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "environmentVariables": {
              "description": "Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "httpsOnly": {
              "description": "is only https is allowed?",
              "type": "boolean"
            },
            "instanceCount": {
              "description": "Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between 1 and 500. Defaults to 1 if not specified.",
              "type": "number"
            },
            "localResponseCachePerInstance": {
              "description": "A local_response_cache_per_instance block as defined below. Only one of local_response_cache_per_instance or local_response_cache_per_route can be specified.",
              "type": "object",
              "properties": {
                "size": {
                  "description": "Specifies the maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.",
                  "type": "string"
                },
                "timeToLive": {
                  "description": "Specifies the time before a cached entry is expired (300s, 5m, 1h...).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "localResponseCachePerRoute": {
              "description": "A local_response_cache_per_route block as defined below. Only one of local_response_cache_per_instance or local_response_cache_per_route can be specified.",
              "type": "object",
              "properties": {
                "size": {
                  "description": "Specifies the maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.",
                  "type": "string"
                },
                "timeToLive": {
                  "description": "Specifies the time before a cached entry is expired (300s, 5m, 1h...).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "publicNetworkAccessEnabled": {
              "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
              "type": "boolean"
            },
            "quota": {
              "description": "A quota block as defined below.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.",
                  "type": "string"
                },
                "memory": {
                  "description": "Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 2Gi if not specified.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "sensitiveEnvironmentVariablesSecretRef": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "sso": {
              "description": "A sso block as defined below.",
              "type": "object",
              "properties": {
                "clientId": {
                  "description": "The public identifier for the application.",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "The secret known only to the application and the authorization server.",
                  "type": "string"
                },
                "issuerUri": {
                  "description": "The URI of Issuer Identifier.",
                  "type": "string"
                },
                "scope": {
                  "description": "It defines the specific actions applications can be allowed to do on a user's behalf.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SpringCloudGatewayStatus defines the observed state of SpringCloudGateway.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "apiMetadata": {
              "description": "A api_metadata block as defined below.",
              "type": "object",
              "properties": {
                "description": {
                  "description": "Detailed description of the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "documentationUrl": {
                  "description": "Location of additional documentation for the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "serverUrl": {
                  "description": "Base URL that API consumers will use to access APIs on the Gateway instance.",
                  "type": "string"
                },
                "title": {
                  "description": "Specifies the title describing the context of the APIs available on the Gateway instance.",
                  "type": "string"
                },
                "version": {
                  "description": "Specifies the version of APIs available on this Gateway instance.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "applicationPerformanceMonitoringIds": {
              "description": "Specifies a list of Spring Cloud Application Performance Monitoring IDs.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "applicationPerformanceMonitoringTypes": {
              "description": "Specifies a list of application performance monitoring types used in the Spring Cloud Gateway. The allowed values are AppDynamics, ApplicationInsights, Dynatrace, ElasticAPM and NewRelic.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientAuthorization": {
              "description": "A client_authorization block as defined below.",
              "type": "object",
              "properties": {
                "certificateIds": {
                  "description": "Specifies the Spring Cloud Certificate IDs of the Spring Cloud Gateway.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verificationEnabled": {
                  "description": "Specifies whether the client certificate verification is enabled.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "cors": {
              "description": "A cors block as defined below.",
              "type": "object",
              "properties": {
                "allowedHeaders": {
                  "description": "Allowed headers in cross-site requests. The special value * allows actual requests to send any header.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedMethods": {
                  "description": "Allowed HTTP methods on cross-site requests. The special value * allows all methods. If not set, GET and HEAD are allowed by default. Possible values are DELETE, GET, HEAD, MERGE, POST, OPTIONS and PUT.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedOriginPatterns": {
                  "description": "Allowed origin patterns to make cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "allowedOrigins": {
                  "description": "Allowed origins to make cross-site requests. The special value * allows all domains.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "credentialsAllowed": {
                  "description": "is user credentials are supported on cross-site requests?",
                  "type": "boolean"
                },
                "exposedHeaders": {
                  "description": "HTTP response headers to expose for cross-site requests.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "maxAgeSeconds": {
                  "description": "How long, in seconds, the response from a pre-flight request can be cached by clients.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "environmentVariables": {
              "description": "Specifies the environment variables of the Spring Cloud Gateway as a map of key-value pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "httpsOnly": {
              "description": "is only https is allowed?",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the Spring Cloud Gateway.",
              "type": "string"
            },
            "instanceCount": {
              "description": "Specifies the required instance count of the Spring Cloud Gateway. Possible Values are between 1 and 500. Defaults to 1 if not specified.",
              "type": "number"
            },
            "localResponseCachePerInstance": {
              "description": "A local_response_cache_per_instance block as defined below. Only one of local_response_cache_per_instance or local_response_cache_per_route can be specified.",
              "type": "object",
              "properties": {
                "size": {
                  "description": "Specifies the maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.",
                  "type": "string"
                },
                "timeToLive": {
                  "description": "Specifies the time before a cached entry is expired (300s, 5m, 1h...).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "localResponseCachePerRoute": {
              "description": "A local_response_cache_per_route block as defined below. Only one of local_response_cache_per_instance or local_response_cache_per_route can be specified.",
              "type": "object",
              "properties": {
                "size": {
                  "description": "Specifies the maximum size of cache (10MB, 900KB, 1GB...) to determine if the cache needs to evict some entries.",
                  "type": "string"
                },
                "timeToLive": {
                  "description": "Specifies the time before a cached entry is expired (300s, 5m, 1h...).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "publicNetworkAccessEnabled": {
              "description": "Indicates whether the Spring Cloud Gateway exposes endpoint.",
              "type": "boolean"
            },
            "quota": {
              "description": "A quota block as defined below.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "Specifies the required cpu of the Spring Cloud Deployment. Possible Values are 500m, 1, 2, 3 and 4. Defaults to 1 if not specified.",
                  "type": "string"
                },
                "memory": {
                  "description": "Specifies the required memory size of the Spring Cloud Deployment. Possible Values are 512Mi, 1Gi, 2Gi, 3Gi, 4Gi, 5Gi, 6Gi, 7Gi, and 8Gi. Defaults to 2Gi if not specified.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "springCloudServiceId": {
              "description": "The ID of the Spring Cloud Service. Changing this forces a new Spring Cloud Gateway to be created.",
              "type": "string"
            },
            "sso": {
              "description": "A sso block as defined below.",
              "type": "object",
              "properties": {
                "clientId": {
                  "description": "The public identifier for the application.",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "The secret known only to the application and the authorization server.",
                  "type": "string"
                },
                "issuerUri": {
                  "description": "The URI of Issuer Identifier.",
                  "type": "string"
                },
                "scope": {
                  "description": "It defines the specific actions applications can be allowed to do on a user's behalf.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "url": {
              "description": "URL of the Spring Cloud Gateway, exposed when 'public_network_access_enabled' is true.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
