{
  "description": "SlotType is the Schema for the SlotTypes API. Provides details about a specific Amazon Lex Slot Type",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SlotTypeSpec defines the desired state of SlotType",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "createVersion": {
              "description": "Determines if a new slot type version is created when the initial resource is created and on each\nupdate. Defaults to false.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of the slot type. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "enumerationValue": {
              "description": "A list of EnumerationValue objects that defines the values that\nthe slot type can take. Each value can have a list of synonyms, which are additional values that help\ntrain the machine learning model about the values that it resolves for a slot. Attributes are\ndocumented under enumeration_value.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "synonyms": {
                    "description": "Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "value": {
                    "description": "The value of the slot type. Must be less than or equal to 140 characters in length.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "valueSelectionStrategy": {
              "description": "Determines the slot resolution strategy that Amazon Lex\nuses to return slot type values. ORIGINAL_VALUE returns the value entered by the user if the user\nvalue is similar to the slot value. TOP_RESOLUTION returns the first value in the resolution list\nif there is a resolution list for the slot, otherwise null is returned. Defaults to ORIGINAL_VALUE.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "createVersion": {
              "description": "Determines if a new slot type version is created when the initial resource is created and on each\nupdate. Defaults to false.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of the slot type. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "enumerationValue": {
              "description": "A list of EnumerationValue objects that defines the values that\nthe slot type can take. Each value can have a list of synonyms, which are additional values that help\ntrain the machine learning model about the values that it resolves for a slot. Attributes are\ndocumented under enumeration_value.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "synonyms": {
                    "description": "Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "value": {
                    "description": "The value of the slot type. Must be less than or equal to 140 characters in length.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "valueSelectionStrategy": {
              "description": "Determines the slot resolution strategy that Amazon Lex\nuses to return slot type values. ORIGINAL_VALUE returns the value entered by the user if the user\nvalue is similar to the slot value. TOP_RESOLUTION returns the first value in the resolution list\nif there is a resolution list for the slot, otherwise null is returned. Defaults to ORIGINAL_VALUE.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enumerationValue) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.enumerationValue))",
          "message": "spec.forProvider.enumerationValue is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SlotTypeStatus defines the observed state of SlotType.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "checksum": {
              "description": "Checksum identifying the version of the slot type that was created. The checksum is\nnot included as an argument because the resource will add it automatically when updating the slot type.",
              "type": "string"
            },
            "createVersion": {
              "description": "Determines if a new slot type version is created when the initial resource is created and on each\nupdate. Defaults to false.",
              "type": "boolean"
            },
            "createdDate": {
              "description": "The date when the slot type version was created.",
              "type": "string"
            },
            "description": {
              "description": "A description of the slot type. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "enumerationValue": {
              "description": "A list of EnumerationValue objects that defines the values that\nthe slot type can take. Each value can have a list of synonyms, which are additional values that help\ntrain the machine learning model about the values that it resolves for a slot. Attributes are\ndocumented under enumeration_value.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "synonyms": {
                    "description": "Additional values related to the slot type value. Each item must be less than or equal to 140 characters in length.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "value": {
                    "description": "The value of the slot type. Must be less than or equal to 140 characters in length.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "type": "string"
            },
            "lastUpdatedDate": {
              "description": "The date when the $LATEST version of this slot type was updated.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "valueSelectionStrategy": {
              "description": "Determines the slot resolution strategy that Amazon Lex\nuses to return slot type values. ORIGINAL_VALUE returns the value entered by the user if the user\nvalue is similar to the slot value. TOP_RESOLUTION returns the first value in the resolution list\nif there is a resolution list for the slot, otherwise null is returned. Defaults to ORIGINAL_VALUE.",
              "type": "string"
            },
            "version": {
              "description": "The version of the slot type.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
