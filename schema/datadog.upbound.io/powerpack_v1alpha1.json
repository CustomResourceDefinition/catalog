{
  "description": "Powerpack is the Schema for the Powerpacks API. Provides a Datadog powerpack resource. This can be used to create and manage Datadog powerpacks.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PowerpackSpec defines the desired state of Powerpack",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external when this managed resource is deleted - either \"Delete\" or \"Orphan\" the external resource. This field is planned to be deprecated in favor of the ManagementPolicies field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "description": {
              "description": "(String) The description of the powerpack. The description of the powerpack.",
              "type": "string"
            },
            "layout": {
              "description": "form dashboard. (see below for nested schema) The layout of the powerpack on a free-form dashboard.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "height": {
                    "description": "(Number) The height of the widget. The height of the widget.",
                    "type": "number"
                  },
                  "width": {
                    "description": "(Number) The width of the widget. The width of the widget.",
                    "type": "number"
                  },
                  "x": {
                    "description": "(Number) The position of the widget on the x (horizontal) axis. Should be greater than or equal to 0. The position of the widget on the x (horizontal) axis. Should be greater than or equal to 0.",
                    "type": "number"
                  },
                  "y": {
                    "description": "(Number) The position of the widget on the y (vertical) axis. Should be greater than or equal to 0. The position of the widget on the y (vertical) axis. Should be greater than or equal to 0.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveSpan": {
              "description": "(String) The timeframe to use when displaying the widget. Valid values are 1m, 5m, 10m, 15m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, week_to_date, month_to_date, 1y, alert. The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.",
              "type": "string"
            },
            "name": {
              "description": "(String) The name for the powerpack. The name for the powerpack.",
              "type": "string"
            },
            "showTitle": {
              "description": "(Boolean) Whether or not title should be displayed in the powerpack. Whether or not title should be displayed in the powerpack.",
              "type": "boolean"
            },
            "tags": {
              "description": "(Set of String) List of tags to identify this powerpack. List of tags to identify this powerpack.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "templateVariables": {
              "description": "(Block List) The list of template variables for this powerpack. (see below for nested schema) The list of template variables for this powerpack.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "defaults": {
                    "description": "(List of String) One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with OR. One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with `OR`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "description": "(String) The name for the powerpack. The name of the powerpack template variable.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "widget": {
              "description": "(Block List) The list of widgets to display in the powerpack. (see below for nested schema) (String) The JSON formatted definition of the list of widgets to display in the powerpack.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored unless the Management Policies feature flag is disabled. InitProvider holds the same fields as ForProvider, with the exception of Identifier and other resource reference fields. The fields that are in InitProvider are merged into ForProvider when the resource is created. The same fields are also added to the terraform ignore_changes hook, to avoid updating them after creation. This is useful for fields that are required on creation, but we do not desire to update them after creation, for example because of an external controller is managing them, like an autoscaler.",
          "type": "object",
          "properties": {
            "description": {
              "description": "(String) The description of the powerpack. The description of the powerpack.",
              "type": "string"
            },
            "layout": {
              "description": "form dashboard. (see below for nested schema) The layout of the powerpack on a free-form dashboard.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "height": {
                    "description": "(Number) The height of the widget. The height of the widget.",
                    "type": "number"
                  },
                  "width": {
                    "description": "(Number) The width of the widget. The width of the widget.",
                    "type": "number"
                  },
                  "x": {
                    "description": "(Number) The position of the widget on the x (horizontal) axis. Should be greater than or equal to 0. The position of the widget on the x (horizontal) axis. Should be greater than or equal to 0.",
                    "type": "number"
                  },
                  "y": {
                    "description": "(Number) The position of the widget on the y (vertical) axis. Should be greater than or equal to 0. The position of the widget on the y (vertical) axis. Should be greater than or equal to 0.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveSpan": {
              "description": "(String) The timeframe to use when displaying the widget. Valid values are 1m, 5m, 10m, 15m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, week_to_date, month_to_date, 1y, alert. The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.",
              "type": "string"
            },
            "name": {
              "description": "(String) The name for the powerpack. The name for the powerpack.",
              "type": "string"
            },
            "showTitle": {
              "description": "(Boolean) Whether or not title should be displayed in the powerpack. Whether or not title should be displayed in the powerpack.",
              "type": "boolean"
            },
            "tags": {
              "description": "(Set of String) List of tags to identify this powerpack. List of tags to identify this powerpack.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "templateVariables": {
              "description": "(Block List) The list of template variables for this powerpack. (see below for nested schema) The list of template variables for this powerpack.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "defaults": {
                    "description": "(List of String) One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with OR. One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with `OR`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "description": "(String) The name for the powerpack. The name of the powerpack template variable.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out through a Crossplane feature flag. ManagementPolicies specify the array of actions Crossplane is allowed to take on the managed and external resources. This field is planned to replace the DeletionPolicy field in a future release. Currently, both could be set independently and non-default values would be honored if the feature flag is enabled. If both are custom, the DeletionPolicy field will be ignored. See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223 and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers can take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to create, observe, update, and delete this managed resource should be configured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which contains a name, metadata and a reference to secret store config to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used for this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required. The default is 'Required', which means the reconcile will fail if the reference cannot be resolved. 'Optional' means this reference will be a no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default is 'IfNotPresent', which will attempt to resolve the reference only when the corresponding field is not present. Use 'Always' to resolve the reference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.annotations\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret. - For Kubernetes secrets, this will be used as \"metadata.labels\". - It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret. - Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a Secret to which any connection details for this managed resource should be written. Connection details frequently include the endpoint, username, and password required to connect to the managed resource. This field is planned to be replaced in a future release in favor of PublishConnectionDetailsTo. Currently, both could be set independently and connection details would be published to both without affecting each other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PowerpackStatus defines the observed state of Powerpack.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "description": {
              "description": "(String) The description of the powerpack. The description of the powerpack.",
              "type": "string"
            },
            "id": {
              "description": "(String) The ID of this resource.",
              "type": "string"
            },
            "layout": {
              "description": "form dashboard. (see below for nested schema) The layout of the powerpack on a free-form dashboard.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "height": {
                    "description": "(Number) The height of the widget. The height of the widget.",
                    "type": "number"
                  },
                  "width": {
                    "description": "(Number) The width of the widget. The width of the widget.",
                    "type": "number"
                  },
                  "x": {
                    "description": "(Number) The position of the widget on the x (horizontal) axis. Should be greater than or equal to 0. The position of the widget on the x (horizontal) axis. Should be greater than or equal to 0.",
                    "type": "number"
                  },
                  "y": {
                    "description": "(Number) The position of the widget on the y (vertical) axis. Should be greater than or equal to 0. The position of the widget on the y (vertical) axis. Should be greater than or equal to 0.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "liveSpan": {
              "description": "(String) The timeframe to use when displaying the widget. Valid values are 1m, 5m, 10m, 15m, 30m, 1h, 4h, 1d, 2d, 1w, 1mo, 3mo, 6mo, week_to_date, month_to_date, 1y, alert. The timeframe to use when displaying the widget. Valid values are `1m`, `5m`, `10m`, `15m`, `30m`, `1h`, `4h`, `1d`, `2d`, `1w`, `1mo`, `3mo`, `6mo`, `week_to_date`, `month_to_date`, `1y`, `alert`.",
              "type": "string"
            },
            "name": {
              "description": "(String) The name for the powerpack. The name for the powerpack.",
              "type": "string"
            },
            "showTitle": {
              "description": "(Boolean) Whether or not title should be displayed in the powerpack. Whether or not title should be displayed in the powerpack.",
              "type": "boolean"
            },
            "tags": {
              "description": "(Set of String) List of tags to identify this powerpack. List of tags to identify this powerpack.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "templateVariables": {
              "description": "(Block List) The list of template variables for this powerpack. (see below for nested schema) The list of template variables for this powerpack.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "defaults": {
                    "description": "(List of String) One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with OR. One or many default values for powerpack template variables on load. If more than one default is specified, they will be unioned together with `OR`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "description": "(String) The name for the powerpack. The name of the powerpack template variable.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from one status to another, if any.",
                "type": "string"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to a resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        }
      },
      "additionalProperties": false
    }
  }
}
