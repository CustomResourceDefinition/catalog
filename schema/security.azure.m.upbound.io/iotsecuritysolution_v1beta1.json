{
  "description": "IOTSecuritySolution is the Schema for the IOTSecuritySolutions API. Manages an iot security solution.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IOTSecuritySolutionSpec defines the desired state of IOTSecuritySolution",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "additionalWorkspace": {
              "description": "A additional_workspace block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTypes": {
                    "description": "A list of data types which sent to workspace. Possible values are Alerts and RawEvents.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "workspaceId": {
                    "description": "The resource ID of the Log Analytics Workspace.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "disabledDataSources": {
              "description": "A list of disabled data sources for the Iot Security Solution. Possible value is TwinData.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "displayName": {
              "description": "Specifies the Display Name for this Iot Security Solution.",
              "type": "string"
            },
            "enabled": {
              "description": "Is the Iot Security Solution enabled? Defaults to true.",
              "type": "boolean"
            },
            "eventsToExport": {
              "description": "A list of data which is to exported to analytic workspace. Valid values include RawEvents.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "iothubIds": {
              "description": "Specifies the IoT Hub resource IDs to which this Iot Security Solution is applied.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "iothubIdsRefs": {
              "description": "References to IOTHub in devices to populate iothubIds.",
              "type": "array",
              "items": {
                "description": "A NamespacedReference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referenced object",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "iothubIdsSelector": {
              "description": "Selector for a list of IOTHub in devices to populate iothubIds.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "description": "Specifies the Log Analytics Workspace ID to which the security data will be sent.",
              "type": "string"
            },
            "logUnmaskedIpsEnabled": {
              "description": "Should IP addressed be unmasked in the log? Defaults to false.",
              "type": "boolean"
            },
            "name": {
              "description": "Specifies the name of the Iot Security Solution. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "queryForResources": {
              "description": "An Azure Resource Graph query used to set the resources monitored.",
              "type": "string"
            },
            "querySubscriptionIds": {
              "description": "A list of subscription Ids on which the user defined resources query should be executed.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "recommendationsEnabled": {
              "description": "A recommendations_enabled block of options to enable or disable as defined below.",
              "type": "object",
              "properties": {
                "acrAuthentication": {
                  "description": "Is Principal Authentication enabled for the ACR repository? Defaults to true.",
                  "type": "boolean"
                },
                "agentSendUnutilizedMsg": {
                  "description": "Is Agent send underutilized messages enabled? Defaults to true.",
                  "type": "boolean"
                },
                "baseline": {
                  "description": "Is Security related system configuration issues identified? Defaults to true.",
                  "type": "boolean"
                },
                "edgeHubMemOptimize": {
                  "description": "Is IoT Edge Hub memory optimized? Defaults to true.",
                  "type": "boolean"
                },
                "edgeLoggingOption": {
                  "description": "Is logging configured for IoT Edge module? Defaults to true.",
                  "type": "boolean"
                },
                "inconsistentModuleSettings": {
                  "description": "Is inconsistent module settings enabled for SecurityGroup? Defaults to true.",
                  "type": "boolean"
                },
                "installAgent": {
                  "description": "is Azure IoT Security agent installed? Defaults to true.",
                  "type": "boolean"
                },
                "ipFilterDenyAll": {
                  "description": "Is Default IP filter policy denied? Defaults to true.",
                  "type": "boolean"
                },
                "ipFilterPermissiveRule": {
                  "description": "Is IP filter rule source allowable IP range too large? Defaults to true.",
                  "type": "boolean"
                },
                "openPorts": {
                  "description": "Is any ports open on the device? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveFirewallPolicy": {
                  "description": "Does firewall policy exist which allow necessary communication to/from the device? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveInputFirewallRules": {
                  "description": "Is only necessary addresses or ports are permitted in? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveOutputFirewallRules": {
                  "description": "Is only necessary addresses or ports are permitted out? Defaults to true.",
                  "type": "boolean"
                },
                "privilegedDockerOptions": {
                  "description": "Is high level permissions are needed for the module? Defaults to true.",
                  "type": "boolean"
                },
                "sharedCredentials": {
                  "description": "Is any credentials shared among devices? Defaults to true.",
                  "type": "boolean"
                },
                "vulnerableTlsCipherSuite": {
                  "description": "Does TLS cipher suite need to be updated? Defaults to true.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "Specifies the name of the resource group in which to create the Iot Security Solution. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "additionalWorkspace": {
              "description": "A additional_workspace block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTypes": {
                    "description": "A list of data types which sent to workspace. Possible values are Alerts and RawEvents.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "workspaceId": {
                    "description": "The resource ID of the Log Analytics Workspace.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "disabledDataSources": {
              "description": "A list of disabled data sources for the Iot Security Solution. Possible value is TwinData.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "displayName": {
              "description": "Specifies the Display Name for this Iot Security Solution.",
              "type": "string"
            },
            "enabled": {
              "description": "Is the Iot Security Solution enabled? Defaults to true.",
              "type": "boolean"
            },
            "eventsToExport": {
              "description": "A list of data which is to exported to analytic workspace. Valid values include RawEvents.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "iothubIds": {
              "description": "Specifies the IoT Hub resource IDs to which this Iot Security Solution is applied.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "iothubIdsRefs": {
              "description": "References to IOTHub in devices to populate iothubIds.",
              "type": "array",
              "items": {
                "description": "A NamespacedReference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referenced object",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "iothubIdsSelector": {
              "description": "Selector for a list of IOTHub in devices to populate iothubIds.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "description": "Specifies the Log Analytics Workspace ID to which the security data will be sent.",
              "type": "string"
            },
            "logUnmaskedIpsEnabled": {
              "description": "Should IP addressed be unmasked in the log? Defaults to false.",
              "type": "boolean"
            },
            "name": {
              "description": "Specifies the name of the Iot Security Solution. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "queryForResources": {
              "description": "An Azure Resource Graph query used to set the resources monitored.",
              "type": "string"
            },
            "querySubscriptionIds": {
              "description": "A list of subscription Ids on which the user defined resources query should be executed.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "recommendationsEnabled": {
              "description": "A recommendations_enabled block of options to enable or disable as defined below.",
              "type": "object",
              "properties": {
                "acrAuthentication": {
                  "description": "Is Principal Authentication enabled for the ACR repository? Defaults to true.",
                  "type": "boolean"
                },
                "agentSendUnutilizedMsg": {
                  "description": "Is Agent send underutilized messages enabled? Defaults to true.",
                  "type": "boolean"
                },
                "baseline": {
                  "description": "Is Security related system configuration issues identified? Defaults to true.",
                  "type": "boolean"
                },
                "edgeHubMemOptimize": {
                  "description": "Is IoT Edge Hub memory optimized? Defaults to true.",
                  "type": "boolean"
                },
                "edgeLoggingOption": {
                  "description": "Is logging configured for IoT Edge module? Defaults to true.",
                  "type": "boolean"
                },
                "inconsistentModuleSettings": {
                  "description": "Is inconsistent module settings enabled for SecurityGroup? Defaults to true.",
                  "type": "boolean"
                },
                "installAgent": {
                  "description": "is Azure IoT Security agent installed? Defaults to true.",
                  "type": "boolean"
                },
                "ipFilterDenyAll": {
                  "description": "Is Default IP filter policy denied? Defaults to true.",
                  "type": "boolean"
                },
                "ipFilterPermissiveRule": {
                  "description": "Is IP filter rule source allowable IP range too large? Defaults to true.",
                  "type": "boolean"
                },
                "openPorts": {
                  "description": "Is any ports open on the device? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveFirewallPolicy": {
                  "description": "Does firewall policy exist which allow necessary communication to/from the device? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveInputFirewallRules": {
                  "description": "Is only necessary addresses or ports are permitted in? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveOutputFirewallRules": {
                  "description": "Is only necessary addresses or ports are permitted out? Defaults to true.",
                  "type": "boolean"
                },
                "privilegedDockerOptions": {
                  "description": "Is high level permissions are needed for the module? Defaults to true.",
                  "type": "boolean"
                },
                "sharedCredentials": {
                  "description": "Is any credentials shared among devices? Defaults to true.",
                  "type": "boolean"
                },
                "vulnerableTlsCipherSuite": {
                  "description": "Does TLS cipher suite need to be updated? Defaults to true.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.displayName))",
          "message": "spec.forProvider.displayName is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        }
      ]
    },
    "status": {
      "description": "IOTSecuritySolutionStatus defines the observed state of IOTSecuritySolution.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "additionalWorkspace": {
              "description": "A additional_workspace block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTypes": {
                    "description": "A list of data types which sent to workspace. Possible values are Alerts and RawEvents.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "workspaceId": {
                    "description": "The resource ID of the Log Analytics Workspace.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "disabledDataSources": {
              "description": "A list of disabled data sources for the Iot Security Solution. Possible value is TwinData.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "displayName": {
              "description": "Specifies the Display Name for this Iot Security Solution.",
              "type": "string"
            },
            "enabled": {
              "description": "Is the Iot Security Solution enabled? Defaults to true.",
              "type": "boolean"
            },
            "eventsToExport": {
              "description": "A list of data which is to exported to analytic workspace. Valid values include RawEvents.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "id": {
              "description": "The ID of the Iot Security Solution resource.",
              "type": "string"
            },
            "iothubIds": {
              "description": "Specifies the IoT Hub resource IDs to which this Iot Security Solution is applied.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "location": {
              "description": "Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "description": "Specifies the Log Analytics Workspace ID to which the security data will be sent.",
              "type": "string"
            },
            "logUnmaskedIpsEnabled": {
              "description": "Should IP addressed be unmasked in the log? Defaults to false.",
              "type": "boolean"
            },
            "name": {
              "description": "Specifies the name of the Iot Security Solution. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "queryForResources": {
              "description": "An Azure Resource Graph query used to set the resources monitored.",
              "type": "string"
            },
            "querySubscriptionIds": {
              "description": "A list of subscription Ids on which the user defined resources query should be executed.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "recommendationsEnabled": {
              "description": "A recommendations_enabled block of options to enable or disable as defined below.",
              "type": "object",
              "properties": {
                "acrAuthentication": {
                  "description": "Is Principal Authentication enabled for the ACR repository? Defaults to true.",
                  "type": "boolean"
                },
                "agentSendUnutilizedMsg": {
                  "description": "Is Agent send underutilized messages enabled? Defaults to true.",
                  "type": "boolean"
                },
                "baseline": {
                  "description": "Is Security related system configuration issues identified? Defaults to true.",
                  "type": "boolean"
                },
                "edgeHubMemOptimize": {
                  "description": "Is IoT Edge Hub memory optimized? Defaults to true.",
                  "type": "boolean"
                },
                "edgeLoggingOption": {
                  "description": "Is logging configured for IoT Edge module? Defaults to true.",
                  "type": "boolean"
                },
                "inconsistentModuleSettings": {
                  "description": "Is inconsistent module settings enabled for SecurityGroup? Defaults to true.",
                  "type": "boolean"
                },
                "installAgent": {
                  "description": "is Azure IoT Security agent installed? Defaults to true.",
                  "type": "boolean"
                },
                "ipFilterDenyAll": {
                  "description": "Is Default IP filter policy denied? Defaults to true.",
                  "type": "boolean"
                },
                "ipFilterPermissiveRule": {
                  "description": "Is IP filter rule source allowable IP range too large? Defaults to true.",
                  "type": "boolean"
                },
                "openPorts": {
                  "description": "Is any ports open on the device? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveFirewallPolicy": {
                  "description": "Does firewall policy exist which allow necessary communication to/from the device? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveInputFirewallRules": {
                  "description": "Is only necessary addresses or ports are permitted in? Defaults to true.",
                  "type": "boolean"
                },
                "permissiveOutputFirewallRules": {
                  "description": "Is only necessary addresses or ports are permitted out? Defaults to true.",
                  "type": "boolean"
                },
                "privilegedDockerOptions": {
                  "description": "Is high level permissions are needed for the module? Defaults to true.",
                  "type": "boolean"
                },
                "sharedCredentials": {
                  "description": "Is any credentials shared among devices? Defaults to true.",
                  "type": "boolean"
                },
                "vulnerableTlsCipherSuite": {
                  "description": "Does TLS cipher suite need to be updated? Defaults to true.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "Specifies the name of the resource group in which to create the Iot Security Solution. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
