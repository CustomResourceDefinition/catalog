{
  "description": "NetworkChaos is the Schema for the networkchaos API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Spec defines the behavior of a pod chaos experiment",
      "type": "object",
      "required": [
        "action",
        "mode",
        "selector"
      ],
      "properties": {
        "action": {
          "description": "Action defines the specific network chaos action.\nSupported action: partition, netem, delay, loss, duplicate, corrupt\nDefault action: delay",
          "type": "string",
          "enum": [
            "netem",
            "delay",
            "loss",
            "duplicate",
            "corrupt",
            "partition",
            "bandwidth"
          ]
        },
        "bandwidth": {
          "description": "Bandwidth represents the detail about bandwidth control action",
          "type": "object",
          "required": [
            "buffer",
            "limit",
            "rate"
          ],
          "properties": {
            "buffer": {
              "description": "Buffer is the maximum amount of bytes that tokens can be available for instantaneously.",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "limit": {
              "description": "Limit is the number of bytes that can be queued waiting for tokens to become available.",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "minburst": {
              "description": "Minburst specifies the size of the peakrate bucket. For perfect\naccuracy, should be set to the MTU of the interface.  If a\npeakrate is needed, but some burstiness is acceptable, this\nsize can be raised. A 3000 byte minburst allows around 3mbit/s\nof peakrate, given 1000 byte packets.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            },
            "peakrate": {
              "description": "Peakrate is the maximum depletion rate of the bucket.\nThe peakrate does not need to be set, it is only necessary\nif perfect millisecond timescale shaping is required.",
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "rate": {
              "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "corrupt": {
          "description": "Corrupt represents the detail about corrupt action",
          "type": "object",
          "required": [
            "corrupt"
          ],
          "properties": {
            "correlation": {
              "type": "string"
            },
            "corrupt": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "delay": {
          "description": "Delay represents the detail about delay action",
          "type": "object",
          "required": [
            "latency"
          ],
          "properties": {
            "correlation": {
              "type": "string"
            },
            "jitter": {
              "type": "string",
              "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
            },
            "latency": {
              "type": "string",
              "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
            },
            "reorder": {
              "description": "ReorderSpec defines details of packet reorder.",
              "type": "object",
              "required": [
                "gap",
                "reorder"
              ],
              "properties": {
                "correlation": {
                  "type": "string"
                },
                "gap": {
                  "type": "integer"
                },
                "reorder": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "device": {
          "description": "Device represents the network device to be affected.",
          "type": "string"
        },
        "direction": {
          "description": "Direction represents the direction, this applies on netem and network partition action",
          "type": "string",
          "default": "to",
          "enum": [
            "to",
            "from",
            "both"
          ]
        },
        "duplicate": {
          "description": "DuplicateSpec represents the detail about loss action",
          "type": "object",
          "required": [
            "duplicate"
          ],
          "properties": {
            "correlation": {
              "type": "string"
            },
            "duplicate": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "duration": {
          "description": "Duration represents the duration of the chaos action",
          "type": "string"
        },
        "externalTargets": {
          "description": "ExternalTargets represents network targets outside k8s",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "loss": {
          "description": "Loss represents the detail about loss action",
          "type": "object",
          "required": [
            "loss"
          ],
          "properties": {
            "correlation": {
              "type": "string"
            },
            "loss": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "mode": {
          "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
          "type": "string",
          "enum": [
            "one",
            "all",
            "fixed",
            "fixed-percent",
            "random-max-percent"
          ]
        },
        "rate": {
          "description": "Rate represents the detail about rate control action",
          "type": "object",
          "required": [
            "rate"
          ],
          "properties": {
            "rate": {
              "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "remoteCluster": {
          "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
          "type": "string"
        },
        "selector": {
          "description": "Selector is used to select pods that are used to inject chaos action.",
          "type": "object",
          "properties": {
            "annotationSelectors": {
              "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "expressionSelectors": {
              "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              }
            },
            "fieldSelectors": {
              "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labelSelectors": {
              "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "namespaces": {
              "description": "Namespaces is a set of namespace to which objects belong.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nodeSelectors": {
              "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nodes": {
              "description": "Nodes is a set of node name and objects must belong to these nodes.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "podPhaseSelectors": {
              "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pods": {
              "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        "target": {
          "description": "Target represents network target, this applies on netem and network partition action",
          "type": "object",
          "required": [
            "mode",
            "selector"
          ],
          "properties": {
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "targetDevice": {
          "description": "TargetDevice represents the network device to be affected in target scope.",
          "type": "string"
        },
        "value": {
          "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Most recently observed status of the chaos experiment about pods",
      "type": "object",
      "required": [
        "experiment"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represents the current global condition of the chaos",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "experiment": {
          "description": "Experiment records the last experiment state.",
          "type": "object",
          "properties": {
            "containerRecords": {
              "description": "Records are used to track the running status",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "injectedCount",
                  "phase",
                  "recoveredCount",
                  "selectorKey"
                ],
                "properties": {
                  "events": {
                    "description": "Events are the essential details about the injections and recoveries",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "operation",
                        "timestamp",
                        "type"
                      ],
                      "properties": {
                        "message": {
                          "description": "Message is the detail message, e.g. the reason why we failed to inject the chaos",
                          "type": "string"
                        },
                        "operation": {
                          "description": "Operation represents the operation we are doing, when we crate this event",
                          "type": "string"
                        },
                        "timestamp": {
                          "description": "Timestamp is time when we create this event",
                          "type": "string",
                          "format": "date-time"
                        },
                        "type": {
                          "description": "Type means the stage of this event",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "injectedCount": {
                    "description": "InjectedCount is a counter to record the sum of successful injections",
                    "type": "integer"
                  },
                  "phase": {
                    "type": "string"
                  },
                  "recoveredCount": {
                    "description": "RecoveredCount is a counter to record the sum of successful recoveries",
                    "type": "integer"
                  },
                  "selectorKey": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "desiredPhase": {
              "type": "string",
              "enum": [
                "Run",
                "Stop"
              ]
            }
          },
          "additionalProperties": false
        },
        "instances": {
          "description": "Instances always specifies podnetworkchaos generation or empty",
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "additionalProperties": false
    }
  }
}
