{
  "description": "Schedule is the cronly schedule object",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ScheduleSpec is the specification of a schedule object",
      "type": "object",
      "required": [
        "schedule",
        "type"
      ],
      "properties": {
        "awsChaos": {
          "description": "AWSChaosSpec is the content of the specification for an AWSChaos",
          "type": "object",
          "required": [
            "action",
            "awsRegion",
            "ec2Instance"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific aws chaos action.\nSupported action: ec2-stop / ec2-restart / detach-volume\nDefault action: ec2-stop",
              "type": "string",
              "enum": [
                "ec2-stop",
                "ec2-restart",
                "detach-volume"
              ]
            },
            "awsRegion": {
              "description": "AWSRegion defines the region of aws.",
              "type": "string"
            },
            "deviceName": {
              "description": "DeviceName indicates the name of the device.\nNeeded in detach-volume.",
              "type": "string"
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action.",
              "type": "string"
            },
            "ec2Instance": {
              "description": "Ec2Instance indicates the ID of the ec2 instance.",
              "type": "string"
            },
            "endpoint": {
              "description": "Endpoint indicates the endpoint of the aws server. Just used it in test now.",
              "type": "string"
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "secretName": {
              "description": "SecretName defines the name of kubernetes secret.",
              "type": "string"
            },
            "volumeID": {
              "description": "EbsVolume indicates the ID of the EBS volume.\nNeeded in detach-volume.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "azureChaos": {
          "description": "AzureChaosSpec is the content of the specification for an AzureChaos",
          "type": "object",
          "required": [
            "action",
            "resourceGroupName",
            "subscriptionID",
            "vmName"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific azure chaos action.\nSupported action: vm-stop / vm-restart / disk-detach\nDefault action: vm-stop",
              "type": "string",
              "enum": [
                "vm-stop",
                "vm-restart",
                "disk-detach"
              ]
            },
            "diskName": {
              "description": "DiskName indicates the name of the disk.\nNeeded in disk-detach.",
              "type": "string"
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action.",
              "type": "string"
            },
            "lun": {
              "description": "LUN indicates the Logical Unit Number of the data disk.\nNeeded in disk-detach.",
              "type": "integer"
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "ResourceGroupName defines the name of ResourceGroup",
              "type": "string"
            },
            "secretName": {
              "description": "SecretName defines the name of kubernetes secret. It is used for Azure credentials.",
              "type": "string"
            },
            "subscriptionID": {
              "description": "SubscriptionID defines the id of Azure subscription.",
              "type": "string"
            },
            "vmName": {
              "description": "VMName defines the name of Virtual Machine",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "blockChaos": {
          "description": "BlockChaosSpec is the content of the specification for a BlockChaos",
          "type": "object",
          "required": [
            "action",
            "mode",
            "selector",
            "volumeName"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific block chaos action.\nSupported action: delay",
              "type": "string",
              "enum": [
                "delay"
              ]
            },
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "delay": {
              "description": "Delay defines the delay distribution.",
              "type": "object",
              "properties": {
                "correlation": {
                  "type": "string"
                },
                "jitter": {
                  "type": "string"
                },
                "latency": {
                  "description": "Latency defines the latency of every io request.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action.",
              "type": "string"
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            },
            "volumeName": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "concurrencyPolicy": {
          "type": "string",
          "default": "Forbid",
          "enum": [
            "Forbid",
            "Allow"
          ]
        },
        "dnsChaos": {
          "description": "DNSChaosSpec defines the desired state of DNSChaos",
          "type": "object",
          "required": [
            "action",
            "mode",
            "selector"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific DNS chaos action.\nSupported action: error, random\nDefault action: error",
              "type": "string",
              "enum": [
                "error",
                "random"
              ]
            },
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action",
              "type": "string"
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "patterns": {
              "description": "Choose which domain names to take effect, support the placeholder ? and wildcard *, or the Specified domain name.\nNote:\n     1. The wildcard * must be at the end of the string. For example, chaos-*.org is invalid.\n     2. if the patterns is empty, will take effect on all the domain names.\nFor example:\n\t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],\n\t\twill take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\"",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "gcpChaos": {
          "description": "GCPChaosSpec is the content of the specification for a GCPChaos",
          "type": "object",
          "required": [
            "action",
            "instance",
            "project",
            "zone"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific gcp chaos action.\nSupported action: node-stop / node-reset / disk-loss\nDefault action: node-stop",
              "type": "string",
              "enum": [
                "node-stop",
                "node-reset",
                "disk-loss"
              ]
            },
            "deviceNames": {
              "description": "The device name of disks to detach.\nNeeded in disk-loss.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action.",
              "type": "string"
            },
            "instance": {
              "description": "Instance defines the name of the instance",
              "type": "string"
            },
            "project": {
              "description": "Project defines the ID of gcp project.",
              "type": "string"
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "secretName": {
              "description": "SecretName defines the name of kubernetes secret. It is used for GCP credentials.",
              "type": "string"
            },
            "zone": {
              "description": "Zone defines the zone of gcp project.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "historyLimit": {
          "type": "integer",
          "minimum": 1
        },
        "httpChaos": {
          "type": "object",
          "required": [
            "mode",
            "selector",
            "target"
          ],
          "properties": {
            "abort": {
              "description": "Abort is a rule to abort a http session.",
              "type": "boolean"
            },
            "code": {
              "description": "Code is a rule to select target by http status code in response.",
              "type": "integer",
              "format": "int32"
            },
            "delay": {
              "description": "Delay represents the delay of the target request/response.\nA duration string is a possibly unsigned sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
              "type": "string"
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action.",
              "type": "string"
            },
            "method": {
              "description": "Method is a rule to select target by http method in request.",
              "type": "string"
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "patch": {
              "description": "Patch is a rule to patch some contents in target.",
              "type": "object",
              "properties": {
                "body": {
                  "description": "Body is a rule to patch message body of target.",
                  "type": "object",
                  "required": [
                    "type",
                    "value"
                  ],
                  "properties": {
                    "type": {
                      "description": "Type represents the patch type, only support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value is the patch contents.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "headers": {
                  "description": "Headers is a rule to append http headers of target.\nFor example: `[[\"Set-Cookie\", \"\u003cone cookie\u003e\"], [\"Set-Cookie\", \"\u003canother cookie\u003e\"]]`.",
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "queries": {
                  "description": "Queries is a rule to append uri queries of target(Request only).\nFor example: `[[\"foo\", \"bar\"], [\"foo\", \"unknown\"]]`.",
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "path": {
              "description": "Path is a rule to select target by uri path in http request.",
              "type": "string"
            },
            "port": {
              "description": "Port represents the target port to be proxy of.",
              "type": "integer",
              "format": "int32"
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "replace": {
              "description": "Replace is a rule to replace some contents in target.",
              "type": "object",
              "properties": {
                "body": {
                  "description": "Body is a rule to replace http message body in target.",
                  "type": "string",
                  "format": "byte"
                },
                "code": {
                  "description": "Code is a rule to replace http status code in response.",
                  "type": "integer",
                  "format": "int32"
                },
                "headers": {
                  "description": "Headers is a rule to replace http headers of target.\nThe key-value pairs represent header name and header value pairs.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "method": {
                  "description": "Method is a rule to replace http method in request.",
                  "type": "string"
                },
                "path": {
                  "description": "Path is rule to to replace uri path in http request.",
                  "type": "string"
                },
                "queries": {
                  "description": "Queries is a rule to replace uri queries in http request.\nFor example, with value `{ \"foo\": \"unknown\" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "request_headers": {
              "description": "RequestHeaders is a rule to select target by http headers in request.\nThe key-value pairs represent header name and header value pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "response_headers": {
              "description": "ResponseHeaders is a rule to select target by http headers in response.\nThe key-value pairs represent header name and header value pairs.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "target": {
              "description": "Target is the object to be selected and injected.",
              "type": "string",
              "enum": [
                "Request",
                "Response"
              ]
            },
            "tls": {
              "description": "TLS is the tls config,\nwill override PodHttpChaos if there are multiple HTTPChaos experiments are applied",
              "type": "object",
              "required": [
                "certName",
                "keyName",
                "secretName",
                "secretNamespace"
              ],
              "properties": {
                "caName": {
                  "description": "CAName represents the data name of ca file in secret, `ca.crt` for example",
                  "type": "string"
                },
                "certName": {
                  "description": "CertName represents the data name of cert file in secret, `tls.crt` for example",
                  "type": "string"
                },
                "keyName": {
                  "description": "KeyName represents the data name of key file in secret, `tls.key` for example",
                  "type": "string"
                },
                "secretName": {
                  "description": "SecretName represents the name of required secret resource",
                  "type": "string"
                },
                "secretNamespace": {
                  "description": "SecretNamespace represents the namespace of required secret resource",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "ioChaos": {
          "description": "IOChaosSpec defines the desired state of IOChaos",
          "type": "object",
          "required": [
            "action",
            "mode",
            "selector",
            "volumePath"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific pod chaos action.\nSupported action: latency / fault / attrOverride / mistake",
              "type": "string",
              "enum": [
                "latency",
                "fault",
                "attrOverride",
                "mistake"
              ]
            },
            "attr": {
              "description": "Attr defines the overrided attribution",
              "type": "object",
              "properties": {
                "atime": {
                  "description": "Timespec represents a time",
                  "type": "object",
                  "required": [
                    "nsec",
                    "sec"
                  ],
                  "properties": {
                    "nsec": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "sec": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "additionalProperties": false
                },
                "blocks": {
                  "type": "integer",
                  "format": "int64"
                },
                "ctime": {
                  "description": "Timespec represents a time",
                  "type": "object",
                  "required": [
                    "nsec",
                    "sec"
                  ],
                  "properties": {
                    "nsec": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "sec": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "additionalProperties": false
                },
                "gid": {
                  "type": "integer",
                  "format": "int32"
                },
                "ino": {
                  "type": "integer",
                  "format": "int64"
                },
                "kind": {
                  "description": "FileType represents type of file",
                  "type": "string"
                },
                "mtime": {
                  "description": "Timespec represents a time",
                  "type": "object",
                  "required": [
                    "nsec",
                    "sec"
                  ],
                  "properties": {
                    "nsec": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "sec": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "additionalProperties": false
                },
                "nlink": {
                  "type": "integer",
                  "format": "int32"
                },
                "perm": {
                  "type": "integer"
                },
                "rdev": {
                  "type": "integer",
                  "format": "int32"
                },
                "size": {
                  "type": "integer",
                  "format": "int64"
                },
                "uid": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "delay": {
              "description": "Delay defines the value of I/O chaos action delay.\nA delay string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
              "type": "string"
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action.\nIt is required when the action is `PodFailureAction`.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
              "type": "string"
            },
            "errno": {
              "description": "Errno defines the error code that returned by I/O action.\nrefer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html",
              "type": "integer",
              "format": "int32"
            },
            "methods": {
              "description": "Methods defines the I/O methods for injecting I/O chaos action.\ndefault: all I/O methods.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mistake": {
              "description": "Mistake defines what types of incorrectness are injected to IO operations",
              "type": "object",
              "properties": {
                "filling": {
                  "description": "Filling determines what is filled in the mistake data.",
                  "type": "string",
                  "enum": [
                    "zero",
                    "random"
                  ]
                },
                "maxLength": {
                  "description": "Max length of each wrong data segment in bytes",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 1
                },
                "maxOccurrences": {
                  "description": "There will be [1, MaxOccurrences] segments of wrong data.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 1
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "path": {
              "description": "Path defines the path of files for injecting I/O chaos action.",
              "type": "string"
            },
            "percent": {
              "description": "Percent defines the percentage of injection errors and provides a number from 0-100.\ndefault: 100.",
              "type": "integer",
              "default": 100
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            },
            "volumePath": {
              "description": "VolumePath represents the mount path of injected volume",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "jvmChaos": {
          "description": "JVMChaosSpec defines the desired state of JVMChaos",
          "type": "object",
          "required": [
            "action",
            "mode",
            "selector"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific jvm chaos action.\nSupported action: latency;return;exception;stress;gc;ruleData",
              "type": "string",
              "enum": [
                "latency",
                "return",
                "exception",
                "stress",
                "gc",
                "ruleData",
                "mysql"
              ]
            },
            "class": {
              "description": "Java class",
              "type": "string"
            },
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "cpuCount": {
              "description": "the CPU core number needs to use, only set it when action is stress",
              "type": "integer"
            },
            "database": {
              "description": "the match database\ndefault value is \"\", means match all database",
              "type": "string"
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action",
              "type": "string"
            },
            "exception": {
              "description": "the exception which needs to throw for action `exception`\nor the exception message needs to throw in action `mysql`",
              "type": "string"
            },
            "latency": {
              "description": "the latency duration for action 'latency', unit ms\nor the latency duration in action `mysql`",
              "type": "integer"
            },
            "memType": {
              "description": "the memory type needs to locate, only set it when action is stress, the value can be 'stack' or 'heap'",
              "type": "string"
            },
            "method": {
              "description": "the method in Java class",
              "type": "string"
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "mysqlConnectorVersion": {
              "description": "the version of mysql-connector-java, only support 5.X.X(set to \"5\") and 8.X.X(set to \"8\") now",
              "type": "string"
            },
            "name": {
              "description": "byteman rule name, should be unique, and will generate one if not set",
              "type": "string"
            },
            "pid": {
              "description": "the pid of Java process which needs to attach",
              "type": "integer"
            },
            "port": {
              "description": "the port of agent server, default 9277",
              "type": "integer",
              "format": "int32"
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "returnValue": {
              "description": "the return value for action 'return'",
              "type": "string"
            },
            "ruleData": {
              "description": "the byteman rule's data for action 'ruleData'",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "sqlType": {
              "description": "the match sql type\ndefault value is \"\", means match all SQL type.\nThe value can be 'select', 'insert', 'update', 'delete', 'replace'.",
              "type": "string"
            },
            "table": {
              "description": "the match table\ndefault value is \"\", means match all table",
              "type": "string"
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "kernelChaos": {
          "description": "KernelChaosSpec defines the desired state of KernelChaos",
          "type": "object",
          "required": [
            "failKernRequest",
            "mode",
            "selector"
          ],
          "properties": {
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action",
              "type": "string"
            },
            "failKernRequest": {
              "description": "FailKernRequest defines the request of kernel injection",
              "type": "object",
              "required": [
                "failtype"
              ],
              "properties": {
                "callchain": {
                  "description": "Callchain indicate a special call chain, such as:\n    ext4_mount\n      -\u003e mount_subtree\n         -\u003e ...\n            -\u003e should_failslab\nWith an optional set of predicates and an optional set of\nparameters, which used with predicates. You can read call chan\nand predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples\nto learn more.\nIf no special call chain, just keep Callchain empty, which means it will fail at any call chain\nwith slab alloc (eg: kmalloc).",
                  "type": "array",
                  "items": {
                    "description": "Frame defines the function signature and predicate in function's body",
                    "type": "object",
                    "properties": {
                      "funcname": {
                        "description": "Funcname can be find from kernel source or `/proc/kallsyms`, such as `ext4_mount`",
                        "type": "string"
                      },
                      "parameters": {
                        "description": "Parameters is used with predicate, for example, if you want to inject slab error\nin `d_alloc_parallel(struct dentry *parent, const struct qstr *name)` with a special\nname `bananas`, you need to set it to `struct dentry *parent, const struct qstr *name`\notherwise omit it.",
                        "type": "string"
                      },
                      "predicate": {
                        "description": "Predicate will access the arguments of this Frame, example with Parameters's, you can\nset it to `STRNCMP(name-\u003ename, \"bananas\", 8)` to make inject only with it, or omit it\nto inject for all d_alloc_parallel call chain.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "failtype": {
                  "description": "FailType indicates what to fail, can be set to '0' / '1' / '2'\nIf `0`, indicates slab to fail (should_failslab)\nIf `1`, indicates alloc_page to fail (should_fail_alloc_page)\nIf `2`, indicates bio to fail (should_fail_bio)\nYou can read:\n  1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html\n  2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt\nto learn more",
                  "type": "integer",
                  "format": "int32",
                  "maximum": 2,
                  "minimum": 0
                },
                "headers": {
                  "description": "Headers indicates the appropriate kernel headers you need.\nEg: \"linux/mmzone.h\", \"linux/blkdev.h\" and so on",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "probability": {
                  "description": "Probability indicates the fails with probability.\nIf you want 1%, please set this field with 1.",
                  "type": "integer",
                  "format": "int32",
                  "maximum": 100,
                  "minimum": 0
                },
                "times": {
                  "description": "Times indicates the max times of fails.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "networkChaos": {
          "description": "NetworkChaosSpec defines the desired state of NetworkChaos",
          "type": "object",
          "required": [
            "action",
            "mode",
            "selector"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific network chaos action.\nSupported action: partition, netem, delay, loss, duplicate, corrupt\nDefault action: delay",
              "type": "string",
              "enum": [
                "netem",
                "delay",
                "loss",
                "duplicate",
                "corrupt",
                "partition",
                "bandwidth"
              ]
            },
            "bandwidth": {
              "description": "Bandwidth represents the detail about bandwidth control action",
              "type": "object",
              "required": [
                "buffer",
                "limit",
                "rate"
              ],
              "properties": {
                "buffer": {
                  "description": "Buffer is the maximum amount of bytes that tokens can be available for instantaneously.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "limit": {
                  "description": "Limit is the number of bytes that can be queued waiting for tokens to become available.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "minburst": {
                  "description": "Minburst specifies the size of the peakrate bucket. For perfect\naccuracy, should be set to the MTU of the interface.  If a\npeakrate is needed, but some burstiness is acceptable, this\nsize can be raised. A 3000 byte minburst allows around 3mbit/s\nof peakrate, given 1000 byte packets.",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 0
                },
                "peakrate": {
                  "description": "Peakrate is the maximum depletion rate of the bucket.\nThe peakrate does not need to be set, it is only necessary\nif perfect millisecond timescale shaping is required.",
                  "type": "integer",
                  "format": "int64",
                  "minimum": 0
                },
                "rate": {
                  "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "corrupt": {
              "description": "Corrupt represents the detail about corrupt action",
              "type": "object",
              "required": [
                "corrupt"
              ],
              "properties": {
                "correlation": {
                  "type": "string"
                },
                "corrupt": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "delay": {
              "description": "Delay represents the detail about delay action",
              "type": "object",
              "required": [
                "latency"
              ],
              "properties": {
                "correlation": {
                  "type": "string"
                },
                "jitter": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
                },
                "latency": {
                  "type": "string",
                  "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
                },
                "reorder": {
                  "description": "ReorderSpec defines details of packet reorder.",
                  "type": "object",
                  "required": [
                    "gap",
                    "reorder"
                  ],
                  "properties": {
                    "correlation": {
                      "type": "string"
                    },
                    "gap": {
                      "type": "integer"
                    },
                    "reorder": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "device": {
              "description": "Device represents the network device to be affected.",
              "type": "string"
            },
            "direction": {
              "description": "Direction represents the direction, this applies on netem and network partition action",
              "type": "string",
              "default": "to",
              "enum": [
                "to",
                "from",
                "both"
              ]
            },
            "duplicate": {
              "description": "DuplicateSpec represents the detail about loss action",
              "type": "object",
              "required": [
                "duplicate"
              ],
              "properties": {
                "correlation": {
                  "type": "string"
                },
                "duplicate": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action",
              "type": "string"
            },
            "externalTargets": {
              "description": "ExternalTargets represents network targets outside k8s",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "loss": {
              "description": "Loss represents the detail about loss action",
              "type": "object",
              "required": [
                "loss"
              ],
              "properties": {
                "correlation": {
                  "type": "string"
                },
                "loss": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "rate": {
              "description": "Rate represents the detail about rate control action",
              "type": "object",
              "required": [
                "rate"
              ],
              "properties": {
                "rate": {
                  "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "target": {
              "description": "Target represents network target, this applies on netem and network partition action",
              "type": "object",
              "required": [
                "mode",
                "selector"
              ],
              "properties": {
                "mode": {
                  "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                  "type": "string",
                  "enum": [
                    "one",
                    "all",
                    "fixed",
                    "fixed-percent",
                    "random-max-percent"
                  ]
                },
                "selector": {
                  "description": "Selector is used to select pods that are used to inject chaos action.",
                  "type": "object",
                  "properties": {
                    "annotationSelectors": {
                      "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "expressionSelectors": {
                      "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                      "type": "array",
                      "items": {
                        "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                        "type": "object",
                        "required": [
                          "key",
                          "operator"
                        ],
                        "properties": {
                          "key": {
                            "description": "key is the label key that the selector applies to.",
                            "type": "string"
                          },
                          "operator": {
                            "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                            "type": "string"
                          },
                          "values": {
                            "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "fieldSelectors": {
                      "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "labelSelectors": {
                      "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "namespaces": {
                      "description": "Namespaces is a set of namespace to which objects belong.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "nodeSelectors": {
                      "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "nodes": {
                      "description": "Nodes is a set of node name and objects must belong to these nodes.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "podPhaseSelectors": {
                      "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "pods": {
                      "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "value": {
                  "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "targetDevice": {
              "description": "TargetDevice represents the network device to be affected in target scope.",
              "type": "string"
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "physicalmachineChaos": {
          "description": "PhysicalMachineChaosSpec defines the desired state of PhysicalMachineChaos",
          "type": "object",
          "required": [
            "action",
            "mode"
          ],
          "properties": {
            "action": {
              "description": "the subAction, generate automatically",
              "type": "string",
              "enum": [
                "stress-cpu",
                "stress-mem",
                "disk-read-payload",
                "disk-write-payload",
                "disk-fill",
                "network-corrupt",
                "network-duplicate",
                "network-loss",
                "network-delay",
                "network-partition",
                "network-dns",
                "network-bandwidth",
                "network-flood",
                "network-down",
                "process",
                "jvm-exception",
                "jvm-gc",
                "jvm-latency",
                "jvm-return",
                "jvm-stress",
                "jvm-rule-data",
                "jvm-mysql",
                "clock",
                "redis-expiration",
                "redis-penetration",
                "redis-cacheLimit",
                "redis-restart",
                "redis-stop",
                "kafka-fill",
                "kafka-flood",
                "kafka-io",
                "file-create",
                "file-modify",
                "file-delete",
                "file-rename",
                "file-append",
                "file-replace",
                "vm",
                "user_defined"
              ]
            },
            "address": {
              "description": "DEPRECATED: Use Selector instead.\nOnly one of Address and Selector could be specified.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clock": {
              "type": "object",
              "properties": {
                "clock-ids-slice": {
                  "description": "the identifier of the particular clock on which to act.\nMore clock description in linux kernel can be found in man page of clock_getres, clock_gettime, clock_settime.\nMuti clock ids should be split with \",\"",
                  "type": "string"
                },
                "pid": {
                  "description": "the pid of target program.",
                  "type": "integer"
                },
                "time-offset": {
                  "description": "specifies the length of time offset.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disk-fill": {
              "type": "object",
              "properties": {
                "fill-by-fallocate": {
                  "description": "fill disk by fallocate",
                  "type": "boolean"
                },
                "path": {
                  "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                  "type": "string"
                },
                "size": {
                  "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disk-read-payload": {
              "type": "object",
              "properties": {
                "path": {
                  "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                  "type": "string"
                },
                "payload-process-num": {
                  "description": "specifies the number of process work on writing, default 1, only 1-255 is valid value",
                  "type": "integer"
                },
                "size": {
                  "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disk-write-payload": {
              "type": "object",
              "properties": {
                "path": {
                  "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                  "type": "string"
                },
                "payload-process-num": {
                  "description": "specifies the number of process work on writing, default 1, only 1-255 is valid value",
                  "type": "integer"
                },
                "size": {
                  "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action",
              "type": "string"
            },
            "file-append": {
              "type": "object",
              "properties": {
                "count": {
                  "description": "Count is the number of times to append the data.",
                  "type": "integer"
                },
                "data": {
                  "description": "Data is the data for append.",
                  "type": "string"
                },
                "file-name": {
                  "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "file-create": {
              "type": "object",
              "properties": {
                "dir-name": {
                  "description": "DirName is the directory name to create or delete.",
                  "type": "string"
                },
                "file-name": {
                  "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "file-delete": {
              "type": "object",
              "properties": {
                "dir-name": {
                  "description": "DirName is the directory name to create or delete.",
                  "type": "string"
                },
                "file-name": {
                  "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "file-modify": {
              "type": "object",
              "properties": {
                "file-name": {
                  "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                  "type": "string"
                },
                "privilege": {
                  "description": "Privilege is the file privilege to be set.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "file-rename": {
              "type": "object",
              "properties": {
                "dest-file": {
                  "description": "DestFile is the name to be renamed.",
                  "type": "string"
                },
                "source-file": {
                  "description": "SourceFile is the name need to be renamed.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "file-replace": {
              "type": "object",
              "properties": {
                "dest-string": {
                  "description": "DestStr is the destination string of the file.",
                  "type": "string"
                },
                "file-name": {
                  "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                  "type": "string"
                },
                "line": {
                  "description": "Line is the line number of the file to be replaced.",
                  "type": "integer"
                },
                "origin-string": {
                  "description": "OriginStr is the origin string of the file.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "http-abort": {
              "type": "object",
              "required": [
                "proxy_ports",
                "target"
              ],
              "properties": {
                "code": {
                  "description": "Code is a rule to select target by http status code in response",
                  "type": "string"
                },
                "method": {
                  "description": "HTTP method",
                  "type": "string"
                },
                "path": {
                  "description": "Match path of Uri with wildcard matches",
                  "type": "string"
                },
                "port": {
                  "description": "The TCP port that the target service listens on",
                  "type": "integer",
                  "format": "int32"
                },
                "proxy_ports": {
                  "description": "Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "target": {
                  "description": "HTTP target: Request or Response",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "http-config": {
              "type": "object",
              "properties": {
                "file_path": {
                  "description": "The config file path",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "http-delay": {
              "type": "object",
              "required": [
                "delay",
                "proxy_ports",
                "target"
              ],
              "properties": {
                "code": {
                  "description": "Code is a rule to select target by http status code in response",
                  "type": "string"
                },
                "delay": {
                  "description": "Delay represents the delay of the target request/response",
                  "type": "string"
                },
                "method": {
                  "description": "HTTP method",
                  "type": "string"
                },
                "path": {
                  "description": "Match path of Uri with wildcard matches",
                  "type": "string"
                },
                "port": {
                  "description": "The TCP port that the target service listens on",
                  "type": "integer",
                  "format": "int32"
                },
                "proxy_ports": {
                  "description": "Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports",
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "target": {
                  "description": "HTTP target: Request or Response",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "http-request": {
              "description": "used for HTTP request, now only support GET",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of requests to send",
                  "type": "integer"
                },
                "enable-conn-pool": {
                  "description": "Enable connection pool",
                  "type": "boolean"
                },
                "url": {
                  "description": "Request to send\"",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "jvm-exception": {
              "type": "object",
              "properties": {
                "class": {
                  "description": "Java class",
                  "type": "string"
                },
                "exception": {
                  "description": "the exception which needs to throw for action `exception`",
                  "type": "string"
                },
                "method": {
                  "description": "the method in Java class",
                  "type": "string"
                },
                "pid": {
                  "description": "the pid of Java process which needs to attach",
                  "type": "integer"
                },
                "port": {
                  "description": "the port of agent server, default 9277",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "jvm-gc": {
              "type": "object",
              "properties": {
                "pid": {
                  "description": "the pid of Java process which needs to attach",
                  "type": "integer"
                },
                "port": {
                  "description": "the port of agent server, default 9277",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "jvm-latency": {
              "type": "object",
              "properties": {
                "class": {
                  "description": "Java class",
                  "type": "string"
                },
                "latency": {
                  "description": "the latency duration for action 'latency', unit ms",
                  "type": "integer"
                },
                "method": {
                  "description": "the method in Java class",
                  "type": "string"
                },
                "pid": {
                  "description": "the pid of Java process which needs to attach",
                  "type": "integer"
                },
                "port": {
                  "description": "the port of agent server, default 9277",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "jvm-mysql": {
              "type": "object",
              "properties": {
                "database": {
                  "description": "the match database\ndefault value is \"\", means match all database",
                  "type": "string"
                },
                "exception": {
                  "description": "The exception which needs to throw for action `exception`\nor the exception message needs to throw in action `mysql`",
                  "type": "string"
                },
                "latency": {
                  "description": "The latency duration for action 'latency'\nor the latency duration in action `mysql`",
                  "type": "integer"
                },
                "mysqlConnectorVersion": {
                  "description": "the version of mysql-connector-java, only support 5.X.X(set to \"5\") and 8.X.X(set to \"8\") now",
                  "type": "string"
                },
                "pid": {
                  "description": "the pid of Java process which needs to attach",
                  "type": "integer"
                },
                "port": {
                  "description": "the port of agent server, default 9277",
                  "type": "integer",
                  "format": "int32"
                },
                "sqlType": {
                  "description": "the match sql type\ndefault value is \"\", means match all SQL type.\nThe value can be 'select', 'insert', 'update', 'delete', 'replace'.",
                  "type": "string"
                },
                "table": {
                  "description": "the match table\ndefault value is \"\", means match all table",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "jvm-return": {
              "type": "object",
              "properties": {
                "class": {
                  "description": "Java class",
                  "type": "string"
                },
                "method": {
                  "description": "the method in Java class",
                  "type": "string"
                },
                "pid": {
                  "description": "the pid of Java process which needs to attach",
                  "type": "integer"
                },
                "port": {
                  "description": "the port of agent server, default 9277",
                  "type": "integer",
                  "format": "int32"
                },
                "value": {
                  "description": "the return value for action 'return'",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "jvm-rule-data": {
              "type": "object",
              "properties": {
                "pid": {
                  "description": "the pid of Java process which needs to attach",
                  "type": "integer"
                },
                "port": {
                  "description": "the port of agent server, default 9277",
                  "type": "integer",
                  "format": "int32"
                },
                "rule-data": {
                  "description": "RuleData used to save the rule file's data, will use it when recover",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "jvm-stress": {
              "type": "object",
              "properties": {
                "cpu-count": {
                  "description": "the CPU core number need to use, only set it when action is stress",
                  "type": "integer"
                },
                "mem-type": {
                  "description": "the memory type need to locate, only set it when action is stress, the value can be 'stack' or 'heap'",
                  "type": "string"
                },
                "pid": {
                  "description": "the pid of Java process which needs to attach",
                  "type": "integer"
                },
                "port": {
                  "description": "the port of agent server, default 9277",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "kafka-fill": {
              "type": "object",
              "properties": {
                "host": {
                  "description": "The host of kafka server",
                  "type": "string"
                },
                "maxBytes": {
                  "description": "The max bytes to fill",
                  "type": "integer",
                  "format": "int64"
                },
                "messageSize": {
                  "description": "The size of each message",
                  "type": "integer"
                },
                "password": {
                  "description": "The password of kafka client",
                  "type": "string"
                },
                "port": {
                  "description": "The port of kafka server",
                  "type": "integer"
                },
                "reloadCommand": {
                  "description": "The command to reload kafka config",
                  "type": "string"
                },
                "topic": {
                  "description": "The topic to attack",
                  "type": "string"
                },
                "username": {
                  "description": "The username of kafka client",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "kafka-flood": {
              "type": "object",
              "properties": {
                "host": {
                  "description": "The host of kafka server",
                  "type": "string"
                },
                "messageSize": {
                  "description": "The size of each message",
                  "type": "integer"
                },
                "password": {
                  "description": "The password of kafka client",
                  "type": "string"
                },
                "port": {
                  "description": "The port of kafka server",
                  "type": "integer"
                },
                "threads": {
                  "description": "The number of worker threads",
                  "type": "integer"
                },
                "topic": {
                  "description": "The topic to attack",
                  "type": "string"
                },
                "username": {
                  "description": "The username of kafka client",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "kafka-io": {
              "type": "object",
              "properties": {
                "configFile": {
                  "description": "The path of server config",
                  "type": "string"
                },
                "nonReadable": {
                  "description": "Make kafka cluster non-readable",
                  "type": "boolean"
                },
                "nonWritable": {
                  "description": "Make kafka cluster non-writable",
                  "type": "boolean"
                },
                "topic": {
                  "description": "The topic to attack",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "network-bandwidth": {
              "type": "object",
              "required": [
                "buffer",
                "limit",
                "rate"
              ],
              "properties": {
                "buffer": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "device": {
                  "type": "string"
                },
                "hostname": {
                  "type": "string"
                },
                "ip-address": {
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                },
                "minburst": {
                  "type": "integer",
                  "format": "int32"
                },
                "peakrate": {
                  "type": "integer",
                  "format": "int64"
                },
                "rate": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-corrupt": {
              "type": "object",
              "properties": {
                "correlation": {
                  "description": "correlation is percentage (10 is 10%)",
                  "type": "string"
                },
                "device": {
                  "description": "the network interface to impact",
                  "type": "string"
                },
                "egress-port": {
                  "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                },
                "hostname": {
                  "description": "only impact traffic to these hostnames",
                  "type": "string"
                },
                "ip-address": {
                  "description": "only impact egress traffic to these IP addresses",
                  "type": "string"
                },
                "ip-protocol": {
                  "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                  "type": "string"
                },
                "percent": {
                  "description": "percentage of packets to corrupt (10 is 10%)",
                  "type": "string"
                },
                "source-port": {
                  "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-delay": {
              "type": "object",
              "properties": {
                "accept-tcp-flags": {
                  "description": "only the packet which match the tcp flag can be accepted, others will be dropped.\nonly set when the IPProtocol is tcp, used for partition.",
                  "type": "string"
                },
                "correlation": {
                  "description": "correlation is percentage (10 is 10%)",
                  "type": "string"
                },
                "device": {
                  "description": "the network interface to impact",
                  "type": "string"
                },
                "egress-port": {
                  "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                },
                "hostname": {
                  "description": "only impact traffic to these hostnames",
                  "type": "string"
                },
                "ip-address": {
                  "description": "only impact egress traffic to these IP addresses",
                  "type": "string"
                },
                "ip-protocol": {
                  "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                  "type": "string"
                },
                "jitter": {
                  "description": "jitter time, time units: ns, us (or µs), ms, s, m, h.",
                  "type": "string"
                },
                "latency": {
                  "description": "delay egress time, time units: ns, us (or µs), ms, s, m, h.",
                  "type": "string"
                },
                "source-port": {
                  "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-dns": {
              "type": "object",
              "properties": {
                "dns-domain-name": {
                  "description": "map this host to specified IP",
                  "type": "string"
                },
                "dns-ip": {
                  "description": "map specified host to this IP address",
                  "type": "string"
                },
                "dns-server": {
                  "description": "update the DNS server in /etc/resolv.conf with this value",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-down": {
              "type": "object",
              "properties": {
                "device": {
                  "description": "The network interface to impact",
                  "type": "string"
                },
                "duration": {
                  "description": "NIC down time, time units: ns, us (or µs), ms, s, m, h.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-duplicate": {
              "type": "object",
              "properties": {
                "correlation": {
                  "description": "correlation is percentage (10 is 10%)",
                  "type": "string"
                },
                "device": {
                  "description": "the network interface to impact",
                  "type": "string"
                },
                "egress-port": {
                  "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                },
                "hostname": {
                  "description": "only impact traffic to these hostnames",
                  "type": "string"
                },
                "ip-address": {
                  "description": "only impact egress traffic to these IP addresses",
                  "type": "string"
                },
                "ip-protocol": {
                  "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                  "type": "string"
                },
                "percent": {
                  "description": "percentage of packets to duplicate (10 is 10%)",
                  "type": "string"
                },
                "source-port": {
                  "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-flood": {
              "type": "object",
              "required": [
                "duration",
                "rate"
              ],
              "properties": {
                "duration": {
                  "description": "The number of seconds to run the iperf test",
                  "type": "string"
                },
                "ip-address": {
                  "description": "Generate traffic to this IP address",
                  "type": "string"
                },
                "parallel": {
                  "description": "The number of iperf parallel client threads to run",
                  "type": "integer",
                  "format": "int32"
                },
                "port": {
                  "description": "Generate traffic to this port on the IP address",
                  "type": "string"
                },
                "rate": {
                  "description": "The speed of network traffic, allows bps, kbps, mbps, gbps, tbps unit. bps means bytes per second",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-loss": {
              "type": "object",
              "properties": {
                "correlation": {
                  "description": "correlation is percentage (10 is 10%)",
                  "type": "string"
                },
                "device": {
                  "description": "the network interface to impact",
                  "type": "string"
                },
                "egress-port": {
                  "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                },
                "hostname": {
                  "description": "only impact traffic to these hostnames",
                  "type": "string"
                },
                "ip-address": {
                  "description": "only impact egress traffic to these IP addresses",
                  "type": "string"
                },
                "ip-protocol": {
                  "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                  "type": "string"
                },
                "percent": {
                  "description": "percentage of packets to loss (10 is 10%)",
                  "type": "string"
                },
                "source-port": {
                  "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network-partition": {
              "type": "object",
              "properties": {
                "accept-tcp-flags": {
                  "description": "only the packet which match the tcp flag can be accepted, others will be dropped.\nonly set when the IPProtocol is tcp, used for partition.",
                  "type": "string"
                },
                "device": {
                  "description": "the network interface to impact",
                  "type": "string"
                },
                "direction": {
                  "description": "specifies the partition direction, values can be 'from', 'to'.\n'from' means packets coming from the 'IPAddress' or 'Hostname' and going to your server,\n'to' means packets originating from your server and going to the 'IPAddress' or 'Hostname'.",
                  "type": "string"
                },
                "hostname": {
                  "description": "only impact traffic to these hostnames",
                  "type": "string"
                },
                "ip-address": {
                  "description": "only impact egress traffic to these IP addresses",
                  "type": "string"
                },
                "ip-protocol": {
                  "description": "only impact egress traffic to these IP addresses",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "process": {
              "type": "object",
              "properties": {
                "process": {
                  "description": "the process name or the process ID",
                  "type": "string"
                },
                "recoverCmd": {
                  "description": "the command to be run when recovering experiment",
                  "type": "string"
                },
                "signal": {
                  "description": "the signal number to send",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "redis-cacheLimit": {
              "type": "object",
              "properties": {
                "addr": {
                  "description": "The adress of Redis server",
                  "type": "string"
                },
                "cacheSize": {
                  "description": "The size of `maxmemory`",
                  "type": "string"
                },
                "password": {
                  "description": "The password of Redis server",
                  "type": "string"
                },
                "percent": {
                  "description": "Specifies maxmemory as a percentage of the original value",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "redis-expiration": {
              "type": "object",
              "properties": {
                "addr": {
                  "description": "The adress of Redis server",
                  "type": "string"
                },
                "expiration": {
                  "description": "The expiration of the keys",
                  "type": "string"
                },
                "key": {
                  "description": "The keys to be expired",
                  "type": "string"
                },
                "option": {
                  "description": "Additional options for `expiration`",
                  "type": "string"
                },
                "password": {
                  "description": "The password of Redis server",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "redis-penetration": {
              "type": "object",
              "properties": {
                "addr": {
                  "description": "The adress of Redis server",
                  "type": "string"
                },
                "password": {
                  "description": "The password of Redis server",
                  "type": "string"
                },
                "requestNum": {
                  "description": "The number of requests to be sent",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "redis-restart": {
              "type": "object",
              "properties": {
                "addr": {
                  "description": "The adress of Redis server",
                  "type": "string"
                },
                "conf": {
                  "description": "The path of Sentinel conf",
                  "type": "string"
                },
                "flushConfig": {
                  "description": "The control flag determines whether to flush config",
                  "type": "boolean"
                },
                "password": {
                  "description": "The password of Redis server",
                  "type": "string"
                },
                "redisPath": {
                  "description": "The path of `redis-server` command-line tool",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "redis-stop": {
              "type": "object",
              "properties": {
                "addr": {
                  "description": "The adress of Redis server",
                  "type": "string"
                },
                "conf": {
                  "description": "The path of Sentinel conf",
                  "type": "string"
                },
                "flushConfig": {
                  "description": "The control flag determines whether to flush config",
                  "type": "boolean"
                },
                "password": {
                  "description": "The password of Redis server",
                  "type": "string"
                },
                "redisPath": {
                  "description": "The path of `redis-server` command-line tool",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select physical machines that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "physicalMachines": {
                  "description": "PhysicalMachines is a map of string keys and a set values that used to select physical machines.\nThe key defines the namespace which physical machine belong,\nand each value is a set of physical machine names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "stress-cpu": {
              "type": "object",
              "properties": {
                "load": {
                  "description": "specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100 is full loading.",
                  "type": "integer"
                },
                "options": {
                  "description": "extend stress-ng options",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "workers": {
                  "description": "specifies N workers to apply the stressor.",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "stress-mem": {
              "type": "object",
              "properties": {
                "options": {
                  "description": "extend stress-ng options",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "size": {
                  "description": "specifies N bytes consumed per vm worker, default is the total available memory.\nOne can specify the size as % of total available memory or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB..",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "uid": {
              "description": "the experiment ID",
              "type": "string"
            },
            "user_defined": {
              "type": "object",
              "properties": {
                "attackCmd": {
                  "description": "The command to be executed when attack",
                  "type": "string"
                },
                "recoverCmd": {
                  "description": "The command to be executed when recover",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of physical machines to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of physical machines the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            },
            "vm": {
              "type": "object",
              "properties": {
                "vm-name": {
                  "description": "The name of the VM to be injected",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "podChaos": {
          "description": "PodChaosSpec defines the attributes that a user creates on a chaos experiment about pods.",
          "type": "object",
          "required": [
            "action",
            "mode",
            "selector"
          ],
          "properties": {
            "action": {
              "description": "Action defines the specific pod chaos action.\nSupported action: pod-kill / pod-failure / container-kill\nDefault action: pod-kill",
              "type": "string",
              "enum": [
                "pod-kill",
                "pod-failure",
                "container-kill"
              ]
            },
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action.\nIt is required when the action is `PodFailureAction`.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
              "type": "string"
            },
            "gracePeriod": {
              "description": "GracePeriod is used in pod-kill action. It represents the duration in seconds before the pod should be deleted.\nValue must be non-negative integer. The default value is zero that indicates delete immediately.",
              "type": "integer",
              "format": "int64",
              "minimum": 0
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "schedule": {
          "type": "string"
        },
        "startingDeadlineSeconds": {
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "exclusiveMinimum": true,
          "nullable": true
        },
        "stressChaos": {
          "description": "StressChaosSpec defines the desired state of StressChaos",
          "type": "object",
          "required": [
            "mode",
            "selector"
          ],
          "properties": {
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action",
              "type": "string"
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "stressngStressors": {
              "description": "StressngStressors defines plenty of stressors just like `Stressors` except that it's an experimental\nfeature and more powerful. You can define stressors in `stress-ng` (see also `man stress-ng`) dialect,\nhowever not all of the supported stressors are well tested. It maybe retired in later releases. You\nshould always use `Stressors` to define the stressors and use this only when you want more stressors\nunsupported by `Stressors`. When both `StressngStressors` and `Stressors` are defined, `StressngStressors`\nwins.",
              "type": "string"
            },
            "stressors": {
              "description": "Stressors defines plenty of stressors supported to stress system components out.\nYou can use one or more of them to make up various kinds of stresses. At least\none of the stressors should be specified.",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "CPUStressor stresses CPU out",
                  "type": "object",
                  "required": [
                    "workers"
                  ],
                  "properties": {
                    "load": {
                      "description": "Load specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100\nis full loading.",
                      "type": "integer",
                      "maximum": 100,
                      "minimum": 0
                    },
                    "options": {
                      "description": "extend stress-ng options",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "workers": {
                      "description": "Workers specifies N workers to apply the stressor.\nMaximum 8192 workers can run by stress-ng",
                      "type": "integer",
                      "maximum": 8192
                    }
                  },
                  "additionalProperties": false
                },
                "memory": {
                  "description": "MemoryStressor stresses virtual memory out",
                  "type": "object",
                  "required": [
                    "workers"
                  ],
                  "properties": {
                    "oomScoreAdj": {
                      "description": "OOMScoreAdj sets the oom_score_adj of the stress process. See `man 5 proc` to know more\nabout this option.",
                      "type": "integer",
                      "default": 0,
                      "maximum": 1000,
                      "minimum": -1000
                    },
                    "options": {
                      "description": "extend stress-ng options",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "size": {
                      "description": "Size specifies N bytes consumed per vm worker, default is the total available memory.\nOne can specify the size as % of total available memory or in units of B, KB/KiB,\nMB/MiB, GB/GiB, TB/TiB.",
                      "type": "string"
                    },
                    "workers": {
                      "description": "Workers specifies N workers to apply the stressor.\nMaximum 8192 workers can run by stress-ng",
                      "type": "integer",
                      "maximum": 8192
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "timeChaos": {
          "description": "TimeChaosSpec defines the desired state of TimeChaos",
          "type": "object",
          "required": [
            "mode",
            "selector",
            "timeOffset"
          ],
          "properties": {
            "clockIds": {
              "description": "ClockIds defines all affected clock id\nAll available options are [\"CLOCK_REALTIME\",\"CLOCK_MONOTONIC\",\"CLOCK_PROCESS_CPUTIME_ID\",\"CLOCK_THREAD_CPUTIME_ID\",\n\"CLOCK_MONOTONIC_RAW\",\"CLOCK_REALTIME_COARSE\",\"CLOCK_MONOTONIC_COARSE\",\"CLOCK_BOOTTIME\",\"CLOCK_REALTIME_ALARM\",\n\"CLOCK_BOOTTIME_ALARM\"]\nDefault value is [\"CLOCK_REALTIME\"]",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "containerNames": {
              "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "duration": {
              "description": "Duration represents the duration of the chaos action",
              "type": "string"
            },
            "mode": {
              "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
              "type": "string",
              "enum": [
                "one",
                "all",
                "fixed",
                "fixed-percent",
                "random-max-percent"
              ]
            },
            "remoteCluster": {
              "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
              "type": "string"
            },
            "selector": {
              "description": "Selector is used to select pods that are used to inject chaos action.",
              "type": "object",
              "properties": {
                "annotationSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "expressionSelectors": {
                  "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                  "type": "array",
                  "items": {
                    "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "description": "key is the label key that the selector applies to.",
                        "type": "string"
                      },
                      "operator": {
                        "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                        "type": "string"
                      },
                      "values": {
                        "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "fieldSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labelSelectors": {
                  "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespaces": {
                  "description": "Namespaces is a set of namespace to which objects belong.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelectors": {
                  "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodes": {
                  "description": "Nodes is a set of node name and objects must belong to these nodes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podPhaseSelectors": {
                  "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "pods": {
                  "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "timeOffset": {
              "description": "TimeOffset defines the delta time of injected program. It's a possibly signed sequence of decimal numbers, such as\n\"300ms\", \"-1.5h\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
              "type": "string"
            },
            "value": {
              "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "type": "string"
        },
        "workflow": {
          "type": "object",
          "required": [
            "entry",
            "templates"
          ],
          "properties": {
            "entry": {
              "type": "string"
            },
            "templates": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "templateType"
                ],
                "properties": {
                  "abortWithStatusCheck": {
                    "description": "AbortWithStatusCheck describe whether to abort the workflow when the failure threshold of StatusCheck is exceeded.\nOnly used when Type is TypeStatusCheck.",
                    "type": "boolean"
                  },
                  "awsChaos": {
                    "description": "AWSChaosSpec is the content of the specification for an AWSChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "awsRegion",
                      "ec2Instance"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific aws chaos action.\nSupported action: ec2-stop / ec2-restart / detach-volume\nDefault action: ec2-stop",
                        "type": "string",
                        "enum": [
                          "ec2-stop",
                          "ec2-restart",
                          "detach-volume"
                        ]
                      },
                      "awsRegion": {
                        "description": "AWSRegion defines the region of aws.",
                        "type": "string"
                      },
                      "deviceName": {
                        "description": "DeviceName indicates the name of the device.\nNeeded in detach-volume.",
                        "type": "string"
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action.",
                        "type": "string"
                      },
                      "ec2Instance": {
                        "description": "Ec2Instance indicates the ID of the ec2 instance.",
                        "type": "string"
                      },
                      "endpoint": {
                        "description": "Endpoint indicates the endpoint of the aws server. Just used it in test now.",
                        "type": "string"
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "SecretName defines the name of kubernetes secret.",
                        "type": "string"
                      },
                      "volumeID": {
                        "description": "EbsVolume indicates the ID of the EBS volume.\nNeeded in detach-volume.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "azureChaos": {
                    "description": "AzureChaosSpec is the content of the specification for an AzureChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "resourceGroupName",
                      "subscriptionID",
                      "vmName"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific azure chaos action.\nSupported action: vm-stop / vm-restart / disk-detach\nDefault action: vm-stop",
                        "type": "string",
                        "enum": [
                          "vm-stop",
                          "vm-restart",
                          "disk-detach"
                        ]
                      },
                      "diskName": {
                        "description": "DiskName indicates the name of the disk.\nNeeded in disk-detach.",
                        "type": "string"
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action.",
                        "type": "string"
                      },
                      "lun": {
                        "description": "LUN indicates the Logical Unit Number of the data disk.\nNeeded in disk-detach.",
                        "type": "integer"
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "resourceGroupName": {
                        "description": "ResourceGroupName defines the name of ResourceGroup",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "SecretName defines the name of kubernetes secret. It is used for Azure credentials.",
                        "type": "string"
                      },
                      "subscriptionID": {
                        "description": "SubscriptionID defines the id of Azure subscription.",
                        "type": "string"
                      },
                      "vmName": {
                        "description": "VMName defines the name of Virtual Machine",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "blockChaos": {
                    "description": "BlockChaosSpec is the content of the specification for a BlockChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "mode",
                      "selector",
                      "volumeName"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific block chaos action.\nSupported action: delay",
                        "type": "string",
                        "enum": [
                          "delay"
                        ]
                      },
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "delay": {
                        "description": "Delay defines the delay distribution.",
                        "type": "object",
                        "properties": {
                          "correlation": {
                            "type": "string"
                          },
                          "jitter": {
                            "type": "string"
                          },
                          "latency": {
                            "description": "Latency defines the latency of every io request.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action.",
                        "type": "string"
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      },
                      "volumeName": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "children": {
                    "description": "Children describes the children steps of serial or parallel node. Only used when Type is TypeSerial or TypeParallel.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "conditionalBranches": {
                    "description": "ConditionalBranches describes the conditional branches of custom tasks. Only used when Type is TypeTask.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "target"
                      ],
                      "properties": {
                        "expression": {
                          "description": "Expression is the expression for this conditional branch, expected type of result is boolean. If expression is empty, this branch will always be selected/the template will be spawned.",
                          "type": "string"
                        },
                        "target": {
                          "description": "Target is the name of other template, if expression is evaluated as true, this template will be spawned.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "deadline": {
                    "type": "string"
                  },
                  "dnsChaos": {
                    "description": "DNSChaosSpec defines the desired state of DNSChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "mode",
                      "selector"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific DNS chaos action.\nSupported action: error, random\nDefault action: error",
                        "type": "string",
                        "enum": [
                          "error",
                          "random"
                        ]
                      },
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action",
                        "type": "string"
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "patterns": {
                        "description": "Choose which domain names to take effect, support the placeholder ? and wildcard *, or the Specified domain name.\nNote:\n     1. The wildcard * must be at the end of the string. For example, chaos-*.org is invalid.\n     2. if the patterns is empty, will take effect on all the domain names.\nFor example:\n\t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],\n\t\twill take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\"",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "gcpChaos": {
                    "description": "GCPChaosSpec is the content of the specification for a GCPChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "instance",
                      "project",
                      "zone"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific gcp chaos action.\nSupported action: node-stop / node-reset / disk-loss\nDefault action: node-stop",
                        "type": "string",
                        "enum": [
                          "node-stop",
                          "node-reset",
                          "disk-loss"
                        ]
                      },
                      "deviceNames": {
                        "description": "The device name of disks to detach.\nNeeded in disk-loss.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action.",
                        "type": "string"
                      },
                      "instance": {
                        "description": "Instance defines the name of the instance",
                        "type": "string"
                      },
                      "project": {
                        "description": "Project defines the ID of gcp project.",
                        "type": "string"
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "secretName": {
                        "description": "SecretName defines the name of kubernetes secret. It is used for GCP credentials.",
                        "type": "string"
                      },
                      "zone": {
                        "description": "Zone defines the zone of gcp project.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "httpChaos": {
                    "type": "object",
                    "required": [
                      "mode",
                      "selector",
                      "target"
                    ],
                    "properties": {
                      "abort": {
                        "description": "Abort is a rule to abort a http session.",
                        "type": "boolean"
                      },
                      "code": {
                        "description": "Code is a rule to select target by http status code in response.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "delay": {
                        "description": "Delay represents the delay of the target request/response.\nA duration string is a possibly unsigned sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                        "type": "string"
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action.",
                        "type": "string"
                      },
                      "method": {
                        "description": "Method is a rule to select target by http method in request.",
                        "type": "string"
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "patch": {
                        "description": "Patch is a rule to patch some contents in target.",
                        "type": "object",
                        "properties": {
                          "body": {
                            "description": "Body is a rule to patch message body of target.",
                            "type": "object",
                            "required": [
                              "type",
                              "value"
                            ],
                            "properties": {
                              "type": {
                                "description": "Type represents the patch type, only support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value is the patch contents.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "headers": {
                            "description": "Headers is a rule to append http headers of target.\nFor example: `[[\"Set-Cookie\", \"\u003cone cookie\u003e\"], [\"Set-Cookie\", \"\u003canother cookie\u003e\"]]`.",
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "queries": {
                            "description": "Queries is a rule to append uri queries of target(Request only).\nFor example: `[[\"foo\", \"bar\"], [\"foo\", \"unknown\"]]`.",
                            "type": "array",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "path": {
                        "description": "Path is a rule to select target by uri path in http request.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Port represents the target port to be proxy of.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "replace": {
                        "description": "Replace is a rule to replace some contents in target.",
                        "type": "object",
                        "properties": {
                          "body": {
                            "description": "Body is a rule to replace http message body in target.",
                            "type": "string",
                            "format": "byte"
                          },
                          "code": {
                            "description": "Code is a rule to replace http status code in response.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "headers": {
                            "description": "Headers is a rule to replace http headers of target.\nThe key-value pairs represent header name and header value pairs.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "method": {
                            "description": "Method is a rule to replace http method in request.",
                            "type": "string"
                          },
                          "path": {
                            "description": "Path is rule to to replace uri path in http request.",
                            "type": "string"
                          },
                          "queries": {
                            "description": "Queries is a rule to replace uri queries in http request.\nFor example, with value `{ \"foo\": \"unknown\" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "request_headers": {
                        "description": "RequestHeaders is a rule to select target by http headers in request.\nThe key-value pairs represent header name and header value pairs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "response_headers": {
                        "description": "ResponseHeaders is a rule to select target by http headers in response.\nThe key-value pairs represent header name and header value pairs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "target": {
                        "description": "Target is the object to be selected and injected.",
                        "type": "string",
                        "enum": [
                          "Request",
                          "Response"
                        ]
                      },
                      "tls": {
                        "description": "TLS is the tls config,\nwill override PodHttpChaos if there are multiple HTTPChaos experiments are applied",
                        "type": "object",
                        "required": [
                          "certName",
                          "keyName",
                          "secretName",
                          "secretNamespace"
                        ],
                        "properties": {
                          "caName": {
                            "description": "CAName represents the data name of ca file in secret, `ca.crt` for example",
                            "type": "string"
                          },
                          "certName": {
                            "description": "CertName represents the data name of cert file in secret, `tls.crt` for example",
                            "type": "string"
                          },
                          "keyName": {
                            "description": "KeyName represents the data name of key file in secret, `tls.key` for example",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "SecretName represents the name of required secret resource",
                            "type": "string"
                          },
                          "secretNamespace": {
                            "description": "SecretNamespace represents the namespace of required secret resource",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "ioChaos": {
                    "description": "IOChaosSpec defines the desired state of IOChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "mode",
                      "selector",
                      "volumePath"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific pod chaos action.\nSupported action: latency / fault / attrOverride / mistake",
                        "type": "string",
                        "enum": [
                          "latency",
                          "fault",
                          "attrOverride",
                          "mistake"
                        ]
                      },
                      "attr": {
                        "description": "Attr defines the overrided attribution",
                        "type": "object",
                        "properties": {
                          "atime": {
                            "description": "Timespec represents a time",
                            "type": "object",
                            "required": [
                              "nsec",
                              "sec"
                            ],
                            "properties": {
                              "nsec": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "sec": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false
                          },
                          "blocks": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "ctime": {
                            "description": "Timespec represents a time",
                            "type": "object",
                            "required": [
                              "nsec",
                              "sec"
                            ],
                            "properties": {
                              "nsec": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "sec": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false
                          },
                          "gid": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "ino": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "kind": {
                            "description": "FileType represents type of file",
                            "type": "string"
                          },
                          "mtime": {
                            "description": "Timespec represents a time",
                            "type": "object",
                            "required": [
                              "nsec",
                              "sec"
                            ],
                            "properties": {
                              "nsec": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "sec": {
                                "type": "integer",
                                "format": "int64"
                              }
                            },
                            "additionalProperties": false
                          },
                          "nlink": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "perm": {
                            "type": "integer"
                          },
                          "rdev": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "size": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "uid": {
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "delay": {
                        "description": "Delay defines the value of I/O chaos action delay.\nA delay string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                        "type": "string"
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action.\nIt is required when the action is `PodFailureAction`.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                        "type": "string"
                      },
                      "errno": {
                        "description": "Errno defines the error code that returned by I/O action.\nrefer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html",
                        "type": "integer",
                        "format": "int32"
                      },
                      "methods": {
                        "description": "Methods defines the I/O methods for injecting I/O chaos action.\ndefault: all I/O methods.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "mistake": {
                        "description": "Mistake defines what types of incorrectness are injected to IO operations",
                        "type": "object",
                        "properties": {
                          "filling": {
                            "description": "Filling determines what is filled in the mistake data.",
                            "type": "string",
                            "enum": [
                              "zero",
                              "random"
                            ]
                          },
                          "maxLength": {
                            "description": "Max length of each wrong data segment in bytes",
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                          },
                          "maxOccurrences": {
                            "description": "There will be [1, MaxOccurrences] segments of wrong data.",
                            "type": "integer",
                            "format": "int64",
                            "minimum": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "path": {
                        "description": "Path defines the path of files for injecting I/O chaos action.",
                        "type": "string"
                      },
                      "percent": {
                        "description": "Percent defines the percentage of injection errors and provides a number from 0-100.\ndefault: 100.",
                        "type": "integer",
                        "default": 100
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      },
                      "volumePath": {
                        "description": "VolumePath represents the mount path of injected volume",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "jvmChaos": {
                    "description": "JVMChaosSpec defines the desired state of JVMChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "mode",
                      "selector"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific jvm chaos action.\nSupported action: latency;return;exception;stress;gc;ruleData",
                        "type": "string",
                        "enum": [
                          "latency",
                          "return",
                          "exception",
                          "stress",
                          "gc",
                          "ruleData",
                          "mysql"
                        ]
                      },
                      "class": {
                        "description": "Java class",
                        "type": "string"
                      },
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "cpuCount": {
                        "description": "the CPU core number needs to use, only set it when action is stress",
                        "type": "integer"
                      },
                      "database": {
                        "description": "the match database\ndefault value is \"\", means match all database",
                        "type": "string"
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action",
                        "type": "string"
                      },
                      "exception": {
                        "description": "the exception which needs to throw for action `exception`\nor the exception message needs to throw in action `mysql`",
                        "type": "string"
                      },
                      "latency": {
                        "description": "the latency duration for action 'latency', unit ms\nor the latency duration in action `mysql`",
                        "type": "integer"
                      },
                      "memType": {
                        "description": "the memory type needs to locate, only set it when action is stress, the value can be 'stack' or 'heap'",
                        "type": "string"
                      },
                      "method": {
                        "description": "the method in Java class",
                        "type": "string"
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "mysqlConnectorVersion": {
                        "description": "the version of mysql-connector-java, only support 5.X.X(set to \"5\") and 8.X.X(set to \"8\") now",
                        "type": "string"
                      },
                      "name": {
                        "description": "byteman rule name, should be unique, and will generate one if not set",
                        "type": "string"
                      },
                      "pid": {
                        "description": "the pid of Java process which needs to attach",
                        "type": "integer"
                      },
                      "port": {
                        "description": "the port of agent server, default 9277",
                        "type": "integer",
                        "format": "int32"
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "returnValue": {
                        "description": "the return value for action 'return'",
                        "type": "string"
                      },
                      "ruleData": {
                        "description": "the byteman rule's data for action 'ruleData'",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "sqlType": {
                        "description": "the match sql type\ndefault value is \"\", means match all SQL type.\nThe value can be 'select', 'insert', 'update', 'delete', 'replace'.",
                        "type": "string"
                      },
                      "table": {
                        "description": "the match table\ndefault value is \"\", means match all table",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "kernelChaos": {
                    "description": "KernelChaosSpec defines the desired state of KernelChaos",
                    "type": "object",
                    "required": [
                      "failKernRequest",
                      "mode",
                      "selector"
                    ],
                    "properties": {
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action",
                        "type": "string"
                      },
                      "failKernRequest": {
                        "description": "FailKernRequest defines the request of kernel injection",
                        "type": "object",
                        "required": [
                          "failtype"
                        ],
                        "properties": {
                          "callchain": {
                            "description": "Callchain indicate a special call chain, such as:\n    ext4_mount\n      -\u003e mount_subtree\n         -\u003e ...\n            -\u003e should_failslab\nWith an optional set of predicates and an optional set of\nparameters, which used with predicates. You can read call chan\nand predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples\nto learn more.\nIf no special call chain, just keep Callchain empty, which means it will fail at any call chain\nwith slab alloc (eg: kmalloc).",
                            "type": "array",
                            "items": {
                              "description": "Frame defines the function signature and predicate in function's body",
                              "type": "object",
                              "properties": {
                                "funcname": {
                                  "description": "Funcname can be find from kernel source or `/proc/kallsyms`, such as `ext4_mount`",
                                  "type": "string"
                                },
                                "parameters": {
                                  "description": "Parameters is used with predicate, for example, if you want to inject slab error\nin `d_alloc_parallel(struct dentry *parent, const struct qstr *name)` with a special\nname `bananas`, you need to set it to `struct dentry *parent, const struct qstr *name`\notherwise omit it.",
                                  "type": "string"
                                },
                                "predicate": {
                                  "description": "Predicate will access the arguments of this Frame, example with Parameters's, you can\nset it to `STRNCMP(name-\u003ename, \"bananas\", 8)` to make inject only with it, or omit it\nto inject for all d_alloc_parallel call chain.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "failtype": {
                            "description": "FailType indicates what to fail, can be set to '0' / '1' / '2'\nIf `0`, indicates slab to fail (should_failslab)\nIf `1`, indicates alloc_page to fail (should_fail_alloc_page)\nIf `2`, indicates bio to fail (should_fail_bio)\nYou can read:\n  1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html\n  2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt\nto learn more",
                            "type": "integer",
                            "format": "int32",
                            "maximum": 2,
                            "minimum": 0
                          },
                          "headers": {
                            "description": "Headers indicates the appropriate kernel headers you need.\nEg: \"linux/mmzone.h\", \"linux/blkdev.h\" and so on",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "probability": {
                            "description": "Probability indicates the fails with probability.\nIf you want 1%, please set this field with 1.",
                            "type": "integer",
                            "format": "int32",
                            "maximum": 100,
                            "minimum": 0
                          },
                          "times": {
                            "description": "Times indicates the max times of fails.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          }
                        },
                        "additionalProperties": false
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "type": "string"
                  },
                  "networkChaos": {
                    "description": "NetworkChaosSpec defines the desired state of NetworkChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "mode",
                      "selector"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific network chaos action.\nSupported action: partition, netem, delay, loss, duplicate, corrupt\nDefault action: delay",
                        "type": "string",
                        "enum": [
                          "netem",
                          "delay",
                          "loss",
                          "duplicate",
                          "corrupt",
                          "partition",
                          "bandwidth"
                        ]
                      },
                      "bandwidth": {
                        "description": "Bandwidth represents the detail about bandwidth control action",
                        "type": "object",
                        "required": [
                          "buffer",
                          "limit",
                          "rate"
                        ],
                        "properties": {
                          "buffer": {
                            "description": "Buffer is the maximum amount of bytes that tokens can be available for instantaneously.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                          },
                          "limit": {
                            "description": "Limit is the number of bytes that can be queued waiting for tokens to become available.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                          },
                          "minburst": {
                            "description": "Minburst specifies the size of the peakrate bucket. For perfect\naccuracy, should be set to the MTU of the interface.  If a\npeakrate is needed, but some burstiness is acceptable, this\nsize can be raised. A 3000 byte minburst allows around 3mbit/s\nof peakrate, given 1000 byte packets.",
                            "type": "integer",
                            "format": "int32",
                            "minimum": 0
                          },
                          "peakrate": {
                            "description": "Peakrate is the maximum depletion rate of the bucket.\nThe peakrate does not need to be set, it is only necessary\nif perfect millisecond timescale shaping is required.",
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                          },
                          "rate": {
                            "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "corrupt": {
                        "description": "Corrupt represents the detail about corrupt action",
                        "type": "object",
                        "required": [
                          "corrupt"
                        ],
                        "properties": {
                          "correlation": {
                            "type": "string"
                          },
                          "corrupt": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "delay": {
                        "description": "Delay represents the detail about delay action",
                        "type": "object",
                        "required": [
                          "latency"
                        ],
                        "properties": {
                          "correlation": {
                            "type": "string"
                          },
                          "jitter": {
                            "type": "string",
                            "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
                          },
                          "latency": {
                            "type": "string",
                            "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
                          },
                          "reorder": {
                            "description": "ReorderSpec defines details of packet reorder.",
                            "type": "object",
                            "required": [
                              "gap",
                              "reorder"
                            ],
                            "properties": {
                              "correlation": {
                                "type": "string"
                              },
                              "gap": {
                                "type": "integer"
                              },
                              "reorder": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "device": {
                        "description": "Device represents the network device to be affected.",
                        "type": "string"
                      },
                      "direction": {
                        "description": "Direction represents the direction, this applies on netem and network partition action",
                        "type": "string",
                        "default": "to",
                        "enum": [
                          "to",
                          "from",
                          "both"
                        ]
                      },
                      "duplicate": {
                        "description": "DuplicateSpec represents the detail about loss action",
                        "type": "object",
                        "required": [
                          "duplicate"
                        ],
                        "properties": {
                          "correlation": {
                            "type": "string"
                          },
                          "duplicate": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action",
                        "type": "string"
                      },
                      "externalTargets": {
                        "description": "ExternalTargets represents network targets outside k8s",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "loss": {
                        "description": "Loss represents the detail about loss action",
                        "type": "object",
                        "required": [
                          "loss"
                        ],
                        "properties": {
                          "correlation": {
                            "type": "string"
                          },
                          "loss": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "rate": {
                        "description": "Rate represents the detail about rate control action",
                        "type": "object",
                        "required": [
                          "rate"
                        ],
                        "properties": {
                          "rate": {
                            "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "target": {
                        "description": "Target represents network target, this applies on netem and network partition action",
                        "type": "object",
                        "required": [
                          "mode",
                          "selector"
                        ],
                        "properties": {
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "targetDevice": {
                        "description": "TargetDevice represents the network device to be affected in target scope.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "physicalmachineChaos": {
                    "description": "PhysicalMachineChaosSpec defines the desired state of PhysicalMachineChaos",
                    "type": "object",
                    "required": [
                      "action",
                      "mode"
                    ],
                    "properties": {
                      "action": {
                        "description": "the subAction, generate automatically",
                        "type": "string",
                        "enum": [
                          "stress-cpu",
                          "stress-mem",
                          "disk-read-payload",
                          "disk-write-payload",
                          "disk-fill",
                          "network-corrupt",
                          "network-duplicate",
                          "network-loss",
                          "network-delay",
                          "network-partition",
                          "network-dns",
                          "network-bandwidth",
                          "network-flood",
                          "network-down",
                          "process",
                          "jvm-exception",
                          "jvm-gc",
                          "jvm-latency",
                          "jvm-return",
                          "jvm-stress",
                          "jvm-rule-data",
                          "jvm-mysql",
                          "clock",
                          "redis-expiration",
                          "redis-penetration",
                          "redis-cacheLimit",
                          "redis-restart",
                          "redis-stop",
                          "kafka-fill",
                          "kafka-flood",
                          "kafka-io",
                          "file-create",
                          "file-modify",
                          "file-delete",
                          "file-rename",
                          "file-append",
                          "file-replace",
                          "vm",
                          "user_defined"
                        ]
                      },
                      "address": {
                        "description": "DEPRECATED: Use Selector instead.\nOnly one of Address and Selector could be specified.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "clock": {
                        "type": "object",
                        "properties": {
                          "clock-ids-slice": {
                            "description": "the identifier of the particular clock on which to act.\nMore clock description in linux kernel can be found in man page of clock_getres, clock_gettime, clock_settime.\nMuti clock ids should be split with \",\"",
                            "type": "string"
                          },
                          "pid": {
                            "description": "the pid of target program.",
                            "type": "integer"
                          },
                          "time-offset": {
                            "description": "specifies the length of time offset.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "disk-fill": {
                        "type": "object",
                        "properties": {
                          "fill-by-fallocate": {
                            "description": "fill disk by fallocate",
                            "type": "boolean"
                          },
                          "path": {
                            "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                            "type": "string"
                          },
                          "size": {
                            "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "disk-read-payload": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                            "type": "string"
                          },
                          "payload-process-num": {
                            "description": "specifies the number of process work on writing, default 1, only 1-255 is valid value",
                            "type": "integer"
                          },
                          "size": {
                            "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "disk-write-payload": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                            "type": "string"
                          },
                          "payload-process-num": {
                            "description": "specifies the number of process work on writing, default 1, only 1-255 is valid value",
                            "type": "integer"
                          },
                          "size": {
                            "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action",
                        "type": "string"
                      },
                      "file-append": {
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "Count is the number of times to append the data.",
                            "type": "integer"
                          },
                          "data": {
                            "description": "Data is the data for append.",
                            "type": "string"
                          },
                          "file-name": {
                            "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "file-create": {
                        "type": "object",
                        "properties": {
                          "dir-name": {
                            "description": "DirName is the directory name to create or delete.",
                            "type": "string"
                          },
                          "file-name": {
                            "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "file-delete": {
                        "type": "object",
                        "properties": {
                          "dir-name": {
                            "description": "DirName is the directory name to create or delete.",
                            "type": "string"
                          },
                          "file-name": {
                            "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "file-modify": {
                        "type": "object",
                        "properties": {
                          "file-name": {
                            "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                            "type": "string"
                          },
                          "privilege": {
                            "description": "Privilege is the file privilege to be set.",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "file-rename": {
                        "type": "object",
                        "properties": {
                          "dest-file": {
                            "description": "DestFile is the name to be renamed.",
                            "type": "string"
                          },
                          "source-file": {
                            "description": "SourceFile is the name need to be renamed.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "file-replace": {
                        "type": "object",
                        "properties": {
                          "dest-string": {
                            "description": "DestStr is the destination string of the file.",
                            "type": "string"
                          },
                          "file-name": {
                            "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                            "type": "string"
                          },
                          "line": {
                            "description": "Line is the line number of the file to be replaced.",
                            "type": "integer"
                          },
                          "origin-string": {
                            "description": "OriginStr is the origin string of the file.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "http-abort": {
                        "type": "object",
                        "required": [
                          "proxy_ports",
                          "target"
                        ],
                        "properties": {
                          "code": {
                            "description": "Code is a rule to select target by http status code in response",
                            "type": "string"
                          },
                          "method": {
                            "description": "HTTP method",
                            "type": "string"
                          },
                          "path": {
                            "description": "Match path of Uri with wildcard matches",
                            "type": "string"
                          },
                          "port": {
                            "description": "The TCP port that the target service listens on",
                            "type": "integer",
                            "format": "int32"
                          },
                          "proxy_ports": {
                            "description": "Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "target": {
                            "description": "HTTP target: Request or Response",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "http-config": {
                        "type": "object",
                        "properties": {
                          "file_path": {
                            "description": "The config file path",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "http-delay": {
                        "type": "object",
                        "required": [
                          "delay",
                          "proxy_ports",
                          "target"
                        ],
                        "properties": {
                          "code": {
                            "description": "Code is a rule to select target by http status code in response",
                            "type": "string"
                          },
                          "delay": {
                            "description": "Delay represents the delay of the target request/response",
                            "type": "string"
                          },
                          "method": {
                            "description": "HTTP method",
                            "type": "string"
                          },
                          "path": {
                            "description": "Match path of Uri with wildcard matches",
                            "type": "string"
                          },
                          "port": {
                            "description": "The TCP port that the target service listens on",
                            "type": "integer",
                            "format": "int32"
                          },
                          "proxy_ports": {
                            "description": "Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports",
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "target": {
                            "description": "HTTP target: Request or Response",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "http-request": {
                        "description": "used for HTTP request, now only support GET",
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "The number of requests to send",
                            "type": "integer"
                          },
                          "enable-conn-pool": {
                            "description": "Enable connection pool",
                            "type": "boolean"
                          },
                          "url": {
                            "description": "Request to send\"",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvm-exception": {
                        "type": "object",
                        "properties": {
                          "class": {
                            "description": "Java class",
                            "type": "string"
                          },
                          "exception": {
                            "description": "the exception which needs to throw for action `exception`",
                            "type": "string"
                          },
                          "method": {
                            "description": "the method in Java class",
                            "type": "string"
                          },
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvm-gc": {
                        "type": "object",
                        "properties": {
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvm-latency": {
                        "type": "object",
                        "properties": {
                          "class": {
                            "description": "Java class",
                            "type": "string"
                          },
                          "latency": {
                            "description": "the latency duration for action 'latency', unit ms",
                            "type": "integer"
                          },
                          "method": {
                            "description": "the method in Java class",
                            "type": "string"
                          },
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvm-mysql": {
                        "type": "object",
                        "properties": {
                          "database": {
                            "description": "the match database\ndefault value is \"\", means match all database",
                            "type": "string"
                          },
                          "exception": {
                            "description": "The exception which needs to throw for action `exception`\nor the exception message needs to throw in action `mysql`",
                            "type": "string"
                          },
                          "latency": {
                            "description": "The latency duration for action 'latency'\nor the latency duration in action `mysql`",
                            "type": "integer"
                          },
                          "mysqlConnectorVersion": {
                            "description": "the version of mysql-connector-java, only support 5.X.X(set to \"5\") and 8.X.X(set to \"8\") now",
                            "type": "string"
                          },
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          },
                          "sqlType": {
                            "description": "the match sql type\ndefault value is \"\", means match all SQL type.\nThe value can be 'select', 'insert', 'update', 'delete', 'replace'.",
                            "type": "string"
                          },
                          "table": {
                            "description": "the match table\ndefault value is \"\", means match all table",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvm-return": {
                        "type": "object",
                        "properties": {
                          "class": {
                            "description": "Java class",
                            "type": "string"
                          },
                          "method": {
                            "description": "the method in Java class",
                            "type": "string"
                          },
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          },
                          "value": {
                            "description": "the return value for action 'return'",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvm-rule-data": {
                        "type": "object",
                        "properties": {
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          },
                          "rule-data": {
                            "description": "RuleData used to save the rule file's data, will use it when recover",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvm-stress": {
                        "type": "object",
                        "properties": {
                          "cpu-count": {
                            "description": "the CPU core number need to use, only set it when action is stress",
                            "type": "integer"
                          },
                          "mem-type": {
                            "description": "the memory type need to locate, only set it when action is stress, the value can be 'stack' or 'heap'",
                            "type": "string"
                          },
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kafka-fill": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "description": "The host of kafka server",
                            "type": "string"
                          },
                          "maxBytes": {
                            "description": "The max bytes to fill",
                            "type": "integer",
                            "format": "int64"
                          },
                          "messageSize": {
                            "description": "The size of each message",
                            "type": "integer"
                          },
                          "password": {
                            "description": "The password of kafka client",
                            "type": "string"
                          },
                          "port": {
                            "description": "The port of kafka server",
                            "type": "integer"
                          },
                          "reloadCommand": {
                            "description": "The command to reload kafka config",
                            "type": "string"
                          },
                          "topic": {
                            "description": "The topic to attack",
                            "type": "string"
                          },
                          "username": {
                            "description": "The username of kafka client",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kafka-flood": {
                        "type": "object",
                        "properties": {
                          "host": {
                            "description": "The host of kafka server",
                            "type": "string"
                          },
                          "messageSize": {
                            "description": "The size of each message",
                            "type": "integer"
                          },
                          "password": {
                            "description": "The password of kafka client",
                            "type": "string"
                          },
                          "port": {
                            "description": "The port of kafka server",
                            "type": "integer"
                          },
                          "threads": {
                            "description": "The number of worker threads",
                            "type": "integer"
                          },
                          "topic": {
                            "description": "The topic to attack",
                            "type": "string"
                          },
                          "username": {
                            "description": "The username of kafka client",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kafka-io": {
                        "type": "object",
                        "properties": {
                          "configFile": {
                            "description": "The path of server config",
                            "type": "string"
                          },
                          "nonReadable": {
                            "description": "Make kafka cluster non-readable",
                            "type": "boolean"
                          },
                          "nonWritable": {
                            "description": "Make kafka cluster non-writable",
                            "type": "boolean"
                          },
                          "topic": {
                            "description": "The topic to attack",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "network-bandwidth": {
                        "type": "object",
                        "required": [
                          "buffer",
                          "limit",
                          "rate"
                        ],
                        "properties": {
                          "buffer": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                          },
                          "device": {
                            "type": "string"
                          },
                          "hostname": {
                            "type": "string"
                          },
                          "ip-address": {
                            "type": "string"
                          },
                          "limit": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                          },
                          "minburst": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "peakrate": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "rate": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-corrupt": {
                        "type": "object",
                        "properties": {
                          "correlation": {
                            "description": "correlation is percentage (10 is 10%)",
                            "type": "string"
                          },
                          "device": {
                            "description": "the network interface to impact",
                            "type": "string"
                          },
                          "egress-port": {
                            "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "only impact traffic to these hostnames",
                            "type": "string"
                          },
                          "ip-address": {
                            "description": "only impact egress traffic to these IP addresses",
                            "type": "string"
                          },
                          "ip-protocol": {
                            "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                            "type": "string"
                          },
                          "percent": {
                            "description": "percentage of packets to corrupt (10 is 10%)",
                            "type": "string"
                          },
                          "source-port": {
                            "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-delay": {
                        "type": "object",
                        "properties": {
                          "accept-tcp-flags": {
                            "description": "only the packet which match the tcp flag can be accepted, others will be dropped.\nonly set when the IPProtocol is tcp, used for partition.",
                            "type": "string"
                          },
                          "correlation": {
                            "description": "correlation is percentage (10 is 10%)",
                            "type": "string"
                          },
                          "device": {
                            "description": "the network interface to impact",
                            "type": "string"
                          },
                          "egress-port": {
                            "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "only impact traffic to these hostnames",
                            "type": "string"
                          },
                          "ip-address": {
                            "description": "only impact egress traffic to these IP addresses",
                            "type": "string"
                          },
                          "ip-protocol": {
                            "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                            "type": "string"
                          },
                          "jitter": {
                            "description": "jitter time, time units: ns, us (or µs), ms, s, m, h.",
                            "type": "string"
                          },
                          "latency": {
                            "description": "delay egress time, time units: ns, us (or µs), ms, s, m, h.",
                            "type": "string"
                          },
                          "source-port": {
                            "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-dns": {
                        "type": "object",
                        "properties": {
                          "dns-domain-name": {
                            "description": "map this host to specified IP",
                            "type": "string"
                          },
                          "dns-ip": {
                            "description": "map specified host to this IP address",
                            "type": "string"
                          },
                          "dns-server": {
                            "description": "update the DNS server in /etc/resolv.conf with this value",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-down": {
                        "type": "object",
                        "properties": {
                          "device": {
                            "description": "The network interface to impact",
                            "type": "string"
                          },
                          "duration": {
                            "description": "NIC down time, time units: ns, us (or µs), ms, s, m, h.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-duplicate": {
                        "type": "object",
                        "properties": {
                          "correlation": {
                            "description": "correlation is percentage (10 is 10%)",
                            "type": "string"
                          },
                          "device": {
                            "description": "the network interface to impact",
                            "type": "string"
                          },
                          "egress-port": {
                            "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "only impact traffic to these hostnames",
                            "type": "string"
                          },
                          "ip-address": {
                            "description": "only impact egress traffic to these IP addresses",
                            "type": "string"
                          },
                          "ip-protocol": {
                            "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                            "type": "string"
                          },
                          "percent": {
                            "description": "percentage of packets to duplicate (10 is 10%)",
                            "type": "string"
                          },
                          "source-port": {
                            "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-flood": {
                        "type": "object",
                        "required": [
                          "duration",
                          "rate"
                        ],
                        "properties": {
                          "duration": {
                            "description": "The number of seconds to run the iperf test",
                            "type": "string"
                          },
                          "ip-address": {
                            "description": "Generate traffic to this IP address",
                            "type": "string"
                          },
                          "parallel": {
                            "description": "The number of iperf parallel client threads to run",
                            "type": "integer",
                            "format": "int32"
                          },
                          "port": {
                            "description": "Generate traffic to this port on the IP address",
                            "type": "string"
                          },
                          "rate": {
                            "description": "The speed of network traffic, allows bps, kbps, mbps, gbps, tbps unit. bps means bytes per second",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-loss": {
                        "type": "object",
                        "properties": {
                          "correlation": {
                            "description": "correlation is percentage (10 is 10%)",
                            "type": "string"
                          },
                          "device": {
                            "description": "the network interface to impact",
                            "type": "string"
                          },
                          "egress-port": {
                            "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "only impact traffic to these hostnames",
                            "type": "string"
                          },
                          "ip-address": {
                            "description": "only impact egress traffic to these IP addresses",
                            "type": "string"
                          },
                          "ip-protocol": {
                            "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                            "type": "string"
                          },
                          "percent": {
                            "description": "percentage of packets to loss (10 is 10%)",
                            "type": "string"
                          },
                          "source-port": {
                            "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "network-partition": {
                        "type": "object",
                        "properties": {
                          "accept-tcp-flags": {
                            "description": "only the packet which match the tcp flag can be accepted, others will be dropped.\nonly set when the IPProtocol is tcp, used for partition.",
                            "type": "string"
                          },
                          "device": {
                            "description": "the network interface to impact",
                            "type": "string"
                          },
                          "direction": {
                            "description": "specifies the partition direction, values can be 'from', 'to'.\n'from' means packets coming from the 'IPAddress' or 'Hostname' and going to your server,\n'to' means packets originating from your server and going to the 'IPAddress' or 'Hostname'.",
                            "type": "string"
                          },
                          "hostname": {
                            "description": "only impact traffic to these hostnames",
                            "type": "string"
                          },
                          "ip-address": {
                            "description": "only impact egress traffic to these IP addresses",
                            "type": "string"
                          },
                          "ip-protocol": {
                            "description": "only impact egress traffic to these IP addresses",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "process": {
                        "type": "object",
                        "properties": {
                          "process": {
                            "description": "the process name or the process ID",
                            "type": "string"
                          },
                          "recoverCmd": {
                            "description": "the command to be run when recovering experiment",
                            "type": "string"
                          },
                          "signal": {
                            "description": "the signal number to send",
                            "type": "integer"
                          }
                        },
                        "additionalProperties": false
                      },
                      "redis-cacheLimit": {
                        "type": "object",
                        "properties": {
                          "addr": {
                            "description": "The adress of Redis server",
                            "type": "string"
                          },
                          "cacheSize": {
                            "description": "The size of `maxmemory`",
                            "type": "string"
                          },
                          "password": {
                            "description": "The password of Redis server",
                            "type": "string"
                          },
                          "percent": {
                            "description": "Specifies maxmemory as a percentage of the original value",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "redis-expiration": {
                        "type": "object",
                        "properties": {
                          "addr": {
                            "description": "The adress of Redis server",
                            "type": "string"
                          },
                          "expiration": {
                            "description": "The expiration of the keys",
                            "type": "string"
                          },
                          "key": {
                            "description": "The keys to be expired",
                            "type": "string"
                          },
                          "option": {
                            "description": "Additional options for `expiration`",
                            "type": "string"
                          },
                          "password": {
                            "description": "The password of Redis server",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "redis-penetration": {
                        "type": "object",
                        "properties": {
                          "addr": {
                            "description": "The adress of Redis server",
                            "type": "string"
                          },
                          "password": {
                            "description": "The password of Redis server",
                            "type": "string"
                          },
                          "requestNum": {
                            "description": "The number of requests to be sent",
                            "type": "integer"
                          }
                        },
                        "additionalProperties": false
                      },
                      "redis-restart": {
                        "type": "object",
                        "properties": {
                          "addr": {
                            "description": "The adress of Redis server",
                            "type": "string"
                          },
                          "conf": {
                            "description": "The path of Sentinel conf",
                            "type": "string"
                          },
                          "flushConfig": {
                            "description": "The control flag determines whether to flush config",
                            "type": "boolean"
                          },
                          "password": {
                            "description": "The password of Redis server",
                            "type": "string"
                          },
                          "redisPath": {
                            "description": "The path of `redis-server` command-line tool",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "redis-stop": {
                        "type": "object",
                        "properties": {
                          "addr": {
                            "description": "The adress of Redis server",
                            "type": "string"
                          },
                          "conf": {
                            "description": "The path of Sentinel conf",
                            "type": "string"
                          },
                          "flushConfig": {
                            "description": "The control flag determines whether to flush config",
                            "type": "boolean"
                          },
                          "password": {
                            "description": "The password of Redis server",
                            "type": "string"
                          },
                          "redisPath": {
                            "description": "The path of `redis-server` command-line tool",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select physical machines that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "physicalMachines": {
                            "description": "PhysicalMachines is a map of string keys and a set values that used to select physical machines.\nThe key defines the namespace which physical machine belong,\nand each value is a set of physical machine names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "stress-cpu": {
                        "type": "object",
                        "properties": {
                          "load": {
                            "description": "specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100 is full loading.",
                            "type": "integer"
                          },
                          "options": {
                            "description": "extend stress-ng options",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "workers": {
                            "description": "specifies N workers to apply the stressor.",
                            "type": "integer"
                          }
                        },
                        "additionalProperties": false
                      },
                      "stress-mem": {
                        "type": "object",
                        "properties": {
                          "options": {
                            "description": "extend stress-ng options",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "size": {
                            "description": "specifies N bytes consumed per vm worker, default is the total available memory.\nOne can specify the size as % of total available memory or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB..",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "uid": {
                        "description": "the experiment ID",
                        "type": "string"
                      },
                      "user_defined": {
                        "type": "object",
                        "properties": {
                          "attackCmd": {
                            "description": "The command to be executed when attack",
                            "type": "string"
                          },
                          "recoverCmd": {
                            "description": "The command to be executed when recover",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of physical machines to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of physical machines the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      },
                      "vm": {
                        "type": "object",
                        "properties": {
                          "vm-name": {
                            "description": "The name of the VM to be injected",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "podChaos": {
                    "description": "PodChaosSpec defines the attributes that a user creates on a chaos experiment about pods.",
                    "type": "object",
                    "required": [
                      "action",
                      "mode",
                      "selector"
                    ],
                    "properties": {
                      "action": {
                        "description": "Action defines the specific pod chaos action.\nSupported action: pod-kill / pod-failure / container-kill\nDefault action: pod-kill",
                        "type": "string",
                        "enum": [
                          "pod-kill",
                          "pod-failure",
                          "container-kill"
                        ]
                      },
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action.\nIt is required when the action is `PodFailureAction`.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                        "type": "string"
                      },
                      "gracePeriod": {
                        "description": "GracePeriod is used in pod-kill action. It represents the duration in seconds before the pod should be deleted.\nValue must be non-negative integer. The default value is zero that indicates delete immediately.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "schedule": {
                    "description": "Schedule describe the Schedule(describing scheduled chaos) to be injected with chaos nodes. Only used when Type is TypeSchedule.",
                    "type": "object",
                    "required": [
                      "schedule",
                      "type"
                    ],
                    "properties": {
                      "awsChaos": {
                        "description": "AWSChaosSpec is the content of the specification for an AWSChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "awsRegion",
                          "ec2Instance"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific aws chaos action.\nSupported action: ec2-stop / ec2-restart / detach-volume\nDefault action: ec2-stop",
                            "type": "string",
                            "enum": [
                              "ec2-stop",
                              "ec2-restart",
                              "detach-volume"
                            ]
                          },
                          "awsRegion": {
                            "description": "AWSRegion defines the region of aws.",
                            "type": "string"
                          },
                          "deviceName": {
                            "description": "DeviceName indicates the name of the device.\nNeeded in detach-volume.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action.",
                            "type": "string"
                          },
                          "ec2Instance": {
                            "description": "Ec2Instance indicates the ID of the ec2 instance.",
                            "type": "string"
                          },
                          "endpoint": {
                            "description": "Endpoint indicates the endpoint of the aws server. Just used it in test now.",
                            "type": "string"
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "SecretName defines the name of kubernetes secret.",
                            "type": "string"
                          },
                          "volumeID": {
                            "description": "EbsVolume indicates the ID of the EBS volume.\nNeeded in detach-volume.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "azureChaos": {
                        "description": "AzureChaosSpec is the content of the specification for an AzureChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "resourceGroupName",
                          "subscriptionID",
                          "vmName"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific azure chaos action.\nSupported action: vm-stop / vm-restart / disk-detach\nDefault action: vm-stop",
                            "type": "string",
                            "enum": [
                              "vm-stop",
                              "vm-restart",
                              "disk-detach"
                            ]
                          },
                          "diskName": {
                            "description": "DiskName indicates the name of the disk.\nNeeded in disk-detach.",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action.",
                            "type": "string"
                          },
                          "lun": {
                            "description": "LUN indicates the Logical Unit Number of the data disk.\nNeeded in disk-detach.",
                            "type": "integer"
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "resourceGroupName": {
                            "description": "ResourceGroupName defines the name of ResourceGroup",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "SecretName defines the name of kubernetes secret. It is used for Azure credentials.",
                            "type": "string"
                          },
                          "subscriptionID": {
                            "description": "SubscriptionID defines the id of Azure subscription.",
                            "type": "string"
                          },
                          "vmName": {
                            "description": "VMName defines the name of Virtual Machine",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "blockChaos": {
                        "description": "BlockChaosSpec is the content of the specification for a BlockChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "mode",
                          "selector",
                          "volumeName"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific block chaos action.\nSupported action: delay",
                            "type": "string",
                            "enum": [
                              "delay"
                            ]
                          },
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "delay": {
                            "description": "Delay defines the delay distribution.",
                            "type": "object",
                            "properties": {
                              "correlation": {
                                "type": "string"
                              },
                              "jitter": {
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency defines the latency of every io request.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action.",
                            "type": "string"
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          },
                          "volumeName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "concurrencyPolicy": {
                        "type": "string",
                        "enum": [
                          "Forbid",
                          "Allow"
                        ]
                      },
                      "dnsChaos": {
                        "description": "DNSChaosSpec defines the desired state of DNSChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "mode",
                          "selector"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific DNS chaos action.\nSupported action: error, random\nDefault action: error",
                            "type": "string",
                            "enum": [
                              "error",
                              "random"
                            ]
                          },
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action",
                            "type": "string"
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "patterns": {
                            "description": "Choose which domain names to take effect, support the placeholder ? and wildcard *, or the Specified domain name.\nNote:\n     1. The wildcard * must be at the end of the string. For example, chaos-*.org is invalid.\n     2. if the patterns is empty, will take effect on all the domain names.\nFor example:\n\t\tThe value is [\"google.com\", \"github.*\", \"chaos-mes?.org\"],\n\t\twill take effect on \"google.com\", \"github.com\" and \"chaos-mesh.org\"",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "gcpChaos": {
                        "description": "GCPChaosSpec is the content of the specification for a GCPChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "instance",
                          "project",
                          "zone"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific gcp chaos action.\nSupported action: node-stop / node-reset / disk-loss\nDefault action: node-stop",
                            "type": "string",
                            "enum": [
                              "node-stop",
                              "node-reset",
                              "disk-loss"
                            ]
                          },
                          "deviceNames": {
                            "description": "The device name of disks to detach.\nNeeded in disk-loss.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action.",
                            "type": "string"
                          },
                          "instance": {
                            "description": "Instance defines the name of the instance",
                            "type": "string"
                          },
                          "project": {
                            "description": "Project defines the ID of gcp project.",
                            "type": "string"
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "secretName": {
                            "description": "SecretName defines the name of kubernetes secret. It is used for GCP credentials.",
                            "type": "string"
                          },
                          "zone": {
                            "description": "Zone defines the zone of gcp project.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "historyLimit": {
                        "type": "integer",
                        "minimum": 1
                      },
                      "httpChaos": {
                        "type": "object",
                        "required": [
                          "mode",
                          "selector",
                          "target"
                        ],
                        "properties": {
                          "abort": {
                            "description": "Abort is a rule to abort a http session.",
                            "type": "boolean"
                          },
                          "code": {
                            "description": "Code is a rule to select target by http status code in response.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "delay": {
                            "description": "Delay represents the delay of the target request/response.\nA duration string is a possibly unsigned sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action.",
                            "type": "string"
                          },
                          "method": {
                            "description": "Method is a rule to select target by http method in request.",
                            "type": "string"
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "patch": {
                            "description": "Patch is a rule to patch some contents in target.",
                            "type": "object",
                            "properties": {
                              "body": {
                                "description": "Body is a rule to patch message body of target.",
                                "type": "object",
                                "required": [
                                  "type",
                                  "value"
                                ],
                                "properties": {
                                  "type": {
                                    "description": "Type represents the patch type, only support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value is the patch contents.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "headers": {
                                "description": "Headers is a rule to append http headers of target.\nFor example: `[[\"Set-Cookie\", \"\u003cone cookie\u003e\"], [\"Set-Cookie\", \"\u003canother cookie\u003e\"]]`.",
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "queries": {
                                "description": "Queries is a rule to append uri queries of target(Request only).\nFor example: `[[\"foo\", \"bar\"], [\"foo\", \"unknown\"]]`.",
                                "type": "array",
                                "items": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "path": {
                            "description": "Path is a rule to select target by uri path in http request.",
                            "type": "string"
                          },
                          "port": {
                            "description": "Port represents the target port to be proxy of.",
                            "type": "integer",
                            "format": "int32"
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "replace": {
                            "description": "Replace is a rule to replace some contents in target.",
                            "type": "object",
                            "properties": {
                              "body": {
                                "description": "Body is a rule to replace http message body in target.",
                                "type": "string",
                                "format": "byte"
                              },
                              "code": {
                                "description": "Code is a rule to replace http status code in response.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "headers": {
                                "description": "Headers is a rule to replace http headers of target.\nThe key-value pairs represent header name and header value pairs.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "method": {
                                "description": "Method is a rule to replace http method in request.",
                                "type": "string"
                              },
                              "path": {
                                "description": "Path is rule to to replace uri path in http request.",
                                "type": "string"
                              },
                              "queries": {
                                "description": "Queries is a rule to replace uri queries in http request.\nFor example, with value `{ \"foo\": \"unknown\" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "request_headers": {
                            "description": "RequestHeaders is a rule to select target by http headers in request.\nThe key-value pairs represent header name and header value pairs.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "response_headers": {
                            "description": "ResponseHeaders is a rule to select target by http headers in response.\nThe key-value pairs represent header name and header value pairs.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "target": {
                            "description": "Target is the object to be selected and injected.",
                            "type": "string",
                            "enum": [
                              "Request",
                              "Response"
                            ]
                          },
                          "tls": {
                            "description": "TLS is the tls config,\nwill override PodHttpChaos if there are multiple HTTPChaos experiments are applied",
                            "type": "object",
                            "required": [
                              "certName",
                              "keyName",
                              "secretName",
                              "secretNamespace"
                            ],
                            "properties": {
                              "caName": {
                                "description": "CAName represents the data name of ca file in secret, `ca.crt` for example",
                                "type": "string"
                              },
                              "certName": {
                                "description": "CertName represents the data name of cert file in secret, `tls.crt` for example",
                                "type": "string"
                              },
                              "keyName": {
                                "description": "KeyName represents the data name of key file in secret, `tls.key` for example",
                                "type": "string"
                              },
                              "secretName": {
                                "description": "SecretName represents the name of required secret resource",
                                "type": "string"
                              },
                              "secretNamespace": {
                                "description": "SecretNamespace represents the namespace of required secret resource",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "ioChaos": {
                        "description": "IOChaosSpec defines the desired state of IOChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "mode",
                          "selector",
                          "volumePath"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific pod chaos action.\nSupported action: latency / fault / attrOverride / mistake",
                            "type": "string",
                            "enum": [
                              "latency",
                              "fault",
                              "attrOverride",
                              "mistake"
                            ]
                          },
                          "attr": {
                            "description": "Attr defines the overrided attribution",
                            "type": "object",
                            "properties": {
                              "atime": {
                                "description": "Timespec represents a time",
                                "type": "object",
                                "required": [
                                  "nsec",
                                  "sec"
                                ],
                                "properties": {
                                  "nsec": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "sec": {
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "blocks": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "ctime": {
                                "description": "Timespec represents a time",
                                "type": "object",
                                "required": [
                                  "nsec",
                                  "sec"
                                ],
                                "properties": {
                                  "nsec": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "sec": {
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "gid": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "ino": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "kind": {
                                "description": "FileType represents type of file",
                                "type": "string"
                              },
                              "mtime": {
                                "description": "Timespec represents a time",
                                "type": "object",
                                "required": [
                                  "nsec",
                                  "sec"
                                ],
                                "properties": {
                                  "nsec": {
                                    "type": "integer",
                                    "format": "int64"
                                  },
                                  "sec": {
                                    "type": "integer",
                                    "format": "int64"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "nlink": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "perm": {
                                "type": "integer"
                              },
                              "rdev": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "size": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "uid": {
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "delay": {
                            "description": "Delay defines the value of I/O chaos action delay.\nA delay string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action.\nIt is required when the action is `PodFailureAction`.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                            "type": "string"
                          },
                          "errno": {
                            "description": "Errno defines the error code that returned by I/O action.\nrefer to: https://www-numi.fnal.gov/offline_software/srt_public_context/WebDocs/Errors/unix_system_errors.html",
                            "type": "integer",
                            "format": "int32"
                          },
                          "methods": {
                            "description": "Methods defines the I/O methods for injecting I/O chaos action.\ndefault: all I/O methods.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "mistake": {
                            "description": "Mistake defines what types of incorrectness are injected to IO operations",
                            "type": "object",
                            "properties": {
                              "filling": {
                                "description": "Filling determines what is filled in the mistake data.",
                                "type": "string",
                                "enum": [
                                  "zero",
                                  "random"
                                ]
                              },
                              "maxLength": {
                                "description": "Max length of each wrong data segment in bytes",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1
                              },
                              "maxOccurrences": {
                                "description": "There will be [1, MaxOccurrences] segments of wrong data.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "path": {
                            "description": "Path defines the path of files for injecting I/O chaos action.",
                            "type": "string"
                          },
                          "percent": {
                            "description": "Percent defines the percentage of injection errors and provides a number from 0-100.\ndefault: 100.",
                            "type": "integer",
                            "default": 100
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          },
                          "volumePath": {
                            "description": "VolumePath represents the mount path of injected volume",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "jvmChaos": {
                        "description": "JVMChaosSpec defines the desired state of JVMChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "mode",
                          "selector"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific jvm chaos action.\nSupported action: latency;return;exception;stress;gc;ruleData",
                            "type": "string",
                            "enum": [
                              "latency",
                              "return",
                              "exception",
                              "stress",
                              "gc",
                              "ruleData",
                              "mysql"
                            ]
                          },
                          "class": {
                            "description": "Java class",
                            "type": "string"
                          },
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "cpuCount": {
                            "description": "the CPU core number needs to use, only set it when action is stress",
                            "type": "integer"
                          },
                          "database": {
                            "description": "the match database\ndefault value is \"\", means match all database",
                            "type": "string"
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action",
                            "type": "string"
                          },
                          "exception": {
                            "description": "the exception which needs to throw for action `exception`\nor the exception message needs to throw in action `mysql`",
                            "type": "string"
                          },
                          "latency": {
                            "description": "the latency duration for action 'latency', unit ms\nor the latency duration in action `mysql`",
                            "type": "integer"
                          },
                          "memType": {
                            "description": "the memory type needs to locate, only set it when action is stress, the value can be 'stack' or 'heap'",
                            "type": "string"
                          },
                          "method": {
                            "description": "the method in Java class",
                            "type": "string"
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "mysqlConnectorVersion": {
                            "description": "the version of mysql-connector-java, only support 5.X.X(set to \"5\") and 8.X.X(set to \"8\") now",
                            "type": "string"
                          },
                          "name": {
                            "description": "byteman rule name, should be unique, and will generate one if not set",
                            "type": "string"
                          },
                          "pid": {
                            "description": "the pid of Java process which needs to attach",
                            "type": "integer"
                          },
                          "port": {
                            "description": "the port of agent server, default 9277",
                            "type": "integer",
                            "format": "int32"
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "returnValue": {
                            "description": "the return value for action 'return'",
                            "type": "string"
                          },
                          "ruleData": {
                            "description": "the byteman rule's data for action 'ruleData'",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "sqlType": {
                            "description": "the match sql type\ndefault value is \"\", means match all SQL type.\nThe value can be 'select', 'insert', 'update', 'delete', 'replace'.",
                            "type": "string"
                          },
                          "table": {
                            "description": "the match table\ndefault value is \"\", means match all table",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "kernelChaos": {
                        "description": "KernelChaosSpec defines the desired state of KernelChaos",
                        "type": "object",
                        "required": [
                          "failKernRequest",
                          "mode",
                          "selector"
                        ],
                        "properties": {
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action",
                            "type": "string"
                          },
                          "failKernRequest": {
                            "description": "FailKernRequest defines the request of kernel injection",
                            "type": "object",
                            "required": [
                              "failtype"
                            ],
                            "properties": {
                              "callchain": {
                                "description": "Callchain indicate a special call chain, such as:\n    ext4_mount\n      -\u003e mount_subtree\n         -\u003e ...\n            -\u003e should_failslab\nWith an optional set of predicates and an optional set of\nparameters, which used with predicates. You can read call chan\nand predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples\nto learn more.\nIf no special call chain, just keep Callchain empty, which means it will fail at any call chain\nwith slab alloc (eg: kmalloc).",
                                "type": "array",
                                "items": {
                                  "description": "Frame defines the function signature and predicate in function's body",
                                  "type": "object",
                                  "properties": {
                                    "funcname": {
                                      "description": "Funcname can be find from kernel source or `/proc/kallsyms`, such as `ext4_mount`",
                                      "type": "string"
                                    },
                                    "parameters": {
                                      "description": "Parameters is used with predicate, for example, if you want to inject slab error\nin `d_alloc_parallel(struct dentry *parent, const struct qstr *name)` with a special\nname `bananas`, you need to set it to `struct dentry *parent, const struct qstr *name`\notherwise omit it.",
                                      "type": "string"
                                    },
                                    "predicate": {
                                      "description": "Predicate will access the arguments of this Frame, example with Parameters's, you can\nset it to `STRNCMP(name-\u003ename, \"bananas\", 8)` to make inject only with it, or omit it\nto inject for all d_alloc_parallel call chain.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "failtype": {
                                "description": "FailType indicates what to fail, can be set to '0' / '1' / '2'\nIf `0`, indicates slab to fail (should_failslab)\nIf `1`, indicates alloc_page to fail (should_fail_alloc_page)\nIf `2`, indicates bio to fail (should_fail_bio)\nYou can read:\n  1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html\n  2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt\nto learn more",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 2,
                                "minimum": 0
                              },
                              "headers": {
                                "description": "Headers indicates the appropriate kernel headers you need.\nEg: \"linux/mmzone.h\", \"linux/blkdev.h\" and so on",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "probability": {
                                "description": "Probability indicates the fails with probability.\nIf you want 1%, please set this field with 1.",
                                "type": "integer",
                                "format": "int32",
                                "maximum": 100,
                                "minimum": 0
                              },
                              "times": {
                                "description": "Times indicates the max times of fails.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              }
                            },
                            "additionalProperties": false
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "networkChaos": {
                        "description": "NetworkChaosSpec defines the desired state of NetworkChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "mode",
                          "selector"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific network chaos action.\nSupported action: partition, netem, delay, loss, duplicate, corrupt\nDefault action: delay",
                            "type": "string",
                            "enum": [
                              "netem",
                              "delay",
                              "loss",
                              "duplicate",
                              "corrupt",
                              "partition",
                              "bandwidth"
                            ]
                          },
                          "bandwidth": {
                            "description": "Bandwidth represents the detail about bandwidth control action",
                            "type": "object",
                            "required": [
                              "buffer",
                              "limit",
                              "rate"
                            ],
                            "properties": {
                              "buffer": {
                                "description": "Buffer is the maximum amount of bytes that tokens can be available for instantaneously.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1
                              },
                              "limit": {
                                "description": "Limit is the number of bytes that can be queued waiting for tokens to become available.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1
                              },
                              "minburst": {
                                "description": "Minburst specifies the size of the peakrate bucket. For perfect\naccuracy, should be set to the MTU of the interface.  If a\npeakrate is needed, but some burstiness is acceptable, this\nsize can be raised. A 3000 byte minburst allows around 3mbit/s\nof peakrate, given 1000 byte packets.",
                                "type": "integer",
                                "format": "int32",
                                "minimum": 0
                              },
                              "peakrate": {
                                "description": "Peakrate is the maximum depletion rate of the bucket.\nThe peakrate does not need to be set, it is only necessary\nif perfect millisecond timescale shaping is required.",
                                "type": "integer",
                                "format": "int64",
                                "minimum": 0
                              },
                              "rate": {
                                "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "corrupt": {
                            "description": "Corrupt represents the detail about corrupt action",
                            "type": "object",
                            "required": [
                              "corrupt"
                            ],
                            "properties": {
                              "correlation": {
                                "type": "string"
                              },
                              "corrupt": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "delay": {
                            "description": "Delay represents the detail about delay action",
                            "type": "object",
                            "required": [
                              "latency"
                            ],
                            "properties": {
                              "correlation": {
                                "type": "string"
                              },
                              "jitter": {
                                "type": "string",
                                "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
                              },
                              "latency": {
                                "type": "string",
                                "pattern": "^[0-9]+(\\.[0-9]+)?(ns|us|ms|s|m|h)$"
                              },
                              "reorder": {
                                "description": "ReorderSpec defines details of packet reorder.",
                                "type": "object",
                                "required": [
                                  "gap",
                                  "reorder"
                                ],
                                "properties": {
                                  "correlation": {
                                    "type": "string"
                                  },
                                  "gap": {
                                    "type": "integer"
                                  },
                                  "reorder": {
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "device": {
                            "description": "Device represents the network device to be affected.",
                            "type": "string"
                          },
                          "direction": {
                            "description": "Direction represents the direction, this applies on netem and network partition action",
                            "type": "string",
                            "default": "to",
                            "enum": [
                              "to",
                              "from",
                              "both"
                            ]
                          },
                          "duplicate": {
                            "description": "DuplicateSpec represents the detail about loss action",
                            "type": "object",
                            "required": [
                              "duplicate"
                            ],
                            "properties": {
                              "correlation": {
                                "type": "string"
                              },
                              "duplicate": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action",
                            "type": "string"
                          },
                          "externalTargets": {
                            "description": "ExternalTargets represents network targets outside k8s",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "loss": {
                            "description": "Loss represents the detail about loss action",
                            "type": "object",
                            "required": [
                              "loss"
                            ],
                            "properties": {
                              "correlation": {
                                "type": "string"
                              },
                              "loss": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "rate": {
                            "description": "Rate represents the detail about rate control action",
                            "type": "object",
                            "required": [
                              "rate"
                            ],
                            "properties": {
                              "rate": {
                                "description": "Rate is the speed knob. Allows bit, kbit, mbit, gbit, tbit, bps, kbps, mbps, gbps, tbps unit. bps means bytes per second.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "target": {
                            "description": "Target represents network target, this applies on netem and network partition action",
                            "type": "object",
                            "required": [
                              "mode",
                              "selector"
                            ],
                            "properties": {
                              "mode": {
                                "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                                "type": "string",
                                "enum": [
                                  "one",
                                  "all",
                                  "fixed",
                                  "fixed-percent",
                                  "random-max-percent"
                                ]
                              },
                              "selector": {
                                "description": "Selector is used to select pods that are used to inject chaos action.",
                                "type": "object",
                                "properties": {
                                  "annotationSelectors": {
                                    "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "expressionSelectors": {
                                    "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                    "type": "array",
                                    "items": {
                                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                      "type": "object",
                                      "required": [
                                        "key",
                                        "operator"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "key is the label key that the selector applies to.",
                                          "type": "string"
                                        },
                                        "operator": {
                                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                          "type": "string"
                                        },
                                        "values": {
                                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "fieldSelectors": {
                                    "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "labelSelectors": {
                                    "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "namespaces": {
                                    "description": "Namespaces is a set of namespace to which objects belong.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "nodeSelectors": {
                                    "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "nodes": {
                                    "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "podPhaseSelectors": {
                                    "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "pods": {
                                    "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "value": {
                                "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "targetDevice": {
                            "description": "TargetDevice represents the network device to be affected in target scope.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "physicalmachineChaos": {
                        "description": "PhysicalMachineChaosSpec defines the desired state of PhysicalMachineChaos",
                        "type": "object",
                        "required": [
                          "action",
                          "mode"
                        ],
                        "properties": {
                          "action": {
                            "description": "the subAction, generate automatically",
                            "type": "string",
                            "enum": [
                              "stress-cpu",
                              "stress-mem",
                              "disk-read-payload",
                              "disk-write-payload",
                              "disk-fill",
                              "network-corrupt",
                              "network-duplicate",
                              "network-loss",
                              "network-delay",
                              "network-partition",
                              "network-dns",
                              "network-bandwidth",
                              "network-flood",
                              "network-down",
                              "process",
                              "jvm-exception",
                              "jvm-gc",
                              "jvm-latency",
                              "jvm-return",
                              "jvm-stress",
                              "jvm-rule-data",
                              "jvm-mysql",
                              "clock",
                              "redis-expiration",
                              "redis-penetration",
                              "redis-cacheLimit",
                              "redis-restart",
                              "redis-stop",
                              "kafka-fill",
                              "kafka-flood",
                              "kafka-io",
                              "file-create",
                              "file-modify",
                              "file-delete",
                              "file-rename",
                              "file-append",
                              "file-replace",
                              "vm",
                              "user_defined"
                            ]
                          },
                          "address": {
                            "description": "DEPRECATED: Use Selector instead.\nOnly one of Address and Selector could be specified.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "clock": {
                            "type": "object",
                            "properties": {
                              "clock-ids-slice": {
                                "description": "the identifier of the particular clock on which to act.\nMore clock description in linux kernel can be found in man page of clock_getres, clock_gettime, clock_settime.\nMuti clock ids should be split with \",\"",
                                "type": "string"
                              },
                              "pid": {
                                "description": "the pid of target program.",
                                "type": "integer"
                              },
                              "time-offset": {
                                "description": "specifies the length of time offset.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "disk-fill": {
                            "type": "object",
                            "properties": {
                              "fill-by-fallocate": {
                                "description": "fill disk by fallocate",
                                "type": "boolean"
                              },
                              "path": {
                                "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                                "type": "string"
                              },
                              "size": {
                                "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "disk-read-payload": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                                "type": "string"
                              },
                              "payload-process-num": {
                                "description": "specifies the number of process work on writing, default 1, only 1-255 is valid value",
                                "type": "integer"
                              },
                              "size": {
                                "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "disk-write-payload": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "description": "specifies the location to fill data in. if path not provided,\npayload will read/write from/into a temp file, temp file will be deleted after writing",
                                "type": "string"
                              },
                              "payload-process-num": {
                                "description": "specifies the number of process work on writing, default 1, only 1-255 is valid value",
                                "type": "integer"
                              },
                              "size": {
                                "description": "specifies how many units of data will write into the file path. support unit: c=1, w=2, b=512, kB=1000,\nK=1024, MB=1000*1000, M=1024*1024, GB=1000*1000*1000, G=1024*1024*1024 BYTES. example : 1M | 512kB",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action",
                            "type": "string"
                          },
                          "file-append": {
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "Count is the number of times to append the data.",
                                "type": "integer"
                              },
                              "data": {
                                "description": "Data is the data for append.",
                                "type": "string"
                              },
                              "file-name": {
                                "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "file-create": {
                            "type": "object",
                            "properties": {
                              "dir-name": {
                                "description": "DirName is the directory name to create or delete.",
                                "type": "string"
                              },
                              "file-name": {
                                "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "file-delete": {
                            "type": "object",
                            "properties": {
                              "dir-name": {
                                "description": "DirName is the directory name to create or delete.",
                                "type": "string"
                              },
                              "file-name": {
                                "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "file-modify": {
                            "type": "object",
                            "properties": {
                              "file-name": {
                                "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                                "type": "string"
                              },
                              "privilege": {
                                "description": "Privilege is the file privilege to be set.",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "file-rename": {
                            "type": "object",
                            "properties": {
                              "dest-file": {
                                "description": "DestFile is the name to be renamed.",
                                "type": "string"
                              },
                              "source-file": {
                                "description": "SourceFile is the name need to be renamed.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "file-replace": {
                            "type": "object",
                            "properties": {
                              "dest-string": {
                                "description": "DestStr is the destination string of the file.",
                                "type": "string"
                              },
                              "file-name": {
                                "description": "FileName is the name of the file to be created, modified, deleted, renamed, or appended.",
                                "type": "string"
                              },
                              "line": {
                                "description": "Line is the line number of the file to be replaced.",
                                "type": "integer"
                              },
                              "origin-string": {
                                "description": "OriginStr is the origin string of the file.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "http-abort": {
                            "type": "object",
                            "required": [
                              "proxy_ports",
                              "target"
                            ],
                            "properties": {
                              "code": {
                                "description": "Code is a rule to select target by http status code in response",
                                "type": "string"
                              },
                              "method": {
                                "description": "HTTP method",
                                "type": "string"
                              },
                              "path": {
                                "description": "Match path of Uri with wildcard matches",
                                "type": "string"
                              },
                              "port": {
                                "description": "The TCP port that the target service listens on",
                                "type": "integer",
                                "format": "int32"
                              },
                              "proxy_ports": {
                                "description": "Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports",
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "target": {
                                "description": "HTTP target: Request or Response",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "http-config": {
                            "type": "object",
                            "properties": {
                              "file_path": {
                                "description": "The config file path",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "http-delay": {
                            "type": "object",
                            "required": [
                              "delay",
                              "proxy_ports",
                              "target"
                            ],
                            "properties": {
                              "code": {
                                "description": "Code is a rule to select target by http status code in response",
                                "type": "string"
                              },
                              "delay": {
                                "description": "Delay represents the delay of the target request/response",
                                "type": "string"
                              },
                              "method": {
                                "description": "HTTP method",
                                "type": "string"
                              },
                              "path": {
                                "description": "Match path of Uri with wildcard matches",
                                "type": "string"
                              },
                              "port": {
                                "description": "The TCP port that the target service listens on",
                                "type": "integer",
                                "format": "int32"
                              },
                              "proxy_ports": {
                                "description": "Composed with one of the port of HTTP connection, we will only attack HTTP connection with port inside proxy_ports",
                                "type": "array",
                                "items": {
                                  "type": "integer"
                                }
                              },
                              "target": {
                                "description": "HTTP target: Request or Response",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "http-request": {
                            "description": "used for HTTP request, now only support GET",
                            "type": "object",
                            "properties": {
                              "count": {
                                "description": "The number of requests to send",
                                "type": "integer"
                              },
                              "enable-conn-pool": {
                                "description": "Enable connection pool",
                                "type": "boolean"
                              },
                              "url": {
                                "description": "Request to send\"",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "jvm-exception": {
                            "type": "object",
                            "properties": {
                              "class": {
                                "description": "Java class",
                                "type": "string"
                              },
                              "exception": {
                                "description": "the exception which needs to throw for action `exception`",
                                "type": "string"
                              },
                              "method": {
                                "description": "the method in Java class",
                                "type": "string"
                              },
                              "pid": {
                                "description": "the pid of Java process which needs to attach",
                                "type": "integer"
                              },
                              "port": {
                                "description": "the port of agent server, default 9277",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "jvm-gc": {
                            "type": "object",
                            "properties": {
                              "pid": {
                                "description": "the pid of Java process which needs to attach",
                                "type": "integer"
                              },
                              "port": {
                                "description": "the port of agent server, default 9277",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "jvm-latency": {
                            "type": "object",
                            "properties": {
                              "class": {
                                "description": "Java class",
                                "type": "string"
                              },
                              "latency": {
                                "description": "the latency duration for action 'latency', unit ms",
                                "type": "integer"
                              },
                              "method": {
                                "description": "the method in Java class",
                                "type": "string"
                              },
                              "pid": {
                                "description": "the pid of Java process which needs to attach",
                                "type": "integer"
                              },
                              "port": {
                                "description": "the port of agent server, default 9277",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "jvm-mysql": {
                            "type": "object",
                            "properties": {
                              "database": {
                                "description": "the match database\ndefault value is \"\", means match all database",
                                "type": "string"
                              },
                              "exception": {
                                "description": "The exception which needs to throw for action `exception`\nor the exception message needs to throw in action `mysql`",
                                "type": "string"
                              },
                              "latency": {
                                "description": "The latency duration for action 'latency'\nor the latency duration in action `mysql`",
                                "type": "integer"
                              },
                              "mysqlConnectorVersion": {
                                "description": "the version of mysql-connector-java, only support 5.X.X(set to \"5\") and 8.X.X(set to \"8\") now",
                                "type": "string"
                              },
                              "pid": {
                                "description": "the pid of Java process which needs to attach",
                                "type": "integer"
                              },
                              "port": {
                                "description": "the port of agent server, default 9277",
                                "type": "integer",
                                "format": "int32"
                              },
                              "sqlType": {
                                "description": "the match sql type\ndefault value is \"\", means match all SQL type.\nThe value can be 'select', 'insert', 'update', 'delete', 'replace'.",
                                "type": "string"
                              },
                              "table": {
                                "description": "the match table\ndefault value is \"\", means match all table",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "jvm-return": {
                            "type": "object",
                            "properties": {
                              "class": {
                                "description": "Java class",
                                "type": "string"
                              },
                              "method": {
                                "description": "the method in Java class",
                                "type": "string"
                              },
                              "pid": {
                                "description": "the pid of Java process which needs to attach",
                                "type": "integer"
                              },
                              "port": {
                                "description": "the port of agent server, default 9277",
                                "type": "integer",
                                "format": "int32"
                              },
                              "value": {
                                "description": "the return value for action 'return'",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "jvm-rule-data": {
                            "type": "object",
                            "properties": {
                              "pid": {
                                "description": "the pid of Java process which needs to attach",
                                "type": "integer"
                              },
                              "port": {
                                "description": "the port of agent server, default 9277",
                                "type": "integer",
                                "format": "int32"
                              },
                              "rule-data": {
                                "description": "RuleData used to save the rule file's data, will use it when recover",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "jvm-stress": {
                            "type": "object",
                            "properties": {
                              "cpu-count": {
                                "description": "the CPU core number need to use, only set it when action is stress",
                                "type": "integer"
                              },
                              "mem-type": {
                                "description": "the memory type need to locate, only set it when action is stress, the value can be 'stack' or 'heap'",
                                "type": "string"
                              },
                              "pid": {
                                "description": "the pid of Java process which needs to attach",
                                "type": "integer"
                              },
                              "port": {
                                "description": "the port of agent server, default 9277",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kafka-fill": {
                            "type": "object",
                            "properties": {
                              "host": {
                                "description": "The host of kafka server",
                                "type": "string"
                              },
                              "maxBytes": {
                                "description": "The max bytes to fill",
                                "type": "integer",
                                "format": "int64"
                              },
                              "messageSize": {
                                "description": "The size of each message",
                                "type": "integer"
                              },
                              "password": {
                                "description": "The password of kafka client",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port of kafka server",
                                "type": "integer"
                              },
                              "reloadCommand": {
                                "description": "The command to reload kafka config",
                                "type": "string"
                              },
                              "topic": {
                                "description": "The topic to attack",
                                "type": "string"
                              },
                              "username": {
                                "description": "The username of kafka client",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kafka-flood": {
                            "type": "object",
                            "properties": {
                              "host": {
                                "description": "The host of kafka server",
                                "type": "string"
                              },
                              "messageSize": {
                                "description": "The size of each message",
                                "type": "integer"
                              },
                              "password": {
                                "description": "The password of kafka client",
                                "type": "string"
                              },
                              "port": {
                                "description": "The port of kafka server",
                                "type": "integer"
                              },
                              "threads": {
                                "description": "The number of worker threads",
                                "type": "integer"
                              },
                              "topic": {
                                "description": "The topic to attack",
                                "type": "string"
                              },
                              "username": {
                                "description": "The username of kafka client",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "kafka-io": {
                            "type": "object",
                            "properties": {
                              "configFile": {
                                "description": "The path of server config",
                                "type": "string"
                              },
                              "nonReadable": {
                                "description": "Make kafka cluster non-readable",
                                "type": "boolean"
                              },
                              "nonWritable": {
                                "description": "Make kafka cluster non-writable",
                                "type": "boolean"
                              },
                              "topic": {
                                "description": "The topic to attack",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "network-bandwidth": {
                            "type": "object",
                            "required": [
                              "buffer",
                              "limit",
                              "rate"
                            ],
                            "properties": {
                              "buffer": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1
                              },
                              "device": {
                                "type": "string"
                              },
                              "hostname": {
                                "type": "string"
                              },
                              "ip-address": {
                                "type": "string"
                              },
                              "limit": {
                                "type": "integer",
                                "format": "int32",
                                "minimum": 1
                              },
                              "minburst": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "peakrate": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "rate": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-corrupt": {
                            "type": "object",
                            "properties": {
                              "correlation": {
                                "description": "correlation is percentage (10 is 10%)",
                                "type": "string"
                              },
                              "device": {
                                "description": "the network interface to impact",
                                "type": "string"
                              },
                              "egress-port": {
                                "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "only impact traffic to these hostnames",
                                "type": "string"
                              },
                              "ip-address": {
                                "description": "only impact egress traffic to these IP addresses",
                                "type": "string"
                              },
                              "ip-protocol": {
                                "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                                "type": "string"
                              },
                              "percent": {
                                "description": "percentage of packets to corrupt (10 is 10%)",
                                "type": "string"
                              },
                              "source-port": {
                                "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-delay": {
                            "type": "object",
                            "properties": {
                              "accept-tcp-flags": {
                                "description": "only the packet which match the tcp flag can be accepted, others will be dropped.\nonly set when the IPProtocol is tcp, used for partition.",
                                "type": "string"
                              },
                              "correlation": {
                                "description": "correlation is percentage (10 is 10%)",
                                "type": "string"
                              },
                              "device": {
                                "description": "the network interface to impact",
                                "type": "string"
                              },
                              "egress-port": {
                                "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "only impact traffic to these hostnames",
                                "type": "string"
                              },
                              "ip-address": {
                                "description": "only impact egress traffic to these IP addresses",
                                "type": "string"
                              },
                              "ip-protocol": {
                                "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "jitter time, time units: ns, us (or µs), ms, s, m, h.",
                                "type": "string"
                              },
                              "latency": {
                                "description": "delay egress time, time units: ns, us (or µs), ms, s, m, h.",
                                "type": "string"
                              },
                              "source-port": {
                                "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-dns": {
                            "type": "object",
                            "properties": {
                              "dns-domain-name": {
                                "description": "map this host to specified IP",
                                "type": "string"
                              },
                              "dns-ip": {
                                "description": "map specified host to this IP address",
                                "type": "string"
                              },
                              "dns-server": {
                                "description": "update the DNS server in /etc/resolv.conf with this value",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-down": {
                            "type": "object",
                            "properties": {
                              "device": {
                                "description": "The network interface to impact",
                                "type": "string"
                              },
                              "duration": {
                                "description": "NIC down time, time units: ns, us (or µs), ms, s, m, h.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-duplicate": {
                            "type": "object",
                            "properties": {
                              "correlation": {
                                "description": "correlation is percentage (10 is 10%)",
                                "type": "string"
                              },
                              "device": {
                                "description": "the network interface to impact",
                                "type": "string"
                              },
                              "egress-port": {
                                "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "only impact traffic to these hostnames",
                                "type": "string"
                              },
                              "ip-address": {
                                "description": "only impact egress traffic to these IP addresses",
                                "type": "string"
                              },
                              "ip-protocol": {
                                "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                                "type": "string"
                              },
                              "percent": {
                                "description": "percentage of packets to duplicate (10 is 10%)",
                                "type": "string"
                              },
                              "source-port": {
                                "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-flood": {
                            "type": "object",
                            "required": [
                              "duration",
                              "rate"
                            ],
                            "properties": {
                              "duration": {
                                "description": "The number of seconds to run the iperf test",
                                "type": "string"
                              },
                              "ip-address": {
                                "description": "Generate traffic to this IP address",
                                "type": "string"
                              },
                              "parallel": {
                                "description": "The number of iperf parallel client threads to run",
                                "type": "integer",
                                "format": "int32"
                              },
                              "port": {
                                "description": "Generate traffic to this port on the IP address",
                                "type": "string"
                              },
                              "rate": {
                                "description": "The speed of network traffic, allows bps, kbps, mbps, gbps, tbps unit. bps means bytes per second",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-loss": {
                            "type": "object",
                            "properties": {
                              "correlation": {
                                "description": "correlation is percentage (10 is 10%)",
                                "type": "string"
                              },
                              "device": {
                                "description": "the network interface to impact",
                                "type": "string"
                              },
                              "egress-port": {
                                "description": "only impact egress traffic to these destination ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "only impact traffic to these hostnames",
                                "type": "string"
                              },
                              "ip-address": {
                                "description": "only impact egress traffic to these IP addresses",
                                "type": "string"
                              },
                              "ip-protocol": {
                                "description": "only impact traffic using this IP protocol, supported: tcp, udp, icmp, all",
                                "type": "string"
                              },
                              "percent": {
                                "description": "percentage of packets to loss (10 is 10%)",
                                "type": "string"
                              },
                              "source-port": {
                                "description": "only impact egress traffic from these source ports, use a ',' to separate or to indicate the range, such as 80, 8001:8010.\nit can only be used in conjunction with -p tcp or -p udp",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "network-partition": {
                            "type": "object",
                            "properties": {
                              "accept-tcp-flags": {
                                "description": "only the packet which match the tcp flag can be accepted, others will be dropped.\nonly set when the IPProtocol is tcp, used for partition.",
                                "type": "string"
                              },
                              "device": {
                                "description": "the network interface to impact",
                                "type": "string"
                              },
                              "direction": {
                                "description": "specifies the partition direction, values can be 'from', 'to'.\n'from' means packets coming from the 'IPAddress' or 'Hostname' and going to your server,\n'to' means packets originating from your server and going to the 'IPAddress' or 'Hostname'.",
                                "type": "string"
                              },
                              "hostname": {
                                "description": "only impact traffic to these hostnames",
                                "type": "string"
                              },
                              "ip-address": {
                                "description": "only impact egress traffic to these IP addresses",
                                "type": "string"
                              },
                              "ip-protocol": {
                                "description": "only impact egress traffic to these IP addresses",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "process": {
                            "type": "object",
                            "properties": {
                              "process": {
                                "description": "the process name or the process ID",
                                "type": "string"
                              },
                              "recoverCmd": {
                                "description": "the command to be run when recovering experiment",
                                "type": "string"
                              },
                              "signal": {
                                "description": "the signal number to send",
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false
                          },
                          "redis-cacheLimit": {
                            "type": "object",
                            "properties": {
                              "addr": {
                                "description": "The adress of Redis server",
                                "type": "string"
                              },
                              "cacheSize": {
                                "description": "The size of `maxmemory`",
                                "type": "string"
                              },
                              "password": {
                                "description": "The password of Redis server",
                                "type": "string"
                              },
                              "percent": {
                                "description": "Specifies maxmemory as a percentage of the original value",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "redis-expiration": {
                            "type": "object",
                            "properties": {
                              "addr": {
                                "description": "The adress of Redis server",
                                "type": "string"
                              },
                              "expiration": {
                                "description": "The expiration of the keys",
                                "type": "string"
                              },
                              "key": {
                                "description": "The keys to be expired",
                                "type": "string"
                              },
                              "option": {
                                "description": "Additional options for `expiration`",
                                "type": "string"
                              },
                              "password": {
                                "description": "The password of Redis server",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "redis-penetration": {
                            "type": "object",
                            "properties": {
                              "addr": {
                                "description": "The adress of Redis server",
                                "type": "string"
                              },
                              "password": {
                                "description": "The password of Redis server",
                                "type": "string"
                              },
                              "requestNum": {
                                "description": "The number of requests to be sent",
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false
                          },
                          "redis-restart": {
                            "type": "object",
                            "properties": {
                              "addr": {
                                "description": "The adress of Redis server",
                                "type": "string"
                              },
                              "conf": {
                                "description": "The path of Sentinel conf",
                                "type": "string"
                              },
                              "flushConfig": {
                                "description": "The control flag determines whether to flush config",
                                "type": "boolean"
                              },
                              "password": {
                                "description": "The password of Redis server",
                                "type": "string"
                              },
                              "redisPath": {
                                "description": "The path of `redis-server` command-line tool",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          "redis-stop": {
                            "type": "object",
                            "properties": {
                              "addr": {
                                "description": "The adress of Redis server",
                                "type": "string"
                              },
                              "conf": {
                                "description": "The path of Sentinel conf",
                                "type": "string"
                              },
                              "flushConfig": {
                                "description": "The control flag determines whether to flush config",
                                "type": "boolean"
                              },
                              "password": {
                                "description": "The password of Redis server",
                                "type": "string"
                              },
                              "redisPath": {
                                "description": "The path of `redis-server` command-line tool",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select physical machines that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "physicalMachines": {
                                "description": "PhysicalMachines is a map of string keys and a set values that used to select physical machines.\nThe key defines the namespace which physical machine belong,\nand each value is a set of physical machine names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "stress-cpu": {
                            "type": "object",
                            "properties": {
                              "load": {
                                "description": "specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100 is full loading.",
                                "type": "integer"
                              },
                              "options": {
                                "description": "extend stress-ng options",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "workers": {
                                "description": "specifies N workers to apply the stressor.",
                                "type": "integer"
                              }
                            },
                            "additionalProperties": false
                          },
                          "stress-mem": {
                            "type": "object",
                            "properties": {
                              "options": {
                                "description": "extend stress-ng options",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "size": {
                                "description": "specifies N bytes consumed per vm worker, default is the total available memory.\nOne can specify the size as % of total available memory or in units of B, KB/KiB, MB/MiB, GB/GiB, TB/TiB..",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "uid": {
                            "description": "the experiment ID",
                            "type": "string"
                          },
                          "user_defined": {
                            "type": "object",
                            "properties": {
                              "attackCmd": {
                                "description": "The command to be executed when attack",
                                "type": "string"
                              },
                              "recoverCmd": {
                                "description": "The command to be executed when recover",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of physical machines to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of physical machines the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          },
                          "vm": {
                            "type": "object",
                            "properties": {
                              "vm-name": {
                                "description": "The name of the VM to be injected",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "podChaos": {
                        "description": "PodChaosSpec defines the attributes that a user creates on a chaos experiment about pods.",
                        "type": "object",
                        "required": [
                          "action",
                          "mode",
                          "selector"
                        ],
                        "properties": {
                          "action": {
                            "description": "Action defines the specific pod chaos action.\nSupported action: pod-kill / pod-failure / container-kill\nDefault action: pod-kill",
                            "type": "string",
                            "enum": [
                              "pod-kill",
                              "pod-failure",
                              "container-kill"
                            ]
                          },
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action.\nIt is required when the action is `PodFailureAction`.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                            "type": "string"
                          },
                          "gracePeriod": {
                            "description": "GracePeriod is used in pod-kill action. It represents the duration in seconds before the pod should be deleted.\nValue must be non-negative integer. The default value is zero that indicates delete immediately.",
                            "type": "integer",
                            "format": "int64",
                            "minimum": 0
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "schedule": {
                        "type": "string"
                      },
                      "startingDeadlineSeconds": {
                        "type": "integer",
                        "format": "int64",
                        "minimum": 0,
                        "nullable": true
                      },
                      "stressChaos": {
                        "description": "StressChaosSpec defines the desired state of StressChaos",
                        "type": "object",
                        "required": [
                          "mode",
                          "selector"
                        ],
                        "properties": {
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action",
                            "type": "string"
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "stressngStressors": {
                            "description": "StressngStressors defines plenty of stressors just like `Stressors` except that it's an experimental\nfeature and more powerful. You can define stressors in `stress-ng` (see also `man stress-ng`) dialect,\nhowever not all of the supported stressors are well tested. It maybe retired in later releases. You\nshould always use `Stressors` to define the stressors and use this only when you want more stressors\nunsupported by `Stressors`. When both `StressngStressors` and `Stressors` are defined, `StressngStressors`\nwins.",
                            "type": "string"
                          },
                          "stressors": {
                            "description": "Stressors defines plenty of stressors supported to stress system components out.\nYou can use one or more of them to make up various kinds of stresses. At least\none of the stressors should be specified.",
                            "type": "object",
                            "properties": {
                              "cpu": {
                                "description": "CPUStressor stresses CPU out",
                                "type": "object",
                                "required": [
                                  "workers"
                                ],
                                "properties": {
                                  "load": {
                                    "description": "Load specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100\nis full loading.",
                                    "type": "integer",
                                    "maximum": 100,
                                    "minimum": 0
                                  },
                                  "options": {
                                    "description": "extend stress-ng options",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "workers": {
                                    "description": "Workers specifies N workers to apply the stressor.\nMaximum 8192 workers can run by stress-ng",
                                    "type": "integer",
                                    "maximum": 8192
                                  }
                                },
                                "additionalProperties": false
                              },
                              "memory": {
                                "description": "MemoryStressor stresses virtual memory out",
                                "type": "object",
                                "required": [
                                  "workers"
                                ],
                                "properties": {
                                  "oomScoreAdj": {
                                    "description": "OOMScoreAdj sets the oom_score_adj of the stress process. See `man 5 proc` to know more\nabout this option.",
                                    "type": "integer",
                                    "default": 0,
                                    "maximum": 1000,
                                    "minimum": -1000
                                  },
                                  "options": {
                                    "description": "extend stress-ng options",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "size": {
                                    "description": "Size specifies N bytes consumed per vm worker, default is the total available memory.\nOne can specify the size as % of total available memory or in units of B, KB/KiB,\nMB/MiB, GB/GiB, TB/TiB.",
                                    "type": "string"
                                  },
                                  "workers": {
                                    "description": "Workers specifies N workers to apply the stressor.\nMaximum 8192 workers can run by stress-ng",
                                    "type": "integer",
                                    "maximum": 8192
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "timeChaos": {
                        "description": "TimeChaosSpec defines the desired state of TimeChaos",
                        "type": "object",
                        "required": [
                          "mode",
                          "selector",
                          "timeOffset"
                        ],
                        "properties": {
                          "clockIds": {
                            "description": "ClockIds defines all affected clock id\nAll available options are [\"CLOCK_REALTIME\",\"CLOCK_MONOTONIC\",\"CLOCK_PROCESS_CPUTIME_ID\",\"CLOCK_THREAD_CPUTIME_ID\",\n\"CLOCK_MONOTONIC_RAW\",\"CLOCK_REALTIME_COARSE\",\"CLOCK_MONOTONIC_COARSE\",\"CLOCK_BOOTTIME\",\"CLOCK_REALTIME_ALARM\",\n\"CLOCK_BOOTTIME_ALARM\"]\nDefault value is [\"CLOCK_REALTIME\"]",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "containerNames": {
                            "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "duration": {
                            "description": "Duration represents the duration of the chaos action",
                            "type": "string"
                          },
                          "mode": {
                            "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                            "type": "string",
                            "enum": [
                              "one",
                              "all",
                              "fixed",
                              "fixed-percent",
                              "random-max-percent"
                            ]
                          },
                          "remoteCluster": {
                            "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                            "type": "string"
                          },
                          "selector": {
                            "description": "Selector is used to select pods that are used to inject chaos action.",
                            "type": "object",
                            "properties": {
                              "annotationSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "expressionSelectors": {
                                "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "fieldSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "labelSelectors": {
                                "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "namespaces": {
                                "description": "Namespaces is a set of namespace to which objects belong.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "nodeSelectors": {
                                "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              },
                              "nodes": {
                                "description": "Nodes is a set of node name and objects must belong to these nodes.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "podPhaseSelectors": {
                                "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "pods": {
                                "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "timeOffset": {
                            "description": "TimeOffset defines the delta time of injected program. It's a possibly signed sequence of decimal numbers, such as\n\"300ms\", \"-1.5h\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "statusCheck": {
                    "description": "StatusCheck describe the behavior of StatusCheck. Only used when Type is TypeStatusCheck.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "duration": {
                        "description": "Duration defines the duration of the whole status check if the\nnumber of failed execution does not exceed the failure threshold.\nDuration is available to both `Synchronous` and `Continuous` mode.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                        "type": "string"
                      },
                      "failureThreshold": {
                        "description": "FailureThreshold defines the minimum consecutive failure\nfor the status check to be considered failed.",
                        "type": "integer",
                        "default": 3,
                        "minimum": 1
                      },
                      "http": {
                        "type": "object",
                        "required": [
                          "criteria",
                          "url"
                        ],
                        "properties": {
                          "body": {
                            "type": "string"
                          },
                          "criteria": {
                            "description": "Criteria defines how to determine the result of the status check.",
                            "type": "object",
                            "required": [
                              "statusCode"
                            ],
                            "properties": {
                              "statusCode": {
                                "description": "StatusCode defines the expected http status code for the request.\nA statusCode string could be a single code (e.g. 200), or\nan inclusive range (e.g. 200-400, both `200` and `400` are included).",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "headers": {
                            "description": "A Header represents the key-value pairs in an HTTP header.\n\nThe keys should be in canonical form, as returned by\n[CanonicalHeaderKey].",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "method": {
                            "type": "string",
                            "default": "GET",
                            "enum": [
                              "GET",
                              "POST"
                            ]
                          },
                          "url": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "intervalSeconds": {
                        "description": "IntervalSeconds defines how often (in seconds) to perform\nan execution of status check.",
                        "type": "integer",
                        "default": 10,
                        "minimum": 1
                      },
                      "mode": {
                        "description": "Mode defines the execution mode of the status check.\nSupport type: Synchronous / Continuous",
                        "type": "string",
                        "enum": [
                          "Synchronous",
                          "Continuous"
                        ]
                      },
                      "recordsHistoryLimit": {
                        "description": "RecordsHistoryLimit defines the number of record to retain.",
                        "type": "integer",
                        "default": 100,
                        "maximum": 1000,
                        "minimum": 1
                      },
                      "successThreshold": {
                        "description": "SuccessThreshold defines the minimum consecutive successes\nfor the status check to be considered successful.\nSuccessThreshold only works for `Synchronous` mode.",
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                      },
                      "timeoutSeconds": {
                        "description": "TimeoutSeconds defines the number of seconds after which\nan execution of status check times out.",
                        "type": "integer",
                        "default": 1,
                        "minimum": 1
                      },
                      "type": {
                        "description": "Type defines the specific status check type.\nSupport type: HTTP",
                        "type": "string",
                        "default": "HTTP",
                        "enum": [
                          "HTTP"
                        ]
                      }
                    },
                    "additionalProperties": false
                  },
                  "stressChaos": {
                    "description": "StressChaosSpec defines the desired state of StressChaos",
                    "type": "object",
                    "required": [
                      "mode",
                      "selector"
                    ],
                    "properties": {
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action",
                        "type": "string"
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "stressngStressors": {
                        "description": "StressngStressors defines plenty of stressors just like `Stressors` except that it's an experimental\nfeature and more powerful. You can define stressors in `stress-ng` (see also `man stress-ng`) dialect,\nhowever not all of the supported stressors are well tested. It maybe retired in later releases. You\nshould always use `Stressors` to define the stressors and use this only when you want more stressors\nunsupported by `Stressors`. When both `StressngStressors` and `Stressors` are defined, `StressngStressors`\nwins.",
                        "type": "string"
                      },
                      "stressors": {
                        "description": "Stressors defines plenty of stressors supported to stress system components out.\nYou can use one or more of them to make up various kinds of stresses. At least\none of the stressors should be specified.",
                        "type": "object",
                        "properties": {
                          "cpu": {
                            "description": "CPUStressor stresses CPU out",
                            "type": "object",
                            "required": [
                              "workers"
                            ],
                            "properties": {
                              "load": {
                                "description": "Load specifies P percent loading per CPU worker. 0 is effectively a sleep (no load) and 100\nis full loading.",
                                "type": "integer",
                                "maximum": 100,
                                "minimum": 0
                              },
                              "options": {
                                "description": "extend stress-ng options",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "workers": {
                                "description": "Workers specifies N workers to apply the stressor.\nMaximum 8192 workers can run by stress-ng",
                                "type": "integer",
                                "maximum": 8192
                              }
                            },
                            "additionalProperties": false
                          },
                          "memory": {
                            "description": "MemoryStressor stresses virtual memory out",
                            "type": "object",
                            "required": [
                              "workers"
                            ],
                            "properties": {
                              "oomScoreAdj": {
                                "description": "OOMScoreAdj sets the oom_score_adj of the stress process. See `man 5 proc` to know more\nabout this option.",
                                "type": "integer",
                                "default": 0,
                                "maximum": 1000,
                                "minimum": -1000
                              },
                              "options": {
                                "description": "extend stress-ng options",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "size": {
                                "description": "Size specifies N bytes consumed per vm worker, default is the total available memory.\nOne can specify the size as % of total available memory or in units of B, KB/KiB,\nMB/MiB, GB/GiB, TB/TiB.",
                                "type": "string"
                              },
                              "workers": {
                                "description": "Workers specifies N workers to apply the stressor.\nMaximum 8192 workers can run by stress-ng",
                                "type": "integer",
                                "maximum": 8192
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "task": {
                    "description": "Task describes the behavior of the custom task. Only used when Type is TypeTask.",
                    "type": "object",
                    "properties": {
                      "container": {
                        "description": "Container is the main container image to run in the pod",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "args": {
                            "description": "Arguments to the entrypoint.\nThe container image's CMD is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "command": {
                            "description": "Entrypoint array. Not executed within a shell.\nThe container image's ENTRYPOINT is used if this is not provided.\nVariable references $(VAR_NAME) are expanded using the container's environment. If a variable\ncannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will\nproduce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless\nof whether the variable exists or not. Cannot be updated.\nMore info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "env": {
                            "description": "List of environment variables to set in the container.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "EnvVar represents an environment variable present in a Container.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                                  "type": "string"
                                },
                                "value": {
                                  "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                                  "type": "string"
                                },
                                "valueFrom": {
                                  "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                                  "type": "object",
                                  "properties": {
                                    "configMapKeyRef": {
                                      "description": "Selects a key of a ConfigMap.",
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key to select.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        },
                                        "optional": {
                                          "description": "Specify whether the ConfigMap or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "fieldRef": {
                                      "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                      "type": "object",
                                      "required": [
                                        "fieldPath"
                                      ],
                                      "properties": {
                                        "apiVersion": {
                                          "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                          "type": "string"
                                        },
                                        "fieldPath": {
                                          "description": "Path of the field to select in the specified API version.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "resourceFieldRef": {
                                      "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                      "type": "object",
                                      "required": [
                                        "resource"
                                      ],
                                      "properties": {
                                        "containerName": {
                                          "description": "Container name: required for volumes, optional for env vars",
                                          "type": "string"
                                        },
                                        "divisor": {
                                          "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                          "anyOf": [
                                            {
                                              "type": "integer"
                                            },
                                            {
                                              "type": "string"
                                            }
                                          ],
                                          "x-kubernetes-int-or-string": true
                                        },
                                        "resource": {
                                          "description": "Required: resource to select",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "x-kubernetes-map-type": "atomic"
                                    },
                                    "secretKeyRef": {
                                      "description": "Selects a key of a secret in the pod's namespace",
                                      "type": "object",
                                      "required": [
                                        "key"
                                      ],
                                      "properties": {
                                        "key": {
                                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                          "type": "string",
                                          "default": ""
                                        },
                                        "optional": {
                                          "description": "Specify whether the Secret or its key must be defined",
                                          "type": "boolean"
                                        }
                                      },
                                      "additionalProperties": false,
                                      "x-kubernetes-map-type": "atomic"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-map-keys": [
                              "name"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "envFrom": {
                            "description": "List of sources to populate environment variables in the container.\nThe keys defined within a source must be a C_IDENTIFIER. All invalid keys\nwill be reported as an event when the container is starting. When a key exists in multiple\nsources, the value associated with the last source will take precedence.\nValues defined by an Env with a duplicate key will take precedence.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "EnvFromSource represents the source of a set of ConfigMaps or Secrets",
                              "type": "object",
                              "properties": {
                                "configMapRef": {
                                  "description": "The ConfigMap to select from",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "prefix": {
                                  "description": "Optional text to prepend to the name of each environment variable. Must be a C_IDENTIFIER.",
                                  "type": "string"
                                },
                                "secretRef": {
                                  "description": "The Secret to select from",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "image": {
                            "description": "Container image name.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                            "type": "string"
                          },
                          "imagePullPolicy": {
                            "description": "Image pull policy.\nOne of Always, Never, IfNotPresent.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/containers/images#updating-images",
                            "type": "string"
                          },
                          "lifecycle": {
                            "description": "Actions that the management system should take in response to container lifecycle events.\nCannot be updated.",
                            "type": "object",
                            "properties": {
                              "postStart": {
                                "description": "PostStart is called immediately after a container is created. If the handler fails,\nthe container is terminated and restarted according to its restart policy.\nOther management of the container blocks until the hook completes.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "description": "Exec specifies a command to execute in the container.",
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "sleep": {
                                    "description": "Sleep represents a duration that the container should sleep.",
                                    "type": "object",
                                    "required": [
                                      "seconds"
                                    ],
                                    "properties": {
                                      "seconds": {
                                        "description": "Seconds is the number of seconds to sleep.",
                                        "type": "integer",
                                        "format": "int64"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "tcpSocket": {
                                    "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "preStop": {
                                "description": "PreStop is called immediately before a container is terminated due to an\nAPI request or management event such as liveness/startup probe failure,\npreemption, resource contention, etc. The handler is not called if the\ncontainer crashes or exits. The Pod's termination grace period countdown begins before the\nPreStop hook is executed. Regardless of the outcome of the handler, the\ncontainer will eventually terminate within the Pod's termination grace\nperiod (unless delayed by finalizers). Other management of the container blocks until the hook completes\nor until the termination grace period is reached.\nMore info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks",
                                "type": "object",
                                "properties": {
                                  "exec": {
                                    "description": "Exec specifies a command to execute in the container.",
                                    "type": "object",
                                    "properties": {
                                      "command": {
                                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "httpGet": {
                                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                        "type": "string"
                                      },
                                      "httpHeaders": {
                                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                        "type": "array",
                                        "items": {
                                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                          "type": "object",
                                          "required": [
                                            "name",
                                            "value"
                                          ],
                                          "properties": {
                                            "name": {
                                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                              "type": "string"
                                            },
                                            "value": {
                                              "description": "The header field value",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      },
                                      "path": {
                                        "description": "Path to access on the HTTP server.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "scheme": {
                                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "sleep": {
                                    "description": "Sleep represents a duration that the container should sleep.",
                                    "type": "object",
                                    "required": [
                                      "seconds"
                                    ],
                                    "properties": {
                                      "seconds": {
                                        "description": "Seconds is the number of seconds to sleep.",
                                        "type": "integer",
                                        "format": "int64"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "tcpSocket": {
                                    "description": "Deprecated. TCPSocket is NOT supported as a LifecycleHandler and kept\nfor backward compatibility. There is no validation of this field and\nlifecycle hooks will fail at runtime when it is specified.",
                                    "type": "object",
                                    "required": [
                                      "port"
                                    ],
                                    "properties": {
                                      "host": {
                                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                        "type": "string"
                                      },
                                      "port": {
                                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "stopSignal": {
                                "description": "StopSignal defines which signal will be sent to a container when it is being stopped.\nIf not specified, the default is defined by the container runtime in use.\nStopSignal can only be set for Pods with a non-empty .spec.os.name",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "livenessProbe": {
                            "description": "Periodic probe of container liveness.\nContainer will be restarted if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec specifies a command to execute in the container.",
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "failureThreshold": {
                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "grpc": {
                                "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "port": {
                                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies an HTTP GET request to perform.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": "array",
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "initialDelaySeconds": {
                                "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies a connection to a TCP port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "name": {
                            "description": "Name of the container specified as a DNS_LABEL.\nEach container in a pod must have a unique name (DNS_LABEL).\nCannot be updated.",
                            "type": "string"
                          },
                          "ports": {
                            "description": "List of ports to expose from the container. Not specifying a port here\nDOES NOT prevent that port from being exposed. Any port which is\nlistening on the default \"0.0.0.0\" address inside a container will be\naccessible from the network.\nModifying this array with strategic merge patch may corrupt the data.\nFor more information See https://github.com/kubernetes/kubernetes/issues/108255.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "ContainerPort represents a network port in a single container.",
                              "type": "object",
                              "required": [
                                "containerPort"
                              ],
                              "properties": {
                                "containerPort": {
                                  "description": "Number of port to expose on the pod's IP address.\nThis must be a valid port number, 0 \u003c x \u003c 65536.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "hostIP": {
                                  "description": "What host IP to bind the external port to.",
                                  "type": "string"
                                },
                                "hostPort": {
                                  "description": "Number of port to expose on the host.\nIf specified, this must be a valid port number, 0 \u003c x \u003c 65536.\nIf HostNetwork is specified, this must match ContainerPort.\nMost containers do not need this.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "name": {
                                  "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each\nnamed port in a pod must have a unique name. Name for the port that can be\nreferred to by services.",
                                  "type": "string"
                                },
                                "protocol": {
                                  "description": "Protocol for port. Must be UDP, TCP, or SCTP.\nDefaults to \"TCP\".",
                                  "type": "string",
                                  "default": "TCP"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-map-keys": [
                              "containerPort",
                              "protocol"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "readinessProbe": {
                            "description": "Periodic probe of container service readiness.\nContainer will be removed from service endpoints if the probe fails.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec specifies a command to execute in the container.",
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "failureThreshold": {
                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "grpc": {
                                "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "port": {
                                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies an HTTP GET request to perform.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": "array",
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "initialDelaySeconds": {
                                "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies a connection to a TCP port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "resizePolicy": {
                            "description": "Resources resize policy for the container.",
                            "type": "array",
                            "items": {
                              "description": "ContainerResizePolicy represents resource resize policy for the container.",
                              "type": "object",
                              "required": [
                                "resourceName",
                                "restartPolicy"
                              ],
                              "properties": {
                                "resourceName": {
                                  "description": "Name of the resource to which this resource resize policy applies.\nSupported values: cpu, memory.",
                                  "type": "string"
                                },
                                "restartPolicy": {
                                  "description": "Restart policy to apply when specified resource is resized.\nIf not specified, it defaults to NotRequired.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "resources": {
                            "description": "Compute Resources required by this container.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                            "type": "object",
                            "properties": {
                              "claims": {
                                "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                                "type": "array",
                                "items": {
                                  "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                                  "type": "object",
                                  "required": [
                                    "name"
                                  ],
                                  "properties": {
                                    "name": {
                                      "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                                      "type": "string"
                                    },
                                    "request": {
                                      "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "x-kubernetes-list-map-keys": [
                                  "name"
                                ],
                                "x-kubernetes-list-type": "map"
                              },
                              "limits": {
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "requests": {
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "restartPolicy": {
                            "description": "RestartPolicy defines the restart behavior of individual containers in a pod.\nThis field may only be set for init containers, and the only allowed value is \"Always\".\nFor non-init containers or when this field is not specified,\nthe restart behavior is defined by the Pod's restart policy and the container type.\nSetting the RestartPolicy as \"Always\" for the init container will have the following effect:\nthis init container will be continually restarted on\nexit until all regular containers have terminated. Once all regular\ncontainers have completed, all init containers with restartPolicy \"Always\"\nwill be shut down. This lifecycle differs from normal init containers and\nis often referred to as a \"sidecar\" container. Although this init\ncontainer still starts in the init container sequence, it does not wait\nfor the container to complete before proceeding to the next init\ncontainer. Instead, the next init container starts immediately after this\ninit container is started, or after any startupProbe has successfully\ncompleted.",
                            "type": "string"
                          },
                          "securityContext": {
                            "description": "SecurityContext defines the security options the container should be run with.\nIf set, the fields of SecurityContext override the equivalent fields of PodSecurityContext.\nMore info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
                            "type": "object",
                            "properties": {
                              "allowPrivilegeEscalation": {
                                "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "appArmorProfile": {
                                "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "capabilities": {
                                "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "add": {
                                    "description": "Added capabilities",
                                    "type": "array",
                                    "items": {
                                      "description": "Capability represent POSIX capabilities type",
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "drop": {
                                    "description": "Removed capabilities",
                                    "type": "array",
                                    "items": {
                                      "description": "Capability represent POSIX capabilities type",
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "privileged": {
                                "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "procMount": {
                                "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "string"
                              },
                              "readOnlyRootFilesystem": {
                                "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "boolean"
                              },
                              "runAsGroup": {
                                "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "runAsNonRoot": {
                                "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                "type": "boolean"
                              },
                              "runAsUser": {
                                "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "seLinuxOptions": {
                                "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "properties": {
                                  "level": {
                                    "description": "Level is SELinux level label that applies to the container.",
                                    "type": "string"
                                  },
                                  "role": {
                                    "description": "Role is a SELinux role label that applies to the container.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "Type is a SELinux type label that applies to the container.",
                                    "type": "string"
                                  },
                                  "user": {
                                    "description": "User is a SELinux user label that applies to the container.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "seccompProfile": {
                                "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "localhostProfile": {
                                    "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "windowsOptions": {
                                "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                                "type": "object",
                                "properties": {
                                  "gmsaCredentialSpec": {
                                    "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                    "type": "string"
                                  },
                                  "gmsaCredentialSpecName": {
                                    "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                    "type": "string"
                                  },
                                  "hostProcess": {
                                    "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                    "type": "boolean"
                                  },
                                  "runAsUserName": {
                                    "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "startupProbe": {
                            "description": "StartupProbe indicates that the Pod has successfully initialized.\nIf specified, no other probes are executed until this completes successfully.\nIf this probe fails, the Pod will be restarted, just as if the livenessProbe failed.\nThis can be used to provide different probe parameters at the beginning of a Pod's lifecycle,\nwhen it might take a long time to load data or warm a cache, than during steady-state operation.\nThis cannot be updated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                            "type": "object",
                            "properties": {
                              "exec": {
                                "description": "Exec specifies a command to execute in the container.",
                                "type": "object",
                                "properties": {
                                  "command": {
                                    "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "failureThreshold": {
                                "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "grpc": {
                                "description": "GRPC specifies a GRPC HealthCheckRequest.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "port": {
                                    "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                                    "type": "integer",
                                    "format": "int32"
                                  },
                                  "service": {
                                    "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "additionalProperties": false
                              },
                              "httpGet": {
                                "description": "HTTPGet specifies an HTTP GET request to perform.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                                    "type": "string"
                                  },
                                  "httpHeaders": {
                                    "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                                    "type": "array",
                                    "items": {
                                      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                      "type": "object",
                                      "required": [
                                        "name",
                                        "value"
                                      ],
                                      "properties": {
                                        "name": {
                                          "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                          "type": "string"
                                        },
                                        "value": {
                                          "description": "The header field value",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  },
                                  "path": {
                                    "description": "Path to access on the HTTP server.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "scheme": {
                                    "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "initialDelaySeconds": {
                                "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              },
                              "periodSeconds": {
                                "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "successThreshold": {
                                "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "tcpSocket": {
                                "description": "TCPSocket specifies a connection to a TCP port.",
                                "type": "object",
                                "required": [
                                  "port"
                                ],
                                "properties": {
                                  "host": {
                                    "description": "Optional: Host name to connect to, defaults to the pod IP.",
                                    "type": "string"
                                  },
                                  "port": {
                                    "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  }
                                },
                                "additionalProperties": false
                              },
                              "terminationGracePeriodSeconds": {
                                "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "timeoutSeconds": {
                                "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                                "type": "integer",
                                "format": "int32"
                              }
                            },
                            "additionalProperties": false
                          },
                          "stdin": {
                            "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this\nis not set, reads from stdin in the container will always result in EOF.\nDefault is false.",
                            "type": "boolean"
                          },
                          "stdinOnce": {
                            "description": "Whether the container runtime should close the stdin channel after it has been opened by\na single attach. When stdin is true the stdin stream will remain open across multiple attach\nsessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the\nfirst client attaches to stdin, and then remains open and accepts data until the client disconnects,\nat which time stdin is closed and remains closed until the container is restarted. If this\nflag is false, a container processes that reads from stdin will never receive an EOF.\nDefault is false",
                            "type": "boolean"
                          },
                          "terminationMessagePath": {
                            "description": "Optional: Path at which the file to which the container's termination message\nwill be written is mounted into the container's filesystem.\nMessage written is intended to be brief final status, such as an assertion failure message.\nWill be truncated by the node if greater than 4096 bytes. The total message length across\nall containers will be limited to 12kb.\nDefaults to /dev/termination-log.\nCannot be updated.",
                            "type": "string"
                          },
                          "terminationMessagePolicy": {
                            "description": "Indicate how the termination message should be populated. File will use the contents of\nterminationMessagePath to populate the container status message on both success and failure.\nFallbackToLogsOnError will use the last chunk of container log output if the termination\nmessage file is empty and the container exited with an error.\nThe log output is limited to 2048 bytes or 80 lines, whichever is smaller.\nDefaults to File.\nCannot be updated.",
                            "type": "string"
                          },
                          "tty": {
                            "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.\nDefault is false.",
                            "type": "boolean"
                          },
                          "volumeDevices": {
                            "description": "volumeDevices is the list of block devices to be used by the container.",
                            "type": "array",
                            "items": {
                              "description": "volumeDevice describes a mapping of a raw block device within a container.",
                              "type": "object",
                              "required": [
                                "devicePath",
                                "name"
                              ],
                              "properties": {
                                "devicePath": {
                                  "description": "devicePath is the path inside of the container that the device will be mapped to.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "name must match the name of a persistentVolumeClaim in the pod",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-map-keys": [
                              "devicePath"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "volumeMounts": {
                            "description": "Pod volumes to mount into the container's filesystem.\nCannot be updated.",
                            "type": "array",
                            "items": {
                              "description": "VolumeMount describes a mounting of a Volume within a container.",
                              "type": "object",
                              "required": [
                                "mountPath",
                                "name"
                              ],
                              "properties": {
                                "mountPath": {
                                  "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                                  "type": "string"
                                },
                                "mountPropagation": {
                                  "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "This must match the Name of a Volume.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                                  "type": "boolean"
                                },
                                "recursiveReadOnly": {
                                  "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                                  "type": "string"
                                },
                                "subPath": {
                                  "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                                  "type": "string"
                                },
                                "subPathExpr": {
                                  "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "x-kubernetes-list-map-keys": [
                              "mountPath"
                            ],
                            "x-kubernetes-list-type": "map"
                          },
                          "workingDir": {
                            "description": "Container's working directory.\nIf not specified, the container runtime's default will be used, which\nmight be configured in the container image.\nCannot be updated.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "labels": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "volumes": {
                        "description": "Volumes is a list of volumes that can be mounted by containers in a template.",
                        "type": "array",
                        "items": {
                          "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "awsElasticBlockStore": {
                              "description": "awsElasticBlockStore represents an AWS Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: AWSElasticBlockStore is deprecated. All operations for the in-tree\nawsElasticBlockStore type are redirected to the ebs.csi.aws.com CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                              "type": "object",
                              "required": [
                                "volumeID"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "type": "string"
                                },
                                "partition": {
                                  "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "readOnly": {
                                  "description": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "type": "boolean"
                                },
                                "volumeID": {
                                  "description": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "azureDisk": {
                              "description": "azureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.\nDeprecated: AzureDisk is deprecated. All operations for the in-tree azureDisk type\nare redirected to the disk.csi.azure.com CSI driver.",
                              "type": "object",
                              "required": [
                                "diskName",
                                "diskURI"
                              ],
                              "properties": {
                                "cachingMode": {
                                  "description": "cachingMode is the Host Caching mode: None, Read Only, Read Write.",
                                  "type": "string"
                                },
                                "diskName": {
                                  "description": "diskName is the Name of the data disk in the blob storage",
                                  "type": "string"
                                },
                                "diskURI": {
                                  "description": "diskURI is the URI of data disk in the blob storage",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "type": "string",
                                  "default": "ext4"
                                },
                                "kind": {
                                  "description": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                  "type": "boolean",
                                  "default": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "azureFile": {
                              "description": "azureFile represents an Azure File Service mount on the host and bind mount to the pod.\nDeprecated: AzureFile is deprecated. All operations for the in-tree azureFile type\nare redirected to the file.csi.azure.com CSI driver.",
                              "type": "object",
                              "required": [
                                "secretName",
                                "shareName"
                              ],
                              "properties": {
                                "readOnly": {
                                  "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                  "type": "boolean"
                                },
                                "secretName": {
                                  "description": "secretName is the  name of secret that contains Azure Storage Account Name and Key",
                                  "type": "string"
                                },
                                "shareName": {
                                  "description": "shareName is the azure share Name",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "cephfs": {
                              "description": "cephFS represents a Ceph FS mount on the host that shares a pod's lifetime.\nDeprecated: CephFS is deprecated and the in-tree cephfs type is no longer supported.",
                              "type": "object",
                              "required": [
                                "monitors"
                              ],
                              "properties": {
                                "monitors": {
                                  "description": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "path": {
                                  "description": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                  "type": "boolean"
                                },
                                "secretFile": {
                                  "description": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                  "type": "string"
                                },
                                "secretRef": {
                                  "description": "secretRef is Optional: SecretRef is reference to the authentication secret for User, default is empty.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "user": {
                                  "description": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "cinder": {
                              "description": "cinder represents a cinder volume attached and mounted on kubelets host machine.\nDeprecated: Cinder is deprecated. All operations for the in-tree cinder type\nare redirected to the cinder.csi.openstack.org CSI driver.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                              "type": "object",
                              "required": [
                                "volumeID"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "description": "secretRef is optional: points to a secret object containing parameters used to connect\nto OpenStack.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "volumeID": {
                                  "description": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "configMap": {
                              "description": "configMap represents a configMap that should populate this volume",
                              "type": "object",
                              "properties": {
                                "defaultMode": {
                                  "description": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "items": {
                                  "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                  "type": "array",
                                  "items": {
                                    "description": "Maps a string key to a path within a volume.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "path"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the key to project.",
                                        "type": "string"
                                      },
                                      "mode": {
                                        "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "path": {
                                        "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "description": "optional specify whether the ConfigMap or its keys must be defined",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "csi": {
                              "description": "csi (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers.",
                              "type": "object",
                              "required": [
                                "driver"
                              ],
                              "properties": {
                                "driver": {
                                  "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster.",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.",
                                  "type": "string"
                                },
                                "nodePublishSecretRef": {
                                  "description": "nodePublishSecretRef is a reference to the secret object containing\nsensitive information to pass to the CSI driver to complete the CSI\nNodePublishVolume and NodeUnpublishVolume calls.\nThis field is optional, and  may be empty if no secret is required. If the\nsecret object contains more than one secret, all secret references are passed.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "readOnly": {
                                  "description": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).",
                                  "type": "boolean"
                                },
                                "volumeAttributes": {
                                  "description": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "downwardAPI": {
                              "description": "downwardAPI represents downward API about the pod that should populate this volume",
                              "type": "object",
                              "properties": {
                                "defaultMode": {
                                  "description": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "items": {
                                  "description": "Items is a list of downward API volume file",
                                  "type": "array",
                                  "items": {
                                    "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                    "type": "object",
                                    "required": [
                                      "path"
                                    ],
                                    "properties": {
                                      "fieldRef": {
                                        "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                        "type": "object",
                                        "required": [
                                          "fieldPath"
                                        ],
                                        "properties": {
                                          "apiVersion": {
                                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                            "type": "string"
                                          },
                                          "fieldPath": {
                                            "description": "Path of the field to select in the specified API version.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "mode": {
                                        "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "path": {
                                        "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                        "type": "string"
                                      },
                                      "resourceFieldRef": {
                                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                        "type": "object",
                                        "required": [
                                          "resource"
                                        ],
                                        "properties": {
                                          "containerName": {
                                            "description": "Container name: required for volumes, optional for env vars",
                                            "type": "string"
                                          },
                                          "divisor": {
                                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "resource": {
                                            "description": "Required: resource to select",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "emptyDir": {
                              "description": "emptyDir represents a temporary directory that shares a pod's lifetime.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                              "type": "object",
                              "properties": {
                                "medium": {
                                  "description": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "type": "string"
                                },
                                "sizeLimit": {
                                  "description": "sizeLimit is the total amount of local storage required for this EmptyDir volume.\nThe size limit is also applicable for memory medium.\nThe maximum usage on memory medium EmptyDir would be the minimum value between\nthe SizeLimit specified here and the sum of memory limits of all containers in a pod.\nThe default is nil which means that the limit is undefined.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir",
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "additionalProperties": false
                            },
                            "ephemeral": {
                              "description": "ephemeral represents a volume that is handled by a cluster storage driver.\nThe volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts,\nand deleted when the pod is removed.\n\nUse this if:\na) the volume is only needed while the pod runs,\nb) features of normal volumes like restoring from snapshot or capacity\n   tracking are needed,\nc) the storage driver is specified through a storage class, and\nd) the storage driver supports dynamic volume provisioning through\n   a PersistentVolumeClaim (see EphemeralVolumeSource for more\n   information on the connection between this volume type\n   and PersistentVolumeClaim).\n\nUse PersistentVolumeClaim or one of the vendor-specific\nAPIs for volumes that persist for longer than the lifecycle\nof an individual pod.\n\nUse CSI for light-weight local ephemeral volumes if the CSI driver is meant to\nbe used that way - see the documentation of the driver for\nmore information.\n\nA pod can use both types of ephemeral volumes and\npersistent volumes at the same time.",
                              "type": "object",
                              "properties": {
                                "volumeClaimTemplate": {
                                  "description": "Will be used to create a stand-alone PVC to provision the volume.\nThe pod in which this EphemeralVolumeSource is embedded will be the\nowner of the PVC, i.e. the PVC will be deleted together with the\npod.  The name of the PVC will be `\u003cpod name\u003e-\u003cvolume name\u003e` where\n`\u003cvolume name\u003e` is the name from the `PodSpec.Volumes` array\nentry. Pod validation will reject the pod if the concatenated name\nis not valid for a PVC (for example, too long).\n\nAn existing PVC with that name that is not owned by the pod\nwill *not* be used for the pod to avoid using an unrelated\nvolume by mistake. Starting the pod is then blocked until\nthe unrelated PVC is removed. If such a pre-created PVC is\nmeant to be used by the pod, the PVC has to updated with an\nowner reference to the pod once the pod exists. Normally\nthis should not be necessary, but it may be useful when\nmanually reconstructing a broken cluster.\n\nThis field is read-only and no changes will be made by Kubernetes\nto the PVC after it has been created.\n\nRequired, must not be nil.",
                                  "type": "object",
                                  "required": [
                                    "spec"
                                  ],
                                  "properties": {
                                    "metadata": {
                                      "description": "May contain labels and annotations that will be copied into the PVC\nwhen creating it. No other fields are allowed and will be rejected during\nvalidation.",
                                      "type": "object"
                                    },
                                    "spec": {
                                      "description": "The specification for the PersistentVolumeClaim. The entire content is\ncopied unchanged into the PVC that gets created from this\ntemplate. The same fields as in a PersistentVolumeClaim\nare also valid here.",
                                      "type": "object",
                                      "properties": {
                                        "accessModes": {
                                          "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "x-kubernetes-list-type": "atomic"
                                        },
                                        "dataSource": {
                                          "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                                          "type": "object",
                                          "required": [
                                            "kind",
                                            "name"
                                          ],
                                          "properties": {
                                            "apiGroup": {
                                              "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                              "type": "string"
                                            },
                                            "kind": {
                                              "description": "Kind is the type of resource being referenced",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name is the name of resource being referenced",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false,
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "dataSourceRef": {
                                          "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                          "type": "object",
                                          "required": [
                                            "kind",
                                            "name"
                                          ],
                                          "properties": {
                                            "apiGroup": {
                                              "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                              "type": "string"
                                            },
                                            "kind": {
                                              "description": "Kind is the type of resource being referenced",
                                              "type": "string"
                                            },
                                            "name": {
                                              "description": "Name is the name of resource being referenced",
                                              "type": "string"
                                            },
                                            "namespace": {
                                              "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                              "type": "string"
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "resources": {
                                          "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                                          "type": "object",
                                          "properties": {
                                            "limits": {
                                              "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              }
                                            },
                                            "requests": {
                                              "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                              "type": "object",
                                              "additionalProperties": {
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              }
                                            }
                                          },
                                          "additionalProperties": false
                                        },
                                        "selector": {
                                          "description": "selector is a label query over volumes to consider for binding.",
                                          "type": "object",
                                          "properties": {
                                            "matchExpressions": {
                                              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                              "type": "array",
                                              "items": {
                                                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                "type": "object",
                                                "required": [
                                                  "key",
                                                  "operator"
                                                ],
                                                "properties": {
                                                  "key": {
                                                    "description": "key is the label key that the selector applies to.",
                                                    "type": "string"
                                                  },
                                                  "operator": {
                                                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                    "type": "string"
                                                  },
                                                  "values": {
                                                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                    "type": "array",
                                                    "items": {
                                                      "type": "string"
                                                    },
                                                    "x-kubernetes-list-type": "atomic"
                                                  }
                                                },
                                                "additionalProperties": false
                                              },
                                              "x-kubernetes-list-type": "atomic"
                                            },
                                            "matchLabels": {
                                              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                              "type": "object",
                                              "additionalProperties": {
                                                "type": "string"
                                              }
                                            }
                                          },
                                          "additionalProperties": false,
                                          "x-kubernetes-map-type": "atomic"
                                        },
                                        "storageClassName": {
                                          "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                                          "type": "string"
                                        },
                                        "volumeAttributesClassName": {
                                          "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                                          "type": "string"
                                        },
                                        "volumeMode": {
                                          "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                                          "type": "string"
                                        },
                                        "volumeName": {
                                          "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                                          "type": "string"
                                        }
                                      },
                                      "additionalProperties": false
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "fc": {
                              "description": "fc represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.",
                              "type": "object",
                              "properties": {
                                "fsType": {
                                  "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "type": "string"
                                },
                                "lun": {
                                  "description": "lun is Optional: FC target lun number",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "readOnly": {
                                  "description": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                  "type": "boolean"
                                },
                                "targetWWNs": {
                                  "description": "targetWWNs is Optional: FC target worldwide names (WWNs)",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "wwids": {
                                  "description": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "flexVolume": {
                              "description": "flexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin.\nDeprecated: FlexVolume is deprecated. Consider using a CSIDriver instead.",
                              "type": "object",
                              "required": [
                                "driver"
                              ],
                              "properties": {
                                "driver": {
                                  "description": "driver is the name of the driver to use for this volume.",
                                  "type": "string"
                                },
                                "fsType": {
                                  "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.",
                                  "type": "string"
                                },
                                "options": {
                                  "description": "options is Optional: this field holds extra command options if any.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "readOnly": {
                                  "description": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "description": "secretRef is Optional: secretRef is reference to the secret object containing\nsensitive information to pass to the plugin scripts. This may be\nempty if no secret object is specified. If the secret object\ncontains more than one secret, all secrets are passed to the plugin\nscripts.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "flocker": {
                              "description": "flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running.\nDeprecated: Flocker is deprecated and the in-tree flocker type is no longer supported.",
                              "type": "object",
                              "properties": {
                                "datasetName": {
                                  "description": "datasetName is Name of the dataset stored as metadata -\u003e name on the dataset for Flocker\nshould be considered as deprecated",
                                  "type": "string"
                                },
                                "datasetUUID": {
                                  "description": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "gcePersistentDisk": {
                              "description": "gcePersistentDisk represents a GCE Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nDeprecated: GCEPersistentDisk is deprecated. All operations for the in-tree\ngcePersistentDisk type are redirected to the pd.csi.storage.gke.io CSI driver.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                              "type": "object",
                              "required": [
                                "pdName"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "type": "string"
                                },
                                "partition": {
                                  "description": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "pdName": {
                                  "description": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            "gitRepo": {
                              "description": "gitRepo represents a git repository at a particular revision.\nDeprecated: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container.",
                              "type": "object",
                              "required": [
                                "repository"
                              ],
                              "properties": {
                                "directory": {
                                  "description": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.",
                                  "type": "string"
                                },
                                "repository": {
                                  "description": "repository is the URL",
                                  "type": "string"
                                },
                                "revision": {
                                  "description": "revision is the commit hash for the specified revision.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "glusterfs": {
                              "description": "glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime.\nDeprecated: Glusterfs is deprecated and the in-tree glusterfs type is no longer supported.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md",
                              "type": "object",
                              "required": [
                                "endpoints",
                                "path"
                              ],
                              "properties": {
                                "endpoints": {
                                  "description": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                  "type": "string"
                                },
                                "path": {
                                  "description": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            "hostPath": {
                              "description": "hostPath represents a pre-existing file or directory on the host\nmachine that is directly exposed to the container. This is generally\nused for system agents or other privileged things that are allowed\nto see the host machine. Most containers will NOT need this.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                              "type": "object",
                              "required": [
                                "path"
                              ],
                              "properties": {
                                "path": {
                                  "description": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "image": {
                              "description": "image represents an OCI object (a container image or artifact) pulled and mounted on the kubelet's host machine.\nThe volume is resolved at pod startup depending on which PullPolicy value is provided:\n\n- Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\n- Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\n- IfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\n\nThe volume gets re-resolved if the pod gets deleted and recreated, which means that new remote content will become available on pod recreation.\nA failure to resolve or pull the image during pod startup will block containers from starting and may add significant latency. Failures will be retried using normal volume backoff and will be reported on the pod reason and message.\nThe types of objects that may be mounted by this volume are defined by the container runtime implementation on a host machine and at minimum must include all valid types supported by the container image field.\nThe OCI object gets mounted in a single directory (spec.containers[*].volumeMounts.mountPath) by merging the manifest layers in the same way as for container images.\nThe volume will be mounted read-only (ro) and non-executable files (noexec).\nSub path mounts for containers are not supported (spec.containers[*].volumeMounts.subpath) before 1.33.\nThe field spec.securityContext.fsGroupChangePolicy has no effect on this volume type.",
                              "type": "object",
                              "properties": {
                                "pullPolicy": {
                                  "description": "Policy for pulling OCI objects. Possible values are:\nAlways: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails.\nNever: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn't present.\nIfNotPresent: the kubelet pulls if the reference isn't already present on disk. Container creation will fail if the reference isn't present and the pull fails.\nDefaults to Always if :latest tag is specified, or IfNotPresent otherwise.",
                                  "type": "string"
                                },
                                "reference": {
                                  "description": "Required: Image or artifact reference to be used.\nBehaves in the same way as pod.spec.containers[*].image.\nPull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets.\nMore info: https://kubernetes.io/docs/concepts/containers/images\nThis field is optional to allow higher level config management to default or override\ncontainer images in workload controllers like Deployments and StatefulSets.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "iscsi": {
                              "description": "iscsi represents an ISCSI Disk resource that is attached to a\nkubelet's host machine and then exposed to the pod.\nMore info: https://examples.k8s.io/volumes/iscsi/README.md",
                              "type": "object",
                              "required": [
                                "iqn",
                                "lun",
                                "targetPortal"
                              ],
                              "properties": {
                                "chapAuthDiscovery": {
                                  "description": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication",
                                  "type": "boolean"
                                },
                                "chapAuthSession": {
                                  "description": "chapAuthSession defines whether support iSCSI Session CHAP authentication",
                                  "type": "boolean"
                                },
                                "fsType": {
                                  "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi",
                                  "type": "string"
                                },
                                "initiatorName": {
                                  "description": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n\u003ctarget portal\u003e:\u003cvolume name\u003e will be created for the connection.",
                                  "type": "string"
                                },
                                "iqn": {
                                  "description": "iqn is the target iSCSI Qualified Name.",
                                  "type": "string"
                                },
                                "iscsiInterface": {
                                  "description": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).",
                                  "type": "string",
                                  "default": "default"
                                },
                                "lun": {
                                  "description": "lun represents iSCSI Target Lun number.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "portals": {
                                  "description": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "readOnly": {
                                  "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "description": "secretRef is the CHAP Secret for iSCSI target and initiator authentication",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "targetPortal": {
                                  "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "name": {
                              "description": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string"
                            },
                            "nfs": {
                              "description": "nfs represents an NFS mount on the host that shares a pod's lifetime\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                              "type": "object",
                              "required": [
                                "path",
                                "server"
                              ],
                              "properties": {
                                "path": {
                                  "description": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "type": "boolean"
                                },
                                "server": {
                                  "description": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "persistentVolumeClaim": {
                              "description": "persistentVolumeClaimVolumeSource represents a reference to a\nPersistentVolumeClaim in the same namespace.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                              "type": "object",
                              "required": [
                                "claimName"
                              ],
                              "properties": {
                                "claimName": {
                                  "description": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            "photonPersistentDisk": {
                              "description": "photonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine.\nDeprecated: PhotonPersistentDisk is deprecated and the in-tree photonPersistentDisk type is no longer supported.",
                              "type": "object",
                              "required": [
                                "pdID"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "type": "string"
                                },
                                "pdID": {
                                  "description": "pdID is the ID that identifies Photon Controller persistent disk",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "portworxVolume": {
                              "description": "portworxVolume represents a portworx volume attached and mounted on kubelets host machine.\nDeprecated: PortworxVolume is deprecated. All operations for the in-tree portworxVolume type\nare redirected to the pxd.portworx.com CSI driver when the CSIMigrationPortworx feature-gate\nis on.",
                              "type": "object",
                              "required": [
                                "volumeID"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                  "type": "boolean"
                                },
                                "volumeID": {
                                  "description": "volumeID uniquely identifies a Portworx volume",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "projected": {
                              "description": "projected items for all in one resources secrets, configmaps, and downward API",
                              "type": "object",
                              "properties": {
                                "defaultMode": {
                                  "description": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "sources": {
                                  "description": "sources is the list of volume projections. Each entry in this list\nhandles one source.",
                                  "type": "array",
                                  "items": {
                                    "description": "Projection that may be projected along with other supported volume types.\nExactly one of these fields must be set.",
                                    "type": "object",
                                    "properties": {
                                      "clusterTrustBundle": {
                                        "description": "ClusterTrustBundle allows a pod to access the `.spec.trustBundle` field\nof ClusterTrustBundle objects in an auto-updating file.\n\nAlpha, gated by the ClusterTrustBundleProjection feature gate.\n\nClusterTrustBundle objects can either be selected by name, or by the\ncombination of signer name and a label selector.\n\nKubelet performs aggressive normalization of the PEM contents written\ninto the pod filesystem.  Esoteric PEM features such as inter-block\ncomments and block headers are stripped.  Certificates are deduplicated.\nThe ordering of certificates within the file is arbitrary, and Kubelet\nmay change the order over time.",
                                        "type": "object",
                                        "required": [
                                          "path"
                                        ],
                                        "properties": {
                                          "labelSelector": {
                                            "description": "Select all ClusterTrustBundles that match this label selector.  Only has\neffect if signerName is set.  Mutually-exclusive with name.  If unset,\ninterpreted as \"match nothing\".  If set but empty, interpreted as \"match\neverything\".",
                                            "type": "object",
                                            "properties": {
                                              "matchExpressions": {
                                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                                "type": "array",
                                                "items": {
                                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                                  "type": "object",
                                                  "required": [
                                                    "key",
                                                    "operator"
                                                  ],
                                                  "properties": {
                                                    "key": {
                                                      "description": "key is the label key that the selector applies to.",
                                                      "type": "string"
                                                    },
                                                    "operator": {
                                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                                      "type": "string"
                                                    },
                                                    "values": {
                                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                                      "type": "array",
                                                      "items": {
                                                        "type": "string"
                                                      },
                                                      "x-kubernetes-list-type": "atomic"
                                                    }
                                                  },
                                                  "additionalProperties": false
                                                },
                                                "x-kubernetes-list-type": "atomic"
                                              },
                                              "matchLabels": {
                                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                                "type": "object",
                                                "additionalProperties": {
                                                  "type": "string"
                                                }
                                              }
                                            },
                                            "additionalProperties": false,
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "name": {
                                            "description": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.",
                                            "type": "string"
                                          },
                                          "optional": {
                                            "description": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.",
                                            "type": "boolean"
                                          },
                                          "path": {
                                            "description": "Relative path from the volume root to write the bundle.",
                                            "type": "string"
                                          },
                                          "signerName": {
                                            "description": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "configMap": {
                                        "description": "configMap information about the configMap data to project",
                                        "type": "object",
                                        "properties": {
                                          "items": {
                                            "description": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                            "type": "array",
                                            "items": {
                                              "description": "Maps a string key to a path within a volume.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "path"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the key to project.",
                                                  "type": "string"
                                                },
                                                "mode": {
                                                  "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "path": {
                                                  "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "optional specify whether the ConfigMap or its keys must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "downwardAPI": {
                                        "description": "downwardAPI information about the downwardAPI data to project",
                                        "type": "object",
                                        "properties": {
                                          "items": {
                                            "description": "Items is a list of DownwardAPIVolume file",
                                            "type": "array",
                                            "items": {
                                              "description": "DownwardAPIVolumeFile represents information to create the file containing the pod field",
                                              "type": "object",
                                              "required": [
                                                "path"
                                              ],
                                              "properties": {
                                                "fieldRef": {
                                                  "description": "Required: Selects a field of the pod: only annotations, labels, name, namespace and uid are supported.",
                                                  "type": "object",
                                                  "required": [
                                                    "fieldPath"
                                                  ],
                                                  "properties": {
                                                    "apiVersion": {
                                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                      "type": "string"
                                                    },
                                                    "fieldPath": {
                                                      "description": "Path of the field to select in the specified API version.",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false,
                                                  "x-kubernetes-map-type": "atomic"
                                                },
                                                "mode": {
                                                  "description": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "path": {
                                                  "description": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'",
                                                  "type": "string"
                                                },
                                                "resourceFieldRef": {
                                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.",
                                                  "type": "object",
                                                  "required": [
                                                    "resource"
                                                  ],
                                                  "properties": {
                                                    "containerName": {
                                                      "description": "Container name: required for volumes, optional for env vars",
                                                      "type": "string"
                                                    },
                                                    "divisor": {
                                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                      "anyOf": [
                                                        {
                                                          "type": "integer"
                                                        },
                                                        {
                                                          "type": "string"
                                                        }
                                                      ],
                                                      "x-kubernetes-int-or-string": true
                                                    },
                                                    "resource": {
                                                      "description": "Required: resource to select",
                                                      "type": "string"
                                                    }
                                                  },
                                                  "additionalProperties": false,
                                                  "x-kubernetes-map-type": "atomic"
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "secret": {
                                        "description": "secret information about the secret data to project",
                                        "type": "object",
                                        "properties": {
                                          "items": {
                                            "description": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                            "type": "array",
                                            "items": {
                                              "description": "Maps a string key to a path within a volume.",
                                              "type": "object",
                                              "required": [
                                                "key",
                                                "path"
                                              ],
                                              "properties": {
                                                "key": {
                                                  "description": "key is the key to project.",
                                                  "type": "string"
                                                },
                                                "mode": {
                                                  "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                                  "type": "integer",
                                                  "format": "int32"
                                                },
                                                "path": {
                                                  "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            },
                                            "x-kubernetes-list-type": "atomic"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "optional field specify whether the Secret or its key must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "serviceAccountToken": {
                                        "description": "serviceAccountToken is information about the serviceAccountToken data to project",
                                        "type": "object",
                                        "required": [
                                          "path"
                                        ],
                                        "properties": {
                                          "audience": {
                                            "description": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.",
                                            "type": "string"
                                          },
                                          "expirationSeconds": {
                                            "description": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.",
                                            "type": "integer",
                                            "format": "int64"
                                          },
                                          "path": {
                                            "description": "path is the path relative to the mount point of the file to project the\ntoken into.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            },
                            "quobyte": {
                              "description": "quobyte represents a Quobyte mount on the host that shares a pod's lifetime.\nDeprecated: Quobyte is deprecated and the in-tree quobyte type is no longer supported.",
                              "type": "object",
                              "required": [
                                "registry",
                                "volume"
                              ],
                              "properties": {
                                "group": {
                                  "description": "group to map volume access to\nDefault is no group",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.",
                                  "type": "boolean"
                                },
                                "registry": {
                                  "description": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes",
                                  "type": "string"
                                },
                                "tenant": {
                                  "description": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "user to map volume access to\nDefaults to serivceaccount user",
                                  "type": "string"
                                },
                                "volume": {
                                  "description": "volume is a string that references an already created Quobyte volume by name.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "rbd": {
                              "description": "rbd represents a Rados Block Device mount on the host that shares a pod's lifetime.\nDeprecated: RBD is deprecated and the in-tree rbd type is no longer supported.\nMore info: https://examples.k8s.io/volumes/rbd/README.md",
                              "type": "object",
                              "required": [
                                "image",
                                "monitors"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd",
                                  "type": "string"
                                },
                                "image": {
                                  "description": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                  "type": "string"
                                },
                                "keyring": {
                                  "description": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                  "type": "string",
                                  "default": "/etc/ceph/keyring"
                                },
                                "monitors": {
                                  "description": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "pool": {
                                  "description": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                  "type": "string",
                                  "default": "rbd"
                                },
                                "readOnly": {
                                  "description": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "description": "secretRef is name of the authentication secret for RBDUser. If provided\noverrides keyring.\nDefault is nil.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "user": {
                                  "description": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it",
                                  "type": "string",
                                  "default": "admin"
                                }
                              },
                              "additionalProperties": false
                            },
                            "scaleIO": {
                              "description": "scaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.\nDeprecated: ScaleIO is deprecated and the in-tree scaleIO type is no longer supported.",
                              "type": "object",
                              "required": [
                                "gateway",
                                "secretRef",
                                "system"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".",
                                  "type": "string",
                                  "default": "xfs"
                                },
                                "gateway": {
                                  "description": "gateway is the host address of the ScaleIO API Gateway.",
                                  "type": "string"
                                },
                                "protectionDomain": {
                                  "description": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "description": "secretRef references to the secret for ScaleIO user and other\nsensitive information. If this is not provided, Login operation will fail.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "sslEnabled": {
                                  "description": "sslEnabled Flag enable/disable SSL communication with Gateway, default false",
                                  "type": "boolean"
                                },
                                "storageMode": {
                                  "description": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.",
                                  "type": "string",
                                  "default": "ThinProvisioned"
                                },
                                "storagePool": {
                                  "description": "storagePool is the ScaleIO Storage Pool associated with the protection domain.",
                                  "type": "string"
                                },
                                "system": {
                                  "description": "system is the name of the storage system as configured in ScaleIO.",
                                  "type": "string"
                                },
                                "volumeName": {
                                  "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "secret": {
                              "description": "secret represents a secret that should populate this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                              "type": "object",
                              "properties": {
                                "defaultMode": {
                                  "description": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "items": {
                                  "description": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.",
                                  "type": "array",
                                  "items": {
                                    "description": "Maps a string key to a path within a volume.",
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "path"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "key is the key to project.",
                                        "type": "string"
                                      },
                                      "mode": {
                                        "description": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.",
                                        "type": "integer",
                                        "format": "int32"
                                      },
                                      "path": {
                                        "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "optional": {
                                  "description": "optional field specify whether the Secret or its keys must be defined",
                                  "type": "boolean"
                                },
                                "secretName": {
                                  "description": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "storageos": {
                              "description": "storageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.\nDeprecated: StorageOS is deprecated and the in-tree storageos type is no longer supported.",
                              "type": "object",
                              "properties": {
                                "fsType": {
                                  "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "type": "string"
                                },
                                "readOnly": {
                                  "description": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.",
                                  "type": "boolean"
                                },
                                "secretRef": {
                                  "description": "secretRef specifies the secret to use for obtaining the StorageOS API\ncredentials.  If not specified, default values will be attempted.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "volumeName": {
                                  "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace.",
                                  "type": "string"
                                },
                                "volumeNamespace": {
                                  "description": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "vsphereVolume": {
                              "description": "vsphereVolume represents a vSphere volume attached and mounted on kubelets host machine.\nDeprecated: VsphereVolume is deprecated. All operations for the in-tree vsphereVolume type\nare redirected to the csi.vsphere.vmware.com CSI driver.",
                              "type": "object",
                              "required": [
                                "volumePath"
                              ],
                              "properties": {
                                "fsType": {
                                  "description": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.",
                                  "type": "string"
                                },
                                "storagePolicyID": {
                                  "description": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.",
                                  "type": "string"
                                },
                                "storagePolicyName": {
                                  "description": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.",
                                  "type": "string"
                                },
                                "volumePath": {
                                  "description": "volumePath is the path that identifies vSphere volume vmdk",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "templateType": {
                    "type": "string"
                  },
                  "timeChaos": {
                    "description": "TimeChaosSpec defines the desired state of TimeChaos",
                    "type": "object",
                    "required": [
                      "mode",
                      "selector",
                      "timeOffset"
                    ],
                    "properties": {
                      "clockIds": {
                        "description": "ClockIds defines all affected clock id\nAll available options are [\"CLOCK_REALTIME\",\"CLOCK_MONOTONIC\",\"CLOCK_PROCESS_CPUTIME_ID\",\"CLOCK_THREAD_CPUTIME_ID\",\n\"CLOCK_MONOTONIC_RAW\",\"CLOCK_REALTIME_COARSE\",\"CLOCK_MONOTONIC_COARSE\",\"CLOCK_BOOTTIME\",\"CLOCK_REALTIME_ALARM\",\n\"CLOCK_BOOTTIME_ALARM\"]\nDefault value is [\"CLOCK_REALTIME\"]",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "containerNames": {
                        "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "duration": {
                        "description": "Duration represents the duration of the chaos action",
                        "type": "string"
                      },
                      "mode": {
                        "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
                        "type": "string",
                        "enum": [
                          "one",
                          "all",
                          "fixed",
                          "fixed-percent",
                          "random-max-percent"
                        ]
                      },
                      "remoteCluster": {
                        "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector is used to select pods that are used to inject chaos action.",
                        "type": "object",
                        "properties": {
                          "annotationSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "expressionSelectors": {
                            "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
                            "type": "array",
                            "items": {
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                              "type": "object",
                              "required": [
                                "key",
                                "operator"
                              ],
                              "properties": {
                                "key": {
                                  "description": "key is the label key that the selector applies to.",
                                  "type": "string"
                                },
                                "operator": {
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                  "type": "string"
                                },
                                "values": {
                                  "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "fieldSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "labelSelectors": {
                            "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "namespaces": {
                            "description": "Namespaces is a set of namespace to which objects belong.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "nodeSelectors": {
                            "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "nodes": {
                            "description": "Nodes is a set of node name and objects must belong to these nodes.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "podPhaseSelectors": {
                            "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "pods": {
                            "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "timeOffset": {
                        "description": "TimeOffset defines the delta time of injected program. It's a possibly signed sequence of decimal numbers, such as\n\"300ms\", \"-1.5h\" or \"2h45m\". Valid time units are \"ns\", \"us\" (or \"µs\"), \"ms\", \"s\", \"m\", \"h\".",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ScheduleStatus is the status of a schedule object",
      "type": "object",
      "properties": {
        "active": {
          "type": "array",
          "items": {
            "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
            "type": "object",
            "properties": {
              "apiVersion": {
                "description": "API version of the referent.",
                "type": "string"
              },
              "fieldPath": {
                "description": "If referring to a piece of an object instead of an entire object, this string\nshould contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].\nFor example, if the object reference is to a container within a pod, this would take on a value like:\n\"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered\nthe event) or if no container name is specified \"spec.containers[2]\" (container with\nindex 2 in this pod). This syntax is chosen only to have some well-defined way of\nreferencing a part of an object.",
                "type": "string"
              },
              "kind": {
                "description": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                "type": "string"
              },
              "name": {
                "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                "type": "string"
              },
              "namespace": {
                "description": "Namespace of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                "type": "string"
              },
              "resourceVersion": {
                "description": "Specific resourceVersion to which this reference is made, if any.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                "type": "string"
              },
              "uid": {
                "description": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "x-kubernetes-map-type": "atomic"
          }
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "nullable": true
        }
      },
      "additionalProperties": false
    }
  }
}
