{
  "description": "AzureChaos is the Schema for the azurechaos API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AzureChaosSpec is the content of the specification for an AzureChaos",
      "type": "object",
      "required": [
        "action",
        "resourceGroupName",
        "subscriptionID",
        "vmName"
      ],
      "properties": {
        "action": {
          "description": "Action defines the specific azure chaos action. Supported action: vm-stop / vm-restart / disk-detach Default action: vm-stop",
          "type": "string",
          "enum": [
            "vm-stop",
            "vm-restart",
            "disk-detach"
          ]
        },
        "diskName": {
          "description": "DiskName indicates the name of the disk. Needed in disk-detach.",
          "type": "string"
        },
        "duration": {
          "description": "Duration represents the duration of the chaos action.",
          "type": "string"
        },
        "lun": {
          "description": "LUN indicates the Logical Unit Number of the data disk. Needed in disk-detach.",
          "type": "integer"
        },
        "remoteCluster": {
          "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
          "type": "string"
        },
        "resourceGroupName": {
          "description": "ResourceGroupName defines the name of ResourceGroup",
          "type": "string"
        },
        "secretName": {
          "description": "SecretName defines the name of kubernetes secret. It is used for Azure credentials.",
          "type": "string"
        },
        "subscriptionID": {
          "description": "SubscriptionID defines the id of Azure subscription.",
          "type": "string"
        },
        "vmName": {
          "description": "VMName defines the name of Virtual Machine",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "AzureChaosStatus represents the status of an AzureChaos",
      "type": "object",
      "required": [
        "experiment"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represents the current global condition of the chaos",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "experiment": {
          "description": "Experiment records the last experiment state.",
          "type": "object",
          "properties": {
            "containerRecords": {
              "description": "Records are used to track the running status",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "injectedCount",
                  "phase",
                  "recoveredCount",
                  "selectorKey"
                ],
                "properties": {
                  "events": {
                    "description": "Events are the essential details about the injections and recoveries",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "operation",
                        "timestamp",
                        "type"
                      ],
                      "properties": {
                        "message": {
                          "description": "Message is the detail message, e.g. the reason why we failed to inject the chaos",
                          "type": "string"
                        },
                        "operation": {
                          "description": "Operation represents the operation we are doing, when we crate this event",
                          "type": "string"
                        },
                        "timestamp": {
                          "description": "Timestamp is time when we create this event",
                          "type": "string",
                          "format": "date-time"
                        },
                        "type": {
                          "description": "Type means the stage of this event",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "injectedCount": {
                    "description": "InjectedCount is a counter to record the sum of successful injections",
                    "type": "integer"
                  },
                  "phase": {
                    "type": "string"
                  },
                  "recoveredCount": {
                    "description": "RecoveredCount is a counter to record the sum of successful recoveries",
                    "type": "integer"
                  },
                  "selectorKey": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "desiredPhase": {
              "type": "string",
              "enum": [
                "Run",
                "Stop"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
