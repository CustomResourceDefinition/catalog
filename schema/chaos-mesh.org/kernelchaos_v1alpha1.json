{
  "description": "KernelChaos is the Schema for the kernelchaos API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Spec defines the behavior of a kernel chaos experiment",
      "type": "object",
      "required": [
        "failKernRequest",
        "mode",
        "selector"
      ],
      "properties": {
        "containerNames": {
          "description": "ContainerNames indicates list of the name of affected container.\nIf not set, the first container will be injected",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "duration": {
          "description": "Duration represents the duration of the chaos action",
          "type": "string"
        },
        "failKernRequest": {
          "description": "FailKernRequest defines the request of kernel injection",
          "type": "object",
          "required": [
            "failtype"
          ],
          "properties": {
            "callchain": {
              "description": "Callchain indicate a special call chain, such as:\n    ext4_mount\n      -\u003e mount_subtree\n         -\u003e ...\n            -\u003e should_failslab\nWith an optional set of predicates and an optional set of\nparameters, which used with predicates. You can read call chan\nand predicate examples from https://github.com/chaos-mesh/bpfki/tree/develop/examples\nto learn more.\nIf no special call chain, just keep Callchain empty, which means it will fail at any call chain\nwith slab alloc (eg: kmalloc).",
              "type": "array",
              "items": {
                "description": "Frame defines the function signature and predicate in function's body",
                "type": "object",
                "properties": {
                  "funcname": {
                    "description": "Funcname can be find from kernel source or `/proc/kallsyms`, such as `ext4_mount`",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters is used with predicate, for example, if you want to inject slab error\nin `d_alloc_parallel(struct dentry *parent, const struct qstr *name)` with a special\nname `bananas`, you need to set it to `struct dentry *parent, const struct qstr *name`\notherwise omit it.",
                    "type": "string"
                  },
                  "predicate": {
                    "description": "Predicate will access the arguments of this Frame, example with Parameters's, you can\nset it to `STRNCMP(name-\u003ename, \"bananas\", 8)` to make inject only with it, or omit it\nto inject for all d_alloc_parallel call chain.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "failtype": {
              "description": "FailType indicates what to fail, can be set to '0' / '1' / '2'\nIf `0`, indicates slab to fail (should_failslab)\nIf `1`, indicates alloc_page to fail (should_fail_alloc_page)\nIf `2`, indicates bio to fail (should_fail_bio)\nYou can read:\n  1. https://www.kernel.org/doc/html/latest/fault-injection/fault-injection.html\n  2. http://github.com/iovisor/bcc/blob/master/tools/inject_example.txt\nto learn more",
              "type": "integer",
              "format": "int32",
              "maximum": 2,
              "minimum": 0
            },
            "headers": {
              "description": "Headers indicates the appropriate kernel headers you need.\nEg: \"linux/mmzone.h\", \"linux/blkdev.h\" and so on",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "probability": {
              "description": "Probability indicates the fails with probability.\nIf you want 1%, please set this field with 1.",
              "type": "integer",
              "format": "int32",
              "maximum": 100,
              "minimum": 0
            },
            "times": {
              "description": "Times indicates the max times of fails.",
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          "additionalProperties": false
        },
        "mode": {
          "description": "Mode defines the mode to run chaos action.\nSupported mode: one / all / fixed / fixed-percent / random-max-percent",
          "type": "string",
          "enum": [
            "one",
            "all",
            "fixed",
            "fixed-percent",
            "random-max-percent"
          ]
        },
        "remoteCluster": {
          "description": "RemoteCluster represents the remote cluster where the chaos will be deployed",
          "type": "string"
        },
        "selector": {
          "description": "Selector is used to select pods that are used to inject chaos action.",
          "type": "object",
          "properties": {
            "annotationSelectors": {
              "description": "Map of string keys and values that can be used to select objects.\nA selector based on annotations.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "expressionSelectors": {
              "description": "a slice of label selector expressions that can be used to select objects.\nA list of selectors based on set-based label expressions.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  }
                },
                "additionalProperties": false
              }
            },
            "fieldSelectors": {
              "description": "Map of string keys and values that can be used to select objects.\nA selector based on fields.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labelSelectors": {
              "description": "Map of string keys and values that can be used to select objects.\nA selector based on labels.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "namespaces": {
              "description": "Namespaces is a set of namespace to which objects belong.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nodeSelectors": {
              "description": "Map of string keys and values that can be used to select nodes.\nSelector which must match a node's labels,\nand objects must belong to these selected nodes.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nodes": {
              "description": "Nodes is a set of node name and objects must belong to these nodes.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "podPhaseSelectors": {
              "description": "PodPhaseSelectors is a set of condition of a pod at the current time.\nsupported value: Pending / Running / Succeeded / Failed / Unknown",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "pods": {
              "description": "Pods is a map of string keys and a set values that used to select pods.\nThe key defines the namespace which pods belong,\nand the each values is a set of pod names.",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        },
        "value": {
          "description": "Value is required when the mode is set to `FixedMode` / `FixedPercentMode` / `RandomMaxPercentMode`.\nIf `FixedMode`, provide an integer of pods to do chaos action.\nIf `FixedPercentMode`, provide a number from 0-100 to specify the percent of pods the server can do chaos action.\nIF `RandomMaxPercentMode`,  provide a number from 0-100 to specify the max percent of pods to do chaos action",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Most recently observed status of the kernel chaos experiment",
      "type": "object",
      "required": [
        "experiment"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represents the current global condition of the chaos",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "experiment": {
          "description": "Experiment records the last experiment state.",
          "type": "object",
          "properties": {
            "containerRecords": {
              "description": "Records are used to track the running status",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "injectedCount",
                  "phase",
                  "recoveredCount",
                  "selectorKey"
                ],
                "properties": {
                  "events": {
                    "description": "Events are the essential details about the injections and recoveries",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "operation",
                        "timestamp",
                        "type"
                      ],
                      "properties": {
                        "message": {
                          "description": "Message is the detail message, e.g. the reason why we failed to inject the chaos",
                          "type": "string"
                        },
                        "operation": {
                          "description": "Operation represents the operation we are doing, when we crate this event",
                          "type": "string"
                        },
                        "timestamp": {
                          "description": "Timestamp is time when we create this event",
                          "type": "string",
                          "format": "date-time"
                        },
                        "type": {
                          "description": "Type means the stage of this event",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "id": {
                    "type": "string"
                  },
                  "injectedCount": {
                    "description": "InjectedCount is a counter to record the sum of successful injections",
                    "type": "integer"
                  },
                  "phase": {
                    "type": "string"
                  },
                  "recoveredCount": {
                    "description": "RecoveredCount is a counter to record the sum of successful recoveries",
                    "type": "integer"
                  },
                  "selectorKey": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "desiredPhase": {
              "type": "string",
              "enum": [
                "Run",
                "Stop"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
