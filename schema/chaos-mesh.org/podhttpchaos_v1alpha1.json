{
  "description": "PodHttpChaos is the Schema for the podhttpchaos API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PodHttpChaosSpec defines the desired state of PodHttpChaos.",
      "type": "object",
      "properties": {
        "rules": {
          "description": "Rules are a list of injection rule for http request.",
          "type": "array",
          "items": {
            "description": "PodHttpChaosRule defines the injection rule for http.",
            "type": "object",
            "required": [
              "actions",
              "port",
              "selector",
              "target"
            ],
            "properties": {
              "actions": {
                "description": "Actions contains rules to inject target.",
                "type": "object",
                "properties": {
                  "abort": {
                    "description": "Abort is a rule to abort a http session.",
                    "type": "boolean"
                  },
                  "delay": {
                    "description": "Delay represents the delay of the target request/response.\nA duration string is a possibly unsigned sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\".",
                    "type": "string"
                  },
                  "patch": {
                    "description": "Patch is a rule to patch some contents in target.",
                    "type": "object",
                    "properties": {
                      "body": {
                        "description": "Body is a rule to patch message body of target.",
                        "type": "object",
                        "required": [
                          "type",
                          "value"
                        ],
                        "properties": {
                          "type": {
                            "description": "Type represents the patch type, only support `JSON` as [merge patch json](https://tools.ietf.org/html/rfc7396) currently.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Value is the patch contents.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "headers": {
                        "description": "Headers is a rule to append http headers of target.\nFor example: `[[\"Set-Cookie\", \"\u003cone cookie\u003e\"], [\"Set-Cookie\", \"\u003canother cookie\u003e\"]]`.",
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "queries": {
                        "description": "Queries is a rule to append uri queries of target(Request only).\nFor example: `[[\"foo\", \"bar\"], [\"foo\", \"unknown\"]]`.",
                        "type": "array",
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "replace": {
                    "description": "Replace is a rule to replace some contents in target.",
                    "type": "object",
                    "properties": {
                      "body": {
                        "description": "Body is a rule to replace http message body in target.",
                        "type": "string",
                        "format": "byte"
                      },
                      "code": {
                        "description": "Code is a rule to replace http status code in response.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "headers": {
                        "description": "Headers is a rule to replace http headers of target.\nThe key-value pairs represent header name and header value pairs.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "method": {
                        "description": "Method is a rule to replace http method in request.",
                        "type": "string"
                      },
                      "path": {
                        "description": "Path is rule to to replace uri path in http request.",
                        "type": "string"
                      },
                      "queries": {
                        "description": "Queries is a rule to replace uri queries in http request.\nFor example, with value `{ \"foo\": \"unknown\" }`, the `/?foo=bar` will be altered to `/?foo=unknown`,",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "port": {
                "description": "Port represents the target port to be proxy of.",
                "type": "integer",
                "format": "int32"
              },
              "selector": {
                "description": "Selector contains the rules to select target.",
                "type": "object",
                "properties": {
                  "code": {
                    "description": "Code is a rule to select target by http status code in response.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "method": {
                    "description": "Method is a rule to select target by http method in request.",
                    "type": "string"
                  },
                  "path": {
                    "description": "Path is a rule to select target by uri path in http request.",
                    "type": "string"
                  },
                  "port": {
                    "description": "Port is a rule to select server listening on specific port.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "request_headers": {
                    "description": "RequestHeaders is a rule to select target by http headers in request.\nThe key-value pairs represent header name and header value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "response_headers": {
                    "description": "ResponseHeaders is a rule to select target by http headers in response.\nThe key-value pairs represent header name and header value pairs.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "source": {
                "description": "Source represents the source of current rules",
                "type": "string"
              },
              "target": {
                "description": "Target is the object to be selected and injected, \u003cRequest|Response\u003e.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "tls": {
          "description": "TLS is the tls config,\nwill be override if there are multiple HTTPChaos experiments are applied",
          "type": "object",
          "required": [
            "certName",
            "keyName",
            "secretName",
            "secretNamespace"
          ],
          "properties": {
            "caName": {
              "description": "CAName represents the data name of ca file in secret, `ca.crt` for example",
              "type": "string"
            },
            "certName": {
              "description": "CertName represents the data name of cert file in secret, `tls.crt` for example",
              "type": "string"
            },
            "keyName": {
              "description": "KeyName represents the data name of key file in secret, `tls.key` for example",
              "type": "string"
            },
            "secretName": {
              "description": "SecretName represents the name of required secret resource",
              "type": "string"
            },
            "secretNamespace": {
              "description": "SecretNamespace represents the namespace of required secret resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PodHttpChaosStatus defines the actual state of PodHttpChaos.",
      "type": "object",
      "properties": {
        "failedMessage": {
          "type": "string"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        },
        "pid": {
          "description": "Pid represents a running tproxy process id.",
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "description": "StartTime represents the start time of a tproxy process.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
