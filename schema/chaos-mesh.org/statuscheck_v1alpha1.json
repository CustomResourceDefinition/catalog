{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Spec defines the behavior of a status check",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "duration": {
          "description": "Duration defines the duration of the whole status check if the\nnumber of failed execution does not exceed the failure threshold.\nDuration is available to both `Synchronous` and `Continuous` mode.\nA duration string is a possibly signed sequence of\ndecimal numbers, each with optional fraction and a unit suffix,\nsuch as \"300ms\", \"-1.5h\" or \"2h45m\".\nValid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\".",
          "type": "string"
        },
        "failureThreshold": {
          "description": "FailureThreshold defines the minimum consecutive failure\nfor the status check to be considered failed.",
          "type": "integer",
          "default": 3,
          "minimum": 1
        },
        "http": {
          "type": "object",
          "required": [
            "criteria",
            "url"
          ],
          "properties": {
            "body": {
              "type": "string"
            },
            "criteria": {
              "description": "Criteria defines how to determine the result of the status check.",
              "type": "object",
              "required": [
                "statusCode"
              ],
              "properties": {
                "statusCode": {
                  "description": "StatusCode defines the expected http status code for the request.\nA statusCode string could be a single code (e.g. 200), or\nan inclusive range (e.g. 200-400, both `200` and `400` are included).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "headers": {
              "description": "A Header represents the key-value pairs in an HTTP header.\n\nThe keys should be in canonical form, as returned by\n[CanonicalHeaderKey].",
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "method": {
              "type": "string",
              "default": "GET",
              "enum": [
                "GET",
                "POST"
              ]
            },
            "url": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "intervalSeconds": {
          "description": "IntervalSeconds defines how often (in seconds) to perform\nan execution of status check.",
          "type": "integer",
          "default": 10,
          "minimum": 1
        },
        "mode": {
          "description": "Mode defines the execution mode of the status check.\nSupport type: Synchronous / Continuous",
          "type": "string",
          "enum": [
            "Synchronous",
            "Continuous"
          ]
        },
        "recordsHistoryLimit": {
          "description": "RecordsHistoryLimit defines the number of record to retain.",
          "type": "integer",
          "default": 100,
          "maximum": 1000,
          "minimum": 1
        },
        "successThreshold": {
          "description": "SuccessThreshold defines the minimum consecutive successes\nfor the status check to be considered successful.\nSuccessThreshold only works for `Synchronous` mode.",
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "timeoutSeconds": {
          "description": "TimeoutSeconds defines the number of seconds after which\nan execution of status check times out.",
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "type": {
          "description": "Type defines the specific status check type.\nSupport type: HTTP",
          "type": "string",
          "default": "HTTP",
          "enum": [
            "HTTP"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Most recently observed status of status check",
      "type": "object",
      "properties": {
        "completionTime": {
          "description": "CompletionTime represents time when the status check was completed.",
          "type": "string",
          "format": "date-time"
        },
        "conditions": {
          "description": "Conditions represents the latest available observations of a StatusCheck's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastProbeTime",
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastProbeTime": {
                "type": "string",
                "format": "date-time"
              },
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "count": {
          "description": "Count represents the total number of the status check executed.",
          "type": "integer",
          "format": "int64"
        },
        "records": {
          "description": "Records contains the history of the execution of StatusCheck.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "outcome",
              "startTime"
            ],
            "properties": {
              "outcome": {
                "type": "string"
              },
              "startTime": {
                "type": "string",
                "format": "date-time"
              }
            },
            "additionalProperties": false
          }
        },
        "startTime": {
          "description": "StartTime represents time when the status check started to execute.",
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false
    }
  }
}
