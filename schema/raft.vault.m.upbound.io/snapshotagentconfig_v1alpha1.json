{
  "description": "SnapshotAgentConfig is the Schema for the SnapshotAgentConfigs API. Creates a Raft Snapshot Agent Configuration for Vault.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SnapshotAgentConfigSpec defines the desired state of SnapshotAgentConfig",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "awsAccessKeyId": {
              "description": "AWS access key ID.\nAWS access key ID.",
              "type": "string"
            },
            "awsS3Bucket": {
              "description": "S3 bucket to write snapshots to.\nS3 bucket to write snapshots to.",
              "type": "string"
            },
            "awsS3DisableTls": {
              "description": "Disable TLS for the S3 endpoint. This\nshould only be used for testing purposes, typically in conjunction with\naws_s3_endpoint.\nDisable TLS for the S3 endpoint. This should only be used for testing purposes.",
              "type": "boolean"
            },
            "awsS3EnableKms": {
              "description": "Use KMS to encrypt bucket contents.\nUse KMS to encrypt bucket contents.",
              "type": "boolean"
            },
            "awsS3Endpoint": {
              "description": "AWS endpoint. This is typically only set when\nusing a non-AWS S3 implementation like Minio.\nAWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio.",
              "type": "string"
            },
            "awsS3ForcePathStyle": {
              "description": "Use the endpoint/bucket URL style\ninstead of bucket.endpoint. May be needed when setting aws_s3_endpoint.\nUse the endpoint/bucket URL style instead of bucket.endpoint.",
              "type": "boolean"
            },
            "awsS3KmsKey": {
              "description": "Use named KMS key, when aws_s3_enable_kms = true\nUse named KMS key, when aws_s3_enable_kms=true",
              "type": "string"
            },
            "awsS3Region": {
              "description": "AWS region bucket is in.\nAWS region bucket is in.",
              "type": "string"
            },
            "awsS3ServerSideEncryption": {
              "description": "Use AES256 to encrypt bucket contents.\nUse AES256 to encrypt bucket contents.",
              "type": "boolean"
            },
            "awsSecretAccessKey": {
              "description": "AWS secret access key.\nAWS secret access key.",
              "type": "string"
            },
            "awsSessionToken": {
              "description": "AWS session token.\nAWS session token.",
              "type": "string"
            },
            "azureAccountKey": {
              "description": "Azure account key.\nAzure account key.",
              "type": "string"
            },
            "azureAccountName": {
              "description": "Azure account name.\nAzure account name.",
              "type": "string"
            },
            "azureBlobEnvironment": {
              "description": "Azure blob environment.\nAzure blob environment.",
              "type": "string"
            },
            "azureContainerName": {
              "description": "Azure container name to write\nsnapshots to.\nAzure container name to write snapshots to.",
              "type": "string"
            },
            "azureEndpoint": {
              "description": "Azure blob storage endpoint. This is typically\nonly set when using a non-Azure implementation like Azurite.\nAzure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite.",
              "type": "string"
            },
            "filePrefix": {
              "description": "Within the directory or bucket\nprefix given by path_prefix, the file or object name of snapshot files\nwill start with this string.\nThe file or object name of snapshot files will start with this string.",
              "type": "string"
            },
            "googleDisableTls": {
              "description": "Disable TLS for the GCS endpoint. This\nshould only be used for testing purposes, typically in conjunction with\ngoogle_endpoint.\nDisable TLS for the GCS endpoint.",
              "type": "boolean"
            },
            "googleEndpoint": {
              "description": "GCS endpoint. This is typically only set when\nusing a non-Google GCS implementation like fake-gcs-server.\nGCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server.",
              "type": "string"
            },
            "googleGcsBucket": {
              "description": "GCS bucket to write snapshots to.\nGCS bucket to write snapshots to.",
              "type": "string"
            },
            "googleServiceAccountKey": {
              "description": "Google service account key in JSON format.\nThe raw value looks like this:\nGoogle service account key in JSON format.",
              "type": "string"
            },
            "intervalSeconds": {
              "description": "Time (in seconds) between snapshots.\nNumber of seconds between snapshots.",
              "type": "number"
            },
            "localMaxSpace": {
              "description": "For storage_type = local, the maximum\nspace, in bytes, to use for snapshots. Snapshot attempts will fail if there is not enough\nspace left in this allowance.\nThe maximum space, in bytes, to use for snapshots.",
              "type": "number"
            },
            "name": {
              "description": "\u003crequired\u003e â€“ Name of the configuration to modify.\nName of the snapshot agent configuration.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "pathPrefix": {
              "description": "For storage_type = \"local\", the directory to\nwrite the snapshots in. For cloud storage types, the bucket prefix to use.\nTypes azure-s3 and google-gcs require a trailing / (slash).\nTypes local and aws-s3 the trailing / is optional.\nThe directory or bucket prefix to to use.",
              "type": "string"
            },
            "retain": {
              "description": "How many snapshots are to be kept; when writing a\nsnapshot, if there are more snapshots already stored than this number, the\noldest ones will be deleted.\nHow many snapshots are to be kept.",
              "type": "number"
            },
            "storageType": {
              "description": "One of \"local\", \"azure-blob\", \"aws-s3\",\nor \"google-gcs\". The remaining parameters described below are all specific to\nthe selected storage_type and prefixed accordingly.\nWhat storage service to send snapshots to. One of \"local\", \"azure-blob\", \"aws-s3\", or \"google-gcs\".",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "awsAccessKeyId": {
              "description": "AWS access key ID.\nAWS access key ID.",
              "type": "string"
            },
            "awsS3Bucket": {
              "description": "S3 bucket to write snapshots to.\nS3 bucket to write snapshots to.",
              "type": "string"
            },
            "awsS3DisableTls": {
              "description": "Disable TLS for the S3 endpoint. This\nshould only be used for testing purposes, typically in conjunction with\naws_s3_endpoint.\nDisable TLS for the S3 endpoint. This should only be used for testing purposes.",
              "type": "boolean"
            },
            "awsS3EnableKms": {
              "description": "Use KMS to encrypt bucket contents.\nUse KMS to encrypt bucket contents.",
              "type": "boolean"
            },
            "awsS3Endpoint": {
              "description": "AWS endpoint. This is typically only set when\nusing a non-AWS S3 implementation like Minio.\nAWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio.",
              "type": "string"
            },
            "awsS3ForcePathStyle": {
              "description": "Use the endpoint/bucket URL style\ninstead of bucket.endpoint. May be needed when setting aws_s3_endpoint.\nUse the endpoint/bucket URL style instead of bucket.endpoint.",
              "type": "boolean"
            },
            "awsS3KmsKey": {
              "description": "Use named KMS key, when aws_s3_enable_kms = true\nUse named KMS key, when aws_s3_enable_kms=true",
              "type": "string"
            },
            "awsS3Region": {
              "description": "AWS region bucket is in.\nAWS region bucket is in.",
              "type": "string"
            },
            "awsS3ServerSideEncryption": {
              "description": "Use AES256 to encrypt bucket contents.\nUse AES256 to encrypt bucket contents.",
              "type": "boolean"
            },
            "awsSecretAccessKey": {
              "description": "AWS secret access key.\nAWS secret access key.",
              "type": "string"
            },
            "awsSessionToken": {
              "description": "AWS session token.\nAWS session token.",
              "type": "string"
            },
            "azureAccountKey": {
              "description": "Azure account key.\nAzure account key.",
              "type": "string"
            },
            "azureAccountName": {
              "description": "Azure account name.\nAzure account name.",
              "type": "string"
            },
            "azureBlobEnvironment": {
              "description": "Azure blob environment.\nAzure blob environment.",
              "type": "string"
            },
            "azureContainerName": {
              "description": "Azure container name to write\nsnapshots to.\nAzure container name to write snapshots to.",
              "type": "string"
            },
            "azureEndpoint": {
              "description": "Azure blob storage endpoint. This is typically\nonly set when using a non-Azure implementation like Azurite.\nAzure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite.",
              "type": "string"
            },
            "filePrefix": {
              "description": "Within the directory or bucket\nprefix given by path_prefix, the file or object name of snapshot files\nwill start with this string.\nThe file or object name of snapshot files will start with this string.",
              "type": "string"
            },
            "googleDisableTls": {
              "description": "Disable TLS for the GCS endpoint. This\nshould only be used for testing purposes, typically in conjunction with\ngoogle_endpoint.\nDisable TLS for the GCS endpoint.",
              "type": "boolean"
            },
            "googleEndpoint": {
              "description": "GCS endpoint. This is typically only set when\nusing a non-Google GCS implementation like fake-gcs-server.\nGCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server.",
              "type": "string"
            },
            "googleGcsBucket": {
              "description": "GCS bucket to write snapshots to.\nGCS bucket to write snapshots to.",
              "type": "string"
            },
            "googleServiceAccountKey": {
              "description": "Google service account key in JSON format.\nThe raw value looks like this:\nGoogle service account key in JSON format.",
              "type": "string"
            },
            "intervalSeconds": {
              "description": "Time (in seconds) between snapshots.\nNumber of seconds between snapshots.",
              "type": "number"
            },
            "localMaxSpace": {
              "description": "For storage_type = local, the maximum\nspace, in bytes, to use for snapshots. Snapshot attempts will fail if there is not enough\nspace left in this allowance.\nThe maximum space, in bytes, to use for snapshots.",
              "type": "number"
            },
            "name": {
              "description": "\u003crequired\u003e â€“ Name of the configuration to modify.\nName of the snapshot agent configuration.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "pathPrefix": {
              "description": "For storage_type = \"local\", the directory to\nwrite the snapshots in. For cloud storage types, the bucket prefix to use.\nTypes azure-s3 and google-gcs require a trailing / (slash).\nTypes local and aws-s3 the trailing / is optional.\nThe directory or bucket prefix to to use.",
              "type": "string"
            },
            "retain": {
              "description": "How many snapshots are to be kept; when writing a\nsnapshot, if there are more snapshots already stored than this number, the\noldest ones will be deleted.\nHow many snapshots are to be kept.",
              "type": "number"
            },
            "storageType": {
              "description": "One of \"local\", \"azure-blob\", \"aws-s3\",\nor \"google-gcs\". The remaining parameters described below are all specific to\nthe selected storage_type and prefixed accordingly.\nWhat storage service to send snapshots to. One of \"local\", \"azure-blob\", \"aws-s3\", or \"google-gcs\".",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.intervalSeconds) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.intervalSeconds))",
          "message": "spec.forProvider.intervalSeconds is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.pathPrefix) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.pathPrefix))",
          "message": "spec.forProvider.pathPrefix is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.storageType))",
          "message": "spec.forProvider.storageType is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SnapshotAgentConfigStatus defines the observed state of SnapshotAgentConfig.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "awsAccessKeyId": {
              "description": "AWS access key ID.\nAWS access key ID.",
              "type": "string"
            },
            "awsS3Bucket": {
              "description": "S3 bucket to write snapshots to.\nS3 bucket to write snapshots to.",
              "type": "string"
            },
            "awsS3DisableTls": {
              "description": "Disable TLS for the S3 endpoint. This\nshould only be used for testing purposes, typically in conjunction with\naws_s3_endpoint.\nDisable TLS for the S3 endpoint. This should only be used for testing purposes.",
              "type": "boolean"
            },
            "awsS3EnableKms": {
              "description": "Use KMS to encrypt bucket contents.\nUse KMS to encrypt bucket contents.",
              "type": "boolean"
            },
            "awsS3Endpoint": {
              "description": "AWS endpoint. This is typically only set when\nusing a non-AWS S3 implementation like Minio.\nAWS endpoint. This is typically only set when using a non-AWS S3 implementation like Minio.",
              "type": "string"
            },
            "awsS3ForcePathStyle": {
              "description": "Use the endpoint/bucket URL style\ninstead of bucket.endpoint. May be needed when setting aws_s3_endpoint.\nUse the endpoint/bucket URL style instead of bucket.endpoint.",
              "type": "boolean"
            },
            "awsS3KmsKey": {
              "description": "Use named KMS key, when aws_s3_enable_kms = true\nUse named KMS key, when aws_s3_enable_kms=true",
              "type": "string"
            },
            "awsS3Region": {
              "description": "AWS region bucket is in.\nAWS region bucket is in.",
              "type": "string"
            },
            "awsS3ServerSideEncryption": {
              "description": "Use AES256 to encrypt bucket contents.\nUse AES256 to encrypt bucket contents.",
              "type": "boolean"
            },
            "awsSecretAccessKey": {
              "description": "AWS secret access key.\nAWS secret access key.",
              "type": "string"
            },
            "awsSessionToken": {
              "description": "AWS session token.\nAWS session token.",
              "type": "string"
            },
            "azureAccountKey": {
              "description": "Azure account key.\nAzure account key.",
              "type": "string"
            },
            "azureAccountName": {
              "description": "Azure account name.\nAzure account name.",
              "type": "string"
            },
            "azureBlobEnvironment": {
              "description": "Azure blob environment.\nAzure blob environment.",
              "type": "string"
            },
            "azureContainerName": {
              "description": "Azure container name to write\nsnapshots to.\nAzure container name to write snapshots to.",
              "type": "string"
            },
            "azureEndpoint": {
              "description": "Azure blob storage endpoint. This is typically\nonly set when using a non-Azure implementation like Azurite.\nAzure blob storage endpoint. This is typically only set when using a non-Azure implementation like Azurite.",
              "type": "string"
            },
            "filePrefix": {
              "description": "Within the directory or bucket\nprefix given by path_prefix, the file or object name of snapshot files\nwill start with this string.\nThe file or object name of snapshot files will start with this string.",
              "type": "string"
            },
            "googleDisableTls": {
              "description": "Disable TLS for the GCS endpoint. This\nshould only be used for testing purposes, typically in conjunction with\ngoogle_endpoint.\nDisable TLS for the GCS endpoint.",
              "type": "boolean"
            },
            "googleEndpoint": {
              "description": "GCS endpoint. This is typically only set when\nusing a non-Google GCS implementation like fake-gcs-server.\nGCS endpoint. This is typically only set when using a non-Google GCS implementation like fake-gcs-server.",
              "type": "string"
            },
            "googleGcsBucket": {
              "description": "GCS bucket to write snapshots to.\nGCS bucket to write snapshots to.",
              "type": "string"
            },
            "googleServiceAccountKey": {
              "description": "Google service account key in JSON format.\nThe raw value looks like this:\nGoogle service account key in JSON format.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "intervalSeconds": {
              "description": "Time (in seconds) between snapshots.\nNumber of seconds between snapshots.",
              "type": "number"
            },
            "localMaxSpace": {
              "description": "For storage_type = local, the maximum\nspace, in bytes, to use for snapshots. Snapshot attempts will fail if there is not enough\nspace left in this allowance.\nThe maximum space, in bytes, to use for snapshots.",
              "type": "number"
            },
            "name": {
              "description": "\u003crequired\u003e â€“ Name of the configuration to modify.\nName of the snapshot agent configuration.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "pathPrefix": {
              "description": "For storage_type = \"local\", the directory to\nwrite the snapshots in. For cloud storage types, the bucket prefix to use.\nTypes azure-s3 and google-gcs require a trailing / (slash).\nTypes local and aws-s3 the trailing / is optional.\nThe directory or bucket prefix to to use.",
              "type": "string"
            },
            "retain": {
              "description": "How many snapshots are to be kept; when writing a\nsnapshot, if there are more snapshots already stored than this number, the\noldest ones will be deleted.\nHow many snapshots are to be kept.",
              "type": "number"
            },
            "storageType": {
              "description": "One of \"local\", \"azure-blob\", \"aws-s3\",\nor \"google-gcs\". The remaining parameters described below are all specific to\nthe selected storage_type and prefixed accordingly.\nWhat storage service to send snapshots to. One of \"local\", \"azure-blob\", \"aws-s3\", or \"google-gcs\".",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
