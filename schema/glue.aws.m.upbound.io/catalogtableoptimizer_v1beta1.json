{
  "description": "CatalogTableOptimizer is the Schema for the CatalogTableOptimizers API.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CatalogTableOptimizerSpec defines the desired state of CatalogTableOptimizer",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "catalogId",
            "region"
          ],
          "properties": {
            "catalogId": {
              "description": "The Catalog ID of the table.",
              "type": "string"
            },
            "configuration": {
              "description": "A configuration block that defines the table optimizer settings. See Configuration for additional details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Indicates whether the table optimizer is enabled.",
                    "type": "boolean"
                  },
                  "orphanFileDeletionConfiguration": {
                    "description": "The configuration block for an orphan file deletion optimizer. See Orphan File Deletion Configuration for additional details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "icebergConfiguration": {
                          "description": "The configuration for an Iceberg orphan file deletion optimizer.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "description": "Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table's location.",
                                "type": "string"
                              },
                              "orphanFileRetentionPeriodInDays": {
                                "description": "The number of days that orphan files should be retained before file deletion. Defaults to 3.",
                                "type": "number"
                              },
                              "runRateInHours": {
                                "description": "interval in hours between orphan file deletion job runs. Defaults to 24.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "retentionConfiguration": {
                    "description": "The configuration block for a snapshot retention optimizer. See Retention Configuration for additional details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "icebergConfiguration": {
                          "description": "The configuration for an Iceberg orphan file deletion optimizer.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cleanExpiredFiles": {
                                "description": "If set to false, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to false.",
                                "type": "boolean"
                              },
                              "numberOfSnapshotsToRetain": {
                                "description": "The number of Iceberg snapshots to retain within the retention period. Defaults to 1 or the corresponding Iceberg table configuration field if it exists.",
                                "type": "number"
                              },
                              "runRateInHours": {
                                "description": "interval in hours between orphan file deletion job runs. Defaults to 24.",
                                "type": "number"
                              },
                              "snapshotRetentionPeriodInDays": {
                                "description": "The number of days to retain the Iceberg snapshots. Defaults to 5, or the corresponding Iceberg table configuration field if it exists.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "roleArn": {
                    "description": "The ARN of the IAM role to use for the table optimizer.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "databaseName": {
              "description": "The name of the database in the catalog in which the table resides.",
              "type": "string"
            },
            "databaseNameRef": {
              "description": "Reference to a CatalogDatabase in glue to populate databaseName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "databaseNameSelector": {
              "description": "Selector for a CatalogDatabase in glue to populate databaseName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tableName": {
              "description": "The name of the table.",
              "type": "string"
            },
            "type": {
              "description": "The type of table optimizer. Valid values are compaction, retention, and orphan_file_deletion.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "configuration": {
              "description": "A configuration block that defines the table optimizer settings. See Configuration for additional details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Indicates whether the table optimizer is enabled.",
                    "type": "boolean"
                  },
                  "orphanFileDeletionConfiguration": {
                    "description": "The configuration block for an orphan file deletion optimizer. See Orphan File Deletion Configuration for additional details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "icebergConfiguration": {
                          "description": "The configuration for an Iceberg orphan file deletion optimizer.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "description": "Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table's location.",
                                "type": "string"
                              },
                              "orphanFileRetentionPeriodInDays": {
                                "description": "The number of days that orphan files should be retained before file deletion. Defaults to 3.",
                                "type": "number"
                              },
                              "runRateInHours": {
                                "description": "interval in hours between orphan file deletion job runs. Defaults to 24.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "retentionConfiguration": {
                    "description": "The configuration block for a snapshot retention optimizer. See Retention Configuration for additional details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "icebergConfiguration": {
                          "description": "The configuration for an Iceberg orphan file deletion optimizer.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cleanExpiredFiles": {
                                "description": "If set to false, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to false.",
                                "type": "boolean"
                              },
                              "numberOfSnapshotsToRetain": {
                                "description": "The number of Iceberg snapshots to retain within the retention period. Defaults to 1 or the corresponding Iceberg table configuration field if it exists.",
                                "type": "number"
                              },
                              "runRateInHours": {
                                "description": "interval in hours between orphan file deletion job runs. Defaults to 24.",
                                "type": "number"
                              },
                              "snapshotRetentionPeriodInDays": {
                                "description": "The number of days to retain the Iceberg snapshots. Defaults to 5, or the corresponding Iceberg table configuration field if it exists.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "roleArn": {
                    "description": "The ARN of the IAM role to use for the table optimizer.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tableName": {
              "description": "The name of the table.",
              "type": "string"
            },
            "type": {
              "description": "The type of table optimizer. Valid values are compaction, retention, and orphan_file_deletion.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tableName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.tableName))",
          "message": "spec.forProvider.tableName is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.type))",
          "message": "spec.forProvider.type is a required parameter"
        }
      ]
    },
    "status": {
      "description": "CatalogTableOptimizerStatus defines the observed state of CatalogTableOptimizer.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "catalogId": {
              "description": "The Catalog ID of the table.",
              "type": "string"
            },
            "configuration": {
              "description": "A configuration block that defines the table optimizer settings. See Configuration for additional details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Indicates whether the table optimizer is enabled.",
                    "type": "boolean"
                  },
                  "orphanFileDeletionConfiguration": {
                    "description": "The configuration block for an orphan file deletion optimizer. See Orphan File Deletion Configuration for additional details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "icebergConfiguration": {
                          "description": "The configuration for an Iceberg orphan file deletion optimizer.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "location": {
                                "description": "Specifies a directory in which to look for files. You may choose a sub-directory rather than the top-level table location. Defaults to the table's location.",
                                "type": "string"
                              },
                              "orphanFileRetentionPeriodInDays": {
                                "description": "The number of days that orphan files should be retained before file deletion. Defaults to 3.",
                                "type": "number"
                              },
                              "runRateInHours": {
                                "description": "interval in hours between orphan file deletion job runs. Defaults to 24.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "retentionConfiguration": {
                    "description": "The configuration block for a snapshot retention optimizer. See Retention Configuration for additional details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "icebergConfiguration": {
                          "description": "The configuration for an Iceberg orphan file deletion optimizer.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "cleanExpiredFiles": {
                                "description": "If set to false, snapshots are only deleted from table metadata, and the underlying data and metadata files are not deleted. Defaults to false.",
                                "type": "boolean"
                              },
                              "numberOfSnapshotsToRetain": {
                                "description": "The number of Iceberg snapshots to retain within the retention period. Defaults to 1 or the corresponding Iceberg table configuration field if it exists.",
                                "type": "number"
                              },
                              "runRateInHours": {
                                "description": "interval in hours between orphan file deletion job runs. Defaults to 24.",
                                "type": "number"
                              },
                              "snapshotRetentionPeriodInDays": {
                                "description": "The number of days to retain the Iceberg snapshots. Defaults to 5, or the corresponding Iceberg table configuration field if it exists.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "roleArn": {
                    "description": "The ARN of the IAM role to use for the table optimizer.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "databaseName": {
              "description": "The name of the database in the catalog in which the table resides.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tableName": {
              "description": "The name of the table.",
              "type": "string"
            },
            "type": {
              "description": "The type of table optimizer. Valid values are compaction, retention, and orphan_file_deletion.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
