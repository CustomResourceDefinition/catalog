{
  "description": "LifecyclePolicy is the Schema for the LifecyclePolicys API. Provides a Data Lifecycle Manager (DLM) lifecycle policy for managing snapshots.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LifecyclePolicySpec defines the desired state of LifecyclePolicy",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "defaultPolicy": {
              "description": "Specify the type of default policy to create. valid values are VOLUME or INSTANCE.",
              "type": "string"
            },
            "description": {
              "description": "A description for the DLM lifecycle policy.",
              "type": "string"
            },
            "executionRoleArn": {
              "description": "The ARN of an IAM role that is able to be assumed by the DLM service.",
              "type": "string"
            },
            "executionRoleArnRef": {
              "description": "Reference to a Role in iam to populate executionRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "executionRoleArnSelector": {
              "description": "Selector for a Role in iam to populate executionRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "policyDetails": {
              "description": "See the policy_details configuration block. Max of 1.",
              "type": "object",
              "properties": {
                "action": {
                  "description": "The actions to be performed when the event-based policy is triggered. You can specify only one action per policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the action configuration block.",
                  "type": "object",
                  "properties": {
                    "crossRegionCopy": {
                      "description": "The rule for copying shared snapshots across Regions. See the cross_region_copy configuration block.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "encryptionConfiguration": {
                            "description": "The encryption settings for the copied snapshot. See the encryption_configuration block. Max of 1 per action.",
                            "type": "object",
                            "properties": {
                              "cmkArn": {
                                "description": "The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.",
                                "type": "string"
                              },
                              "encrypted": {
                                "description": "To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          "retainRule": {
                            "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                            "type": "object",
                            "properties": {
                              "interval": {
                                "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                "type": "number"
                              },
                              "intervalUnit": {
                                "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "target": {
                            "description": "The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "name": {
                      "description": "A descriptive name for the action.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "copyTags": {
                  "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                  "type": "boolean"
                },
                "createInterval": {
                  "description": "How often the policy should run and create snapshots or AMIs. valid values range from 1 to 7. Default value is 1.",
                  "type": "number"
                },
                "eventSource": {
                  "description": "The event that triggers the event-based policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the event_source configuration block.",
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.",
                      "type": "object",
                      "properties": {
                        "descriptionRegex": {
                          "description": "The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.",
                          "type": "string"
                        },
                        "eventType": {
                          "description": "The type of event. Currently, only shareSnapshot events are supported.",
                          "type": "string"
                        },
                        "snapshotOwner": {
                          "description": "The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are MANAGED_CWE.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "exclusions": {
                  "description": "Specifies exclusion parameters for volumes or instances for which you do not want to create snapshots or AMIs.  See the exclusions configuration block.",
                  "type": "object",
                  "properties": {
                    "excludeBootVolumes": {
                      "description": "Indicates whether to exclude volumes that are attached to instances as the boot volume. To exclude boot volumes, specify true.",
                      "type": "boolean"
                    },
                    "excludeTags": {
                      "description": "Map specifies whether to exclude volumes that have specific tags.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "excludeVolumeTypes": {
                      "description": "List specifies the volume types to exclude.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "extendDeletion": {
                  "description": "snapshot or AMI retention behavior for the policy if the source volume or instance is deleted, or if the policy enters the error, disabled, or deleted state. Default value is false.",
                  "type": "boolean"
                },
                "parameters": {
                  "description": "A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.",
                  "type": "object",
                  "properties": {
                    "excludeBootVolume": {
                      "description": "Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is false.",
                      "type": "boolean"
                    },
                    "noReboot": {
                      "description": "Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. true indicates that targeted instances are not rebooted when the policy runs. false indicates that target instances are rebooted when the policy runs. The default is true (instances are not rebooted).",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "policyLanguage": {
                  "description": "Type of policy to create. SIMPLIFIED To create a default policy. STANDARD To create a custom policy.",
                  "type": "string"
                },
                "policyType": {
                  "description": "The valid target resource types and actions a policy can manage. Specify EBS_SNAPSHOT_MANAGEMENT to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify IMAGE_MANAGEMENT to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify EVENT_BASED_POLICY to create an event-based policy that performs specific actions when a defined event occurs in your AWS account. Default value is EBS_SNAPSHOT_MANAGEMENT.",
                  "type": "string"
                },
                "resourceLocations": {
                  "description": "The location of the resources to backup. If the source resources are located in an AWS Region, specify CLOUD. If the source resources are located on an Outpost in your account, specify OUTPOST. If the source resources are located in a Local Zone, specify LOCAL_ZONE. Valid values are CLOUD, LOCAL_ZONE, and OUTPOST.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resourceType": {
                  "description": "Type of default policy to create. Valid values are VOLUME and INSTANCE.",
                  "type": "string"
                },
                "resourceTypes": {
                  "description": "A list of resource types that should be targeted by the lifecycle policy. Valid values are VOLUME and INSTANCE.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "retainInterval": {
                  "description": "Specifies how long the policy should retain snapshots or AMIs before deleting them. valid values range from 2 to 14. Default value is 7.",
                  "type": "number"
                },
                "schedule": {
                  "description": "See the schedule configuration block.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "archiveRule": {
                        "description": "Specifies a snapshot archiving rule for a schedule. See archive_rule block.",
                        "type": "object",
                        "properties": {
                          "archiveRetainRule": {
                            "description": "Information about the retention period for the snapshot archiving rule. See the archive_retain_rule block.",
                            "type": "object",
                            "properties": {
                              "retentionArchiveTier": {
                                "description": "Information about retention period in the Amazon EBS Snapshots Archive. See the retention_archive_tier block.",
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                                    "type": "number"
                                  },
                                  "interval": {
                                    "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                    "type": "number"
                                  },
                                  "intervalUnit": {
                                    "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "copyTags": {
                        "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                        "type": "boolean"
                      },
                      "createRule": {
                        "description": "See the create_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "cronExpression": {
                            "description": "The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. Conflicts with interval, interval_unit, and times.",
                            "type": "string"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are CLOUD and OUTPOST_LOCAL.",
                            "type": "string"
                          },
                          "scripts": {
                            "description": "Specifies pre and/or post scripts for a snapshot lifecycle policy that targets instances. Valid only when resource_type is INSTANCE. See the scripts configuration block.",
                            "type": "object",
                            "properties": {
                              "executeOperationOnScriptFailure": {
                                "description": "Indicates whether Amazon Data Lifecycle Manager should default to crash-consistent snapshots if the pre script fails. The default is true.",
                                "type": "boolean"
                              },
                              "executionHandler": {
                                "description": "The SSM document that includes the pre and/or post scripts to run. In case automating VSS backups, specify AWS_VSS_BACKUP. In case automating application-consistent snapshots for SAP HANA workloads, specify AWSSystemsManagerSAP-CreateDLMSnapshotForSAPHANA. If you are using a custom SSM document that you own, specify either the name or ARN of the SSM document.",
                                "type": "string"
                              },
                              "executionHandlerService": {
                                "description": "Indicates the service used to execute the pre and/or post scripts. If using custom SSM documents or automating application-consistent snapshots of SAP HANA workloads, specify AWS_SYSTEMS_MANAGER. In case automating VSS Backups, omit this parameter. The default is AWS_SYSTEMS_MANAGER.",
                                "type": "string"
                              },
                              "executionTimeout": {
                                "description": "Specifies a timeout period, in seconds, after which Amazon Data Lifecycle Manager fails the script run attempt if it has not completed. In case automating VSS Backups, omit this parameter. The default is 10.",
                                "type": "number"
                              },
                              "maximumRetryCount": {
                                "description": "Specifies the number of times Amazon Data Lifecycle Manager should retry scripts that fail. Must be an integer between 0 and 3. The default is 0.",
                                "type": "number"
                              },
                              "stages": {
                                "description": "List to indicate which scripts Amazon Data Lifecycle Manager should run on target instances. Pre scripts run before Amazon Data Lifecycle Manager initiates snapshot creation. Post scripts run after Amazon Data Lifecycle Manager initiates snapshot creation. Valid values: PRE and POST. The default is PRE and POST",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "times": {
                            "description": "A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "crossRegionCopyRule": {
                        "description": "See the cross_region_copy_rule block. Max of 3 per schedule.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cmkArn": {
                              "description": "The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.",
                              "type": "string"
                            },
                            "cmkArnRef": {
                              "description": "Reference to a Key in kms to populate cmkArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "cmkArnSelector": {
                              "description": "Selector for a Key in kms to populate cmkArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "copyTags": {
                              "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                              "type": "boolean"
                            },
                            "deprecateRule": {
                              "description": "See the deprecate_rule block. Max of 1 per schedule.",
                              "type": "object",
                              "properties": {
                                "interval": {
                                  "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                  "type": "number"
                                },
                                "intervalUnit": {
                                  "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "encrypted": {
                              "description": "To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.",
                              "type": "boolean"
                            },
                            "retainRule": {
                              "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                              "type": "object",
                              "properties": {
                                "interval": {
                                  "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                  "type": "number"
                                },
                                "intervalUnit": {
                                  "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "target": {
                              "description": "The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                              "type": "string"
                            },
                            "targetRegion": {
                              "description": "Use only for DLM policies of policy_type=IMAGE_MANAGEMENT. The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "deprecateRule": {
                        "description": "See the deprecate_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "fastRestoreRule": {
                        "description": "See the fast_restore_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "availabilityZones": {
                            "description": "The Availability Zones in which to enable fast snapshot restore.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "set"
                          },
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "A descriptive name for the action.",
                        "type": "string"
                      },
                      "retainRule": {
                        "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "shareRule": {
                        "description": "See the share_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "targetAccounts": {
                            "description": "The IDs of the AWS accounts with which to share the snapshots.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "set"
                          },
                          "unshareInterval": {
                            "description": "The period after which snapshots that are shared with other AWS accounts are automatically unshared.",
                            "type": "number"
                          },
                          "unshareIntervalUnit": {
                            "description": "The unit of time for the automatic unsharing interval. Valid values are DAYS, WEEKS, MONTHS, YEARS.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tagsToAdd": {
                        "description": "A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-kubernetes-map-type": "granular"
                      },
                      "variableTags": {
                        "description": "A map of tag keys and variable values, where the values are determined when the policy is executed. Only $(instance-id) or $(timestamp) are valid values. Can only be used when resource_types is INSTANCE.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-kubernetes-map-type": "granular"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "targetTags": {
                  "description": "A map of tag keys and their values. Any resources that match the resource_types and are tagged with any of these tags will be targeted. Required when policy_type is EBS_SNAPSHOT_MANAGEMENT or IMAGE_MANAGEMENT. Must not be specified when policy_type is EVENT_BASED_POLICY.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "state": {
              "description": "Whether the lifecycle policy should be enabled or disabled. ENABLED or DISABLED are valid values. Defaults to ENABLED.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "defaultPolicy": {
              "description": "Specify the type of default policy to create. valid values are VOLUME or INSTANCE.",
              "type": "string"
            },
            "description": {
              "description": "A description for the DLM lifecycle policy.",
              "type": "string"
            },
            "executionRoleArn": {
              "description": "The ARN of an IAM role that is able to be assumed by the DLM service.",
              "type": "string"
            },
            "executionRoleArnRef": {
              "description": "Reference to a Role in iam to populate executionRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "executionRoleArnSelector": {
              "description": "Selector for a Role in iam to populate executionRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "policyDetails": {
              "description": "See the policy_details configuration block. Max of 1.",
              "type": "object",
              "properties": {
                "action": {
                  "description": "The actions to be performed when the event-based policy is triggered. You can specify only one action per policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the action configuration block.",
                  "type": "object",
                  "properties": {
                    "crossRegionCopy": {
                      "description": "The rule for copying shared snapshots across Regions. See the cross_region_copy configuration block.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "encryptionConfiguration": {
                            "description": "The encryption settings for the copied snapshot. See the encryption_configuration block. Max of 1 per action.",
                            "type": "object",
                            "properties": {
                              "cmkArn": {
                                "description": "The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.",
                                "type": "string"
                              },
                              "encrypted": {
                                "description": "To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          "retainRule": {
                            "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                            "type": "object",
                            "properties": {
                              "interval": {
                                "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                "type": "number"
                              },
                              "intervalUnit": {
                                "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "target": {
                            "description": "The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "name": {
                      "description": "A descriptive name for the action.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "copyTags": {
                  "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                  "type": "boolean"
                },
                "createInterval": {
                  "description": "How often the policy should run and create snapshots or AMIs. valid values range from 1 to 7. Default value is 1.",
                  "type": "number"
                },
                "eventSource": {
                  "description": "The event that triggers the event-based policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the event_source configuration block.",
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.",
                      "type": "object",
                      "properties": {
                        "descriptionRegex": {
                          "description": "The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.",
                          "type": "string"
                        },
                        "eventType": {
                          "description": "The type of event. Currently, only shareSnapshot events are supported.",
                          "type": "string"
                        },
                        "snapshotOwner": {
                          "description": "The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are MANAGED_CWE.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "exclusions": {
                  "description": "Specifies exclusion parameters for volumes or instances for which you do not want to create snapshots or AMIs.  See the exclusions configuration block.",
                  "type": "object",
                  "properties": {
                    "excludeBootVolumes": {
                      "description": "Indicates whether to exclude volumes that are attached to instances as the boot volume. To exclude boot volumes, specify true.",
                      "type": "boolean"
                    },
                    "excludeTags": {
                      "description": "Map specifies whether to exclude volumes that have specific tags.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "excludeVolumeTypes": {
                      "description": "List specifies the volume types to exclude.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "extendDeletion": {
                  "description": "snapshot or AMI retention behavior for the policy if the source volume or instance is deleted, or if the policy enters the error, disabled, or deleted state. Default value is false.",
                  "type": "boolean"
                },
                "parameters": {
                  "description": "A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.",
                  "type": "object",
                  "properties": {
                    "excludeBootVolume": {
                      "description": "Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is false.",
                      "type": "boolean"
                    },
                    "noReboot": {
                      "description": "Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. true indicates that targeted instances are not rebooted when the policy runs. false indicates that target instances are rebooted when the policy runs. The default is true (instances are not rebooted).",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "policyLanguage": {
                  "description": "Type of policy to create. SIMPLIFIED To create a default policy. STANDARD To create a custom policy.",
                  "type": "string"
                },
                "policyType": {
                  "description": "The valid target resource types and actions a policy can manage. Specify EBS_SNAPSHOT_MANAGEMENT to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify IMAGE_MANAGEMENT to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify EVENT_BASED_POLICY to create an event-based policy that performs specific actions when a defined event occurs in your AWS account. Default value is EBS_SNAPSHOT_MANAGEMENT.",
                  "type": "string"
                },
                "resourceLocations": {
                  "description": "The location of the resources to backup. If the source resources are located in an AWS Region, specify CLOUD. If the source resources are located on an Outpost in your account, specify OUTPOST. If the source resources are located in a Local Zone, specify LOCAL_ZONE. Valid values are CLOUD, LOCAL_ZONE, and OUTPOST.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resourceType": {
                  "description": "Type of default policy to create. Valid values are VOLUME and INSTANCE.",
                  "type": "string"
                },
                "resourceTypes": {
                  "description": "A list of resource types that should be targeted by the lifecycle policy. Valid values are VOLUME and INSTANCE.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "retainInterval": {
                  "description": "Specifies how long the policy should retain snapshots or AMIs before deleting them. valid values range from 2 to 14. Default value is 7.",
                  "type": "number"
                },
                "schedule": {
                  "description": "See the schedule configuration block.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "archiveRule": {
                        "description": "Specifies a snapshot archiving rule for a schedule. See archive_rule block.",
                        "type": "object",
                        "properties": {
                          "archiveRetainRule": {
                            "description": "Information about the retention period for the snapshot archiving rule. See the archive_retain_rule block.",
                            "type": "object",
                            "properties": {
                              "retentionArchiveTier": {
                                "description": "Information about retention period in the Amazon EBS Snapshots Archive. See the retention_archive_tier block.",
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                                    "type": "number"
                                  },
                                  "interval": {
                                    "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                    "type": "number"
                                  },
                                  "intervalUnit": {
                                    "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "copyTags": {
                        "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                        "type": "boolean"
                      },
                      "createRule": {
                        "description": "See the create_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "cronExpression": {
                            "description": "The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. Conflicts with interval, interval_unit, and times.",
                            "type": "string"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are CLOUD and OUTPOST_LOCAL.",
                            "type": "string"
                          },
                          "scripts": {
                            "description": "Specifies pre and/or post scripts for a snapshot lifecycle policy that targets instances. Valid only when resource_type is INSTANCE. See the scripts configuration block.",
                            "type": "object",
                            "properties": {
                              "executeOperationOnScriptFailure": {
                                "description": "Indicates whether Amazon Data Lifecycle Manager should default to crash-consistent snapshots if the pre script fails. The default is true.",
                                "type": "boolean"
                              },
                              "executionHandler": {
                                "description": "The SSM document that includes the pre and/or post scripts to run. In case automating VSS backups, specify AWS_VSS_BACKUP. In case automating application-consistent snapshots for SAP HANA workloads, specify AWSSystemsManagerSAP-CreateDLMSnapshotForSAPHANA. If you are using a custom SSM document that you own, specify either the name or ARN of the SSM document.",
                                "type": "string"
                              },
                              "executionHandlerService": {
                                "description": "Indicates the service used to execute the pre and/or post scripts. If using custom SSM documents or automating application-consistent snapshots of SAP HANA workloads, specify AWS_SYSTEMS_MANAGER. In case automating VSS Backups, omit this parameter. The default is AWS_SYSTEMS_MANAGER.",
                                "type": "string"
                              },
                              "executionTimeout": {
                                "description": "Specifies a timeout period, in seconds, after which Amazon Data Lifecycle Manager fails the script run attempt if it has not completed. In case automating VSS Backups, omit this parameter. The default is 10.",
                                "type": "number"
                              },
                              "maximumRetryCount": {
                                "description": "Specifies the number of times Amazon Data Lifecycle Manager should retry scripts that fail. Must be an integer between 0 and 3. The default is 0.",
                                "type": "number"
                              },
                              "stages": {
                                "description": "List to indicate which scripts Amazon Data Lifecycle Manager should run on target instances. Pre scripts run before Amazon Data Lifecycle Manager initiates snapshot creation. Post scripts run after Amazon Data Lifecycle Manager initiates snapshot creation. Valid values: PRE and POST. The default is PRE and POST",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "times": {
                            "description": "A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "crossRegionCopyRule": {
                        "description": "See the cross_region_copy_rule block. Max of 3 per schedule.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cmkArn": {
                              "description": "The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.",
                              "type": "string"
                            },
                            "cmkArnRef": {
                              "description": "Reference to a Key in kms to populate cmkArn.",
                              "type": "object",
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the referenced object.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the referenced object",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for referencing.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "cmkArnSelector": {
                              "description": "Selector for a Key in kms to populate cmkArn.",
                              "type": "object",
                              "properties": {
                                "matchControllerRef": {
                                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                  "type": "boolean"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels ensures an object with matching labels is selected.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "namespace": {
                                  "description": "Namespace for the selector",
                                  "type": "string"
                                },
                                "policy": {
                                  "description": "Policies for selection.",
                                  "type": "object",
                                  "properties": {
                                    "resolution": {
                                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                      "type": "string",
                                      "default": "Required",
                                      "enum": [
                                        "Required",
                                        "Optional"
                                      ]
                                    },
                                    "resolve": {
                                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                      "type": "string",
                                      "enum": [
                                        "Always",
                                        "IfNotPresent"
                                      ]
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "copyTags": {
                              "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                              "type": "boolean"
                            },
                            "deprecateRule": {
                              "description": "See the deprecate_rule block. Max of 1 per schedule.",
                              "type": "object",
                              "properties": {
                                "interval": {
                                  "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                  "type": "number"
                                },
                                "intervalUnit": {
                                  "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "encrypted": {
                              "description": "To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.",
                              "type": "boolean"
                            },
                            "retainRule": {
                              "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                              "type": "object",
                              "properties": {
                                "interval": {
                                  "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                  "type": "number"
                                },
                                "intervalUnit": {
                                  "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "target": {
                              "description": "The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                              "type": "string"
                            },
                            "targetRegion": {
                              "description": "Use only for DLM policies of policy_type=IMAGE_MANAGEMENT. The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "deprecateRule": {
                        "description": "See the deprecate_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "fastRestoreRule": {
                        "description": "See the fast_restore_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "availabilityZones": {
                            "description": "The Availability Zones in which to enable fast snapshot restore.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "set"
                          },
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "A descriptive name for the action.",
                        "type": "string"
                      },
                      "retainRule": {
                        "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "shareRule": {
                        "description": "See the share_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "targetAccounts": {
                            "description": "The IDs of the AWS accounts with which to share the snapshots.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "set"
                          },
                          "unshareInterval": {
                            "description": "The period after which snapshots that are shared with other AWS accounts are automatically unshared.",
                            "type": "number"
                          },
                          "unshareIntervalUnit": {
                            "description": "The unit of time for the automatic unsharing interval. Valid values are DAYS, WEEKS, MONTHS, YEARS.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tagsToAdd": {
                        "description": "A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-kubernetes-map-type": "granular"
                      },
                      "variableTags": {
                        "description": "A map of tag keys and variable values, where the values are determined when the policy is executed. Only $(instance-id) or $(timestamp) are valid values. Can only be used when resource_types is INSTANCE.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-kubernetes-map-type": "granular"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "targetTags": {
                  "description": "A map of tag keys and their values. Any resources that match the resource_types and are tagged with any of these tags will be targeted. Required when policy_type is EBS_SNAPSHOT_MANAGEMENT or IMAGE_MANAGEMENT. Must not be specified when policy_type is EVENT_BASED_POLICY.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                }
              },
              "additionalProperties": false
            },
            "state": {
              "description": "Whether the lifecycle policy should be enabled or disabled. ENABLED or DISABLED are valid values. Defaults to ENABLED.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.description) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.description))",
          "message": "spec.forProvider.description is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.policyDetails) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.policyDetails))",
          "message": "spec.forProvider.policyDetails is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LifecyclePolicyStatus defines the observed state of LifecyclePolicy.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "Amazon Resource Name (ARN) of the DLM Lifecycle Policy.",
              "type": "string"
            },
            "defaultPolicy": {
              "description": "Specify the type of default policy to create. valid values are VOLUME or INSTANCE.",
              "type": "string"
            },
            "description": {
              "description": "A description for the DLM lifecycle policy.",
              "type": "string"
            },
            "executionRoleArn": {
              "description": "The ARN of an IAM role that is able to be assumed by the DLM service.",
              "type": "string"
            },
            "id": {
              "description": "Identifier of the DLM Lifecycle Policy.",
              "type": "string"
            },
            "policyDetails": {
              "description": "See the policy_details configuration block. Max of 1.",
              "type": "object",
              "properties": {
                "action": {
                  "description": "The actions to be performed when the event-based policy is triggered. You can specify only one action per policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the action configuration block.",
                  "type": "object",
                  "properties": {
                    "crossRegionCopy": {
                      "description": "The rule for copying shared snapshots across Regions. See the cross_region_copy configuration block.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "encryptionConfiguration": {
                            "description": "The encryption settings for the copied snapshot. See the encryption_configuration block. Max of 1 per action.",
                            "type": "object",
                            "properties": {
                              "cmkArn": {
                                "description": "The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.",
                                "type": "string"
                              },
                              "encrypted": {
                                "description": "To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          "retainRule": {
                            "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                            "type": "object",
                            "properties": {
                              "interval": {
                                "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                "type": "number"
                              },
                              "intervalUnit": {
                                "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "target": {
                            "description": "The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "name": {
                      "description": "A descriptive name for the action.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "copyTags": {
                  "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                  "type": "boolean"
                },
                "createInterval": {
                  "description": "How often the policy should run and create snapshots or AMIs. valid values range from 1 to 7. Default value is 1.",
                  "type": "number"
                },
                "eventSource": {
                  "description": "The event that triggers the event-based policy. This parameter is required for event-based policies only. If you are creating a snapshot or AMI policy, omit this parameter. See the event_source configuration block.",
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "description": "A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.",
                      "type": "object",
                      "properties": {
                        "descriptionRegex": {
                          "description": "The snapshot description that can trigger the policy. The description pattern is specified using a regular expression. The policy runs only if a snapshot with a description that matches the specified pattern is shared with your account.",
                          "type": "string"
                        },
                        "eventType": {
                          "description": "The type of event. Currently, only shareSnapshot events are supported.",
                          "type": "string"
                        },
                        "snapshotOwner": {
                          "description": "The IDs of the AWS accounts that can trigger policy by sharing snapshots with your account. The policy only runs if one of the specified AWS accounts shares a snapshot with your account.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "The source of the event. Currently only managed CloudWatch Events rules are supported. Valid values are MANAGED_CWE.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "exclusions": {
                  "description": "Specifies exclusion parameters for volumes or instances for which you do not want to create snapshots or AMIs.  See the exclusions configuration block.",
                  "type": "object",
                  "properties": {
                    "excludeBootVolumes": {
                      "description": "Indicates whether to exclude volumes that are attached to instances as the boot volume. To exclude boot volumes, specify true.",
                      "type": "boolean"
                    },
                    "excludeTags": {
                      "description": "Map specifies whether to exclude volumes that have specific tags.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "excludeVolumeTypes": {
                      "description": "List specifies the volume types to exclude.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "extendDeletion": {
                  "description": "snapshot or AMI retention behavior for the policy if the source volume or instance is deleted, or if the policy enters the error, disabled, or deleted state. Default value is false.",
                  "type": "boolean"
                },
                "parameters": {
                  "description": "A set of optional parameters for snapshot and AMI lifecycle policies. See the parameters configuration block.",
                  "type": "object",
                  "properties": {
                    "excludeBootVolume": {
                      "description": "Indicates whether to exclude the root volume from snapshots created using CreateSnapshots. The default is false.",
                      "type": "boolean"
                    },
                    "noReboot": {
                      "description": "Applies to AMI lifecycle policies only. Indicates whether targeted instances are rebooted when the lifecycle policy runs. true indicates that targeted instances are not rebooted when the policy runs. false indicates that target instances are rebooted when the policy runs. The default is true (instances are not rebooted).",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "policyLanguage": {
                  "description": "Type of policy to create. SIMPLIFIED To create a default policy. STANDARD To create a custom policy.",
                  "type": "string"
                },
                "policyType": {
                  "description": "The valid target resource types and actions a policy can manage. Specify EBS_SNAPSHOT_MANAGEMENT to create a lifecycle policy that manages the lifecycle of Amazon EBS snapshots. Specify IMAGE_MANAGEMENT to create a lifecycle policy that manages the lifecycle of EBS-backed AMIs. Specify EVENT_BASED_POLICY to create an event-based policy that performs specific actions when a defined event occurs in your AWS account. Default value is EBS_SNAPSHOT_MANAGEMENT.",
                  "type": "string"
                },
                "resourceLocations": {
                  "description": "The location of the resources to backup. If the source resources are located in an AWS Region, specify CLOUD. If the source resources are located on an Outpost in your account, specify OUTPOST. If the source resources are located in a Local Zone, specify LOCAL_ZONE. Valid values are CLOUD, LOCAL_ZONE, and OUTPOST.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "resourceType": {
                  "description": "Type of default policy to create. Valid values are VOLUME and INSTANCE.",
                  "type": "string"
                },
                "resourceTypes": {
                  "description": "A list of resource types that should be targeted by the lifecycle policy. Valid values are VOLUME and INSTANCE.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "retainInterval": {
                  "description": "Specifies how long the policy should retain snapshots or AMIs before deleting them. valid values range from 2 to 14. Default value is 7.",
                  "type": "number"
                },
                "schedule": {
                  "description": "See the schedule configuration block.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "archiveRule": {
                        "description": "Specifies a snapshot archiving rule for a schedule. See archive_rule block.",
                        "type": "object",
                        "properties": {
                          "archiveRetainRule": {
                            "description": "Information about the retention period for the snapshot archiving rule. See the archive_retain_rule block.",
                            "type": "object",
                            "properties": {
                              "retentionArchiveTier": {
                                "description": "Information about retention period in the Amazon EBS Snapshots Archive. See the retention_archive_tier block.",
                                "type": "object",
                                "properties": {
                                  "count": {
                                    "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                                    "type": "number"
                                  },
                                  "interval": {
                                    "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                    "type": "number"
                                  },
                                  "intervalUnit": {
                                    "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "copyTags": {
                        "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                        "type": "boolean"
                      },
                      "createRule": {
                        "description": "See the create_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "cronExpression": {
                            "description": "The schedule, as a Cron expression. The schedule interval must be between 1 hour and 1 year. Conflicts with interval, interval_unit, and times.",
                            "type": "string"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          },
                          "location": {
                            "description": "Specifies the destination for snapshots created by the policy. To create snapshots in the same Region as the source resource, specify CLOUD. To create snapshots on the same Outpost as the source resource, specify OUTPOST_LOCAL. If you omit this parameter, CLOUD is used by default. If the policy targets resources in an AWS Region, then you must create snapshots in the same Region as the source resource. If the policy targets resources on an Outpost, then you can create snapshots on the same Outpost as the source resource, or in the Region of that Outpost. Valid values are CLOUD and OUTPOST_LOCAL.",
                            "type": "string"
                          },
                          "scripts": {
                            "description": "Specifies pre and/or post scripts for a snapshot lifecycle policy that targets instances. Valid only when resource_type is INSTANCE. See the scripts configuration block.",
                            "type": "object",
                            "properties": {
                              "executeOperationOnScriptFailure": {
                                "description": "Indicates whether Amazon Data Lifecycle Manager should default to crash-consistent snapshots if the pre script fails. The default is true.",
                                "type": "boolean"
                              },
                              "executionHandler": {
                                "description": "The SSM document that includes the pre and/or post scripts to run. In case automating VSS backups, specify AWS_VSS_BACKUP. In case automating application-consistent snapshots for SAP HANA workloads, specify AWSSystemsManagerSAP-CreateDLMSnapshotForSAPHANA. If you are using a custom SSM document that you own, specify either the name or ARN of the SSM document.",
                                "type": "string"
                              },
                              "executionHandlerService": {
                                "description": "Indicates the service used to execute the pre and/or post scripts. If using custom SSM documents or automating application-consistent snapshots of SAP HANA workloads, specify AWS_SYSTEMS_MANAGER. In case automating VSS Backups, omit this parameter. The default is AWS_SYSTEMS_MANAGER.",
                                "type": "string"
                              },
                              "executionTimeout": {
                                "description": "Specifies a timeout period, in seconds, after which Amazon Data Lifecycle Manager fails the script run attempt if it has not completed. In case automating VSS Backups, omit this parameter. The default is 10.",
                                "type": "number"
                              },
                              "maximumRetryCount": {
                                "description": "Specifies the number of times Amazon Data Lifecycle Manager should retry scripts that fail. Must be an integer between 0 and 3. The default is 0.",
                                "type": "number"
                              },
                              "stages": {
                                "description": "List to indicate which scripts Amazon Data Lifecycle Manager should run on target instances. Pre scripts run before Amazon Data Lifecycle Manager initiates snapshot creation. Post scripts run after Amazon Data Lifecycle Manager initiates snapshot creation. Valid values: PRE and POST. The default is PRE and POST",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "times": {
                            "description": "A list of times in 24 hour clock format that sets when the lifecycle policy should be evaluated. Max of 1. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "crossRegionCopyRule": {
                        "description": "See the cross_region_copy_rule block. Max of 3 per schedule.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "cmkArn": {
                              "description": "The Amazon Resource Name (ARN) of the AWS KMS key to use for EBS encryption. If this parameter is not specified, the default KMS key for the account is used.",
                              "type": "string"
                            },
                            "copyTags": {
                              "description": "Indicates whether the policy should copy tags from the source resource to the snapshot or AMI. Default value is false.",
                              "type": "boolean"
                            },
                            "deprecateRule": {
                              "description": "See the deprecate_rule block. Max of 1 per schedule.",
                              "type": "object",
                              "properties": {
                                "interval": {
                                  "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                  "type": "number"
                                },
                                "intervalUnit": {
                                  "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "encrypted": {
                              "description": "To encrypt a copy of an unencrypted snapshot when encryption by default is not enabled, enable encryption using this parameter. Copies of encrypted snapshots are encrypted, even if this parameter is false or when encryption by default is not enabled.",
                              "type": "boolean"
                            },
                            "retainRule": {
                              "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                              "type": "object",
                              "properties": {
                                "interval": {
                                  "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                                  "type": "number"
                                },
                                "intervalUnit": {
                                  "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "target": {
                              "description": "The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                              "type": "string"
                            },
                            "targetRegion": {
                              "description": "Use only for DLM policies of policy_type=IMAGE_MANAGEMENT. The target Region or the Amazon Resource Name (ARN) of the target Outpost for the snapshot copies.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "deprecateRule": {
                        "description": "See the deprecate_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "fastRestoreRule": {
                        "description": "See the fast_restore_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "availabilityZones": {
                            "description": "The Availability Zones in which to enable fast snapshot restore.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "set"
                          },
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "A descriptive name for the action.",
                        "type": "string"
                      },
                      "retainRule": {
                        "description": "Specifies the retention rule for cross-Region snapshot copies. See the retain_rule block. Max of 1 per action.",
                        "type": "object",
                        "properties": {
                          "count": {
                            "description": "Specifies the number of oldest AMIs to deprecate. Must be an integer between 1 and 1000. Conflicts with interval and interval_unit.",
                            "type": "number"
                          },
                          "interval": {
                            "description": "How often this lifecycle policy should be evaluated. 1, 2,3,4,6,8,12 or 24 are valid values. Conflicts with cron_expression. If set, interval_unit and times must also be set.",
                            "type": "number"
                          },
                          "intervalUnit": {
                            "description": "The unit for how often the lifecycle policy should be evaluated. HOURS is currently the only allowed value and also the default value. Conflicts with cron_expression. Must be set if interval is set.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "shareRule": {
                        "description": "See the share_rule block. Max of 1 per schedule.",
                        "type": "object",
                        "properties": {
                          "targetAccounts": {
                            "description": "The IDs of the AWS accounts with which to share the snapshots.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "set"
                          },
                          "unshareInterval": {
                            "description": "The period after which snapshots that are shared with other AWS accounts are automatically unshared.",
                            "type": "number"
                          },
                          "unshareIntervalUnit": {
                            "description": "The unit of time for the automatic unsharing interval. Valid values are DAYS, WEEKS, MONTHS, YEARS.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "tagsToAdd": {
                        "description": "A map of tag keys and their values. DLM lifecycle policies will already tag the snapshot with the tags on the volume. This configuration adds extra tags on top of these.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-kubernetes-map-type": "granular"
                      },
                      "variableTags": {
                        "description": "A map of tag keys and variable values, where the values are determined when the policy is executed. Only $(instance-id) or $(timestamp) are valid values. Can only be used when resource_types is INSTANCE.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-kubernetes-map-type": "granular"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "targetTags": {
                  "description": "A map of tag keys and their values. Any resources that match the resource_types and are tagged with any of these tags will be targeted. Required when policy_type is EBS_SNAPSHOT_MANAGEMENT or IMAGE_MANAGEMENT. Must not be specified when policy_type is EVENT_BASED_POLICY.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "state": {
              "description": "Whether the lifecycle policy should be enabled or disabled. ENABLED or DISABLED are valid values. Defaults to ENABLED.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
