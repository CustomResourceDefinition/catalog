{
  "description": "SchemaReplication is the Schema for the schemareplications API\nThis feature requires Tanzu RabbitMQ with schema replication plugin.\nFor more information, see: https://tanzu.vmware.com/rabbitmq and https://www.rabbitmq.com/definitions-standby.html.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SchemaReplicationSpec defines the desired state of SchemaReplication",
      "type": "object",
      "required": [
        "rabbitmqClusterReference"
      ],
      "properties": {
        "endpoints": {
          "description": "endpoints should be one or multiple endpoints separated by ','.\nMust provide either spec.endpoints or endpoints in spec.upstreamSecret.\nWhen endpoints are provided in both spec.endpoints and spec.upstreamSecret, spec.endpoints takes\nprecedence.",
          "type": "string"
        },
        "rabbitmqClusterReference": {
          "description": "Reference to the RabbitmqCluster that schema replication would be set for. Must be an existing cluster.",
          "type": "object",
          "properties": {
            "connectionSecret": {
              "description": "Secret contains the http management uri for the RabbitMQ cluster.\nThe Secret must contain the key `uri`, `username` and `password` or operator will error.\nHave to set either name or connectionSecret, but not both.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string",
                  "default": ""
                }
              },
              "additionalProperties": false,
              "x-kubernetes-map-type": "atomic"
            },
            "name": {
              "description": "The name of the RabbitMQ cluster to reference.\nHave to set either name or connectionSecret, but not both.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of the RabbitMQ cluster to reference.\nDefaults to the namespace of the requested resource if omitted.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "secretBackend": {
          "description": "Set to fetch user credentials from K8s external secret stores to be used for schema replication.",
          "type": "object",
          "properties": {
            "vault": {
              "type": "object",
              "properties": {
                "secretPath": {
                  "description": "Path in Vault to access a KV (Key-Value) secret with the fields username and password to be used for replication.\nFor example \"secret/data/rabbitmq/config\".\nOptional; if not provided, username and password will come from upstreamSecret instead.\nHave to set either secretBackend.vault.secretPath or upstreamSecret, but not both.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "upstreamSecret": {
          "description": "Defines a Secret which contains credentials to be used for schema replication.\nThe Secret must contain the keys `username` and `password` in its Data field, or operator will error.\nHave to set either secretBackend.vault.secretPath or spec.upstreamSecret, but not both.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string",
              "default": ""
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SchemaReplicationStatus defines the observed state of SchemaReplication",
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "The last time this Condition status changed.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Full text reason for current status of the condition.",
                "type": "string"
              },
              "reason": {
                "description": "One word, camel-case reason for current status of the condition.",
                "type": "string"
              },
              "status": {
                "description": "True, False, or Unknown",
                "type": "string"
              },
              "type": {
                "description": "Type indicates the scope of the custom resource status addressed by the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent successful generation observed for this Queue. It corresponds to the\nQueue's generation, which is updated on mutation by the API Server.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
