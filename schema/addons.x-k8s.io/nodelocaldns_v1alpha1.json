{
  "description": "NodeLocalDNS is the Schema for the nodelocaldns API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "NodeLocalDNSSpec defines the desired state of NodeLocalDNS",
      "type": "object",
      "properties": {
        "channel": {
          "description": "Channel specifies a channel that can be used to resolve a specific addon, eg: stable It will be ignored if Version is specified",
          "type": "string"
        },
        "clusterIP": {
          "type": "string"
        },
        "dnsDomain": {
          "description": "INSERT ADDITIONAL SPEC FIELDS - desired state of cluster Important: Run \"make\" to regenerate code after modifying this file",
          "type": "string"
        },
        "dnsIP": {
          "type": "string"
        },
        "patches": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "version": {
          "description": "Version specifies the exact addon version to be deployed, eg 1.2.3 It should not be specified if Channel is specified",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "NodeLocalDNSStatus defines the observed state of NodeLocalDNS",
      "type": "object",
      "required": [
        "healthy"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "healthy": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
