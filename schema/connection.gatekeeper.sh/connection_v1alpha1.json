{
  "description": "Connection is the Schema for the connections API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ConnectionSpec defines the desired state of Connection",
      "type": "object",
      "required": [
        "config",
        "driver"
      ],
      "properties": {
        "config": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "driver": {
          "description": "Driver is the name of one of the expected drivers i.e. dapr, disk",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ConnectionStatus defines the observed state of Connection",
      "type": "object",
      "properties": {
        "byPod": {
          "type": "array",
          "items": {
            "description": "ConnectionPodStatusStatus defines the observed state of ConnectionPodStatus",
            "type": "object",
            "properties": {
              "active": {
                "description": "Indicator for alive connection with at least one successful publish",
                "type": "boolean"
              },
              "connectionUID": {
                "description": "UID is a type that holds unique ID values, including UUIDs.  Because we\ndon't ONLY use UUIDs, this is an alias to string.  Being a type captures\nintent and helps make sure that UIDs and names do not get conflated.",
                "type": "string"
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "message",
                    "type"
                  ],
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "id": {
                "description": "ID is the unique identifier for the pod that wrote the status",
                "type": "string"
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64"
              },
              "operations": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
