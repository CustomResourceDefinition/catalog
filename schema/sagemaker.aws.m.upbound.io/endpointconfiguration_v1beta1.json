{
  "description": "EndpointConfiguration is the Schema for the EndpointConfigurations API. Provides a SageMaker AI Endpoint Configuration resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EndpointConfigurationSpec defines the desired state of EndpointConfiguration",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "asyncInferenceConfig": {
              "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
              "type": "object",
              "properties": {
                "clientConfig": {
                  "description": "Configures the behavior of the client used by Amazon SageMaker AI to interact with the model container during asynchronous inference.",
                  "type": "object",
                  "properties": {
                    "maxConcurrentInvocationsPerInstance": {
                      "description": "The maximum number of concurrent requests sent by the SageMaker AI client to the model container. If no value is provided, Amazon SageMaker AI will choose an optimal value for you.",
                      "type": "number"
                    }
                  },
                  "additionalProperties": false
                },
                "outputConfig": {
                  "description": "Specifies the configuration for asynchronous inference invocation outputs.",
                  "type": "object",
                  "properties": {
                    "kmsKeyId": {
                      "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker AI uses to encrypt the asynchronous inference output in Amazon S3.",
                      "type": "string"
                    },
                    "notificationConfig": {
                      "description": "Specifies the configuration for notifications of inference results for asynchronous inference.",
                      "type": "object",
                      "properties": {
                        "errorTopic": {
                          "description": "Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.",
                          "type": "string"
                        },
                        "includeInferenceResponseIn": {
                          "description": "The Amazon SNS topics where you want the inference response to be included. Valid values are SUCCESS_NOTIFICATION_TOPIC and ERROR_NOTIFICATION_TOPIC.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "successTopic": {
                          "description": "Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "s3FailurePath": {
                      "description": "The Amazon S3 location to upload failure inference responses to.",
                      "type": "string"
                    },
                    "s3OutputPath": {
                      "description": "The Amazon S3 location to upload inference responses to.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "dataCaptureConfig": {
              "description": "Specifies the parameters to capture input/output of SageMaker AI models endpoints. Fields are documented below.",
              "type": "object",
              "properties": {
                "captureContentTypeHeader": {
                  "description": "The content type headers to capture.\nSee capture_content_type_header below.",
                  "type": "object",
                  "properties": {
                    "csvContentTypes": {
                      "description": "The CSV content type headers to capture.\nOne of csv_content_types or json_content_types is required.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "jsonContentTypes": {
                      "description": "The JSON content type headers to capture.\nOne of json_content_types or csv_content_types is required.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    }
                  },
                  "additionalProperties": false
                },
                "captureOptions": {
                  "description": "Specifies what data to capture. Fields are documented below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "captureMode": {
                        "description": "Specifies the data to be captured. Should be one of Input, Output or InputAndOutput.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "destinationS3Uri": {
                  "description": "The URL for S3 location where the captured data is stored.",
                  "type": "string"
                },
                "enableCapture": {
                  "description": "Flag to enable data capture. Defaults to false.",
                  "type": "boolean"
                },
                "initialSamplingPercentage": {
                  "description": "Portion of data to capture. Should be between 0 and 100.",
                  "type": "number"
                },
                "kmsKeyId": {
                  "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker AI uses to encrypt the captured data on Amazon S3.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "kmsKeyArn": {
              "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker AI uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.",
              "type": "string"
            },
            "kmsKeyArnRef": {
              "description": "Reference to a Key in kms to populate kmsKeyArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "kmsKeyArnSelector": {
              "description": "Selector for a Key in kms to populate kmsKeyArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "productionVariants": {
              "description": "An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker AI Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "type": "object",
                    "properties": {
                      "destinationS3Uri": {
                        "description": "The Amazon S3 bucket to send the core dump to.",
                        "type": "string"
                      },
                      "kmsKeyId": {
                        "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker AI uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "inferenceAmiVersion": {
                    "description": "Specifies an option from a collection of preconfigured Amazon Machine Image (AMI) images. Each image is configured by Amazon Web Services with a set of software and driver versions. Amazon Web Services optimizes these configurations for different machine learning workloads.",
                    "type": "string"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "managedInstanceScaling": {
                    "description": "Settings that control the range in the number of instances that the endpoint provisions as it scales up or down to accommodate traffic.",
                    "type": "object",
                    "properties": {
                      "maxInstanceCount": {
                        "description": "The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.",
                        "type": "number"
                      },
                      "minInstanceCount": {
                        "description": "The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.",
                        "type": "number"
                      },
                      "status": {
                        "description": "Indicates whether managed instance scaling is enabled. Valid values are ENABLED and DISABLED.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "modelNameRef": {
                    "description": "Reference to a Model in sagemaker to populate modelName.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelNameSelector": {
                    "description": "Selector for a Model in sagemaker to populate modelName.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "namespace": {
                        "description": "Namespace for the selector",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "routingConfig": {
                    "description": "Sets how the endpoint routes incoming traffic. See routing_config below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "routingStrategy": {
                          "description": "Sets how the endpoint routes incoming traffic. Valid values are LEAST_OUTSTANDING_REQUESTS and RANDOM. LEAST_OUTSTANDING_REQUESTS routes requests to the specific instances that have more capacity to process them. RANDOM routes each request to a randomly chosen instance.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "type": "object",
                    "properties": {
                      "maxConcurrency": {
                        "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                        "type": "number"
                      },
                      "memorySizeInMb": {
                        "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                        "type": "number"
                      },
                      "provisionedConcurrency": {
                        "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "shadowProductionVariants": {
              "description": "Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants. If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker AI Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "type": "object",
                    "properties": {
                      "destinationS3Uri": {
                        "description": "The Amazon S3 bucket to send the core dump to.",
                        "type": "string"
                      },
                      "kmsKeyId": {
                        "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker AI uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "inferenceAmiVersion": {
                    "description": "Specifies an option from a collection of preconfigured Amazon Machine Image (AMI) images. Each image is configured by Amazon Web Services with a set of software and driver versions. Amazon Web Services optimizes these configurations for different machine learning workloads.",
                    "type": "string"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "managedInstanceScaling": {
                    "description": "Settings that control the range in the number of instances that the endpoint provisions as it scales up or down to accommodate traffic.",
                    "type": "object",
                    "properties": {
                      "maxInstanceCount": {
                        "description": "The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.",
                        "type": "number"
                      },
                      "minInstanceCount": {
                        "description": "The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.",
                        "type": "number"
                      },
                      "status": {
                        "description": "Indicates whether managed instance scaling is enabled. Valid values are ENABLED and DISABLED.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "routingConfig": {
                    "description": "Sets how the endpoint routes incoming traffic. See routing_config below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "routingStrategy": {
                          "description": "Sets how the endpoint routes incoming traffic. Valid values are LEAST_OUTSTANDING_REQUESTS and RANDOM. LEAST_OUTSTANDING_REQUESTS routes requests to the specific instances that have more capacity to process them. RANDOM routes each request to a randomly chosen instance.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "type": "object",
                    "properties": {
                      "maxConcurrency": {
                        "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                        "type": "number"
                      },
                      "memorySizeInMb": {
                        "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                        "type": "number"
                      },
                      "provisionedConcurrency": {
                        "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "asyncInferenceConfig": {
              "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
              "type": "object",
              "properties": {
                "clientConfig": {
                  "description": "Configures the behavior of the client used by Amazon SageMaker AI to interact with the model container during asynchronous inference.",
                  "type": "object",
                  "properties": {
                    "maxConcurrentInvocationsPerInstance": {
                      "description": "The maximum number of concurrent requests sent by the SageMaker AI client to the model container. If no value is provided, Amazon SageMaker AI will choose an optimal value for you.",
                      "type": "number"
                    }
                  },
                  "additionalProperties": false
                },
                "outputConfig": {
                  "description": "Specifies the configuration for asynchronous inference invocation outputs.",
                  "type": "object",
                  "properties": {
                    "kmsKeyId": {
                      "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker AI uses to encrypt the asynchronous inference output in Amazon S3.",
                      "type": "string"
                    },
                    "notificationConfig": {
                      "description": "Specifies the configuration for notifications of inference results for asynchronous inference.",
                      "type": "object",
                      "properties": {
                        "errorTopic": {
                          "description": "Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.",
                          "type": "string"
                        },
                        "includeInferenceResponseIn": {
                          "description": "The Amazon SNS topics where you want the inference response to be included. Valid values are SUCCESS_NOTIFICATION_TOPIC and ERROR_NOTIFICATION_TOPIC.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "successTopic": {
                          "description": "Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "s3FailurePath": {
                      "description": "The Amazon S3 location to upload failure inference responses to.",
                      "type": "string"
                    },
                    "s3OutputPath": {
                      "description": "The Amazon S3 location to upload inference responses to.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "dataCaptureConfig": {
              "description": "Specifies the parameters to capture input/output of SageMaker AI models endpoints. Fields are documented below.",
              "type": "object",
              "properties": {
                "captureContentTypeHeader": {
                  "description": "The content type headers to capture.\nSee capture_content_type_header below.",
                  "type": "object",
                  "properties": {
                    "csvContentTypes": {
                      "description": "The CSV content type headers to capture.\nOne of csv_content_types or json_content_types is required.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "jsonContentTypes": {
                      "description": "The JSON content type headers to capture.\nOne of json_content_types or csv_content_types is required.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    }
                  },
                  "additionalProperties": false
                },
                "captureOptions": {
                  "description": "Specifies what data to capture. Fields are documented below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "captureMode": {
                        "description": "Specifies the data to be captured. Should be one of Input, Output or InputAndOutput.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "destinationS3Uri": {
                  "description": "The URL for S3 location where the captured data is stored.",
                  "type": "string"
                },
                "enableCapture": {
                  "description": "Flag to enable data capture. Defaults to false.",
                  "type": "boolean"
                },
                "initialSamplingPercentage": {
                  "description": "Portion of data to capture. Should be between 0 and 100.",
                  "type": "number"
                },
                "kmsKeyId": {
                  "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker AI uses to encrypt the captured data on Amazon S3.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "kmsKeyArn": {
              "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker AI uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.",
              "type": "string"
            },
            "kmsKeyArnRef": {
              "description": "Reference to a Key in kms to populate kmsKeyArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "kmsKeyArnSelector": {
              "description": "Selector for a Key in kms to populate kmsKeyArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "productionVariants": {
              "description": "An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker AI Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "type": "object",
                    "properties": {
                      "destinationS3Uri": {
                        "description": "The Amazon S3 bucket to send the core dump to.",
                        "type": "string"
                      },
                      "kmsKeyId": {
                        "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker AI uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "inferenceAmiVersion": {
                    "description": "Specifies an option from a collection of preconfigured Amazon Machine Image (AMI) images. Each image is configured by Amazon Web Services with a set of software and driver versions. Amazon Web Services optimizes these configurations for different machine learning workloads.",
                    "type": "string"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "managedInstanceScaling": {
                    "description": "Settings that control the range in the number of instances that the endpoint provisions as it scales up or down to accommodate traffic.",
                    "type": "object",
                    "properties": {
                      "maxInstanceCount": {
                        "description": "The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.",
                        "type": "number"
                      },
                      "minInstanceCount": {
                        "description": "The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.",
                        "type": "number"
                      },
                      "status": {
                        "description": "Indicates whether managed instance scaling is enabled. Valid values are ENABLED and DISABLED.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "modelNameRef": {
                    "description": "Reference to a Model in sagemaker to populate modelName.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelNameSelector": {
                    "description": "Selector for a Model in sagemaker to populate modelName.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "namespace": {
                        "description": "Namespace for the selector",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "routingConfig": {
                    "description": "Sets how the endpoint routes incoming traffic. See routing_config below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "routingStrategy": {
                          "description": "Sets how the endpoint routes incoming traffic. Valid values are LEAST_OUTSTANDING_REQUESTS and RANDOM. LEAST_OUTSTANDING_REQUESTS routes requests to the specific instances that have more capacity to process them. RANDOM routes each request to a randomly chosen instance.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "type": "object",
                    "properties": {
                      "maxConcurrency": {
                        "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                        "type": "number"
                      },
                      "memorySizeInMb": {
                        "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                        "type": "number"
                      },
                      "provisionedConcurrency": {
                        "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "shadowProductionVariants": {
              "description": "Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants. If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker AI Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "type": "object",
                    "properties": {
                      "destinationS3Uri": {
                        "description": "The Amazon S3 bucket to send the core dump to.",
                        "type": "string"
                      },
                      "kmsKeyId": {
                        "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker AI uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "inferenceAmiVersion": {
                    "description": "Specifies an option from a collection of preconfigured Amazon Machine Image (AMI) images. Each image is configured by Amazon Web Services with a set of software and driver versions. Amazon Web Services optimizes these configurations for different machine learning workloads.",
                    "type": "string"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "managedInstanceScaling": {
                    "description": "Settings that control the range in the number of instances that the endpoint provisions as it scales up or down to accommodate traffic.",
                    "type": "object",
                    "properties": {
                      "maxInstanceCount": {
                        "description": "The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.",
                        "type": "number"
                      },
                      "minInstanceCount": {
                        "description": "The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.",
                        "type": "number"
                      },
                      "status": {
                        "description": "Indicates whether managed instance scaling is enabled. Valid values are ENABLED and DISABLED.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "routingConfig": {
                    "description": "Sets how the endpoint routes incoming traffic. See routing_config below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "routingStrategy": {
                          "description": "Sets how the endpoint routes incoming traffic. Valid values are LEAST_OUTSTANDING_REQUESTS and RANDOM. LEAST_OUTSTANDING_REQUESTS routes requests to the specific instances that have more capacity to process them. RANDOM routes each request to a randomly chosen instance.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "type": "object",
                    "properties": {
                      "maxConcurrency": {
                        "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                        "type": "number"
                      },
                      "memorySizeInMb": {
                        "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                        "type": "number"
                      },
                      "provisionedConcurrency": {
                        "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.productionVariants) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.productionVariants))",
          "message": "spec.forProvider.productionVariants is a required parameter"
        }
      ]
    },
    "status": {
      "description": "EndpointConfigurationStatus defines the observed state of EndpointConfiguration.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) assigned by AWS to this endpoint configuration.",
              "type": "string"
            },
            "asyncInferenceConfig": {
              "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
              "type": "object",
              "properties": {
                "clientConfig": {
                  "description": "Configures the behavior of the client used by Amazon SageMaker AI to interact with the model container during asynchronous inference.",
                  "type": "object",
                  "properties": {
                    "maxConcurrentInvocationsPerInstance": {
                      "description": "The maximum number of concurrent requests sent by the SageMaker AI client to the model container. If no value is provided, Amazon SageMaker AI will choose an optimal value for you.",
                      "type": "number"
                    }
                  },
                  "additionalProperties": false
                },
                "outputConfig": {
                  "description": "Specifies the configuration for asynchronous inference invocation outputs.",
                  "type": "object",
                  "properties": {
                    "kmsKeyId": {
                      "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker AI uses to encrypt the asynchronous inference output in Amazon S3.",
                      "type": "string"
                    },
                    "notificationConfig": {
                      "description": "Specifies the configuration for notifications of inference results for asynchronous inference.",
                      "type": "object",
                      "properties": {
                        "errorTopic": {
                          "description": "Amazon SNS topic to post a notification to when inference fails. If no topic is provided, no notification is sent on failure.",
                          "type": "string"
                        },
                        "includeInferenceResponseIn": {
                          "description": "The Amazon SNS topics where you want the inference response to be included. Valid values are SUCCESS_NOTIFICATION_TOPIC and ERROR_NOTIFICATION_TOPIC.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "successTopic": {
                          "description": "Amazon SNS topic to post a notification to when inference completes successfully. If no topic is provided, no notification is sent on success.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "s3FailurePath": {
                      "description": "The Amazon S3 location to upload failure inference responses to.",
                      "type": "string"
                    },
                    "s3OutputPath": {
                      "description": "The Amazon S3 location to upload inference responses to.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "dataCaptureConfig": {
              "description": "Specifies the parameters to capture input/output of SageMaker AI models endpoints. Fields are documented below.",
              "type": "object",
              "properties": {
                "captureContentTypeHeader": {
                  "description": "The content type headers to capture.\nSee capture_content_type_header below.",
                  "type": "object",
                  "properties": {
                    "csvContentTypes": {
                      "description": "The CSV content type headers to capture.\nOne of csv_content_types or json_content_types is required.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "jsonContentTypes": {
                      "description": "The JSON content type headers to capture.\nOne of json_content_types or csv_content_types is required.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    }
                  },
                  "additionalProperties": false
                },
                "captureOptions": {
                  "description": "Specifies what data to capture. Fields are documented below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "captureMode": {
                        "description": "Specifies the data to be captured. Should be one of Input, Output or InputAndOutput.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "destinationS3Uri": {
                  "description": "The URL for S3 location where the captured data is stored.",
                  "type": "string"
                },
                "enableCapture": {
                  "description": "Flag to enable data capture. Defaults to false.",
                  "type": "boolean"
                },
                "initialSamplingPercentage": {
                  "description": "Portion of data to capture. Should be between 0 and 100.",
                  "type": "number"
                },
                "kmsKeyId": {
                  "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker AI uses to encrypt the captured data on Amazon S3.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "type": "string"
            },
            "kmsKeyArn": {
              "description": "Amazon Resource Name (ARN) of a AWS Key Management Service key that Amazon SageMaker AI uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint.",
              "type": "string"
            },
            "productionVariants": {
              "description": "An list of ProductionVariant objects, one for each model that you want to host at this endpoint. Fields are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker AI Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "type": "object",
                    "properties": {
                      "destinationS3Uri": {
                        "description": "The Amazon S3 bucket to send the core dump to.",
                        "type": "string"
                      },
                      "kmsKeyId": {
                        "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker AI uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "inferenceAmiVersion": {
                    "description": "Specifies an option from a collection of preconfigured Amazon Machine Image (AMI) images. Each image is configured by Amazon Web Services with a set of software and driver versions. Amazon Web Services optimizes these configurations for different machine learning workloads.",
                    "type": "string"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "managedInstanceScaling": {
                    "description": "Settings that control the range in the number of instances that the endpoint provisions as it scales up or down to accommodate traffic.",
                    "type": "object",
                    "properties": {
                      "maxInstanceCount": {
                        "description": "The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.",
                        "type": "number"
                      },
                      "minInstanceCount": {
                        "description": "The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.",
                        "type": "number"
                      },
                      "status": {
                        "description": "Indicates whether managed instance scaling is enabled. Valid values are ENABLED and DISABLED.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "routingConfig": {
                    "description": "Sets how the endpoint routes incoming traffic. See routing_config below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "routingStrategy": {
                          "description": "Sets how the endpoint routes incoming traffic. Valid values are LEAST_OUTSTANDING_REQUESTS and RANDOM. LEAST_OUTSTANDING_REQUESTS routes requests to the specific instances that have more capacity to process them. RANDOM routes each request to a randomly chosen instance.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "type": "object",
                    "properties": {
                      "maxConcurrency": {
                        "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                        "type": "number"
                      },
                      "memorySizeInMb": {
                        "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                        "type": "number"
                      },
                      "provisionedConcurrency": {
                        "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "shadowProductionVariants": {
              "description": "Array of ProductionVariant objects. There is one for each model that you want to host at this endpoint in shadow mode with production traffic replicated from the model specified on ProductionVariants. If you use this field, you can only specify one variant for ProductionVariants and one variant for ShadowProductionVariants. Fields are documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceleratorType": {
                    "description": "The size of the Elastic Inference (EI) instance to use for the production variant.",
                    "type": "string"
                  },
                  "containerStartupHealthCheckTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, for your inference container to pass health check by SageMaker AI Hosting. For more information about health check, see How Your Container Should Respond to Health Check (Ping) Requests. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "coreDumpConfig": {
                    "description": "Specifies configuration for a core dump from the model container when the process crashes. Fields are documented below.",
                    "type": "object",
                    "properties": {
                      "destinationS3Uri": {
                        "description": "The Amazon S3 bucket to send the core dump to.",
                        "type": "string"
                      },
                      "kmsKeyId": {
                        "description": "The Amazon Web Services Key Management Service (Amazon Web Services KMS) key that SageMaker AI uses to encrypt the core dump data at rest using Amazon S3 server-side encryption.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "enableSsmAccess": {
                    "description": "You can use this parameter to turn on native Amazon Web Services Systems Manager (SSM) access for a production variant behind an endpoint. By default, SSM access is disabled for all production variants behind an endpoints.",
                    "type": "boolean"
                  },
                  "inferenceAmiVersion": {
                    "description": "Specifies an option from a collection of preconfigured Amazon Machine Image (AMI) images. Each image is configured by Amazon Web Services with a set of software and driver versions. Amazon Web Services optimizes these configurations for different machine learning workloads.",
                    "type": "string"
                  },
                  "initialInstanceCount": {
                    "description": "Initial number of instances used for auto-scaling.",
                    "type": "number"
                  },
                  "initialVariantWeight": {
                    "description": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration. If unspecified, it defaults to 1.0.",
                    "type": "number"
                  },
                  "instanceType": {
                    "description": "The type of instance to start.",
                    "type": "string"
                  },
                  "managedInstanceScaling": {
                    "description": "Settings that control the range in the number of instances that the endpoint provisions as it scales up or down to accommodate traffic.",
                    "type": "object",
                    "properties": {
                      "maxInstanceCount": {
                        "description": "The maximum number of instances that the endpoint can provision when it scales up to accommodate an increase in traffic.",
                        "type": "number"
                      },
                      "minInstanceCount": {
                        "description": "The minimum number of instances that the endpoint must retain when it scales down to accommodate a decrease in traffic.",
                        "type": "number"
                      },
                      "status": {
                        "description": "Indicates whether managed instance scaling is enabled. Valid values are ENABLED and DISABLED.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "modelDataDownloadTimeoutInSeconds": {
                    "description": "The timeout value, in seconds, to download and extract the model that you want to host from Amazon S3 to the individual inference instance associated with this production variant. Valid values between 60 and 3600.",
                    "type": "number"
                  },
                  "modelName": {
                    "description": "The name of the model to use.",
                    "type": "string"
                  },
                  "routingConfig": {
                    "description": "Sets how the endpoint routes incoming traffic. See routing_config below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "routingStrategy": {
                          "description": "Sets how the endpoint routes incoming traffic. Valid values are LEAST_OUTSTANDING_REQUESTS and RANDOM. LEAST_OUTSTANDING_REQUESTS routes requests to the specific instances that have more capacity to process them. RANDOM routes each request to a randomly chosen instance.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "serverlessConfig": {
                    "description": "Specifies configuration for how an endpoint performs asynchronous inference.",
                    "type": "object",
                    "properties": {
                      "maxConcurrency": {
                        "description": "The maximum number of concurrent invocations your serverless endpoint can process. Valid values are between 1 and 200.",
                        "type": "number"
                      },
                      "memorySizeInMb": {
                        "description": "The memory size of your serverless endpoint. Valid values are in 1 GB increments: 1024 MB, 2048 MB, 3072 MB, 4096 MB, 5120 MB, or 6144 MB.",
                        "type": "number"
                      },
                      "provisionedConcurrency": {
                        "description": "The amount of provisioned concurrency to allocate for the serverless endpoint. Should be less than or equal to max_concurrency. Valid values are between 1 and 200.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  },
                  "variantName": {
                    "description": "The name of the variant.",
                    "type": "string"
                  },
                  "volumeSizeInGb": {
                    "description": "The size, in GB, of the ML storage volume attached to individual inference instance associated with the production variant. Valid values between 1 and 512.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
