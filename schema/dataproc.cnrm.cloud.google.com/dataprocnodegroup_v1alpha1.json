{
  "description": "DataprocNodeGroup is the Schema for the DataprocNodeGroup API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DataprocNodeGroupSpec defines the desired state of DataprocNodeGroup",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Optional. Node group labels.\n\n * Label **keys** must consist of from 1 to 63 characters and conform to\n   [RFC 1035](https://www.ietf.org/rfc/rfc1035.txt).\n * Label **values** can be empty. If specified, they must consist of from\n   1 to 63 characters and conform to [RFC 1035]\n   (https://www.ietf.org/rfc/rfc1035.txt).\n * The node group must have no more than 32 labels.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "description": "Required.",
          "type": "string"
        },
        "nodeGroupConfig": {
          "description": "Optional. The node group instance group configuration.",
          "type": "object",
          "properties": {
            "accelerators": {
              "description": "Optional. The Compute Engine accelerator configuration for these instances.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceleratorCount": {
                    "description": "The number of the accelerator cards of this type exposed to this instance.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "acceleratorTypeURI": {
                    "description": "Full URL, partial URI, or short name of the accelerator type resource to\n expose to this instance. See\n [Compute Engine\n AcceleratorTypes](https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).\n\n Examples:\n\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4`\n * `projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-t4`\n * `nvidia-tesla-t4`\n\n **Auto Zone Exception**: If you are using the Dataproc\n [Auto Zone\n Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement)\n feature, you must use the short name of the accelerator type\n resource, for example, `nvidia-tesla-t4`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "diskConfig": {
              "description": "Optional. Disk option config settings.",
              "type": "object",
              "properties": {
                "bootDiskProvisionedIOPs": {
                  "description": "Optional. Indicates how many IOPS to provision for the disk. This sets the number of I/O operations per second that the disk can handle. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.",
                  "type": "integer",
                  "format": "int64"
                },
                "bootDiskProvisionedThroughput": {
                  "description": "Optional. Indicates how much throughput to provision for the disk. This sets the number of throughput mb per second that the disk can handle. Values must be greater than or equal to 1. Note: This field is only supported if boot_disk_type is hyperdisk-balanced.",
                  "type": "integer",
                  "format": "int64"
                },
                "bootDiskSizeGB": {
                  "description": "Optional. Size in GB of the boot disk (default is 500GB).",
                  "type": "integer",
                  "format": "int32"
                },
                "bootDiskType": {
                  "description": "Optional. Type of the boot disk (default is \"pd-standard\"). Valid values: \"pd-balanced\" (Persistent Disk Balanced Solid State Drive), \"pd-ssd\" (Persistent Disk Solid State Drive), or \"pd-standard\" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).",
                  "type": "string"
                },
                "localSSDInterface": {
                  "description": "Optional. Interface type of local SSDs (default is \"scsi\"). Valid values: \"scsi\" (Small Computer System Interface), \"nvme\" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).",
                  "type": "string"
                },
                "numLocalSSDs": {
                  "description": "Optional. Number of attached SSDs, from 0 to 8 (default is 0).\n If SSDs are not attached, the boot disk is used to store runtime logs and\n [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data.\n If one or more SSDs are attached, this runtime bulk\n data is spread across them, and the boot disk contains only basic\n config and installed binaries.\n\n Note: Local SSD options may vary by machine type and number of vCPUs\n selected.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "imageURI": {
              "description": "Optional. The Compute Engine image resource used for cluster instances.\n\n The URI can represent an image or image family.\n\n Image examples:\n\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id]`\n * `projects/[project_id]/global/images/[image-id]`\n * `image-id`\n\n Image family examples. Dataproc will use the most recent\n image from the family:\n\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name]`\n * `projects/[project_id]/global/images/family/[custom-image-family-name]`\n\n If the URI is unspecified, it will be inferred from\n `SoftwareConfig.image_version` or the system default.",
              "type": "string"
            },
            "instanceFlexibilityPolicy": {
              "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
              "type": "object",
              "properties": {
                "instanceSelectionList": {
                  "description": "Optional. List of instance selection options that the group will use when creating new VMs.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "machineTypes": {
                        "description": "Optional. Full machine-type names, e.g. \"n1-standard-16\".",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "rank": {
                        "description": "Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.",
                        "type": "integer",
                        "format": "int32"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "provisioningModelMix": {
                  "description": "Optional. Defines how the Group selects the provisioning model to ensure required reliability.",
                  "type": "object",
                  "properties": {
                    "standardCapacityBase": {
                      "description": "Optional. The base capacity that will always use Standard VMs to avoid risk of more preemption than the minimum capacity you need. Dataproc will create only standard VMs until it reaches standard_capacity_base, then it will start using standard_capacity_percent_above_base to mix Spot with Standard VMs. eg. If 15 instances are requested and standard_capacity_base is 5, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "standardCapacityPercentAboveBase": {
                      "description": "Optional. The percentage of target capacity that should use Standard VM. The remaining percentage will use Spot VMs. The percentage applies only to the capacity above standard_capacity_base. eg. If 15 instances are requested and standard_capacity_base is 5 and standard_capacity_percent_above_base is 30, Dataproc will create 5 standard VMs and then start mixing spot and standard VMs for remaining 10 instances. The mix will be 30% standard and 70% spot.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "machineTypeURI": {
              "description": "Optional. The Compute Engine machine type used for cluster instances.\n\n A full URL, partial URI, or short name are valid. Examples:\n\n * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`\n * `projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2`\n * `n1-standard-2`\n\n **Auto Zone Exception**: If you are using the Dataproc\n [Auto Zone\n Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement)\n feature, you must use the short name of the machine type\n resource, for example, `n1-standard-2`.",
              "type": "string"
            },
            "minCPUPlatform": {
              "description": "Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -\u003e Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).",
              "type": "string"
            },
            "minNumInstances": {
              "description": "Optional. The minimum number of primary worker instances to create.\n If `min_num_instances` is set, cluster creation will succeed if\n the number of primary workers created is at least equal to the\n `min_num_instances` number.\n\n Example: Cluster creation request with `num_instances` = `5` and\n `min_num_instances` = `3`:\n\n *  If 4 VMs are created and 1 instance fails,\n    the failed VM is deleted. The cluster is\n    resized to 4 instances and placed in a `RUNNING` state.\n *  If 2 instances are created and 3 instances fail,\n    the cluster in placed in an `ERROR` state. The failed VMs\n    are not deleted.",
              "type": "integer",
              "format": "int32"
            },
            "numInstances": {
              "description": "Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.",
              "type": "integer",
              "format": "int32"
            },
            "preemptibility": {
              "description": "Optional. Specifies the preemptibility of the instance group.\n\n The default value for master and worker groups is\n `NON_PREEMPTIBLE`. This default cannot be changed.\n\n The default value for secondary instances is\n `PREEMPTIBLE`.",
              "type": "string"
            },
            "startupConfig": {
              "description": "Optional. Configuration to handle the startup of instances during cluster create and update process.",
              "type": "object",
              "properties": {
                "requiredRegistrationFraction": {
                  "description": "Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).",
                  "type": "number"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "Required.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The DataprocNodeGroup name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "roles": {
          "description": "Required. Node group roles.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DataprocNodeGroupStatus defines the config connector machine state of DataprocNodeGroup",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DataprocNodeGroup resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "nodeGroupConfig": {
              "description": "Optional. The node group instance group configuration.",
              "type": "object",
              "properties": {
                "instanceFlexibilityPolicy": {
                  "description": "Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.",
                  "type": "object",
                  "properties": {
                    "instanceSelectionResults": {
                      "description": "Output only. A list of instance selection results in the group.",
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "instanceNames": {
                  "description": "Output only. The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "instanceReferences": {
                  "description": "Output only. List of references to Compute Engine instances.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "instanceID": {
                        "description": "The unique identifier of the Compute Engine instance.",
                        "type": "string"
                      },
                      "instanceName": {
                        "description": "The user-friendly name of the Compute Engine instance.",
                        "type": "string"
                      },
                      "publicEciesKey": {
                        "description": "The public ECIES key used for sharing data with this instance.",
                        "type": "string"
                      },
                      "publicKey": {
                        "description": "The public RSA key used for sharing data with this instance.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "isPreemptible": {
                  "description": "Output only. Specifies that this instance group contains preemptible instances.",
                  "type": "boolean"
                },
                "managedGroupConfig": {
                  "description": "Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.",
                  "type": "object"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
