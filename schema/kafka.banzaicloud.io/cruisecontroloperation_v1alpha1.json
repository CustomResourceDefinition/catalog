{
  "description": "CruiseControlOperation is the Schema for the cruiseControlOperation API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CruiseControlOperationSpec defines the desired state of CruiseControlOperation.",
      "type": "object",
      "properties": {
        "errorPolicy": {
          "description": "ErrorPolicy defines how failed Cruise Control operation should be handled.\nWhen it is \"retry\", the Koperator re-executes the failed task in every 30 sec (by default).\nWhen it is \"ignore\", the Koperator handles the failed task as completed.",
          "type": "string",
          "default": "retry",
          "enum": [
            "ignore",
            "retry"
          ]
        },
        "ttlSecondsAfterFinished": {
          "description": "When TTLSecondsAfterFinished is specified, the created and finished (completed successfully or completedWithError and errorPolicy: ignore)\ncruiseControlOperation custom resource will be deleted after the given time elapsed.\nWhen it is 0 then the resource is going to be deleted instantly after the operation is finished.\nWhen it is not specified the resource is not going to be removed.\nValue can be only zero and positive integers",
          "type": "integer",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CruiseControlOperationStatus defines the observed state of CruiseControlOperation.",
      "type": "object",
      "required": [
        "errorPolicy",
        "retryCount"
      ],
      "properties": {
        "currentTask": {
          "description": "CruiseControlTask defines the observed state of the Cruise Control user task.",
          "type": "object",
          "required": [
            "operation"
          ],
          "properties": {
            "errorMessage": {
              "type": "string"
            },
            "finished": {
              "type": "string",
              "format": "date-time"
            },
            "httpRequest": {
              "description": "HTTPRequest is a Cruise Control user task HTTP request.",
              "type": "string"
            },
            "httpResponseCode": {
              "type": "integer"
            },
            "id": {
              "type": "string"
            },
            "operation": {
              "description": "Operation defines the Cruise Control operation kind.",
              "type": "string"
            },
            "parameters": {
              "description": "Parameters defines the configuration of the operation.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "started": {
              "type": "string",
              "format": "date-time"
            },
            "state": {
              "description": "State is the current state of the Cruise Control user task.",
              "type": "string"
            },
            "summary": {
              "description": "Summary of the Cruise Control user task execution proposal.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "errorPolicy": {
          "description": "ErrorPolicyType defines methods of handling Cruise Control user task errors.",
          "type": "string"
        },
        "failedTasks": {
          "type": "array",
          "items": {
            "description": "CruiseControlTask defines the observed state of the Cruise Control user task.",
            "type": "object",
            "required": [
              "operation"
            ],
            "properties": {
              "errorMessage": {
                "type": "string"
              },
              "finished": {
                "type": "string",
                "format": "date-time"
              },
              "httpRequest": {
                "description": "HTTPRequest is a Cruise Control user task HTTP request.",
                "type": "string"
              },
              "httpResponseCode": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              },
              "operation": {
                "description": "Operation defines the Cruise Control operation kind.",
                "type": "string"
              },
              "parameters": {
                "description": "Parameters defines the configuration of the operation.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              },
              "started": {
                "type": "string",
                "format": "date-time"
              },
              "state": {
                "description": "State is the current state of the Cruise Control user task.",
                "type": "string"
              },
              "summary": {
                "description": "Summary of the Cruise Control user task execution proposal.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false
          }
        },
        "retryCount": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    }
  }
}
