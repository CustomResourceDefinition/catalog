{
  "description": "Configuration is the Schema for the Configurations API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ConfigurationSpec defines the desired state of Configuration.\n\nRepresents an MSK Configuration.",
      "type": "object",
      "required": [
        "name",
        "serverProperties"
      ],
      "properties": {
        "description": {
          "description": "The description of the configuration.",
          "type": "string"
        },
        "kafkaVersions": {
          "description": "The versions of Apache Kafka with which you can use this MSK configuration.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "The name of the configuration.",
          "type": "string"
        },
        "serverProperties": {
          "description": "Contents of the server.properties file. When using the API, you must ensure\nthat the contents of the file are base64 encoded. When using the AWS Management\nConsole, the SDK, or the AWS CLI, the contents of server.properties can be\nin plaintext.",
          "type": "string",
          "format": "byte"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ConfigurationStatus defines the observed state of Configuration",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "creationTime": {
          "description": "The time when the configuration was created.",
          "type": "string",
          "format": "date-time"
        },
        "latestRevision": {
          "description": "Latest revision of the configuration.",
          "type": "object",
          "properties": {
            "creationTime": {
              "type": "string",
              "format": "date-time"
            },
            "description": {
              "type": "string"
            },
            "revision": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        },
        "state": {
          "description": "The state of the configuration. The possible states are ACTIVE, DELETING,\nand DELETE_FAILED.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
