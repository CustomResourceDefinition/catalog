{
  "description": "Cluster is the Schema for the Clusters API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClusterSpec defines the desired state of Cluster.\n\nReturns information about a cluster.",
      "type": "object",
      "required": [
        "brokerNodeGroupInfo",
        "kafkaVersion",
        "name",
        "numberOfBrokerNodes"
      ],
      "properties": {
        "associatedSCRAMSecretRefs": {
          "type": "array",
          "items": {
            "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api",
            "type": "object",
            "properties": {
              "from": {
                "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "namespace": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "associatedSCRAMSecrets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "brokerNodeGroupInfo": {
          "description": "Information about the broker nodes in the cluster.",
          "type": "object",
          "properties": {
            "brokerAZDistribution": {
              "description": "The distribution of broker nodes across Availability Zones. This is an optional\nparameter. If you don't specify it, Amazon MSK gives it the value DEFAULT.\nYou can also explicitly set this parameter to the value DEFAULT. No other\nvalues are currently allowed.\n\nAmazon MSK distributes the broker nodes evenly across the Availability Zones\nthat correspond to the subnets you provide when you create the cluster.",
              "type": "string"
            },
            "clientSubnets": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "connectivityInfo": {
              "description": "Information about the broker access configuration.",
              "type": "object",
              "properties": {
                "publicAccess": {
                  "description": "Public access control for brokers.",
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "instanceType": {
              "type": "string"
            },
            "securityGroups": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "storageInfo": {
              "description": "Contains information about storage volumes attached to MSK broker nodes.",
              "type": "object",
              "properties": {
                "ebsStorageInfo": {
                  "description": "Contains information about the EBS storage volumes attached to Apache Kafka\nbroker nodes.",
                  "type": "object",
                  "properties": {
                    "provisionedThroughput": {
                      "description": "Contains information about provisioned throughput for EBS storage volumes\nattached to kafka broker nodes.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        },
                        "volumeThroughput": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "volumeSize": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "clientAuthentication": {
          "description": "Includes all client authentication related information.",
          "type": "object",
          "properties": {
            "sasl": {
              "description": "Details for client authentication using SASL.",
              "type": "object",
              "properties": {
                "iam": {
                  "description": "Details for IAM access control.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "scram": {
                  "description": "Details for SASL/SCRAM client authentication.",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tls": {
              "description": "Details for client authentication using TLS.",
              "type": "object",
              "properties": {
                "certificateAuthorityARNList": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "enabled": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "unauthenticated": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "configurationInfo": {
          "description": "Represents the configuration that you want MSK to use for the brokers in\na cluster.",
          "type": "object",
          "properties": {
            "arn": {
              "type": "string"
            },
            "revision": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        },
        "encryptionInfo": {
          "description": "Includes all encryption-related information.",
          "type": "object",
          "properties": {
            "encryptionAtRest": {
              "description": "The data-volume encryption details.",
              "type": "object",
              "properties": {
                "dataVolumeKMSKeyID": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "encryptionInTransit": {
              "description": "The settings for encrypting data in transit.",
              "type": "object",
              "properties": {
                "clientBroker": {
                  "description": "Client-broker encryption in transit setting.",
                  "type": "string"
                },
                "inCluster": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "enhancedMonitoring": {
          "description": "Specifies the level of monitoring for the MSK cluster. The possible values\nare DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.",
          "type": "string"
        },
        "kafkaVersion": {
          "description": "The version of Apache Kafka.",
          "type": "string"
        },
        "loggingInfo": {
          "type": "object",
          "properties": {
            "brokerLogs": {
              "type": "object",
              "properties": {
                "cloudWatchLogs": {
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "type": "boolean"
                    },
                    "logGroup": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "firehose": {
                  "type": "object",
                  "properties": {
                    "deliveryStream": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "s3": {
                  "type": "object",
                  "properties": {
                    "bucket": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "prefix": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "The name of the cluster.",
          "type": "string"
        },
        "numberOfBrokerNodes": {
          "description": "The number of broker nodes in the cluster.",
          "type": "integer",
          "format": "int64"
        },
        "openMonitoring": {
          "description": "The settings for open monitoring.",
          "type": "object",
          "properties": {
            "prometheus": {
              "description": "Prometheus settings.",
              "type": "object",
              "properties": {
                "jmxExporter": {
                  "description": "Indicates whether you want to turn on or turn off the JMX Exporter.",
                  "type": "object",
                  "properties": {
                    "enabledInBroker": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "nodeExporter": {
                  "description": "Indicates whether you want to turn on or turn off the Node Exporter.",
                  "type": "object",
                  "properties": {
                    "enabledInBroker": {
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "storageMode": {
          "description": "This controls storage mode for supported storage tiers.",
          "type": "string"
        },
        "tags": {
          "description": "Create tags when creating the cluster.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterStatus defines the observed state of Cluster",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "bootstrapBrokerString": {
          "type": "string"
        },
        "bootstrapBrokerStringPublicSASLIAM": {
          "type": "string"
        },
        "bootstrapBrokerStringPublicSASLSCRAM": {
          "type": "string"
        },
        "bootstrapBrokerStringPublicTLS": {
          "type": "string"
        },
        "bootstrapBrokerStringSASLIAM": {
          "type": "string"
        },
        "bootstrapBrokerStringSASLSCRAM": {
          "type": "string"
        },
        "bootstrapBrokerStringTLS": {
          "type": "string"
        },
        "bootstrapBrokerStringVPCConnectivitySASLIAM": {
          "type": "string"
        },
        "bootstrapBrokerStringVPCConnectivitySASLSCRAM": {
          "type": "string"
        },
        "bootstrapBrokerStringVPCConnectivityTLS": {
          "type": "string"
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "currentVersion": {
          "description": "The current version of the MSK cluster.",
          "type": "string"
        },
        "state": {
          "description": "The state of the cluster. The possible states are ACTIVE, CREATING, DELETING,\nFAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.",
          "type": "string"
        },
        "zookeeperConnectString": {
          "type": "string"
        },
        "zookeeperConnectStringTLS": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
