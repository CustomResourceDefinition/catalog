{
  "description": "LVMVolume represents a LVM based volume",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VolumeInfo defines LVM info",
      "type": "object",
      "required": [
        "capacity",
        "ownerNodeID",
        "vgPattern",
        "volGroup"
      ],
      "properties": {
        "capacity": {
          "description": "Capacity of the volume",
          "type": "string",
          "minLength": 1
        },
        "ownerNodeID": {
          "description": "OwnerNodeID is the Node ID where the volume group is present which is where the volume has been provisioned. OwnerNodeID can not be edited after the volume has been provisioned.",
          "type": "string",
          "minLength": 1
        },
        "shared": {
          "description": "Shared specifies whether the volume can be shared among multiple pods. If it is not set to \"yes\", then the LVM LocalPV Driver will not allow the volumes to be mounted by more than one pods.",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "thinProvision": {
          "description": "ThinProvision specifies whether logical volumes can be thinly provisioned. If it is set to \"yes\", then the LVM LocalPV Driver will create thinProvision i.e. logical volumes that are larger than the available extents.",
          "type": "string",
          "enum": [
            "yes",
            "no"
          ]
        },
        "vgPattern": {
          "description": "VgPattern specifies the regex to choose volume groups where volume needs to be created.",
          "type": "string"
        },
        "volGroup": {
          "description": "VolGroup specifies the name of the volume group where the volume has been created.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "VolStatus string that specifies the current state of the volume provisioning request.",
      "type": "object",
      "properties": {
        "error": {
          "description": "Error denotes the error occurred during provisioning/expanding a volume. Error field should only be set when State becomes Failed.",
          "type": "object",
          "properties": {
            "code": {
              "description": "VolumeErrorCode represents the error code to represent specific class of errors.",
              "type": "string"
            },
            "message": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "state": {
          "description": "State specifies the current state of the volume provisioning request. The state \"Pending\" means that the volume creation request has not processed yet. The state \"Ready\" means that the volume has been created and it is ready for the use. \"Failed\" means that volume provisioning has been failed and will not be retried by node agent controller.",
          "type": "string",
          "enum": [
            "Pending",
            "Ready",
            "Failed"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
