{
  "description": "LVMNode records information about all lvm volume groups available in a node. In general, the openebs node-agent creates the LVMNode object \u0026 periodically synchronizing the volume groups available in the node. LVMNode has an owner reference pointing to the corresponding node object.",
  "type": "object",
  "required": [
    "volumeGroups"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "volumeGroups": {
      "type": "array",
      "items": {
        "description": "VolumeGroup specifies attributes of a given vg exists on node.",
        "type": "object",
        "required": [
          "allocationPolicy",
          "free",
          "lvCount",
          "maxLv",
          "maxPv",
          "metadataCount",
          "metadataFree",
          "metadataSize",
          "metadataUsedCount",
          "missingPvCount",
          "name",
          "permissions",
          "pvCount",
          "size",
          "snapCount",
          "uuid"
        ],
        "properties": {
          "allocationPolicy": {
            "description": "AllocationPolicy indicates the volume group allocation policy. AllocationPolicy has the following mapping between int and string for its value: [-1: \"\", 0: \"normal\", 1: \"contiguous\", 2: \"cling\", 3: \"anywhere\", 4: \"inherited\"]",
            "type": "integer"
          },
          "free": {
            "description": "Free specifies the available capacity of volume group.",
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          },
          "lvCount": {
            "description": "LVCount denotes total number of logical volumes in volume group.",
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "maxLv": {
            "description": "MaxLV denotes maximum number of logical volumes allowed in volume group or 0 if unlimited.",
            "type": "integer",
            "format": "int32"
          },
          "maxPv": {
            "description": "MaxPV denotes maximum number of physical volumes allowed in volume group or 0 if unlimited.",
            "type": "integer",
            "format": "int32"
          },
          "metadataCount": {
            "description": "MetadataCount denotes number of metadata areas on the volume group.",
            "type": "integer",
            "format": "int32"
          },
          "metadataFree": {
            "description": "MetadataFree specifies the available metadata area space for the volume group",
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          },
          "metadataSize": {
            "description": "MetadataSize specifies size of smallest metadata area for the volume group",
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          },
          "metadataUsedCount": {
            "description": "MetadataUsedCount denotes number of used metadata areas in volume group",
            "type": "integer",
            "format": "int32"
          },
          "missingPvCount": {
            "description": "MissingPVCount denotes number of physical volumes in volume group which are missing.",
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "description": "Name of the lvm volume group.",
            "type": "string",
            "minLength": 1
          },
          "permissions": {
            "description": "Permission indicates the volume group permission which can be writable or read-only. Permission has the following mapping between int and string for its value: [-1: \"\", 0: \"writeable\", 1: \"read-only\"]",
            "type": "integer"
          },
          "pvCount": {
            "description": "PVCount denotes total number of physical volumes constituting the volume group.",
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "size": {
            "description": "Size specifies the total size of volume group.",
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          },
          "snapCount": {
            "description": "SnapCount denotes number of snapshots in volume group.",
            "type": "integer",
            "format": "int32"
          },
          "uuid": {
            "description": "UUID denotes a unique identity of a lvm volume group.",
            "type": "string",
            "minLength": 1
          }
        },
        "additionalProperties": false
      }
    }
  }
}
