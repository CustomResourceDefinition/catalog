{
  "description": "LVMSnapshot represents an LVM Snapshot of the lvm volume",
  "type": "object",
  "required": [
    "spec",
    "status"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LVMSnapshotSpec defines LVMSnapshot spec",
      "type": "object",
      "required": [
        "ownerNodeID",
        "volGroup"
      ],
      "properties": {
        "ownerNodeID": {
          "description": "OwnerNodeID is the Node ID where the volume group is present which is where the snapshot has been provisioned. OwnerNodeID can not be edited after the snapshot has been provisioned.",
          "type": "string",
          "minLength": 1
        },
        "snapSize": {
          "description": "SnapSize specifies the space reserved for the snapshot",
          "type": "string"
        },
        "volGroup": {
          "description": "VolGroup specifies the name of the volume group where the snapshot has been created.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "SnapStatus string that reflects if the snapshot was created successfully",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
