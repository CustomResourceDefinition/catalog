{
  "description": "LoadBalancerBackend is the Schema for the loadbalancerbackends API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LoadBalancerBackendSpec defines the backend used by the ExternalLoadBalancer instance",
      "type": "object",
      "required": [
        "provider"
      ],
      "properties": {
        "provider": {
          "description": "Type is the backend provider like F5, NetScaler, NSX",
          "type": "object",
          "required": [
            "creds",
            "host",
            "port",
            "vendor"
          ],
          "properties": {
            "creds": {
              "description": "Creds credentials secret holding the username and password keys.",
              "type": "string"
            },
            "host": {
              "description": "Host is the Load Balancer API IP or Hostname.",
              "type": "string"
            },
            "partition": {
              "description": "Partition is the F5 partition to create the Load Balancer instances.",
              "type": "string"
            },
            "port": {
              "description": "Port is the Load Balancer API Port.",
              "type": "integer"
            },
            "validatecerts": {
              "description": "ValidateCerts is a flag to validate or not the Load Balancer API certificate. Defaults to false.",
              "type": "boolean"
            },
            "vendor": {
              "description": "Vendor is the backend provider vendor (F5, NSX, Netscaler)",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "LoadBalancerBackendStatus defines the observed state of LoadBalancerBackend",
      "type": "object",
      "required": [
        "provider"
      ],
      "properties": {
        "provider": {
          "description": "Provider is a backend provider for F5 Big IP Load Balancers",
          "type": "object",
          "required": [
            "creds",
            "host",
            "port",
            "vendor"
          ],
          "properties": {
            "creds": {
              "description": "Creds credentials secret holding the username and password keys.",
              "type": "string"
            },
            "host": {
              "description": "Host is the Load Balancer API IP or Hostname.",
              "type": "string"
            },
            "partition": {
              "description": "Partition is the F5 partition to create the Load Balancer instances.",
              "type": "string"
            },
            "port": {
              "description": "Port is the Load Balancer API Port.",
              "type": "integer"
            },
            "validatecerts": {
              "description": "ValidateCerts is a flag to validate or not the Load Balancer API certificate. Defaults to false.",
              "type": "boolean"
            },
            "vendor": {
              "description": "Vendor is the backend provider vendor (F5, NSX, Netscaler)",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
