{
  "description": "Classifier is the Schema for the Classifiers API. Provides an Glue Classifier resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClassifierSpec defines the desired state of Classifier",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "csvClassifier": {
              "description": "A classifier for CSV content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowSingleColumn": {
                    "description": "Enables the processing of files that contain only one column.",
                    "type": "boolean"
                  },
                  "containsHeader": {
                    "description": "Indicates whether the CSV file contains a header. This can be one of \"ABSENT\", \"PRESENT\", or \"UNKNOWN\".",
                    "type": "string"
                  },
                  "customDatatypeConfigured": {
                    "description": "Enables the custom datatype to be configured.",
                    "type": "boolean"
                  },
                  "customDatatypes": {
                    "description": "A list of supported custom datatypes. Valid values are BINARY, BOOLEAN, DATE, DECIMAL, DOUBLE, FLOAT, INT, LONG, SHORT, STRING, TIMESTAMP.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "delimiter": {
                    "description": "The delimiter used in the CSV to separate columns.",
                    "type": "string"
                  },
                  "disableValueTrimming": {
                    "description": "Specifies whether to trim column values.",
                    "type": "boolean"
                  },
                  "header": {
                    "description": "A list of strings representing column names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "quoteSymbol": {
                    "description": "A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.",
                    "type": "string"
                  },
                  "serde": {
                    "description": "The SerDe for processing CSV. Valid values are OpenCSVSerDe, LazySimpleSerDe, None.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "grokClassifier": {
              "description": "A classifier that uses grok patterns. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.",
                    "type": "string"
                  },
                  "customPatterns": {
                    "description": "Custom grok patterns used by this classifier.",
                    "type": "string"
                  },
                  "grokPattern": {
                    "description": "The grok pattern used by this classifier.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "jsonClassifier": {
              "description": "A classifier for JSON content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "jsonPath": {
                    "description": "A JsonPath string defining the JSON data for the classifier to classify. AWS Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "xmlClassifier": {
              "description": "A classifier for XML content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "An identifier of the data format that the classifier matches.",
                    "type": "string"
                  },
                  "rowTag": {
                    "description": "The XML tag designating the element that contains each record in an XML document being parsed. Note that this cannot identify a self-closing element (closed by /\u003e). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, \u003crow item_a=\"A\" item_b=\"B\"\u003e\u003c/row\u003e is okay, but \u003crow item_a=\"A\" item_b=\"B\" /\u003e is not).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "csvClassifier": {
              "description": "A classifier for CSV content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowSingleColumn": {
                    "description": "Enables the processing of files that contain only one column.",
                    "type": "boolean"
                  },
                  "containsHeader": {
                    "description": "Indicates whether the CSV file contains a header. This can be one of \"ABSENT\", \"PRESENT\", or \"UNKNOWN\".",
                    "type": "string"
                  },
                  "customDatatypeConfigured": {
                    "description": "Enables the custom datatype to be configured.",
                    "type": "boolean"
                  },
                  "customDatatypes": {
                    "description": "A list of supported custom datatypes. Valid values are BINARY, BOOLEAN, DATE, DECIMAL, DOUBLE, FLOAT, INT, LONG, SHORT, STRING, TIMESTAMP.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "delimiter": {
                    "description": "The delimiter used in the CSV to separate columns.",
                    "type": "string"
                  },
                  "disableValueTrimming": {
                    "description": "Specifies whether to trim column values.",
                    "type": "boolean"
                  },
                  "header": {
                    "description": "A list of strings representing column names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "quoteSymbol": {
                    "description": "A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.",
                    "type": "string"
                  },
                  "serde": {
                    "description": "The SerDe for processing CSV. Valid values are OpenCSVSerDe, LazySimpleSerDe, None.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "grokClassifier": {
              "description": "A classifier that uses grok patterns. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.",
                    "type": "string"
                  },
                  "customPatterns": {
                    "description": "Custom grok patterns used by this classifier.",
                    "type": "string"
                  },
                  "grokPattern": {
                    "description": "The grok pattern used by this classifier.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "jsonClassifier": {
              "description": "A classifier for JSON content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "jsonPath": {
                    "description": "A JsonPath string defining the JSON data for the classifier to classify. AWS Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "xmlClassifier": {
              "description": "A classifier for XML content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "An identifier of the data format that the classifier matches.",
                    "type": "string"
                  },
                  "rowTag": {
                    "description": "The XML tag designating the element that contains each record in an XML document being parsed. Note that this cannot identify a self-closing element (closed by /\u003e). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, \u003crow item_a=\"A\" item_b=\"B\"\u003e\u003c/row\u003e is okay, but \u003crow item_a=\"A\" item_b=\"B\" /\u003e is not).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ClassifierStatus defines the observed state of Classifier.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "csvClassifier": {
              "description": "A classifier for CSV content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowSingleColumn": {
                    "description": "Enables the processing of files that contain only one column.",
                    "type": "boolean"
                  },
                  "containsHeader": {
                    "description": "Indicates whether the CSV file contains a header. This can be one of \"ABSENT\", \"PRESENT\", or \"UNKNOWN\".",
                    "type": "string"
                  },
                  "customDatatypeConfigured": {
                    "description": "Enables the custom datatype to be configured.",
                    "type": "boolean"
                  },
                  "customDatatypes": {
                    "description": "A list of supported custom datatypes. Valid values are BINARY, BOOLEAN, DATE, DECIMAL, DOUBLE, FLOAT, INT, LONG, SHORT, STRING, TIMESTAMP.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "delimiter": {
                    "description": "The delimiter used in the CSV to separate columns.",
                    "type": "string"
                  },
                  "disableValueTrimming": {
                    "description": "Specifies whether to trim column values.",
                    "type": "boolean"
                  },
                  "header": {
                    "description": "A list of strings representing column names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "quoteSymbol": {
                    "description": "A custom symbol to denote what combines content into a single column value. It must be different from the column delimiter.",
                    "type": "string"
                  },
                  "serde": {
                    "description": "The SerDe for processing CSV. Valid values are OpenCSVSerDe, LazySimpleSerDe, None.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "grokClassifier": {
              "description": "A classifier that uses grok patterns. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "An identifier of the data format that the classifier matches, such as Twitter, JSON, Omniture logs, Amazon CloudWatch Logs, and so on.",
                    "type": "string"
                  },
                  "customPatterns": {
                    "description": "Custom grok patterns used by this classifier.",
                    "type": "string"
                  },
                  "grokPattern": {
                    "description": "The grok pattern used by this classifier.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "Name of the classifier",
              "type": "string"
            },
            "jsonClassifier": {
              "description": "A classifier for JSON content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "jsonPath": {
                    "description": "A JsonPath string defining the JSON data for the classifier to classify. AWS Glue supports a subset of JsonPath, as described in Writing JsonPath Custom Classifiers.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "xmlClassifier": {
              "description": "A classifier for XML content. Defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "An identifier of the data format that the classifier matches.",
                    "type": "string"
                  },
                  "rowTag": {
                    "description": "The XML tag designating the element that contains each record in an XML document being parsed. Note that this cannot identify a self-closing element (closed by /\u003e). An empty row element that contains only attributes can be parsed as long as it ends with a closing tag (for example, \u003crow item_a=\"A\" item_b=\"B\"\u003e\u003c/row\u003e is okay, but \u003crow item_a=\"A\" item_b=\"B\" /\u003e is not).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
