{
  "description": "EnvoyConfig holds the configuration for a given envoy nodeID. The spec of an EnvoyConfig object holds the envoy resources that conform the desired configuration for the given nodeID and that the discovery service will send to any envoy client that identifies itself with that nodeID.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EnvoyConfigSpec defines the desired state of EnvoyConfig",
      "type": "object",
      "required": [
        "envoyResources",
        "nodeID"
      ],
      "properties": {
        "envoyResources": {
          "description": "EnvoyResources holds the different types of resources suported by the envoy discovery service",
          "type": "object",
          "properties": {
            "clusters": {
              "description": "Clusters is a list of the envoy Cluster resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "endpoints": {
              "description": "Endpoints is a list of the envoy ClusterLoadAssignment resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/endpoint.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "listeners": {
              "description": "Listeners is a list of the envoy Listener resource type. Referece: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "routes": {
              "description": "Routes is a list of the envoy Route resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "runtime": {
              "description": "Runtimes is a list of the envoy Runtime resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/service/discovery/v2/rtds.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "secrets": {
              "description": "Secrets is a list of references to Kubernetes Secret objects.",
              "type": "array",
              "items": {
                "description": "EnvoySecretResource holds a reference to a k8s Secret from where to take a secret from",
                "type": "object",
                "required": [
                  "name",
                  "ref"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Ref is a reference to a Kubernetes Secret of type \"kubernetes.io/tls\" from which an envoy Secret resource will be automatically created.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name is unique within a namespace to reference a secret resource.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace defines the space within which the secret name must be unique.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "nodeID": {
          "description": "NodeID holds the envoy identifier for the discovery service to know which set of resources to send to each of the envoy clients that connect to it.",
          "type": "string"
        },
        "serialization": {
          "description": "Serialization specicifies the serialization format used to describe the resources. \"json\" and \"yaml\" are supported. \"json\" is used if unset.",
          "type": "string",
          "enum": [
            "json",
            "b64json",
            "yaml"
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "EnvoyConfigStatus defines the observed state of EnvoyConfig",
      "type": "object",
      "properties": {
        "cacheState": {
          "description": "CacheState summarizes all the observations about the EnvoyConfig to give the user a concrete idea on the general status of the discovery servie cache. It is intended only for human consumption. Other controllers should relly on conditions to determine the status of the discovery server cache.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "description": "ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "description": "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "desiredVersion": {
          "description": "DesiredVersion represents the resources version described in the spec of the EnvoyConfig object",
          "type": "string"
        },
        "publishedVersion": {
          "description": "PublishedVersion is the config version currently served by the envoy discovery service for the give nodeID",
          "type": "string"
        },
        "revisions": {
          "description": "ConfigRevisions is an ordered list of references to EnvoyConfigRevision objects",
          "type": "array",
          "items": {
            "description": "ConfigRevisionRef holds a reference to EnvoyConfigRevision object",
            "type": "object",
            "required": [
              "ref",
              "version"
            ],
            "properties": {
              "ref": {
                "description": "Ref is a reference to the EnvoyConfigRevision object that holds the configuration matching the Version field.",
                "type": "object",
                "properties": {
                  "apiVersion": {
                    "description": "API version of the referent.",
                    "type": "string"
                  },
                  "fieldPath": {
                    "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
                    "type": "string"
                  },
                  "resourceVersion": {
                    "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency",
                    "type": "string"
                  },
                  "uid": {
                    "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "version": {
                "description": "Version is a hash of the EnvoyResources field",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
