{
  "description": "EnvoyConfigRevision holds an specific version of the EnvoyConfig resources. EnvoyConfigRevisions are automatically created and deleted  by the EnvoyConfig controller and are not intended to be directly used. Use EnvoyConfig objects instead.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EnvoyConfigRevisionSpec defines the desired state of EnvoyConfigRevision",
      "type": "object",
      "required": [
        "envoyResources",
        "nodeID",
        "version"
      ],
      "properties": {
        "envoyResources": {
          "description": "EnvoyResources holds the different types of resources suported by the envoy discovery service",
          "type": "object",
          "properties": {
            "clusters": {
              "description": "Clusters is a list of the envoy Cluster resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/cluster.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "endpoints": {
              "description": "Endpoints is a list of the envoy ClusterLoadAssignment resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/endpoint.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "listeners": {
              "description": "Listeners is a list of the envoy Listener resource type. Referece: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/listener.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "routes": {
              "description": "Routes is a list of the envoy Route resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/api/v2/route.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "runtime": {
              "description": "Runtimes is a list of the envoy Runtime resource type. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v2/service/discovery/v2/rtds.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy resource",
                "type": "object",
                "required": [
                  "name",
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "secrets": {
              "description": "Secrets is a list of references to Kubernetes Secret objects.",
              "type": "array",
              "items": {
                "description": "EnvoySecretResource holds a reference to a k8s Secret from where to take a secret from",
                "type": "object",
                "required": [
                  "name",
                  "ref"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource",
                    "type": "string"
                  },
                  "ref": {
                    "description": "Ref is a reference to a Kubernetes Secret of type \"kubernetes.io/tls\" from which an envoy Secret resource will be automatically created.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name is unique within a namespace to reference a secret resource.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace defines the space within which the secret name must be unique.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "nodeID": {
          "description": "NodeID holds the envoy identifier for the discovery service to know which set of resources to send to each of the envoy clients that connect to it.",
          "type": "string"
        },
        "serialization": {
          "description": "Serialization specicifies the serialization format used to describe the resources. \"json\" and \"yaml\" are supported. \"json\" is used if unset.",
          "type": "string",
          "enum": [
            "json",
            "b64json",
            "yaml"
          ]
        },
        "version": {
          "description": "Version is a hash of the EnvoyResources field",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "EnvoyConfigRevisionStatus defines the observed state of EnvoyConfigRevision",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition represents an observation of an object's state. Conditions are an extension mechanism intended to be used when the details of an observation are not a priori known or would not apply to all instances of a given Kind. \n Conditions should be added to explicitly convey properties that users and components care about rather than requiring those properties to be inferred from other observations. Once defined, the meaning of a Condition can not be changed arbitrarily - it becomes part of the API, and has the same backwards- and forwards-compatibility concerns of any other part of the API.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "description": "ConditionReason is intended to be a one-word, CamelCase representation of the category of cause of the current status. It is intended to be used in concise output, such as one-line kubectl get output, and in summarizing occurrences of causes.",
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "description": "ConditionType is the type of the condition and is typically a CamelCased word or short phrase. \n Condition types should indicate state in the \"abnormal-true\" polarity. For example, if the condition indicates when a policy is invalid, the \"is valid\" case is probably the norm, so the condition should be called \"Invalid\".",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "lastPublishedAt": {
          "description": "LastPublishedAt indicates the last time this config review transitioned to published",
          "type": "string",
          "format": "date-time"
        },
        "published": {
          "description": "Published signals if the EnvoyConfigRevision is the one currently published in the xds server cache",
          "type": "boolean"
        },
        "tainted": {
          "description": "Tainted indicates whether the EnvoyConfigRevision is eligible for publishing or not",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
