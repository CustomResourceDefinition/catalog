{
  "description": "DataplexZone is the Schema for the DataplexZone API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DataplexZoneSpec defines the desired state of DataplexZone",
      "type": "object",
      "required": [
        "lakeRef",
        "resourceSpec",
        "type"
      ],
      "properties": {
        "description": {
          "description": "Optional. Description of the zone.",
          "type": "string"
        },
        "discoverySpec": {
          "description": "Optional. Specification of the discovery feature applied to data in this zone.",
          "type": "object",
          "properties": {
            "csvOptions": {
              "description": "Optional. Configuration for CSV data.",
              "type": "object",
              "properties": {
                "delimiter": {
                  "description": "Optional. The delimiter being used to separate values. This defaults to ','.",
                  "type": "string"
                },
                "disableTypeInference": {
                  "description": "Optional. Whether to disable the inference of data type for CSV data. If true, all columns will be registered as strings.",
                  "type": "boolean"
                },
                "encoding": {
                  "description": "Optional. The character encoding of the data. The default is UTF-8.",
                  "type": "string"
                },
                "headerRows": {
                  "description": "Optional. The number of rows to interpret as header rows that should be skipped when reading data rows.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "Required. Whether discovery is enabled.",
              "type": "boolean"
            },
            "excludePatterns": {
              "description": "Optional. The list of patterns to apply for selecting data to exclude during discovery.  For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "includePatterns": {
              "description": "Optional. The list of patterns to apply for selecting data to include during discovery if only a subset of the data should considered. For Cloud Storage bucket assets, these are interpreted as glob patterns used to match object names. For BigQuery dataset assets, these are interpreted as patterns to match table names.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jsonOptions": {
              "description": "Optional. Configuration for Json data.",
              "type": "object",
              "properties": {
                "disableTypeInference": {
                  "description": "Optional. Whether to disable the inference of data type for Json data. If true, all columns will be registered as their primitive types (strings, number or boolean).",
                  "type": "boolean"
                },
                "encoding": {
                  "description": "Optional. The character encoding of the data. The default is UTF-8.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "schedule": {
              "description": "Optional. Cron schedule (https://en.wikipedia.org/wiki/Cron) for running discovery periodically. Successive discovery runs must be scheduled at least 60 minutes apart. The default value is to run discovery every 60 minutes. To explicitly set a timezone to the cron tab, apply a prefix in the cron tab: \"CRON_TZ=${IANA_TIME_ZONE}\" or TZ=${IANA_TIME_ZONE}\". The ${IANA_TIME_ZONE} may only be a valid string from IANA time zone database. For example, `CRON_TZ=America/New_York 1 * * * *`, or `TZ=America/New_York 1 * * * *`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. User defined labels for the zone.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "lakeRef": {
          "description": "Reference to the parent DataplexLake that owns this Zone.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed DataplexLake resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/lakes/{{lakeID}}\".",
              "type": "string"
            },
            "name": {
              "description": "The name of a DataplexLake resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a DataplexLake resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The DataplexZone name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "resourceSpec": {
          "description": "Required. Specification of the resources that are referenced by the assets within this zone.",
          "type": "object",
          "properties": {
            "locationType": {
              "description": "Required. Immutable. The location type of the resources that are allowed to be attached to the assets within this zone.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "description": "Required. Immutable. The type of the zone.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DataplexZoneStatus defines the config connector machine state of DataplexZone",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DataplexZone resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "assetStatus": {
              "description": "Output only. Aggregated status of the underlying assets of the zone.",
              "type": "object",
              "properties": {
                "activeAssets": {
                  "description": "Number of active assets.",
                  "type": "integer",
                  "format": "int32"
                },
                "securityPolicyApplyingAssets": {
                  "description": "Number of assets that are in process of updating the security policy on attached resources.",
                  "type": "integer",
                  "format": "int32"
                },
                "updateTime": {
                  "description": "Last update time of the status.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "createTime": {
              "description": "Output only. The time when the zone was created.",
              "type": "string"
            },
            "state": {
              "description": "Output only. Current state of the zone.",
              "type": "string"
            },
            "uid": {
              "description": "Output only. System generated globally unique ID for the zone. This ID will be different if the zone is deleted and re-created with the same name.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. The time when the zone was last updated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
