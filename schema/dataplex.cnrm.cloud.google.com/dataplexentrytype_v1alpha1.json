{
  "description": "DataplexEntryType is the Schema for the DataplexEntryType API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DataplexEntryTypeSpec defines the desired state of DataplexEntryType",
      "type": "object",
      "required": [
        "location",
        "projectRef"
      ],
      "properties": {
        "authorization": {
          "description": "Authorization contains constraints on the visibility of Entries that conform to the EntryType.",
          "type": "object",
          "properties": {
            "alternateUsePermission": {
              "description": "Immutable. The IAM permission grantable on the Entry Group to allow access to instantiate Entries of Dataplex owned Entry Types, only settable for Dataplex owned Types.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "description": {
          "description": "Optional. Description of the EntryType.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional. User friendly display name.",
          "type": "string"
        },
        "labels": {
          "description": "Optional. User-defined labels for the EntryType.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "platform": {
          "description": "Optional. The platform that Entries of this type belongs to.",
          "type": "string"
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "requiredAspects": {
          "description": "AspectInfo contains overriding configuration for aspects.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "typeRef"
            ],
            "properties": {
              "typeRef": {
                "description": "Required aspect type for the entry type.",
                "type": "object",
                "properties": {
                  "external": {
                    "description": "A reference to an externally managed DataplexAspectType resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/aspectTypes/{{aspecttypeID}}\".",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "resourceID": {
          "description": "The DataplexEntryType name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "system": {
          "description": "Optional. The system that Entries of this type belongs to. Examples include CloudSQL, MariaDB etc",
          "type": "string"
        },
        "typeAliases": {
          "description": "Optional. Indicates the classes this Entry Type belongs to, for example, TABLE, DATABASE, MODEL.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DataplexEntryTypeStatus defines the config connector machine state of DataplexEntryType",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DataplexEntryType resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "createTime": {
              "description": "Output only. The time when the EntryType was created.",
              "type": "string"
            },
            "etag": {
              "description": "Optional. This checksum is computed by the service, and might be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
              "type": "string"
            },
            "uid": {
              "description": "Output only. System generated globally unique ID for the EntryType. This ID will be different if the EntryType is deleted and re-created with the same name.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. The time when the EntryType was last updated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
