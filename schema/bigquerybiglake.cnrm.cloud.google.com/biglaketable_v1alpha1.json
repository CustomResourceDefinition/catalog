{
  "description": "BigLakeTable is the Schema for the BigLakeTable API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BigLakeTableSpec defines the desired state of BigLakeTable",
      "type": "object",
      "required": [
        "catalogRef",
        "databaseRef",
        "location",
        "projectRef"
      ],
      "properties": {
        "catalogRef": {
          "description": "The BigLakeCatalog that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed BigLakeCatalog resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/catalogs/{{catalogID}}\".",
              "type": "string"
            },
            "name": {
              "description": "The name of a BigLakeCatalog resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a BigLakeCatalog resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "databaseRef": {
          "description": "Required. The parent resource where this table will be created. Format: projects/{project_id_or_number}/locations/{location_id}/catalogs/{catalog_id}/databases/{database_id}",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed BigLakeDatabase resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/databases/{{databaseID}}\".",
              "type": "string"
            },
            "name": {
              "description": "The name of a BigLakeDatabase resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a BigLakeDatabase resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "etag": {
          "description": "The checksum of a table object computed by the server based on the value of other fields. It may be sent on update requests to ensure the client has an up-to-date value before proceeding. It is only checked for update table operations.",
          "type": "string"
        },
        "hiveOptions": {
          "description": "Options of a Hive table.",
          "type": "object",
          "properties": {
            "parameters": {
              "description": "Stores user supplied Hive table parameters.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "storageDescriptor": {
              "description": "Stores physical storage information of the data.",
              "type": "object",
              "properties": {
                "inputFormat": {
                  "description": "The fully qualified Java class name of the input format.",
                  "type": "string"
                },
                "locationURI": {
                  "description": "Cloud Storage folder URI where the table data is stored, starting with \"gs://\".",
                  "type": "string"
                },
                "outputFormat": {
                  "description": "The fully qualified Java class name of the output format.",
                  "type": "string"
                },
                "serdeInfo": {
                  "description": "Serializer and deserializer information.",
                  "type": "object",
                  "properties": {
                    "serializationLib": {
                      "description": "The fully qualified Java class name of the serialization library.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tableType": {
              "description": "Hive table type. For example, MANAGED_TABLE, EXTERNAL_TABLE.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "location": {
          "description": "Immutable. The location where the Table should reside.",
          "type": "string"
        },
        "projectRef": {
          "description": "The project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The BigLake Table ID. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "type": {
          "description": "The table type.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "BigLakeTableStatus defines the config connector machine state of BigLakeTable",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the BigLakeTable resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "createTime": {
              "description": "Output only. The creation time of the table.",
              "type": "string"
            },
            "deleteTime": {
              "description": "Output only. The deletion time of the table. Only set after the table is deleted.",
              "type": "string"
            },
            "expireTime": {
              "description": "Output only. The time when this table is considered expired. Only set after the table is deleted.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. The last modification time of the table.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
