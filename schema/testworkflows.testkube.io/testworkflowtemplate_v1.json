{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "description": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "properties": {
        "after": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "artifacts": {
                "type": "object",
                "properties": {
                  "compress": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "condition": {
                "type": "string"
              },
              "container": {
                "type": "object",
                "properties": {
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "global": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "valueFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "envFrom": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "secretRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "image": {
                    "type": "string"
                  },
                  "imagePullPolicy": {
                    "type": "string"
                  },
                  "resources": {
                    "type": "object",
                    "properties": {
                      "limits": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "securityContext": {
                    "type": "object",
                    "properties": {
                      "allowPrivilegeEscalation": {
                        "type": "boolean"
                      },
                      "appArmorProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "capabilities": {
                        "type": "object",
                        "properties": {
                          "add": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "drop": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "privileged": {
                        "type": "boolean"
                      },
                      "procMount": {
                        "type": "string"
                      },
                      "readOnlyRootFilesystem": {
                        "type": "boolean"
                      },
                      "runAsGroup": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxOptions": {
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "seccompProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "windowsOptions": {
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "type": "string"
                          },
                          "hostProcess": {
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "volumeMounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "type": "string"
                        },
                        "mountPropagation": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        },
                        "recursiveReadOnly": {
                          "type": "string"
                        },
                        "subPath": {
                          "type": "string"
                        },
                        "subPathExpr": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "content": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "contentFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        },
                        "mode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "git": {
                    "type": "object",
                    "properties": {
                      "authType": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "header",
                          "github"
                        ]
                      },
                      "cone": {
                        "type": "boolean"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "revision": {
                        "type": "string"
                      },
                      "sshKey": {
                        "type": "string"
                      },
                      "sshKeyFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "uri": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "usernameFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "tarball": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "url"
                      ],
                      "properties": {
                        "mount": {
                          "type": "boolean"
                        },
                        "path": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "delay": {
                "type": "string",
                "pattern": "^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$"
              },
              "execute": {
                "type": "object",
                "properties": {
                  "async": {
                    "type": "boolean"
                  },
                  "parallelism": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "tests": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "executionRequest": {
                          "type": "object",
                          "properties": {
                            "activeDeadlineSeconds": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "args": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "argsMode": {
                              "type": "string",
                              "enum": [
                                "append",
                                "override",
                                "replace"
                              ]
                            },
                            "artifactRequest": {
                              "type": "object",
                              "properties": {
                                "dirs": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "masks": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "omitFolderPerExecution": {
                                  "type": "boolean"
                                },
                                "sharedBetweenPods": {
                                  "type": "boolean"
                                },
                                "sidecarScraper": {
                                  "type": "boolean"
                                },
                                "storageBucket": {
                                  "type": "string"
                                },
                                "storageClassName": {
                                  "type": "string"
                                },
                                "useDefaultStorageClassName": {
                                  "type": "boolean"
                                },
                                "volumeMountPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "command": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "cronJobTemplate": {
                              "type": "string"
                            },
                            "envConfigMaps": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "reference"
                                ],
                                "properties": {
                                  "mapToVariables": {
                                    "type": "boolean"
                                  },
                                  "mount": {
                                    "type": "boolean"
                                  },
                                  "mountPath": {
                                    "type": "string"
                                  },
                                  "reference": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "envSecrets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "reference"
                                ],
                                "properties": {
                                  "mapToVariables": {
                                    "type": "boolean"
                                  },
                                  "mount": {
                                    "type": "boolean"
                                  },
                                  "mountPath": {
                                    "type": "string"
                                  },
                                  "reference": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "executePostRunScriptBeforeScraping": {
                              "type": "boolean"
                            },
                            "executionLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "executionNamespace": {
                              "type": "string"
                            },
                            "httpProxy": {
                              "type": "string"
                            },
                            "httpsProxy": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "imagePullSecrets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "isVariablesFileUploaded": {
                              "type": "boolean"
                            },
                            "jobTemplate": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "negativeTest": {
                              "type": "boolean"
                            },
                            "postRunScript": {
                              "type": "string"
                            },
                            "preRunScript": {
                              "type": "string"
                            },
                            "scraperTemplate": {
                              "type": "string"
                            },
                            "sourceScripts": {
                              "type": "boolean"
                            },
                            "sync": {
                              "type": "boolean"
                            },
                            "testSecretUUID": {
                              "type": "string"
                            },
                            "variables": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "variable name",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "variable type",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "variable string value",
                                    "type": "string"
                                  },
                                  "valueFrom": {
                                    "description": "or load it from var source",
                                    "type": "object",
                                    "properties": {
                                      "configMapKeyRef": {
                                        "description": "Selects a key of a ConfigMap.",
                                        "type": "object",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "The key to select.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the ConfigMap or its key must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "fieldRef": {
                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                        "type": "object",
                                        "required": [
                                          "fieldPath"
                                        ],
                                        "properties": {
                                          "apiVersion": {
                                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                            "type": "string"
                                          },
                                          "fieldPath": {
                                            "description": "Path of the field to select in the specified API version.",
                                            "type": "string"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "resourceFieldRef": {
                                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                        "type": "object",
                                        "required": [
                                          "resource"
                                        ],
                                        "properties": {
                                          "containerName": {
                                            "description": "Container name: required for volumes, optional for env vars",
                                            "type": "string"
                                          },
                                          "divisor": {
                                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "resource": {
                                            "description": "Required: resource to select",
                                            "type": "string"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "secretKeyRef": {
                                        "description": "Selects a key of a secret in the pod's namespace",
                                        "type": "object",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the Secret or its key must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "variablesFile": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "matrix": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "maxCount": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "name": {
                          "type": "string"
                        },
                        "shards": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "tarball": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "files": {
                                "description": "file patterns to pack",
                                "type": "dynamicList"
                              },
                              "from": {
                                "description": "path to load the files from",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "config": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "count": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "executionName": {
                          "type": "string"
                        },
                        "matrix": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "maxCount": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "name": {
                          "type": "string"
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "shards": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "tarball": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "files": {
                                "description": "file patterns to pack",
                                "type": "dynamicList"
                              },
                              "from": {
                                "description": "path to load the files from",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "target": {
                          "type": "object",
                          "properties": {
                            "match": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "not": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "replicate": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "type": "string"
              },
              "negative": {
                "type": "boolean"
              },
              "optional": {
                "type": "boolean"
              },
              "parallel": {
                "type": "object",
                "properties": {
                  "artifacts": {
                    "type": "object",
                    "properties": {
                      "compress": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "count": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "delay": {
                    "type": "string",
                    "pattern": "^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$"
                  },
                  "description": {
                    "type": "string"
                  },
                  "execute": {
                    "type": "object",
                    "properties": {
                      "async": {
                        "type": "boolean"
                      },
                      "parallelism": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "tests": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "description": {
                              "type": "string"
                            },
                            "executionRequest": {
                              "type": "object",
                              "properties": {
                                "activeDeadlineSeconds": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "argsMode": {
                                  "type": "string",
                                  "enum": [
                                    "append",
                                    "override",
                                    "replace"
                                  ]
                                },
                                "artifactRequest": {
                                  "type": "object",
                                  "properties": {
                                    "dirs": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "masks": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "omitFolderPerExecution": {
                                      "type": "boolean"
                                    },
                                    "sharedBetweenPods": {
                                      "type": "boolean"
                                    },
                                    "sidecarScraper": {
                                      "type": "boolean"
                                    },
                                    "storageBucket": {
                                      "type": "string"
                                    },
                                    "storageClassName": {
                                      "type": "string"
                                    },
                                    "useDefaultStorageClassName": {
                                      "type": "boolean"
                                    },
                                    "volumeMountPath": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "command": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "cronJobTemplate": {
                                  "type": "string"
                                },
                                "envConfigMaps": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "reference"
                                    ],
                                    "properties": {
                                      "mapToVariables": {
                                        "type": "boolean"
                                      },
                                      "mount": {
                                        "type": "boolean"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      },
                                      "reference": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "default": ""
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "envSecrets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "reference"
                                    ],
                                    "properties": {
                                      "mapToVariables": {
                                        "type": "boolean"
                                      },
                                      "mount": {
                                        "type": "boolean"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      },
                                      "reference": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "default": ""
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "executePostRunScriptBeforeScraping": {
                                  "type": "boolean"
                                },
                                "executionLabels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "executionNamespace": {
                                  "type": "string"
                                },
                                "httpProxy": {
                                  "type": "string"
                                },
                                "httpsProxy": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "imagePullSecrets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "isVariablesFileUploaded": {
                                  "type": "boolean"
                                },
                                "jobTemplate": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "negativeTest": {
                                  "type": "boolean"
                                },
                                "postRunScript": {
                                  "type": "string"
                                },
                                "preRunScript": {
                                  "type": "string"
                                },
                                "scraperTemplate": {
                                  "type": "string"
                                },
                                "sourceScripts": {
                                  "type": "boolean"
                                },
                                "sync": {
                                  "type": "boolean"
                                },
                                "testSecretUUID": {
                                  "type": "string"
                                },
                                "variables": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "variable name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "variable type",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "variable string value",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "or load it from var source",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "variablesFile": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "matrix": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "maxCount": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "name": {
                              "type": "string"
                            },
                            "shards": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "tarball": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "files": {
                                    "description": "file patterns to pack",
                                    "type": "dynamicList"
                                  },
                                  "from": {
                                    "description": "path to load the files from",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workflows": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "config": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "count": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "description": {
                              "type": "string"
                            },
                            "executionName": {
                              "type": "string"
                            },
                            "matrix": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "maxCount": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "name": {
                              "type": "string"
                            },
                            "selector": {
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "shards": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "tarball": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "files": {
                                    "description": "file patterns to pack",
                                    "type": "dynamicList"
                                  },
                                  "from": {
                                    "description": "path to load the files from",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "target": {
                              "type": "object",
                              "properties": {
                                "match": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "not": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "replicate": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "fetch": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "from"
                      ],
                      "properties": {
                        "files": {
                          "type": "dynamicList"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "logs": {
                    "type": "string"
                  },
                  "matrix": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "dynamicList"
                    }
                  },
                  "maxCount": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "negative": {
                    "type": "boolean"
                  },
                  "optional": {
                    "type": "boolean"
                  },
                  "parallelism": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "paused": {
                    "type": "boolean"
                  },
                  "retry": {
                    "type": "object",
                    "required": [
                      "count"
                    ],
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                      },
                      "until": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "run": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "global": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "appArmorProfile": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "shell": {
                        "type": "string"
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "recursiveReadOnly": {
                              "type": "string"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "shards": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "dynamicList"
                    }
                  },
                  "shell": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "string"
                  },
                  "transfer": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "from"
                      ],
                      "properties": {
                        "files": {
                          "type": "dynamicList"
                        },
                        "from": {
                          "type": "string"
                        },
                        "mount": {
                          "type": "boolean"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-preserve-unknown-fields": true
              },
              "paused": {
                "type": "boolean"
              },
              "pure": {
                "type": "boolean"
              },
              "retry": {
                "type": "object",
                "required": [
                  "count"
                ],
                "properties": {
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  },
                  "until": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "run": {
                "type": "object",
                "properties": {
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "global": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "valueFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "envFrom": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "secretRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "image": {
                    "type": "string"
                  },
                  "imagePullPolicy": {
                    "type": "string"
                  },
                  "resources": {
                    "type": "object",
                    "properties": {
                      "limits": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "securityContext": {
                    "type": "object",
                    "properties": {
                      "allowPrivilegeEscalation": {
                        "type": "boolean"
                      },
                      "appArmorProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "capabilities": {
                        "type": "object",
                        "properties": {
                          "add": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "drop": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "privileged": {
                        "type": "boolean"
                      },
                      "procMount": {
                        "type": "string"
                      },
                      "readOnlyRootFilesystem": {
                        "type": "boolean"
                      },
                      "runAsGroup": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxOptions": {
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "seccompProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "windowsOptions": {
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "type": "string"
                          },
                          "hostProcess": {
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "shell": {
                    "type": "string"
                  },
                  "volumeMounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "type": "string"
                        },
                        "mountPropagation": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        },
                        "recursiveReadOnly": {
                          "type": "string"
                        },
                        "subPath": {
                          "type": "string"
                        },
                        "subPathExpr": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "services": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "override default command in the image (empty string to default CMD of the image)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "command": {
                      "description": "override default command in the image (empty string to default ENTRYPOINT of the image)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "content": {
                      "description": "global content that should be fetched into all containers",
                      "type": "object",
                      "properties": {
                        "files": {
                          "description": "files to load",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "path"
                            ],
                            "properties": {
                              "content": {
                                "description": "plain-text content to put inside",
                                "type": "string"
                              },
                              "contentFrom": {
                                "description": "external source to use",
                                "type": "object",
                                "properties": {
                                  "configMapKeyRef": {
                                    "description": "Selects a key of a ConfigMap.",
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "fieldRef": {
                                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                    "type": "object",
                                    "required": [
                                      "fieldPath"
                                    ],
                                    "properties": {
                                      "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": "string"
                                      },
                                      "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "resourceFieldRef": {
                                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                    "type": "object",
                                    "required": [
                                      "resource"
                                    ],
                                    "properties": {
                                      "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": "string"
                                      },
                                      "divisor": {
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "secretKeyRef": {
                                    "description": "Selects a key of a secret in the pod's namespace",
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                }
                              },
                              "mode": {
                                "description": "mode to use for the file",
                                "type": "integer",
                                "format": "int32"
                              },
                              "path": {
                                "description": "path where the file should be accessible at",
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        },
                        "git": {
                          "description": "git repository details",
                          "type": "object",
                          "properties": {
                            "authType": {
                              "description": "authorization type for the credentials",
                              "type": "string",
                              "enum": [
                                "basic",
                                "header",
                                "github"
                              ]
                            },
                            "cone": {
                              "description": "enable cone mode for sparse checkout with paths",
                              "type": "boolean"
                            },
                            "mountPath": {
                              "description": "where to mount the fetched repository contents (defaults to \"repo\" directory in the data volume)",
                              "type": "string"
                            },
                            "paths": {
                              "description": "paths to fetch for the sparse checkout",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "revision": {
                              "description": "branch, commit or a tag name to fetch",
                              "type": "string"
                            },
                            "sshKey": {
                              "description": "plain text SSH private key to fetch with",
                              "type": "string"
                            },
                            "sshKeyFrom": {
                              "description": "external SSH private key to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "token": {
                              "description": "plain text token to fetch with",
                              "type": "string"
                            },
                            "tokenFrom": {
                              "description": "external token to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "uri": {
                              "description": "uri for the Git repository",
                              "type": "string"
                            },
                            "username": {
                              "description": "plain text username to fetch with",
                              "type": "string"
                            },
                            "usernameFrom": {
                              "description": "external username to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            }
                          }
                        },
                        "tarball": {
                          "description": "tarballs to unpack",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "path",
                              "url"
                            ],
                            "properties": {
                              "mount": {
                                "description": "should it mount a new volume there",
                                "type": "boolean"
                              },
                              "path": {
                                "description": "path where the tarball should be extracted",
                                "type": "string"
                              },
                              "url": {
                                "description": "url for the tarball to extract",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "count": {
                      "description": "static number of sharded instances to spawn",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    },
                    "description": {
                      "description": "service description to display",
                      "type": "string"
                    },
                    "env": {
                      "description": "environment variables to append to the container",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "global": {
                            "description": "whether to use env var in underlying services",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      }
                    },
                    "envFrom": {
                      "description": "external environment variables to append to the container",
                      "type": "array",
                      "items": {
                        "description": "EnvFromSource represents the source of a set of ConfigMaps",
                        "type": "object",
                        "properties": {
                          "configMapRef": {
                            "description": "The ConfigMap to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "prefix": {
                            "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The Secret to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      }
                    },
                    "image": {
                      "description": "image to be used for the container",
                      "type": "string"
                    },
                    "imagePullPolicy": {
                      "description": "pulling policy for the image",
                      "type": "string"
                    },
                    "logs": {
                      "description": "should save logs for the service (false if not specified)",
                      "type": "string"
                    },
                    "matrix": {
                      "description": "matrix of parameters to spawn instances (static)",
                      "type": "object",
                      "additionalProperties": {
                        "type": "dynamicList"
                      }
                    },
                    "maxCount": {
                      "description": "dynamic number of sharded instances to spawn - it will be lowered if there is not enough sharded values",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    },
                    "pod": {
                      "description": "configuration for the scheduled pod",
                      "type": "object",
                      "properties": {
                        "activeDeadlineSeconds": {
                          "description": "duration in seconds the pod may be active on the node",
                          "type": "integer",
                          "format": "int64"
                        },
                        "affinity": {
                          "description": "If specified, the pod's scheduling constraints",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "annotations": {
                          "description": "annotations added to the scheduled pod",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "dnsConfig": {
                          "description": "Specifies the DNS parameters of a pod.",
                          "type": "object",
                          "properties": {
                            "nameservers": {
                              "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "options": {
                              "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                              "type": "array",
                              "items": {
                                "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name is this DNS resolver option's name.\nRequired.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value is this DNS resolver option's value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "searches": {
                              "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "dnsPolicy": {
                          "description": "DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.",
                          "type": "string"
                        },
                        "hostAliases": {
                          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified",
                          "type": "array",
                          "items": {
                            "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                            "type": "object",
                            "required": [
                              "ip"
                            ],
                            "properties": {
                              "hostnames": {
                                "description": "Hostnames for the above IP address.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "ip": {
                                "description": "IP address of the host file entry.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "hostPID": {
                          "description": "Whether to allow a pod to have access to the host process ID namespace",
                          "type": "boolean"
                        },
                        "hostname": {
                          "description": "Specifies the hostname of the Pod",
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "description": "references to secrets with credentials for pulling the images from registry",
                          "type": "array",
                          "items": {
                            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "labels": {
                          "description": "labels added to the scheduled pod",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nodeName": {
                          "description": "NodeName is a request to schedule this pod onto a specific node.",
                          "type": "string"
                        },
                        "nodeSelector": {
                          "description": "node selector to define on which node the pod should land",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "preemptionPolicy": {
                          "description": "PreemptionPolicy is the Policy for preempting pods with lower priority.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value. Various system components use this field to find the priority of the pod.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "priorityClassName": {
                          "description": "If specified, indicates the pod's priority.",
                          "type": "string"
                        },
                        "resourceClaims": {
                          "description": "ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start.",
                          "type": "array",
                          "items": {
                            "description": "PodResourceClaim references exactly one ResourceClaim, either directly\nor by naming a ResourceClaimTemplate which is then turned into a ResourceClaim\nfor the pod.\n\nIt adds a name to it that uniquely identifies the ResourceClaim inside the Pod.\nContainers that need access to the ResourceClaim reference it with this name.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name uniquely identifies this resource claim inside the pod.\nThis must be a DNS_LABEL.",
                                "type": "string"
                              },
                              "resourceClaimName": {
                                "description": "ResourceClaimName is the name of a ResourceClaim object in the same\nnamespace as this pod.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                                "type": "string"
                              },
                              "resourceClaimTemplateName": {
                                "description": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate\nobject in the same namespace as this pod.\n\nThe template will be used to create a new ResourceClaim, which will\nbe bound to this pod. When this pod is deleted, the ResourceClaim\nwill also be deleted. The pod name and resource name, along with a\ngenerated component, will be used to form a unique name for the\nResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the\ncorresponding ResourceClaim by the control plane after creating the\nResourceClaim.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "schedulingGates": {
                          "description": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod.",
                          "type": "array",
                          "items": {
                            "description": "PodSchedulingGate is associated to a Pod to guard its scheduling.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the scheduling gate.\nEach scheduling gate must have a unique name field.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "securityContext": {
                          "description": "SecurityContext holds pod-level security attributes and common container settings.",
                          "type": "object",
                          "properties": {
                            "appArmorProfile": {
                              "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                  "type": "string"
                                }
                              }
                            },
                            "fsGroup": {
                              "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "fsGroupChangePolicy": {
                              "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "runAsNonRoot": {
                              "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "seLinuxChangePolicy": {
                              "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "seLinuxOptions": {
                              "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "type": "string"
                                }
                              }
                            },
                            "seccompProfile": {
                              "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                  "type": "string"
                                }
                              }
                            },
                            "supplementalGroups": {
                              "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "supplementalGroupsPolicy": {
                              "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "sysctls": {
                              "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "array",
                              "items": {
                                "description": "Sysctl defines a kernel parameter to be set",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of a property to set",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value of a property to set",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "windowsOptions": {
                              "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                              "type": "object",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "serviceAccountName": {
                          "description": "default service account name for the scheduled pod",
                          "type": "string"
                        },
                        "subdomain": {
                          "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\".",
                          "type": "string"
                        },
                        "tolerations": {
                          "description": "If specified, the pod's tolerations.",
                          "type": "array",
                          "items": {
                            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                            "type": "object",
                            "properties": {
                              "effect": {
                                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                "type": "string"
                              },
                              "key": {
                                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "value": {
                                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "topologySpreadConstraints": {
                          "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "volumes": {
                          "description": "volumes to include in the pod",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      }
                    },
                    "pvcs": {
                      "description": "list of accompanying permanent volume claims",
                      "type": "object",
                      "additionalProperties": {
                        "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes",
                        "type": "object",
                        "properties": {
                          "accessModes": {
                            "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "dataSource": {
                            "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "dataSourceRef": {
                            "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                "type": "string"
                              }
                            }
                          },
                          "resources": {
                            "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                            "type": "object",
                            "properties": {
                              "limits": {
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "requests": {
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          },
                          "selector": {
                            "description": "selector is a label query over volumes to consider for binding.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "storageClassName": {
                            "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                            "type": "string"
                          },
                          "volumeAttributesClassName": {
                            "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                            "type": "string"
                          },
                          "volumeMode": {
                            "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                            "type": "string"
                          },
                          "volumeName": {
                            "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "readinessProbe": {
                      "description": "Probe to check if the service has started correctly",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string",
                              "default": ""
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "resources": {
                      "description": "expected resources for the container",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "resource limits for the container",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "resource requests for the container",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "restartPolicy": {
                      "description": "Restart policy for the main container in the pod. One of OnFailure or Never.",
                      "type": "string"
                    },
                    "securityContext": {
                      "description": "security context for the container",
                      "type": "object",
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "appArmorProfile": {
                          "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                              "type": "string"
                            }
                          }
                        },
                        "capabilities": {
                          "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "add": {
                              "description": "Added capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "drop": {
                              "description": "Removed capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "privileged": {
                          "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "procMount": {
                          "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "string"
                        },
                        "readOnlyRootFilesystem": {
                          "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "runAsGroup": {
                          "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "runAsNonRoot": {
                          "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "seLinuxOptions": {
                          "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "description": "Level is SELinux level label that applies to the container.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role is a SELinux role label that applies to the container.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type is a SELinux type label that applies to the container.",
                              "type": "string"
                            },
                            "user": {
                              "description": "User is a SELinux user label that applies to the container.",
                              "type": "string"
                            }
                          }
                        },
                        "seccompProfile": {
                          "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                              "type": "string"
                            }
                          }
                        },
                        "windowsOptions": {
                          "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                          "type": "object",
                          "properties": {
                            "gmsaCredentialSpec": {
                              "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                              "type": "string"
                            },
                            "gmsaCredentialSpecName": {
                              "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                              "type": "string"
                            },
                            "hostProcess": {
                              "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                              "type": "boolean"
                            },
                            "runAsUserName": {
                              "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "shards": {
                      "description": "parameters that should be distributed across sharded instances",
                      "type": "object",
                      "additionalProperties": {
                        "type": "dynamicList"
                      }
                    },
                    "shell": {
                      "description": "script to run in a default shell for the container",
                      "type": "string"
                    },
                    "timeout": {
                      "description": "maximum time until reaching readiness",
                      "type": "string"
                    },
                    "transfer": {
                      "description": "instructions for transferring files",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "from"
                        ],
                        "properties": {
                          "files": {
                            "description": "file patterns to pack",
                            "type": "dynamicList"
                          },
                          "from": {
                            "description": "path to load the files from",
                            "type": "string"
                          },
                          "mount": {
                            "description": "should it mount a new volume there",
                            "type": "boolean"
                          },
                          "to": {
                            "description": "path where the tarball should be extracted",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "volume mounts to append to the container",
                      "type": "array",
                      "items": {
                        "description": "VolumeMount describes a mounting of a Volume within a container.",
                        "type": "object",
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "properties": {
                          "mountPath": {
                            "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                            "type": "string"
                          },
                          "mountPropagation": {
                            "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                            "type": "string"
                          },
                          "name": {
                            "description": "This must match the Name of a Volume.",
                            "type": "string"
                          },
                          "readOnly": {
                            "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                            "type": "boolean"
                          },
                          "recursiveReadOnly": {
                            "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                            "type": "string"
                          },
                          "subPath": {
                            "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                            "type": "string"
                          },
                          "subPathExpr": {
                            "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "workingDir": {
                      "description": "override default working directory in the image (empty string to default WORKDIR for the image)",
                      "type": "string"
                    }
                  }
                }
              },
              "setup": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "shell": {
                "type": "string"
              },
              "steps": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "timeout": {
                "type": "string"
              },
              "workingDir": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "config": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "default": {
                "description": "default value - if not provided, the parameter is required",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              },
              "description": {
                "description": "parameter description",
                "type": "string"
              },
              "enum": {
                "description": "the list of allowed values, when limited",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "example": {
                "description": "exemplary value",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              },
              "exclusiveMaximum": {
                "description": "maximum value for the number (exclusive)",
                "type": "integer",
                "format": "int64"
              },
              "exclusiveMinimum": {
                "description": "minimum value for the number (exclusive)",
                "type": "integer",
                "format": "int64"
              },
              "format": {
                "description": "predefined format for the string",
                "type": "string"
              },
              "maxLength": {
                "description": "maximum length for the string",
                "type": "integer",
                "format": "int64"
              },
              "maximum": {
                "description": "maximum value for the number (inclusive)",
                "type": "integer",
                "format": "int64"
              },
              "minLength": {
                "description": "minimum length for the string",
                "type": "integer",
                "format": "int64"
              },
              "minimum": {
                "description": "minimum value for the number (inclusive)",
                "type": "integer",
                "format": "int64"
              },
              "multipleOf": {
                "description": "the number needs to be multiple of this value",
                "type": "integer",
                "format": "int64"
              },
              "pattern": {
                "description": "regular expression to match",
                "type": "string"
              },
              "sensitive": {
                "description": "whether this value should be stored in the secret",
                "type": "boolean"
              },
              "type": {
                "description": "type of the parameter",
                "type": "string",
                "default": "string",
                "enum": [
                  "string",
                  "integer",
                  "number",
                  "boolean"
                ]
              }
            }
          }
        },
        "container": {
          "type": "object",
          "properties": {
            "args": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "command": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "env": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "global": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "value": {
                    "type": "string"
                  },
                  "valueFrom": {
                    "type": "object",
                    "properties": {
                      "configMapKeyRef": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "fieldRef": {
                        "type": "object",
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "type": "string"
                          },
                          "fieldPath": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "resourceFieldRef": {
                        "type": "object",
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "type": "string"
                          },
                          "divisor": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "envFrom": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "configMapRef": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "secretRef": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "additionalProperties": false
              }
            },
            "image": {
              "type": "string"
            },
            "imagePullPolicy": {
              "type": "string"
            },
            "resources": {
              "type": "object",
              "properties": {
                "limits": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "type": "object",
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                }
              },
              "additionalProperties": false
            },
            "securityContext": {
              "type": "object",
              "properties": {
                "allowPrivilegeEscalation": {
                  "type": "boolean"
                },
                "appArmorProfile": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "localhostProfile": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "capabilities": {
                  "type": "object",
                  "properties": {
                    "add": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "drop": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "privileged": {
                  "type": "boolean"
                },
                "procMount": {
                  "type": "string"
                },
                "readOnlyRootFilesystem": {
                  "type": "boolean"
                },
                "runAsGroup": {
                  "type": "integer",
                  "format": "int64"
                },
                "runAsNonRoot": {
                  "type": "boolean"
                },
                "runAsUser": {
                  "type": "integer",
                  "format": "int64"
                },
                "seLinuxOptions": {
                  "type": "object",
                  "properties": {
                    "level": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "seccompProfile": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "localhostProfile": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "windowsOptions": {
                  "type": "object",
                  "properties": {
                    "gmsaCredentialSpec": {
                      "type": "string"
                    },
                    "gmsaCredentialSpecName": {
                      "type": "string"
                    },
                    "hostProcess": {
                      "type": "boolean"
                    },
                    "runAsUserName": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "volumeMounts": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "mountPath",
                  "name"
                ],
                "properties": {
                  "mountPath": {
                    "type": "string"
                  },
                  "mountPropagation": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "readOnly": {
                    "type": "boolean"
                  },
                  "recursiveReadOnly": {
                    "type": "string"
                  },
                  "subPath": {
                    "type": "string"
                  },
                  "subPathExpr": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "workingDir": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "content": {
          "type": "object",
          "properties": {
            "files": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "path"
                ],
                "properties": {
                  "content": {
                    "type": "string"
                  },
                  "contentFrom": {
                    "type": "object",
                    "properties": {
                      "configMapKeyRef": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "fieldRef": {
                        "type": "object",
                        "required": [
                          "fieldPath"
                        ],
                        "properties": {
                          "apiVersion": {
                            "type": "string"
                          },
                          "fieldPath": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "resourceFieldRef": {
                        "type": "object",
                        "required": [
                          "resource"
                        ],
                        "properties": {
                          "containerName": {
                            "type": "string"
                          },
                          "divisor": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          },
                          "resource": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "mode": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "path": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "additionalProperties": false
              }
            },
            "git": {
              "type": "object",
              "properties": {
                "authType": {
                  "type": "string",
                  "enum": [
                    "basic",
                    "header",
                    "github"
                  ]
                },
                "cone": {
                  "type": "boolean"
                },
                "mountPath": {
                  "type": "string"
                },
                "paths": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "revision": {
                  "type": "string"
                },
                "sshKey": {
                  "type": "string"
                },
                "sshKeyFrom": {
                  "type": "object",
                  "properties": {
                    "configMapKeyRef": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "fieldRef": {
                      "type": "object",
                      "required": [
                        "fieldPath"
                      ],
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "fieldPath": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "resourceFieldRef": {
                      "type": "object",
                      "required": [
                        "resource"
                      ],
                      "properties": {
                        "containerName": {
                          "type": "string"
                        },
                        "divisor": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "resource": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "token": {
                  "type": "string"
                },
                "tokenFrom": {
                  "type": "object",
                  "properties": {
                    "configMapKeyRef": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "fieldRef": {
                      "type": "object",
                      "required": [
                        "fieldPath"
                      ],
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "fieldPath": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "resourceFieldRef": {
                      "type": "object",
                      "required": [
                        "resource"
                      ],
                      "properties": {
                        "containerName": {
                          "type": "string"
                        },
                        "divisor": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "resource": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "uri": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "usernameFrom": {
                  "type": "object",
                  "properties": {
                    "configMapKeyRef": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "fieldRef": {
                      "type": "object",
                      "required": [
                        "fieldPath"
                      ],
                      "properties": {
                        "apiVersion": {
                          "type": "string"
                        },
                        "fieldPath": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "resourceFieldRef": {
                      "type": "object",
                      "required": [
                        "resource"
                      ],
                      "properties": {
                        "containerName": {
                          "type": "string"
                        },
                        "divisor": {
                          "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "resource": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tarball": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "path",
                  "url"
                ],
                "properties": {
                  "mount": {
                    "type": "boolean"
                  },
                  "path": {
                    "type": "string"
                  },
                  "url": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "events": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "cronjob": {
                "type": "object",
                "required": [
                  "cron"
                ],
                "properties": {
                  "annotations": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "config": {
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "cron": {
                    "type": "string"
                  },
                  "labels": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "target": {
                    "type": "object",
                    "properties": {
                      "match": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "not": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "replicate": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "timezone": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "execution": {
          "type": "object",
          "properties": {
            "tags": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "target": {
              "type": "object",
              "properties": {
                "match": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "not": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "replicate": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "job": {
          "type": "object",
          "properties": {
            "activeDeadlineSeconds": {
              "type": "integer",
              "format": "int64"
            },
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "namespace": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "notifications": {
          "type": "object",
          "properties": {
            "disableWebhooks": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "pod": {
          "type": "object",
          "properties": {
            "activeDeadlineSeconds": {
              "type": "integer",
              "format": "int64"
            },
            "affinity": {
              "x-kubernetes-preserve-unknown-fields": true
            },
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "dnsConfig": {
              "type": "object",
              "properties": {
                "nameservers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "searches": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "atomic"
                }
              },
              "additionalProperties": false
            },
            "dnsPolicy": {
              "type": "string"
            },
            "hostAliases": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "ip"
                ],
                "properties": {
                  "hostnames": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "ip": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "hostPID": {
              "type": "boolean"
            },
            "hostname": {
              "type": "string"
            },
            "imagePullSecrets": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "default": ""
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-map-type": "atomic"
              }
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "nodeName": {
              "type": "string"
            },
            "nodeSelector": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "preemptionPolicy": {
              "type": "string"
            },
            "priority": {
              "type": "integer",
              "format": "int32"
            },
            "priorityClassName": {
              "type": "string"
            },
            "resourceClaims": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "resourceClaimName": {
                    "type": "string"
                  },
                  "resourceClaimTemplateName": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "schedulingGates": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "securityContext": {
              "type": "object",
              "properties": {
                "appArmorProfile": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "localhostProfile": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "fsGroup": {
                  "type": "integer",
                  "format": "int64"
                },
                "fsGroupChangePolicy": {
                  "type": "string"
                },
                "runAsGroup": {
                  "type": "integer",
                  "format": "int64"
                },
                "runAsNonRoot": {
                  "type": "boolean"
                },
                "runAsUser": {
                  "type": "integer",
                  "format": "int64"
                },
                "seLinuxChangePolicy": {
                  "type": "string"
                },
                "seLinuxOptions": {
                  "type": "object",
                  "properties": {
                    "level": {
                      "type": "string"
                    },
                    "role": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "seccompProfile": {
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "localhostProfile": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "supplementalGroups": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "supplementalGroupsPolicy": {
                  "type": "string"
                },
                "sysctls": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "name",
                      "value"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-type": "atomic"
                },
                "windowsOptions": {
                  "type": "object",
                  "properties": {
                    "gmsaCredentialSpec": {
                      "type": "string"
                    },
                    "gmsaCredentialSpecName": {
                      "type": "string"
                    },
                    "hostProcess": {
                      "type": "boolean"
                    },
                    "runAsUserName": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceAccountName": {
              "type": "string"
            },
            "subdomain": {
              "type": "string"
            },
            "tolerations": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "effect": {
                    "type": "string"
                  },
                  "key": {
                    "type": "string"
                  },
                  "operator": {
                    "type": "string"
                  },
                  "tolerationSeconds": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "topologySpreadConstraints": {
              "x-kubernetes-preserve-unknown-fields": true
            },
            "volumes": {
              "x-kubernetes-preserve-unknown-fields": true
            }
          },
          "additionalProperties": false
        },
        "pvcs": {
          "type": "object",
          "additionalProperties": {
            "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes",
            "type": "object",
            "properties": {
              "accessModes": {
                "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              },
              "dataSource": {
                "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                "type": "object",
                "required": [
                  "kind",
                  "name"
                ],
                "properties": {
                  "apiGroup": {
                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind is the type of resource being referenced",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of resource being referenced",
                    "type": "string"
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "dataSourceRef": {
                "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                "type": "object",
                "required": [
                  "kind",
                  "name"
                ],
                "properties": {
                  "apiGroup": {
                    "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind is the type of resource being referenced",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of resource being referenced",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                    "type": "string"
                  }
                }
              },
              "resources": {
                "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                "type": "object",
                "properties": {
                  "limits": {
                    "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                    "type": "object",
                    "additionalProperties": {
                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              },
              "selector": {
                "description": "selector is a label query over volumes to consider for binding.",
                "type": "object",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "type": "object",
                      "required": [
                        "key",
                        "operator"
                      ],
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        }
                      }
                    },
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "x-kubernetes-map-type": "atomic"
              },
              "storageClassName": {
                "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                "type": "string"
              },
              "volumeAttributesClassName": {
                "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                "type": "string"
              },
              "volumeMode": {
                "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                "type": "string"
              },
              "volumeName": {
                "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                "type": "string"
              }
            }
          }
        },
        "services": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "args": {
                "description": "override default command in the image (empty string to default CMD of the image)",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "command": {
                "description": "override default command in the image (empty string to default ENTRYPOINT of the image)",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "content": {
                "description": "global content that should be fetched into all containers",
                "type": "object",
                "properties": {
                  "files": {
                    "description": "files to load",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "content": {
                          "description": "plain-text content to put inside",
                          "type": "string"
                        },
                        "contentFrom": {
                          "description": "external source to use",
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "description": "Selects a key of a ConfigMap.",
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key to select.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "description": "Specify whether the ConfigMap or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "description": "Path of the field to select in the specified API version.",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "description": "Container name: required for volumes, optional for env vars",
                                  "type": "string"
                                },
                                "divisor": {
                                  "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "description": "Required: resource to select",
                                  "type": "string"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "description": "Selects a key of a secret in the pod's namespace",
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "description": "The key of the secret to select from.  Must be a valid secret key.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "description": "Specify whether the Secret or its key must be defined",
                                  "type": "boolean"
                                }
                              },
                              "x-kubernetes-map-type": "atomic"
                            }
                          }
                        },
                        "mode": {
                          "description": "mode to use for the file",
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "description": "path where the file should be accessible at",
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    }
                  },
                  "git": {
                    "description": "git repository details",
                    "type": "object",
                    "properties": {
                      "authType": {
                        "description": "authorization type for the credentials",
                        "type": "string",
                        "enum": [
                          "basic",
                          "header",
                          "github"
                        ]
                      },
                      "cone": {
                        "description": "enable cone mode for sparse checkout with paths",
                        "type": "boolean"
                      },
                      "mountPath": {
                        "description": "where to mount the fetched repository contents (defaults to \"repo\" directory in the data volume)",
                        "type": "string"
                      },
                      "paths": {
                        "description": "paths to fetch for the sparse checkout",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "revision": {
                        "description": "branch, commit or a tag name to fetch",
                        "type": "string"
                      },
                      "sshKey": {
                        "description": "plain text SSH private key to fetch with",
                        "type": "string"
                      },
                      "sshKeyFrom": {
                        "description": "external SSH private key to fetch with",
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": "string"
                              },
                              "divisor": {
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "token": {
                        "description": "plain text token to fetch with",
                        "type": "string"
                      },
                      "tokenFrom": {
                        "description": "external token to fetch with",
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": "string"
                              },
                              "divisor": {
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      },
                      "uri": {
                        "description": "uri for the Git repository",
                        "type": "string"
                      },
                      "username": {
                        "description": "plain text username to fetch with",
                        "type": "string"
                      },
                      "usernameFrom": {
                        "description": "external username to fetch with",
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "description": "Selects a key of a ConfigMap.",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key to select.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                "type": "string"
                              },
                              "fieldPath": {
                                "description": "Path of the field to select in the specified API version.",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "description": "Container name: required for volumes, optional for env vars",
                                "type": "string"
                              },
                              "divisor": {
                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "description": "Required: resource to select",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "description": "Selects a key of a secret in the pod's namespace",
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret or its key must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      }
                    }
                  },
                  "tarball": {
                    "description": "tarballs to unpack",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "url"
                      ],
                      "properties": {
                        "mount": {
                          "description": "should it mount a new volume there",
                          "type": "boolean"
                        },
                        "path": {
                          "description": "path where the tarball should be extracted",
                          "type": "string"
                        },
                        "url": {
                          "description": "url for the tarball to extract",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "count": {
                "description": "static number of sharded instances to spawn",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              },
              "description": {
                "description": "service description to display",
                "type": "string"
              },
              "env": {
                "description": "environment variables to append to the container",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "global": {
                      "description": "whether to use env var in underlying services",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                      "type": "string"
                    },
                    "valueFrom": {
                      "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                      "type": "object",
                      "properties": {
                        "configMapKeyRef": {
                          "description": "Selects a key of a ConfigMap.",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "Specify whether the ConfigMap or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "fieldRef": {
                          "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                          "type": "object",
                          "required": [
                            "fieldPath"
                          ],
                          "properties": {
                            "apiVersion": {
                              "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                              "type": "string"
                            },
                            "fieldPath": {
                              "description": "Path of the field to select in the specified API version.",
                              "type": "string"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "resourceFieldRef": {
                          "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                          "type": "object",
                          "required": [
                            "resource"
                          ],
                          "properties": {
                            "containerName": {
                              "description": "Container name: required for volumes, optional for env vars",
                              "type": "string"
                            },
                            "divisor": {
                              "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                              "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "resource": {
                              "description": "Required: resource to select",
                              "type": "string"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        },
                        "secretKeyRef": {
                          "description": "Selects a key of a secret in the pod's namespace",
                          "type": "object",
                          "required": [
                            "key"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key of the secret to select from.  Must be a valid secret key.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "description": "Specify whether the Secret or its key must be defined",
                              "type": "boolean"
                            }
                          },
                          "x-kubernetes-map-type": "atomic"
                        }
                      }
                    }
                  }
                }
              },
              "envFrom": {
                "description": "external environment variables to append to the container",
                "type": "array",
                "items": {
                  "description": "EnvFromSource represents the source of a set of ConfigMaps",
                  "type": "object",
                  "properties": {
                    "configMapRef": {
                      "description": "The ConfigMap to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap must be defined",
                          "type": "boolean"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "prefix": {
                      "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                      "type": "string"
                    },
                    "secretRef": {
                      "description": "The Secret to select from",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret must be defined",
                          "type": "boolean"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    }
                  }
                }
              },
              "image": {
                "description": "image to be used for the container",
                "type": "string"
              },
              "imagePullPolicy": {
                "description": "pulling policy for the image",
                "type": "string"
              },
              "logs": {
                "description": "should save logs for the service (false if not specified)",
                "type": "string"
              },
              "matrix": {
                "description": "matrix of parameters to spawn instances (static)",
                "type": "object",
                "additionalProperties": {
                  "type": "dynamicList"
                }
              },
              "maxCount": {
                "description": "dynamic number of sharded instances to spawn - it will be lowered if there is not enough sharded values",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              },
              "pod": {
                "description": "configuration for the scheduled pod",
                "type": "object",
                "properties": {
                  "activeDeadlineSeconds": {
                    "description": "duration in seconds the pod may be active on the node",
                    "type": "integer",
                    "format": "int64"
                  },
                  "affinity": {
                    "description": "If specified, the pod's scheduling constraints",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "annotations": {
                    "description": "annotations added to the scheduled pod",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "dnsConfig": {
                    "description": "Specifies the DNS parameters of a pod.",
                    "type": "object",
                    "properties": {
                      "nameservers": {
                        "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "options": {
                        "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                        "type": "array",
                        "items": {
                          "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name is this DNS resolver option's name.\nRequired.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value is this DNS resolver option's value.",
                              "type": "string"
                            }
                          }
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "searches": {
                        "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    }
                  },
                  "dnsPolicy": {
                    "description": "DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.",
                    "type": "string"
                  },
                  "hostAliases": {
                    "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified",
                    "type": "array",
                    "items": {
                      "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                      "type": "object",
                      "required": [
                        "ip"
                      ],
                      "properties": {
                        "hostnames": {
                          "description": "Hostnames for the above IP address.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "ip": {
                          "description": "IP address of the host file entry.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "hostPID": {
                    "description": "Whether to allow a pod to have access to the host process ID namespace",
                    "type": "boolean"
                  },
                  "hostname": {
                    "description": "Specifies the hostname of the Pod",
                    "type": "string"
                  },
                  "imagePullSecrets": {
                    "description": "references to secrets with credentials for pulling the images from registry",
                    "type": "array",
                    "items": {
                      "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "labels": {
                    "description": "labels added to the scheduled pod",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "nodeName": {
                    "description": "NodeName is a request to schedule this pod onto a specific node.",
                    "type": "string"
                  },
                  "nodeSelector": {
                    "description": "node selector to define on which node the pod should land",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "preemptionPolicy": {
                    "description": "PreemptionPolicy is the Policy for preempting pods with lower priority.",
                    "type": "string"
                  },
                  "priority": {
                    "description": "The priority value. Various system components use this field to find the priority of the pod.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "priorityClassName": {
                    "description": "If specified, indicates the pod's priority.",
                    "type": "string"
                  },
                  "resourceClaims": {
                    "description": "ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start.",
                    "type": "array",
                    "items": {
                      "description": "PodResourceClaim references exactly one ResourceClaim, either directly\nor by naming a ResourceClaimTemplate which is then turned into a ResourceClaim\nfor the pod.\n\nIt adds a name to it that uniquely identifies the ResourceClaim inside the Pod.\nContainers that need access to the ResourceClaim reference it with this name.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name uniquely identifies this resource claim inside the pod.\nThis must be a DNS_LABEL.",
                          "type": "string"
                        },
                        "resourceClaimName": {
                          "description": "ResourceClaimName is the name of a ResourceClaim object in the same\nnamespace as this pod.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                          "type": "string"
                        },
                        "resourceClaimTemplateName": {
                          "description": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate\nobject in the same namespace as this pod.\n\nThe template will be used to create a new ResourceClaim, which will\nbe bound to this pod. When this pod is deleted, the ResourceClaim\nwill also be deleted. The pod name and resource name, along with a\ngenerated component, will be used to form a unique name for the\nResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the\ncorresponding ResourceClaim by the control plane after creating the\nResourceClaim.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "schedulingGates": {
                    "description": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod.",
                    "type": "array",
                    "items": {
                      "description": "PodSchedulingGate is associated to a Pod to guard its scheduling.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the scheduling gate.\nEach scheduling gate must have a unique name field.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "securityContext": {
                    "description": "SecurityContext holds pod-level security attributes and common container settings.",
                    "type": "object",
                    "properties": {
                      "appArmorProfile": {
                        "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                            "type": "string"
                          },
                          "type": {
                            "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                            "type": "string"
                          }
                        }
                      },
                      "fsGroup": {
                        "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "fsGroupChangePolicy": {
                        "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "string"
                      },
                      "runAsGroup": {
                        "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxChangePolicy": {
                        "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "string"
                      },
                      "seLinuxOptions": {
                        "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "object",
                        "properties": {
                          "level": {
                            "description": "Level is SELinux level label that applies to the container.",
                            "type": "string"
                          },
                          "role": {
                            "description": "Role is a SELinux role label that applies to the container.",
                            "type": "string"
                          },
                          "type": {
                            "description": "Type is a SELinux type label that applies to the container.",
                            "type": "string"
                          },
                          "user": {
                            "description": "User is a SELinux user label that applies to the container.",
                            "type": "string"
                          }
                        }
                      },
                      "seccompProfile": {
                        "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                            "type": "string"
                          },
                          "type": {
                            "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                            "type": "string"
                          }
                        }
                      },
                      "supplementalGroups": {
                        "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "array",
                        "items": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "supplementalGroupsPolicy": {
                        "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "string"
                      },
                      "sysctls": {
                        "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                        "type": "array",
                        "items": {
                          "description": "Sysctl defines a kernel parameter to be set",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of a property to set",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of a property to set",
                              "type": "string"
                            }
                          }
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "windowsOptions": {
                        "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                            "type": "string"
                          },
                          "hostProcess": {
                            "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "serviceAccountName": {
                    "description": "default service account name for the scheduled pod",
                    "type": "string"
                  },
                  "subdomain": {
                    "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\".",
                    "type": "string"
                  },
                  "tolerations": {
                    "description": "If specified, the pod's tolerations.",
                    "type": "array",
                    "items": {
                      "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                      "type": "object",
                      "properties": {
                        "effect": {
                          "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                          "type": "string"
                        },
                        "key": {
                          "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                          "type": "string"
                        },
                        "tolerationSeconds": {
                          "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "value": {
                          "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "topologySpreadConstraints": {
                    "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains.",
                    "x-kubernetes-preserve-unknown-fields": true
                  },
                  "volumes": {
                    "description": "volumes to include in the pod",
                    "x-kubernetes-preserve-unknown-fields": true
                  }
                }
              },
              "pvcs": {
                "description": "list of accompanying permanent volume claims",
                "type": "object",
                "additionalProperties": {
                  "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes",
                  "type": "object",
                  "properties": {
                    "accessModes": {
                      "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    },
                    "dataSource": {
                      "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                      "type": "object",
                      "required": [
                        "kind",
                        "name"
                      ],
                      "properties": {
                        "apiGroup": {
                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the type of resource being referenced",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of resource being referenced",
                          "type": "string"
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "dataSourceRef": {
                      "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                      "type": "object",
                      "required": [
                        "kind",
                        "name"
                      ],
                      "properties": {
                        "apiGroup": {
                          "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the type of resource being referenced",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of resource being referenced",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                          "type": "string"
                        }
                      }
                    },
                    "resources": {
                      "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                          "type": "object",
                          "additionalProperties": {
                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "selector": {
                      "description": "selector is a label query over volumes to consider for binding.",
                      "type": "object",
                      "properties": {
                        "matchExpressions": {
                          "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                          "type": "array",
                          "items": {
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                            "type": "object",
                            "required": [
                              "key",
                              "operator"
                            ],
                            "properties": {
                              "key": {
                                "description": "key is the label key that the selector applies to.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                "type": "string"
                              },
                              "values": {
                                "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            }
                          },
                          "x-kubernetes-list-type": "atomic"
                        },
                        "matchLabels": {
                          "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "x-kubernetes-map-type": "atomic"
                    },
                    "storageClassName": {
                      "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                      "type": "string"
                    },
                    "volumeAttributesClassName": {
                      "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                      "type": "string"
                    },
                    "volumeMode": {
                      "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                      "type": "string"
                    },
                    "volumeName": {
                      "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                      "type": "string"
                    }
                  }
                }
              },
              "readinessProbe": {
                "description": "Probe to check if the service has started correctly",
                "type": "object",
                "properties": {
                  "exec": {
                    "description": "Exec specifies a command to execute in the container.",
                    "type": "object",
                    "properties": {
                      "command": {
                        "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    }
                  },
                  "failureThreshold": {
                    "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "grpc": {
                    "description": "GRPC specifies a GRPC HealthCheckRequest.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "port": {
                        "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "service": {
                        "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                        "type": "string",
                        "default": ""
                      }
                    }
                  },
                  "httpGet": {
                    "description": "HTTPGet specifies an HTTP GET request to perform.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                        "type": "string"
                      },
                      "httpHeaders": {
                        "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                        "type": "array",
                        "items": {
                          "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                          "type": "object",
                          "required": [
                            "name",
                            "value"
                          ],
                          "properties": {
                            "name": {
                              "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The header field value",
                              "type": "string"
                            }
                          }
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "path": {
                        "description": "Path to access on the HTTP server.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      },
                      "scheme": {
                        "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                        "type": "string"
                      }
                    }
                  },
                  "initialDelaySeconds": {
                    "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  },
                  "periodSeconds": {
                    "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "successThreshold": {
                    "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "tcpSocket": {
                    "description": "TCPSocket specifies a connection to a TCP port.",
                    "type": "object",
                    "required": [
                      "port"
                    ],
                    "properties": {
                      "host": {
                        "description": "Optional: Host name to connect to, defaults to the pod IP.",
                        "type": "string"
                      },
                      "port": {
                        "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "terminationGracePeriodSeconds": {
                    "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "timeoutSeconds": {
                    "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              },
              "resources": {
                "description": "expected resources for the container",
                "type": "object",
                "properties": {
                  "limits": {
                    "description": "resource limits for the container",
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  },
                  "requests": {
                    "description": "resource requests for the container",
                    "type": "object",
                    "additionalProperties": {
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    }
                  }
                }
              },
              "restartPolicy": {
                "description": "Restart policy for the main container in the pod. One of OnFailure or Never.",
                "type": "string"
              },
              "securityContext": {
                "description": "security context for the container",
                "type": "object",
                "properties": {
                  "allowPrivilegeEscalation": {
                    "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "appArmorProfile": {
                    "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                        "type": "string"
                      }
                    }
                  },
                  "capabilities": {
                    "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "add": {
                        "description": "Added capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "drop": {
                        "description": "Removed capabilities",
                        "type": "array",
                        "items": {
                          "description": "Capability represent POSIX capabilities type",
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    }
                  },
                  "privileged": {
                    "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "procMount": {
                    "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "string"
                  },
                  "readOnlyRootFilesystem": {
                    "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "boolean"
                  },
                  "runAsGroup": {
                    "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "runAsNonRoot": {
                    "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                    "type": "boolean"
                  },
                  "runAsUser": {
                    "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "integer",
                    "format": "int64"
                  },
                  "seLinuxOptions": {
                    "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "properties": {
                      "level": {
                        "description": "Level is SELinux level label that applies to the container.",
                        "type": "string"
                      },
                      "role": {
                        "description": "Role is a SELinux role label that applies to the container.",
                        "type": "string"
                      },
                      "type": {
                        "description": "Type is a SELinux type label that applies to the container.",
                        "type": "string"
                      },
                      "user": {
                        "description": "User is a SELinux user label that applies to the container.",
                        "type": "string"
                      }
                    }
                  },
                  "seccompProfile": {
                    "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "localhostProfile": {
                        "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                        "type": "string"
                      },
                      "type": {
                        "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                        "type": "string"
                      }
                    }
                  },
                  "windowsOptions": {
                    "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                    "type": "object",
                    "properties": {
                      "gmsaCredentialSpec": {
                        "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                        "type": "string"
                      },
                      "gmsaCredentialSpecName": {
                        "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                        "type": "string"
                      },
                      "hostProcess": {
                        "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                        "type": "boolean"
                      },
                      "runAsUserName": {
                        "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "shards": {
                "description": "parameters that should be distributed across sharded instances",
                "type": "object",
                "additionalProperties": {
                  "type": "dynamicList"
                }
              },
              "shell": {
                "description": "script to run in a default shell for the container",
                "type": "string"
              },
              "timeout": {
                "description": "maximum time until reaching readiness",
                "type": "string"
              },
              "transfer": {
                "description": "instructions for transferring files",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "from"
                  ],
                  "properties": {
                    "files": {
                      "description": "file patterns to pack",
                      "type": "dynamicList"
                    },
                    "from": {
                      "description": "path to load the files from",
                      "type": "string"
                    },
                    "mount": {
                      "description": "should it mount a new volume there",
                      "type": "boolean"
                    },
                    "to": {
                      "description": "path where the tarball should be extracted",
                      "type": "string"
                    }
                  }
                }
              },
              "volumeMounts": {
                "description": "volume mounts to append to the container",
                "type": "array",
                "items": {
                  "description": "VolumeMount describes a mounting of a Volume within a container.",
                  "type": "object",
                  "required": [
                    "mountPath",
                    "name"
                  ],
                  "properties": {
                    "mountPath": {
                      "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                      "type": "string"
                    },
                    "mountPropagation": {
                      "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                      "type": "string"
                    },
                    "name": {
                      "description": "This must match the Name of a Volume.",
                      "type": "string"
                    },
                    "readOnly": {
                      "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                      "type": "boolean"
                    },
                    "recursiveReadOnly": {
                      "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                      "type": "string"
                    },
                    "subPath": {
                      "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                      "type": "string"
                    },
                    "subPathExpr": {
                      "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                      "type": "string"
                    }
                  }
                }
              },
              "workingDir": {
                "description": "override default working directory in the image (empty string to default WORKDIR for the image)",
                "type": "string"
              }
            }
          }
        },
        "setup": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "artifacts": {
                "type": "object",
                "properties": {
                  "compress": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "condition": {
                "type": "string"
              },
              "container": {
                "type": "object",
                "properties": {
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "global": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "valueFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "envFrom": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "secretRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "image": {
                    "type": "string"
                  },
                  "imagePullPolicy": {
                    "type": "string"
                  },
                  "resources": {
                    "type": "object",
                    "properties": {
                      "limits": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "securityContext": {
                    "type": "object",
                    "properties": {
                      "allowPrivilegeEscalation": {
                        "type": "boolean"
                      },
                      "appArmorProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "capabilities": {
                        "type": "object",
                        "properties": {
                          "add": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "drop": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "privileged": {
                        "type": "boolean"
                      },
                      "procMount": {
                        "type": "string"
                      },
                      "readOnlyRootFilesystem": {
                        "type": "boolean"
                      },
                      "runAsGroup": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxOptions": {
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "seccompProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "windowsOptions": {
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "type": "string"
                          },
                          "hostProcess": {
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "volumeMounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "type": "string"
                        },
                        "mountPropagation": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        },
                        "recursiveReadOnly": {
                          "type": "string"
                        },
                        "subPath": {
                          "type": "string"
                        },
                        "subPathExpr": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "content": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "contentFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        },
                        "mode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "git": {
                    "type": "object",
                    "properties": {
                      "authType": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "header",
                          "github"
                        ]
                      },
                      "cone": {
                        "type": "boolean"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "revision": {
                        "type": "string"
                      },
                      "sshKey": {
                        "type": "string"
                      },
                      "sshKeyFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "uri": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "usernameFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "tarball": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "url"
                      ],
                      "properties": {
                        "mount": {
                          "type": "boolean"
                        },
                        "path": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "delay": {
                "type": "string",
                "pattern": "^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$"
              },
              "execute": {
                "type": "object",
                "properties": {
                  "async": {
                    "type": "boolean"
                  },
                  "parallelism": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "tests": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "executionRequest": {
                          "type": "object",
                          "properties": {
                            "activeDeadlineSeconds": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "args": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "argsMode": {
                              "type": "string",
                              "enum": [
                                "append",
                                "override",
                                "replace"
                              ]
                            },
                            "artifactRequest": {
                              "type": "object",
                              "properties": {
                                "dirs": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "masks": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "omitFolderPerExecution": {
                                  "type": "boolean"
                                },
                                "sharedBetweenPods": {
                                  "type": "boolean"
                                },
                                "sidecarScraper": {
                                  "type": "boolean"
                                },
                                "storageBucket": {
                                  "type": "string"
                                },
                                "storageClassName": {
                                  "type": "string"
                                },
                                "useDefaultStorageClassName": {
                                  "type": "boolean"
                                },
                                "volumeMountPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "command": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "cronJobTemplate": {
                              "type": "string"
                            },
                            "envConfigMaps": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "reference"
                                ],
                                "properties": {
                                  "mapToVariables": {
                                    "type": "boolean"
                                  },
                                  "mount": {
                                    "type": "boolean"
                                  },
                                  "mountPath": {
                                    "type": "string"
                                  },
                                  "reference": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "envSecrets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "reference"
                                ],
                                "properties": {
                                  "mapToVariables": {
                                    "type": "boolean"
                                  },
                                  "mount": {
                                    "type": "boolean"
                                  },
                                  "mountPath": {
                                    "type": "string"
                                  },
                                  "reference": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "executePostRunScriptBeforeScraping": {
                              "type": "boolean"
                            },
                            "executionLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "executionNamespace": {
                              "type": "string"
                            },
                            "httpProxy": {
                              "type": "string"
                            },
                            "httpsProxy": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "imagePullSecrets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "isVariablesFileUploaded": {
                              "type": "boolean"
                            },
                            "jobTemplate": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "negativeTest": {
                              "type": "boolean"
                            },
                            "postRunScript": {
                              "type": "string"
                            },
                            "preRunScript": {
                              "type": "string"
                            },
                            "scraperTemplate": {
                              "type": "string"
                            },
                            "sourceScripts": {
                              "type": "boolean"
                            },
                            "sync": {
                              "type": "boolean"
                            },
                            "testSecretUUID": {
                              "type": "string"
                            },
                            "variables": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "variable name",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "variable type",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "variable string value",
                                    "type": "string"
                                  },
                                  "valueFrom": {
                                    "description": "or load it from var source",
                                    "type": "object",
                                    "properties": {
                                      "configMapKeyRef": {
                                        "description": "Selects a key of a ConfigMap.",
                                        "type": "object",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "The key to select.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the ConfigMap or its key must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "fieldRef": {
                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                        "type": "object",
                                        "required": [
                                          "fieldPath"
                                        ],
                                        "properties": {
                                          "apiVersion": {
                                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                            "type": "string"
                                          },
                                          "fieldPath": {
                                            "description": "Path of the field to select in the specified API version.",
                                            "type": "string"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "resourceFieldRef": {
                                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                        "type": "object",
                                        "required": [
                                          "resource"
                                        ],
                                        "properties": {
                                          "containerName": {
                                            "description": "Container name: required for volumes, optional for env vars",
                                            "type": "string"
                                          },
                                          "divisor": {
                                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "resource": {
                                            "description": "Required: resource to select",
                                            "type": "string"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "secretKeyRef": {
                                        "description": "Selects a key of a secret in the pod's namespace",
                                        "type": "object",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the Secret or its key must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "variablesFile": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "matrix": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "maxCount": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "name": {
                          "type": "string"
                        },
                        "shards": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "tarball": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "files": {
                                "description": "file patterns to pack",
                                "type": "dynamicList"
                              },
                              "from": {
                                "description": "path to load the files from",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "config": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "count": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "executionName": {
                          "type": "string"
                        },
                        "matrix": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "maxCount": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "name": {
                          "type": "string"
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "shards": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "tarball": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "files": {
                                "description": "file patterns to pack",
                                "type": "dynamicList"
                              },
                              "from": {
                                "description": "path to load the files from",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "target": {
                          "type": "object",
                          "properties": {
                            "match": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "not": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "replicate": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "type": "string"
              },
              "negative": {
                "type": "boolean"
              },
              "optional": {
                "type": "boolean"
              },
              "parallel": {
                "type": "object",
                "properties": {
                  "artifacts": {
                    "type": "object",
                    "properties": {
                      "compress": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "count": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "delay": {
                    "type": "string",
                    "pattern": "^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$"
                  },
                  "description": {
                    "type": "string"
                  },
                  "execute": {
                    "type": "object",
                    "properties": {
                      "async": {
                        "type": "boolean"
                      },
                      "parallelism": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "tests": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "description": {
                              "type": "string"
                            },
                            "executionRequest": {
                              "type": "object",
                              "properties": {
                                "activeDeadlineSeconds": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "argsMode": {
                                  "type": "string",
                                  "enum": [
                                    "append",
                                    "override",
                                    "replace"
                                  ]
                                },
                                "artifactRequest": {
                                  "type": "object",
                                  "properties": {
                                    "dirs": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "masks": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "omitFolderPerExecution": {
                                      "type": "boolean"
                                    },
                                    "sharedBetweenPods": {
                                      "type": "boolean"
                                    },
                                    "sidecarScraper": {
                                      "type": "boolean"
                                    },
                                    "storageBucket": {
                                      "type": "string"
                                    },
                                    "storageClassName": {
                                      "type": "string"
                                    },
                                    "useDefaultStorageClassName": {
                                      "type": "boolean"
                                    },
                                    "volumeMountPath": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "command": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "cronJobTemplate": {
                                  "type": "string"
                                },
                                "envConfigMaps": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "reference"
                                    ],
                                    "properties": {
                                      "mapToVariables": {
                                        "type": "boolean"
                                      },
                                      "mount": {
                                        "type": "boolean"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      },
                                      "reference": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "default": ""
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "envSecrets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "reference"
                                    ],
                                    "properties": {
                                      "mapToVariables": {
                                        "type": "boolean"
                                      },
                                      "mount": {
                                        "type": "boolean"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      },
                                      "reference": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "default": ""
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "executePostRunScriptBeforeScraping": {
                                  "type": "boolean"
                                },
                                "executionLabels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "executionNamespace": {
                                  "type": "string"
                                },
                                "httpProxy": {
                                  "type": "string"
                                },
                                "httpsProxy": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "imagePullSecrets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "isVariablesFileUploaded": {
                                  "type": "boolean"
                                },
                                "jobTemplate": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "negativeTest": {
                                  "type": "boolean"
                                },
                                "postRunScript": {
                                  "type": "string"
                                },
                                "preRunScript": {
                                  "type": "string"
                                },
                                "scraperTemplate": {
                                  "type": "string"
                                },
                                "sourceScripts": {
                                  "type": "boolean"
                                },
                                "sync": {
                                  "type": "boolean"
                                },
                                "testSecretUUID": {
                                  "type": "string"
                                },
                                "variables": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "variable name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "variable type",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "variable string value",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "or load it from var source",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "variablesFile": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "matrix": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "maxCount": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "name": {
                              "type": "string"
                            },
                            "shards": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "tarball": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "files": {
                                    "description": "file patterns to pack",
                                    "type": "dynamicList"
                                  },
                                  "from": {
                                    "description": "path to load the files from",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workflows": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "config": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "count": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "description": {
                              "type": "string"
                            },
                            "executionName": {
                              "type": "string"
                            },
                            "matrix": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "maxCount": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "name": {
                              "type": "string"
                            },
                            "selector": {
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "shards": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "tarball": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "files": {
                                    "description": "file patterns to pack",
                                    "type": "dynamicList"
                                  },
                                  "from": {
                                    "description": "path to load the files from",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "target": {
                              "type": "object",
                              "properties": {
                                "match": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "not": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "replicate": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "fetch": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "from"
                      ],
                      "properties": {
                        "files": {
                          "type": "dynamicList"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "logs": {
                    "type": "string"
                  },
                  "matrix": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "dynamicList"
                    }
                  },
                  "maxCount": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "negative": {
                    "type": "boolean"
                  },
                  "optional": {
                    "type": "boolean"
                  },
                  "parallelism": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "paused": {
                    "type": "boolean"
                  },
                  "retry": {
                    "type": "object",
                    "required": [
                      "count"
                    ],
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                      },
                      "until": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "run": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "global": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "appArmorProfile": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "shell": {
                        "type": "string"
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "recursiveReadOnly": {
                              "type": "string"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "shards": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "dynamicList"
                    }
                  },
                  "shell": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "string"
                  },
                  "transfer": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "from"
                      ],
                      "properties": {
                        "files": {
                          "type": "dynamicList"
                        },
                        "from": {
                          "type": "string"
                        },
                        "mount": {
                          "type": "boolean"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-preserve-unknown-fields": true
              },
              "paused": {
                "type": "boolean"
              },
              "pure": {
                "type": "boolean"
              },
              "retry": {
                "type": "object",
                "required": [
                  "count"
                ],
                "properties": {
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  },
                  "until": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "run": {
                "type": "object",
                "properties": {
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "global": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "valueFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "envFrom": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "secretRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "image": {
                    "type": "string"
                  },
                  "imagePullPolicy": {
                    "type": "string"
                  },
                  "resources": {
                    "type": "object",
                    "properties": {
                      "limits": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "securityContext": {
                    "type": "object",
                    "properties": {
                      "allowPrivilegeEscalation": {
                        "type": "boolean"
                      },
                      "appArmorProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "capabilities": {
                        "type": "object",
                        "properties": {
                          "add": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "drop": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "privileged": {
                        "type": "boolean"
                      },
                      "procMount": {
                        "type": "string"
                      },
                      "readOnlyRootFilesystem": {
                        "type": "boolean"
                      },
                      "runAsGroup": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxOptions": {
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "seccompProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "windowsOptions": {
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "type": "string"
                          },
                          "hostProcess": {
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "shell": {
                    "type": "string"
                  },
                  "volumeMounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "type": "string"
                        },
                        "mountPropagation": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        },
                        "recursiveReadOnly": {
                          "type": "string"
                        },
                        "subPath": {
                          "type": "string"
                        },
                        "subPathExpr": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "services": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "override default command in the image (empty string to default CMD of the image)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "command": {
                      "description": "override default command in the image (empty string to default ENTRYPOINT of the image)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "content": {
                      "description": "global content that should be fetched into all containers",
                      "type": "object",
                      "properties": {
                        "files": {
                          "description": "files to load",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "path"
                            ],
                            "properties": {
                              "content": {
                                "description": "plain-text content to put inside",
                                "type": "string"
                              },
                              "contentFrom": {
                                "description": "external source to use",
                                "type": "object",
                                "properties": {
                                  "configMapKeyRef": {
                                    "description": "Selects a key of a ConfigMap.",
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "fieldRef": {
                                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                    "type": "object",
                                    "required": [
                                      "fieldPath"
                                    ],
                                    "properties": {
                                      "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": "string"
                                      },
                                      "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "resourceFieldRef": {
                                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                    "type": "object",
                                    "required": [
                                      "resource"
                                    ],
                                    "properties": {
                                      "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": "string"
                                      },
                                      "divisor": {
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "secretKeyRef": {
                                    "description": "Selects a key of a secret in the pod's namespace",
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                }
                              },
                              "mode": {
                                "description": "mode to use for the file",
                                "type": "integer",
                                "format": "int32"
                              },
                              "path": {
                                "description": "path where the file should be accessible at",
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        },
                        "git": {
                          "description": "git repository details",
                          "type": "object",
                          "properties": {
                            "authType": {
                              "description": "authorization type for the credentials",
                              "type": "string",
                              "enum": [
                                "basic",
                                "header",
                                "github"
                              ]
                            },
                            "cone": {
                              "description": "enable cone mode for sparse checkout with paths",
                              "type": "boolean"
                            },
                            "mountPath": {
                              "description": "where to mount the fetched repository contents (defaults to \"repo\" directory in the data volume)",
                              "type": "string"
                            },
                            "paths": {
                              "description": "paths to fetch for the sparse checkout",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "revision": {
                              "description": "branch, commit or a tag name to fetch",
                              "type": "string"
                            },
                            "sshKey": {
                              "description": "plain text SSH private key to fetch with",
                              "type": "string"
                            },
                            "sshKeyFrom": {
                              "description": "external SSH private key to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "token": {
                              "description": "plain text token to fetch with",
                              "type": "string"
                            },
                            "tokenFrom": {
                              "description": "external token to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "uri": {
                              "description": "uri for the Git repository",
                              "type": "string"
                            },
                            "username": {
                              "description": "plain text username to fetch with",
                              "type": "string"
                            },
                            "usernameFrom": {
                              "description": "external username to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            }
                          }
                        },
                        "tarball": {
                          "description": "tarballs to unpack",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "path",
                              "url"
                            ],
                            "properties": {
                              "mount": {
                                "description": "should it mount a new volume there",
                                "type": "boolean"
                              },
                              "path": {
                                "description": "path where the tarball should be extracted",
                                "type": "string"
                              },
                              "url": {
                                "description": "url for the tarball to extract",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "count": {
                      "description": "static number of sharded instances to spawn",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    },
                    "description": {
                      "description": "service description to display",
                      "type": "string"
                    },
                    "env": {
                      "description": "environment variables to append to the container",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "global": {
                            "description": "whether to use env var in underlying services",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      }
                    },
                    "envFrom": {
                      "description": "external environment variables to append to the container",
                      "type": "array",
                      "items": {
                        "description": "EnvFromSource represents the source of a set of ConfigMaps",
                        "type": "object",
                        "properties": {
                          "configMapRef": {
                            "description": "The ConfigMap to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "prefix": {
                            "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The Secret to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      }
                    },
                    "image": {
                      "description": "image to be used for the container",
                      "type": "string"
                    },
                    "imagePullPolicy": {
                      "description": "pulling policy for the image",
                      "type": "string"
                    },
                    "logs": {
                      "description": "should save logs for the service (false if not specified)",
                      "type": "string"
                    },
                    "matrix": {
                      "description": "matrix of parameters to spawn instances (static)",
                      "type": "object",
                      "additionalProperties": {
                        "type": "dynamicList"
                      }
                    },
                    "maxCount": {
                      "description": "dynamic number of sharded instances to spawn - it will be lowered if there is not enough sharded values",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    },
                    "pod": {
                      "description": "configuration for the scheduled pod",
                      "type": "object",
                      "properties": {
                        "activeDeadlineSeconds": {
                          "description": "duration in seconds the pod may be active on the node",
                          "type": "integer",
                          "format": "int64"
                        },
                        "affinity": {
                          "description": "If specified, the pod's scheduling constraints",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "annotations": {
                          "description": "annotations added to the scheduled pod",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "dnsConfig": {
                          "description": "Specifies the DNS parameters of a pod.",
                          "type": "object",
                          "properties": {
                            "nameservers": {
                              "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "options": {
                              "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                              "type": "array",
                              "items": {
                                "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name is this DNS resolver option's name.\nRequired.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value is this DNS resolver option's value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "searches": {
                              "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "dnsPolicy": {
                          "description": "DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.",
                          "type": "string"
                        },
                        "hostAliases": {
                          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified",
                          "type": "array",
                          "items": {
                            "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                            "type": "object",
                            "required": [
                              "ip"
                            ],
                            "properties": {
                              "hostnames": {
                                "description": "Hostnames for the above IP address.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "ip": {
                                "description": "IP address of the host file entry.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "hostPID": {
                          "description": "Whether to allow a pod to have access to the host process ID namespace",
                          "type": "boolean"
                        },
                        "hostname": {
                          "description": "Specifies the hostname of the Pod",
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "description": "references to secrets with credentials for pulling the images from registry",
                          "type": "array",
                          "items": {
                            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "labels": {
                          "description": "labels added to the scheduled pod",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nodeName": {
                          "description": "NodeName is a request to schedule this pod onto a specific node.",
                          "type": "string"
                        },
                        "nodeSelector": {
                          "description": "node selector to define on which node the pod should land",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "preemptionPolicy": {
                          "description": "PreemptionPolicy is the Policy for preempting pods with lower priority.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value. Various system components use this field to find the priority of the pod.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "priorityClassName": {
                          "description": "If specified, indicates the pod's priority.",
                          "type": "string"
                        },
                        "resourceClaims": {
                          "description": "ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start.",
                          "type": "array",
                          "items": {
                            "description": "PodResourceClaim references exactly one ResourceClaim, either directly\nor by naming a ResourceClaimTemplate which is then turned into a ResourceClaim\nfor the pod.\n\nIt adds a name to it that uniquely identifies the ResourceClaim inside the Pod.\nContainers that need access to the ResourceClaim reference it with this name.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name uniquely identifies this resource claim inside the pod.\nThis must be a DNS_LABEL.",
                                "type": "string"
                              },
                              "resourceClaimName": {
                                "description": "ResourceClaimName is the name of a ResourceClaim object in the same\nnamespace as this pod.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                                "type": "string"
                              },
                              "resourceClaimTemplateName": {
                                "description": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate\nobject in the same namespace as this pod.\n\nThe template will be used to create a new ResourceClaim, which will\nbe bound to this pod. When this pod is deleted, the ResourceClaim\nwill also be deleted. The pod name and resource name, along with a\ngenerated component, will be used to form a unique name for the\nResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the\ncorresponding ResourceClaim by the control plane after creating the\nResourceClaim.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "schedulingGates": {
                          "description": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod.",
                          "type": "array",
                          "items": {
                            "description": "PodSchedulingGate is associated to a Pod to guard its scheduling.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the scheduling gate.\nEach scheduling gate must have a unique name field.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "securityContext": {
                          "description": "SecurityContext holds pod-level security attributes and common container settings.",
                          "type": "object",
                          "properties": {
                            "appArmorProfile": {
                              "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                  "type": "string"
                                }
                              }
                            },
                            "fsGroup": {
                              "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "fsGroupChangePolicy": {
                              "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "runAsNonRoot": {
                              "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "seLinuxChangePolicy": {
                              "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "seLinuxOptions": {
                              "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "type": "string"
                                }
                              }
                            },
                            "seccompProfile": {
                              "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                  "type": "string"
                                }
                              }
                            },
                            "supplementalGroups": {
                              "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "supplementalGroupsPolicy": {
                              "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "sysctls": {
                              "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "array",
                              "items": {
                                "description": "Sysctl defines a kernel parameter to be set",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of a property to set",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value of a property to set",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "windowsOptions": {
                              "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                              "type": "object",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "serviceAccountName": {
                          "description": "default service account name for the scheduled pod",
                          "type": "string"
                        },
                        "subdomain": {
                          "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\".",
                          "type": "string"
                        },
                        "tolerations": {
                          "description": "If specified, the pod's tolerations.",
                          "type": "array",
                          "items": {
                            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                            "type": "object",
                            "properties": {
                              "effect": {
                                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                "type": "string"
                              },
                              "key": {
                                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "value": {
                                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "topologySpreadConstraints": {
                          "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "volumes": {
                          "description": "volumes to include in the pod",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      }
                    },
                    "pvcs": {
                      "description": "list of accompanying permanent volume claims",
                      "type": "object",
                      "additionalProperties": {
                        "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes",
                        "type": "object",
                        "properties": {
                          "accessModes": {
                            "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "dataSource": {
                            "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "dataSourceRef": {
                            "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                "type": "string"
                              }
                            }
                          },
                          "resources": {
                            "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                            "type": "object",
                            "properties": {
                              "limits": {
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "requests": {
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          },
                          "selector": {
                            "description": "selector is a label query over volumes to consider for binding.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "storageClassName": {
                            "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                            "type": "string"
                          },
                          "volumeAttributesClassName": {
                            "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                            "type": "string"
                          },
                          "volumeMode": {
                            "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                            "type": "string"
                          },
                          "volumeName": {
                            "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "readinessProbe": {
                      "description": "Probe to check if the service has started correctly",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string",
                              "default": ""
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "resources": {
                      "description": "expected resources for the container",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "resource limits for the container",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "resource requests for the container",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "restartPolicy": {
                      "description": "Restart policy for the main container in the pod. One of OnFailure or Never.",
                      "type": "string"
                    },
                    "securityContext": {
                      "description": "security context for the container",
                      "type": "object",
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "appArmorProfile": {
                          "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                              "type": "string"
                            }
                          }
                        },
                        "capabilities": {
                          "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "add": {
                              "description": "Added capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "drop": {
                              "description": "Removed capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "privileged": {
                          "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "procMount": {
                          "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "string"
                        },
                        "readOnlyRootFilesystem": {
                          "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "runAsGroup": {
                          "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "runAsNonRoot": {
                          "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "seLinuxOptions": {
                          "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "description": "Level is SELinux level label that applies to the container.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role is a SELinux role label that applies to the container.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type is a SELinux type label that applies to the container.",
                              "type": "string"
                            },
                            "user": {
                              "description": "User is a SELinux user label that applies to the container.",
                              "type": "string"
                            }
                          }
                        },
                        "seccompProfile": {
                          "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                              "type": "string"
                            }
                          }
                        },
                        "windowsOptions": {
                          "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                          "type": "object",
                          "properties": {
                            "gmsaCredentialSpec": {
                              "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                              "type": "string"
                            },
                            "gmsaCredentialSpecName": {
                              "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                              "type": "string"
                            },
                            "hostProcess": {
                              "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                              "type": "boolean"
                            },
                            "runAsUserName": {
                              "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "shards": {
                      "description": "parameters that should be distributed across sharded instances",
                      "type": "object",
                      "additionalProperties": {
                        "type": "dynamicList"
                      }
                    },
                    "shell": {
                      "description": "script to run in a default shell for the container",
                      "type": "string"
                    },
                    "timeout": {
                      "description": "maximum time until reaching readiness",
                      "type": "string"
                    },
                    "transfer": {
                      "description": "instructions for transferring files",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "from"
                        ],
                        "properties": {
                          "files": {
                            "description": "file patterns to pack",
                            "type": "dynamicList"
                          },
                          "from": {
                            "description": "path to load the files from",
                            "type": "string"
                          },
                          "mount": {
                            "description": "should it mount a new volume there",
                            "type": "boolean"
                          },
                          "to": {
                            "description": "path where the tarball should be extracted",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "volume mounts to append to the container",
                      "type": "array",
                      "items": {
                        "description": "VolumeMount describes a mounting of a Volume within a container.",
                        "type": "object",
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "properties": {
                          "mountPath": {
                            "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                            "type": "string"
                          },
                          "mountPropagation": {
                            "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                            "type": "string"
                          },
                          "name": {
                            "description": "This must match the Name of a Volume.",
                            "type": "string"
                          },
                          "readOnly": {
                            "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                            "type": "boolean"
                          },
                          "recursiveReadOnly": {
                            "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                            "type": "string"
                          },
                          "subPath": {
                            "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                            "type": "string"
                          },
                          "subPathExpr": {
                            "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "workingDir": {
                      "description": "override default working directory in the image (empty string to default WORKDIR for the image)",
                      "type": "string"
                    }
                  }
                }
              },
              "setup": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "shell": {
                "type": "string"
              },
              "steps": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "timeout": {
                "type": "string"
              },
              "workingDir": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "artifacts": {
                "type": "object",
                "properties": {
                  "compress": {
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "paths": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "condition": {
                "type": "string"
              },
              "container": {
                "type": "object",
                "properties": {
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "global": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "valueFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "envFrom": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "secretRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "image": {
                    "type": "string"
                  },
                  "imagePullPolicy": {
                    "type": "string"
                  },
                  "resources": {
                    "type": "object",
                    "properties": {
                      "limits": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "securityContext": {
                    "type": "object",
                    "properties": {
                      "allowPrivilegeEscalation": {
                        "type": "boolean"
                      },
                      "appArmorProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "capabilities": {
                        "type": "object",
                        "properties": {
                          "add": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "drop": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "privileged": {
                        "type": "boolean"
                      },
                      "procMount": {
                        "type": "string"
                      },
                      "readOnlyRootFilesystem": {
                        "type": "boolean"
                      },
                      "runAsGroup": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxOptions": {
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "seccompProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "windowsOptions": {
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "type": "string"
                          },
                          "hostProcess": {
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "volumeMounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "type": "string"
                        },
                        "mountPropagation": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        },
                        "recursiveReadOnly": {
                          "type": "string"
                        },
                        "subPath": {
                          "type": "string"
                        },
                        "subPathExpr": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "content": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path"
                      ],
                      "properties": {
                        "content": {
                          "type": "string"
                        },
                        "contentFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        },
                        "mode": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "path": {
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "git": {
                    "type": "object",
                    "properties": {
                      "authType": {
                        "type": "string",
                        "enum": [
                          "basic",
                          "header",
                          "github"
                        ]
                      },
                      "cone": {
                        "type": "boolean"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "revision": {
                        "type": "string"
                      },
                      "sshKey": {
                        "type": "string"
                      },
                      "sshKeyFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "token": {
                        "type": "string"
                      },
                      "tokenFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "uri": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      },
                      "usernameFrom": {
                        "type": "object",
                        "properties": {
                          "configMapKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "fieldRef": {
                            "type": "object",
                            "required": [
                              "fieldPath"
                            ],
                            "properties": {
                              "apiVersion": {
                                "type": "string"
                              },
                              "fieldPath": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "resourceFieldRef": {
                            "type": "object",
                            "required": [
                              "resource"
                            ],
                            "properties": {
                              "containerName": {
                                "type": "string"
                              },
                              "divisor": {
                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              },
                              "resource": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          },
                          "secretKeyRef": {
                            "type": "object",
                            "required": [
                              "key"
                            ],
                            "properties": {
                              "key": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false,
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "tarball": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "url"
                      ],
                      "properties": {
                        "mount": {
                          "type": "boolean"
                        },
                        "path": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "delay": {
                "type": "string",
                "pattern": "^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$"
              },
              "execute": {
                "type": "object",
                "properties": {
                  "async": {
                    "type": "boolean"
                  },
                  "parallelism": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "tests": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "executionRequest": {
                          "type": "object",
                          "properties": {
                            "activeDeadlineSeconds": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "args": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "argsMode": {
                              "type": "string",
                              "enum": [
                                "append",
                                "override",
                                "replace"
                              ]
                            },
                            "artifactRequest": {
                              "type": "object",
                              "properties": {
                                "dirs": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "masks": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "omitFolderPerExecution": {
                                  "type": "boolean"
                                },
                                "sharedBetweenPods": {
                                  "type": "boolean"
                                },
                                "sidecarScraper": {
                                  "type": "boolean"
                                },
                                "storageBucket": {
                                  "type": "string"
                                },
                                "storageClassName": {
                                  "type": "string"
                                },
                                "useDefaultStorageClassName": {
                                  "type": "boolean"
                                },
                                "volumeMountPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "command": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "cronJobTemplate": {
                              "type": "string"
                            },
                            "envConfigMaps": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "reference"
                                ],
                                "properties": {
                                  "mapToVariables": {
                                    "type": "boolean"
                                  },
                                  "mount": {
                                    "type": "boolean"
                                  },
                                  "mountPath": {
                                    "type": "string"
                                  },
                                  "reference": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "envSecrets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "reference"
                                ],
                                "properties": {
                                  "mapToVariables": {
                                    "type": "boolean"
                                  },
                                  "mount": {
                                    "type": "boolean"
                                  },
                                  "mountPath": {
                                    "type": "string"
                                  },
                                  "reference": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "executePostRunScriptBeforeScraping": {
                              "type": "boolean"
                            },
                            "executionLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "executionNamespace": {
                              "type": "string"
                            },
                            "httpProxy": {
                              "type": "string"
                            },
                            "httpsProxy": {
                              "type": "string"
                            },
                            "image": {
                              "type": "string"
                            },
                            "imagePullSecrets": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "default": ""
                                  }
                                },
                                "additionalProperties": false,
                                "x-kubernetes-map-type": "atomic"
                              }
                            },
                            "isVariablesFileUploaded": {
                              "type": "boolean"
                            },
                            "jobTemplate": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "negativeTest": {
                              "type": "boolean"
                            },
                            "postRunScript": {
                              "type": "string"
                            },
                            "preRunScript": {
                              "type": "string"
                            },
                            "scraperTemplate": {
                              "type": "string"
                            },
                            "sourceScripts": {
                              "type": "boolean"
                            },
                            "sync": {
                              "type": "boolean"
                            },
                            "testSecretUUID": {
                              "type": "string"
                            },
                            "variables": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "variable name",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "variable type",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "variable string value",
                                    "type": "string"
                                  },
                                  "valueFrom": {
                                    "description": "or load it from var source",
                                    "type": "object",
                                    "properties": {
                                      "configMapKeyRef": {
                                        "description": "Selects a key of a ConfigMap.",
                                        "type": "object",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "The key to select.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the ConfigMap or its key must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "fieldRef": {
                                        "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                        "type": "object",
                                        "required": [
                                          "fieldPath"
                                        ],
                                        "properties": {
                                          "apiVersion": {
                                            "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                            "type": "string"
                                          },
                                          "fieldPath": {
                                            "description": "Path of the field to select in the specified API version.",
                                            "type": "string"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "resourceFieldRef": {
                                        "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                        "type": "object",
                                        "required": [
                                          "resource"
                                        ],
                                        "properties": {
                                          "containerName": {
                                            "description": "Container name: required for volumes, optional for env vars",
                                            "type": "string"
                                          },
                                          "divisor": {
                                            "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                            "anyOf": [
                                              {
                                                "type": "integer"
                                              },
                                              {
                                                "type": "string"
                                              }
                                            ],
                                            "x-kubernetes-int-or-string": true
                                          },
                                          "resource": {
                                            "description": "Required: resource to select",
                                            "type": "string"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      },
                                      "secretKeyRef": {
                                        "description": "Selects a key of a secret in the pod's namespace",
                                        "type": "object",
                                        "required": [
                                          "key"
                                        ],
                                        "properties": {
                                          "key": {
                                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                                            "type": "string"
                                          },
                                          "name": {
                                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                            "type": "string",
                                            "default": ""
                                          },
                                          "optional": {
                                            "description": "Specify whether the Secret or its key must be defined",
                                            "type": "boolean"
                                          }
                                        },
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "variablesFile": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "matrix": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "maxCount": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "name": {
                          "type": "string"
                        },
                        "shards": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "tarball": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "files": {
                                "description": "file patterns to pack",
                                "type": "dynamicList"
                              },
                              "from": {
                                "description": "path to load the files from",
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workflows": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "config": {
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "count": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "description": {
                          "type": "string"
                        },
                        "executionName": {
                          "type": "string"
                        },
                        "matrix": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "maxCount": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        },
                        "name": {
                          "type": "string"
                        },
                        "selector": {
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "key",
                                  "operator"
                                ],
                                "properties": {
                                  "key": {
                                    "type": "string"
                                  },
                                  "operator": {
                                    "type": "string"
                                  },
                                  "values": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "x-kubernetes-list-type": "atomic"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "matchLabels": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "shards": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "dynamicList"
                          }
                        },
                        "tarball": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "files": {
                                "description": "file patterns to pack",
                                "type": "dynamicList"
                              },
                              "from": {
                                "description": "path to load the files from",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "target": {
                          "type": "object",
                          "properties": {
                            "match": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "not": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "replicate": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "name": {
                "type": "string"
              },
              "negative": {
                "type": "boolean"
              },
              "optional": {
                "type": "boolean"
              },
              "parallel": {
                "type": "object",
                "properties": {
                  "artifacts": {
                    "type": "object",
                    "properties": {
                      "compress": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "count": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "delay": {
                    "type": "string",
                    "pattern": "^((0|[1-9][0-9]*)h)?((0|[1-9][0-9]*)m)?((0|[1-9][0-9]*)s)?((0|[1-9][0-9]*)ms)?$"
                  },
                  "description": {
                    "type": "string"
                  },
                  "execute": {
                    "type": "object",
                    "properties": {
                      "async": {
                        "type": "boolean"
                      },
                      "parallelism": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "tests": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "count": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "description": {
                              "type": "string"
                            },
                            "executionRequest": {
                              "type": "object",
                              "properties": {
                                "activeDeadlineSeconds": {
                                  "type": "integer",
                                  "format": "int64"
                                },
                                "args": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "argsMode": {
                                  "type": "string",
                                  "enum": [
                                    "append",
                                    "override",
                                    "replace"
                                  ]
                                },
                                "artifactRequest": {
                                  "type": "object",
                                  "properties": {
                                    "dirs": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "masks": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "omitFolderPerExecution": {
                                      "type": "boolean"
                                    },
                                    "sharedBetweenPods": {
                                      "type": "boolean"
                                    },
                                    "sidecarScraper": {
                                      "type": "boolean"
                                    },
                                    "storageBucket": {
                                      "type": "string"
                                    },
                                    "storageClassName": {
                                      "type": "string"
                                    },
                                    "useDefaultStorageClassName": {
                                      "type": "boolean"
                                    },
                                    "volumeMountPath": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                },
                                "command": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "cronJobTemplate": {
                                  "type": "string"
                                },
                                "envConfigMaps": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "reference"
                                    ],
                                    "properties": {
                                      "mapToVariables": {
                                        "type": "boolean"
                                      },
                                      "mount": {
                                        "type": "boolean"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      },
                                      "reference": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "default": ""
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "envSecrets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "reference"
                                    ],
                                    "properties": {
                                      "mapToVariables": {
                                        "type": "boolean"
                                      },
                                      "mount": {
                                        "type": "boolean"
                                      },
                                      "mountPath": {
                                        "type": "string"
                                      },
                                      "reference": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "default": ""
                                          }
                                        },
                                        "additionalProperties": false,
                                        "x-kubernetes-map-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "executePostRunScriptBeforeScraping": {
                                  "type": "boolean"
                                },
                                "executionLabels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "executionNamespace": {
                                  "type": "string"
                                },
                                "httpProxy": {
                                  "type": "string"
                                },
                                "httpsProxy": {
                                  "type": "string"
                                },
                                "image": {
                                  "type": "string"
                                },
                                "imagePullSecrets": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "default": ""
                                      }
                                    },
                                    "additionalProperties": false,
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                },
                                "isVariablesFileUploaded": {
                                  "type": "boolean"
                                },
                                "jobTemplate": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "negativeTest": {
                                  "type": "boolean"
                                },
                                "postRunScript": {
                                  "type": "string"
                                },
                                "preRunScript": {
                                  "type": "string"
                                },
                                "scraperTemplate": {
                                  "type": "string"
                                },
                                "sourceScripts": {
                                  "type": "boolean"
                                },
                                "sync": {
                                  "type": "boolean"
                                },
                                "testSecretUUID": {
                                  "type": "string"
                                },
                                "variables": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "variable name",
                                        "type": "string"
                                      },
                                      "type": {
                                        "description": "variable type",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "variable string value",
                                        "type": "string"
                                      },
                                      "valueFrom": {
                                        "description": "or load it from var source",
                                        "type": "object",
                                        "properties": {
                                          "configMapKeyRef": {
                                            "description": "Selects a key of a ConfigMap.",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key to select.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the ConfigMap or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "fieldRef": {
                                            "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                            "type": "object",
                                            "required": [
                                              "fieldPath"
                                            ],
                                            "properties": {
                                              "apiVersion": {
                                                "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                                "type": "string"
                                              },
                                              "fieldPath": {
                                                "description": "Path of the field to select in the specified API version.",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "resourceFieldRef": {
                                            "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                            "type": "object",
                                            "required": [
                                              "resource"
                                            ],
                                            "properties": {
                                              "containerName": {
                                                "description": "Container name: required for volumes, optional for env vars",
                                                "type": "string"
                                              },
                                              "divisor": {
                                                "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                                "anyOf": [
                                                  {
                                                    "type": "integer"
                                                  },
                                                  {
                                                    "type": "string"
                                                  }
                                                ],
                                                "x-kubernetes-int-or-string": true
                                              },
                                              "resource": {
                                                "description": "Required: resource to select",
                                                "type": "string"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          },
                                          "secretKeyRef": {
                                            "description": "Selects a key of a secret in the pod's namespace",
                                            "type": "object",
                                            "required": [
                                              "key"
                                            ],
                                            "properties": {
                                              "key": {
                                                "description": "The key of the secret to select from.  Must be a valid secret key.",
                                                "type": "string"
                                              },
                                              "name": {
                                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                                "type": "string",
                                                "default": ""
                                              },
                                              "optional": {
                                                "description": "Specify whether the Secret or its key must be defined",
                                                "type": "boolean"
                                              }
                                            },
                                            "x-kubernetes-map-type": "atomic"
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "variablesFile": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "matrix": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "maxCount": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "name": {
                              "type": "string"
                            },
                            "shards": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "tarball": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "files": {
                                    "description": "file patterns to pack",
                                    "type": "dynamicList"
                                  },
                                  "from": {
                                    "description": "path to load the files from",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workflows": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "config": {
                              "type": "object",
                              "additionalProperties": {
                                "anyOf": [
                                  {
                                    "type": "integer"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "x-kubernetes-int-or-string": true
                              }
                            },
                            "count": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "description": {
                              "type": "string"
                            },
                            "executionName": {
                              "type": "string"
                            },
                            "matrix": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "maxCount": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "name": {
                              "type": "string"
                            },
                            "selector": {
                              "type": "object",
                              "properties": {
                                "matchExpressions": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "key",
                                      "operator"
                                    ],
                                    "properties": {
                                      "key": {
                                        "type": "string"
                                      },
                                      "operator": {
                                        "type": "string"
                                      },
                                      "values": {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "x-kubernetes-list-type": "atomic"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "x-kubernetes-list-type": "atomic"
                                },
                                "matchLabels": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "shards": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "dynamicList"
                              }
                            },
                            "tarball": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "files": {
                                    "description": "file patterns to pack",
                                    "type": "dynamicList"
                                  },
                                  "from": {
                                    "description": "path to load the files from",
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "target": {
                              "type": "object",
                              "properties": {
                                "match": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "not": {
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "replicate": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "fetch": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "from"
                      ],
                      "properties": {
                        "files": {
                          "type": "dynamicList"
                        },
                        "from": {
                          "type": "string"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "logs": {
                    "type": "string"
                  },
                  "matrix": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "dynamicList"
                    }
                  },
                  "maxCount": {
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  },
                  "negative": {
                    "type": "boolean"
                  },
                  "optional": {
                    "type": "boolean"
                  },
                  "parallelism": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "paused": {
                    "type": "boolean"
                  },
                  "retry": {
                    "type": "object",
                    "required": [
                      "count"
                    ],
                    "properties": {
                      "count": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                      },
                      "until": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "run": {
                    "type": "object",
                    "properties": {
                      "args": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "command": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "env": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "global": {
                              "type": "boolean"
                            },
                            "name": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            },
                            "valueFrom": {
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false,
                                  "x-kubernetes-map-type": "atomic"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "envFrom": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "configMapRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "prefix": {
                              "type": "string"
                            },
                            "secretRef": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "image": {
                        "type": "string"
                      },
                      "imagePullPolicy": {
                        "type": "string"
                      },
                      "resources": {
                        "type": "object",
                        "properties": {
                          "limits": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          },
                          "requests": {
                            "type": "object",
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "securityContext": {
                        "type": "object",
                        "properties": {
                          "allowPrivilegeEscalation": {
                            "type": "boolean"
                          },
                          "appArmorProfile": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "capabilities": {
                            "type": "object",
                            "properties": {
                              "add": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "drop": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              }
                            },
                            "additionalProperties": false
                          },
                          "privileged": {
                            "type": "boolean"
                          },
                          "procMount": {
                            "type": "string"
                          },
                          "readOnlyRootFilesystem": {
                            "type": "boolean"
                          },
                          "runAsGroup": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "runAsNonRoot": {
                            "type": "boolean"
                          },
                          "runAsUser": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "seLinuxOptions": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "user": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "seccompProfile": {
                            "type": "object",
                            "required": [
                              "type"
                            ],
                            "properties": {
                              "localhostProfile": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "windowsOptions": {
                            "type": "object",
                            "properties": {
                              "gmsaCredentialSpec": {
                                "type": "string"
                              },
                              "gmsaCredentialSpecName": {
                                "type": "string"
                              },
                              "hostProcess": {
                                "type": "boolean"
                              },
                              "runAsUserName": {
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "shell": {
                        "type": "string"
                      },
                      "volumeMounts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "mountPath",
                            "name"
                          ],
                          "properties": {
                            "mountPath": {
                              "type": "string"
                            },
                            "mountPropagation": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "readOnly": {
                              "type": "boolean"
                            },
                            "recursiveReadOnly": {
                              "type": "string"
                            },
                            "subPath": {
                              "type": "string"
                            },
                            "subPathExpr": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "workingDir": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "shards": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "dynamicList"
                    }
                  },
                  "shell": {
                    "type": "string"
                  },
                  "timeout": {
                    "type": "string"
                  },
                  "transfer": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "from"
                      ],
                      "properties": {
                        "files": {
                          "type": "dynamicList"
                        },
                        "from": {
                          "type": "string"
                        },
                        "mount": {
                          "type": "boolean"
                        },
                        "to": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-preserve-unknown-fields": true
              },
              "paused": {
                "type": "boolean"
              },
              "pure": {
                "type": "boolean"
              },
              "retry": {
                "type": "object",
                "required": [
                  "count"
                ],
                "properties": {
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1
                  },
                  "until": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "run": {
                "type": "object",
                "properties": {
                  "args": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "command": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "env": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "global": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        },
                        "valueFrom": {
                          "type": "object",
                          "properties": {
                            "configMapKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "fieldRef": {
                              "type": "object",
                              "required": [
                                "fieldPath"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": "string"
                                },
                                "fieldPath": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "resourceFieldRef": {
                              "type": "object",
                              "required": [
                                "resource"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": "string"
                                },
                                "divisor": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                },
                                "resource": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            },
                            "secretKeyRef": {
                              "type": "object",
                              "required": [
                                "key"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string",
                                  "default": ""
                                },
                                "optional": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-map-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "envFrom": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "configMapRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        },
                        "prefix": {
                          "type": "string"
                        },
                        "secretRef": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "default": ""
                            },
                            "optional": {
                              "type": "boolean"
                            }
                          },
                          "additionalProperties": false,
                          "x-kubernetes-map-type": "atomic"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "image": {
                    "type": "string"
                  },
                  "imagePullPolicy": {
                    "type": "string"
                  },
                  "resources": {
                    "type": "object",
                    "properties": {
                      "limits": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      },
                      "requests": {
                        "type": "object",
                        "additionalProperties": {
                          "anyOf": [
                            {
                              "type": "integer"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "x-kubernetes-int-or-string": true
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "securityContext": {
                    "type": "object",
                    "properties": {
                      "allowPrivilegeEscalation": {
                        "type": "boolean"
                      },
                      "appArmorProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "capabilities": {
                        "type": "object",
                        "properties": {
                          "add": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "drop": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          }
                        },
                        "additionalProperties": false
                      },
                      "privileged": {
                        "type": "boolean"
                      },
                      "procMount": {
                        "type": "string"
                      },
                      "readOnlyRootFilesystem": {
                        "type": "boolean"
                      },
                      "runAsGroup": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "runAsNonRoot": {
                        "type": "boolean"
                      },
                      "runAsUser": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "seLinuxOptions": {
                        "type": "object",
                        "properties": {
                          "level": {
                            "type": "string"
                          },
                          "role": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "seccompProfile": {
                        "type": "object",
                        "required": [
                          "type"
                        ],
                        "properties": {
                          "localhostProfile": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "windowsOptions": {
                        "type": "object",
                        "properties": {
                          "gmsaCredentialSpec": {
                            "type": "string"
                          },
                          "gmsaCredentialSpecName": {
                            "type": "string"
                          },
                          "hostProcess": {
                            "type": "boolean"
                          },
                          "runAsUserName": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "shell": {
                    "type": "string"
                  },
                  "volumeMounts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "mountPath",
                        "name"
                      ],
                      "properties": {
                        "mountPath": {
                          "type": "string"
                        },
                        "mountPropagation": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "readOnly": {
                          "type": "boolean"
                        },
                        "recursiveReadOnly": {
                          "type": "string"
                        },
                        "subPath": {
                          "type": "string"
                        },
                        "subPathExpr": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "workingDir": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "services": {
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "args": {
                      "description": "override default command in the image (empty string to default CMD of the image)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "command": {
                      "description": "override default command in the image (empty string to default ENTRYPOINT of the image)",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "content": {
                      "description": "global content that should be fetched into all containers",
                      "type": "object",
                      "properties": {
                        "files": {
                          "description": "files to load",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "path"
                            ],
                            "properties": {
                              "content": {
                                "description": "plain-text content to put inside",
                                "type": "string"
                              },
                              "contentFrom": {
                                "description": "external source to use",
                                "type": "object",
                                "properties": {
                                  "configMapKeyRef": {
                                    "description": "Selects a key of a ConfigMap.",
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The key to select.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "Specify whether the ConfigMap or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "fieldRef": {
                                    "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                    "type": "object",
                                    "required": [
                                      "fieldPath"
                                    ],
                                    "properties": {
                                      "apiVersion": {
                                        "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                        "type": "string"
                                      },
                                      "fieldPath": {
                                        "description": "Path of the field to select in the specified API version.",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "resourceFieldRef": {
                                    "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                    "type": "object",
                                    "required": [
                                      "resource"
                                    ],
                                    "properties": {
                                      "containerName": {
                                        "description": "Container name: required for volumes, optional for env vars",
                                        "type": "string"
                                      },
                                      "divisor": {
                                        "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                        "anyOf": [
                                          {
                                            "type": "integer"
                                          },
                                          {
                                            "type": "string"
                                          }
                                        ],
                                        "x-kubernetes-int-or-string": true
                                      },
                                      "resource": {
                                        "description": "Required: resource to select",
                                        "type": "string"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  },
                                  "secretKeyRef": {
                                    "description": "Selects a key of a secret in the pod's namespace",
                                    "type": "object",
                                    "required": [
                                      "key"
                                    ],
                                    "properties": {
                                      "key": {
                                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                        "type": "string",
                                        "default": ""
                                      },
                                      "optional": {
                                        "description": "Specify whether the Secret or its key must be defined",
                                        "type": "boolean"
                                      }
                                    },
                                    "x-kubernetes-map-type": "atomic"
                                  }
                                }
                              },
                              "mode": {
                                "description": "mode to use for the file",
                                "type": "integer",
                                "format": "int32"
                              },
                              "path": {
                                "description": "path where the file should be accessible at",
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        },
                        "git": {
                          "description": "git repository details",
                          "type": "object",
                          "properties": {
                            "authType": {
                              "description": "authorization type for the credentials",
                              "type": "string",
                              "enum": [
                                "basic",
                                "header",
                                "github"
                              ]
                            },
                            "cone": {
                              "description": "enable cone mode for sparse checkout with paths",
                              "type": "boolean"
                            },
                            "mountPath": {
                              "description": "where to mount the fetched repository contents (defaults to \"repo\" directory in the data volume)",
                              "type": "string"
                            },
                            "paths": {
                              "description": "paths to fetch for the sparse checkout",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "revision": {
                              "description": "branch, commit or a tag name to fetch",
                              "type": "string"
                            },
                            "sshKey": {
                              "description": "plain text SSH private key to fetch with",
                              "type": "string"
                            },
                            "sshKeyFrom": {
                              "description": "external SSH private key to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "token": {
                              "description": "plain text token to fetch with",
                              "type": "string"
                            },
                            "tokenFrom": {
                              "description": "external token to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            },
                            "uri": {
                              "description": "uri for the Git repository",
                              "type": "string"
                            },
                            "username": {
                              "description": "plain text username to fetch with",
                              "type": "string"
                            },
                            "usernameFrom": {
                              "description": "external username to fetch with",
                              "type": "object",
                              "properties": {
                                "configMapKeyRef": {
                                  "description": "Selects a key of a ConfigMap.",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key to select.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the ConfigMap or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "fieldRef": {
                                  "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                  "type": "object",
                                  "required": [
                                    "fieldPath"
                                  ],
                                  "properties": {
                                    "apiVersion": {
                                      "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                      "type": "string"
                                    },
                                    "fieldPath": {
                                      "description": "Path of the field to select in the specified API version.",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "resourceFieldRef": {
                                  "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                  "type": "object",
                                  "required": [
                                    "resource"
                                  ],
                                  "properties": {
                                    "containerName": {
                                      "description": "Container name: required for volumes, optional for env vars",
                                      "type": "string"
                                    },
                                    "divisor": {
                                      "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                      "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                      "anyOf": [
                                        {
                                          "type": "integer"
                                        },
                                        {
                                          "type": "string"
                                        }
                                      ],
                                      "x-kubernetes-int-or-string": true
                                    },
                                    "resource": {
                                      "description": "Required: resource to select",
                                      "type": "string"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                },
                                "secretKeyRef": {
                                  "description": "Selects a key of a secret in the pod's namespace",
                                  "type": "object",
                                  "required": [
                                    "key"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "The key of the secret to select from.  Must be a valid secret key.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                      "type": "string",
                                      "default": ""
                                    },
                                    "optional": {
                                      "description": "Specify whether the Secret or its key must be defined",
                                      "type": "boolean"
                                    }
                                  },
                                  "x-kubernetes-map-type": "atomic"
                                }
                              }
                            }
                          }
                        },
                        "tarball": {
                          "description": "tarballs to unpack",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "path",
                              "url"
                            ],
                            "properties": {
                              "mount": {
                                "description": "should it mount a new volume there",
                                "type": "boolean"
                              },
                              "path": {
                                "description": "path where the tarball should be extracted",
                                "type": "string"
                              },
                              "url": {
                                "description": "url for the tarball to extract",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "count": {
                      "description": "static number of sharded instances to spawn",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    },
                    "description": {
                      "description": "service description to display",
                      "type": "string"
                    },
                    "env": {
                      "description": "environment variables to append to the container",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "global": {
                            "description": "whether to use env var in underlying services",
                            "type": "boolean"
                          },
                          "name": {
                            "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "value": {
                            "description": "Variable references $(VAR_NAME) are expanded\nusing the previously defined environment variables in the container and\nany service environment variables. If a variable cannot be resolved,\nthe reference in the input string will be unchanged. Double $$ are reduced\nto a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.\n\"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\".\nEscaped references will never be expanded, regardless of whether the variable\nexists or not.\nDefaults to \"\".",
                            "type": "string"
                          },
                          "valueFrom": {
                            "description": "Source for the environment variable's value. Cannot be used if value is not empty.",
                            "type": "object",
                            "properties": {
                              "configMapKeyRef": {
                                "description": "Selects a key of a ConfigMap.",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  },
                                  "optional": {
                                    "description": "Specify whether the ConfigMap or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "fieldRef": {
                                "description": "Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['\u003cKEY\u003e']`, `metadata.annotations['\u003cKEY\u003e']`,\nspec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.",
                                "type": "object",
                                "required": [
                                  "fieldPath"
                                ],
                                "properties": {
                                  "apiVersion": {
                                    "description": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".",
                                    "type": "string"
                                  },
                                  "fieldPath": {
                                    "description": "Path of the field to select in the specified API version.",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "resourceFieldRef": {
                                "description": "Selects a resource of the container: only resources limits and requests\n(limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.",
                                "type": "object",
                                "required": [
                                  "resource"
                                ],
                                "properties": {
                                  "containerName": {
                                    "description": "Container name: required for volumes, optional for env vars",
                                    "type": "string"
                                  },
                                  "divisor": {
                                    "description": "Specifies the output format of the exposed resources, defaults to \"1\"",
                                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                    "anyOf": [
                                      {
                                        "type": "integer"
                                      },
                                      {
                                        "type": "string"
                                      }
                                    ],
                                    "x-kubernetes-int-or-string": true
                                  },
                                  "resource": {
                                    "description": "Required: resource to select",
                                    "type": "string"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              },
                              "secretKeyRef": {
                                "description": "Selects a key of a secret in the pod's namespace",
                                "type": "object",
                                "required": [
                                  "key"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                    "type": "string",
                                    "default": ""
                                  },
                                  "optional": {
                                    "description": "Specify whether the Secret or its key must be defined",
                                    "type": "boolean"
                                  }
                                },
                                "x-kubernetes-map-type": "atomic"
                              }
                            }
                          }
                        }
                      }
                    },
                    "envFrom": {
                      "description": "external environment variables to append to the container",
                      "type": "array",
                      "items": {
                        "description": "EnvFromSource represents the source of a set of ConfigMaps",
                        "type": "object",
                        "properties": {
                          "configMapRef": {
                            "description": "The ConfigMap to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the ConfigMap must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "prefix": {
                            "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
                            "type": "string"
                          },
                          "secretRef": {
                            "description": "The Secret to select from",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              },
                              "optional": {
                                "description": "Specify whether the Secret must be defined",
                                "type": "boolean"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        }
                      }
                    },
                    "image": {
                      "description": "image to be used for the container",
                      "type": "string"
                    },
                    "imagePullPolicy": {
                      "description": "pulling policy for the image",
                      "type": "string"
                    },
                    "logs": {
                      "description": "should save logs for the service (false if not specified)",
                      "type": "string"
                    },
                    "matrix": {
                      "description": "matrix of parameters to spawn instances (static)",
                      "type": "object",
                      "additionalProperties": {
                        "type": "dynamicList"
                      }
                    },
                    "maxCount": {
                      "description": "dynamic number of sharded instances to spawn - it will be lowered if there is not enough sharded values",
                      "anyOf": [
                        {
                          "type": "integer"
                        },
                        {
                          "type": "string"
                        }
                      ],
                      "x-kubernetes-int-or-string": true
                    },
                    "pod": {
                      "description": "configuration for the scheduled pod",
                      "type": "object",
                      "properties": {
                        "activeDeadlineSeconds": {
                          "description": "duration in seconds the pod may be active on the node",
                          "type": "integer",
                          "format": "int64"
                        },
                        "affinity": {
                          "description": "If specified, the pod's scheduling constraints",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "annotations": {
                          "description": "annotations added to the scheduled pod",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "dnsConfig": {
                          "description": "Specifies the DNS parameters of a pod.",
                          "type": "object",
                          "properties": {
                            "nameservers": {
                              "description": "A list of DNS name server IP addresses.\nThis will be appended to the base nameservers generated from DNSPolicy.\nDuplicated nameservers will be removed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "options": {
                              "description": "A list of DNS resolver options.\nThis will be merged with the base options generated from DNSPolicy.\nDuplicated entries will be removed. Resolution options given in Options\nwill override those that appear in the base DNSPolicy.",
                              "type": "array",
                              "items": {
                                "description": "PodDNSConfigOption defines DNS resolver options of a pod.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Name is this DNS resolver option's name.\nRequired.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value is this DNS resolver option's value.",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "searches": {
                              "description": "A list of DNS search domains for host-name lookup.\nThis will be appended to the base search paths generated from DNSPolicy.\nDuplicated search paths will be removed.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "dnsPolicy": {
                          "description": "DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.",
                          "type": "string"
                        },
                        "hostAliases": {
                          "description": "HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified",
                          "type": "array",
                          "items": {
                            "description": "HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the\npod's hosts file.",
                            "type": "object",
                            "required": [
                              "ip"
                            ],
                            "properties": {
                              "hostnames": {
                                "description": "Hostnames for the above IP address.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "ip": {
                                "description": "IP address of the host file entry.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "hostPID": {
                          "description": "Whether to allow a pod to have access to the host process ID namespace",
                          "type": "boolean"
                        },
                        "hostname": {
                          "description": "Specifies the hostname of the Pod",
                          "type": "string"
                        },
                        "imagePullSecrets": {
                          "description": "references to secrets with credentials for pulling the images from registry",
                          "type": "array",
                          "items": {
                            "description": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                                "type": "string",
                                "default": ""
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          }
                        },
                        "labels": {
                          "description": "labels added to the scheduled pod",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "nodeName": {
                          "description": "NodeName is a request to schedule this pod onto a specific node.",
                          "type": "string"
                        },
                        "nodeSelector": {
                          "description": "node selector to define on which node the pod should land",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "preemptionPolicy": {
                          "description": "PreemptionPolicy is the Policy for preempting pods with lower priority.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value. Various system components use this field to find the priority of the pod.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "priorityClassName": {
                          "description": "If specified, indicates the pod's priority.",
                          "type": "string"
                        },
                        "resourceClaims": {
                          "description": "ResourceClaims defines which ResourceClaims must be allocated and reserved before the Pod is allowed to start.",
                          "type": "array",
                          "items": {
                            "description": "PodResourceClaim references exactly one ResourceClaim, either directly\nor by naming a ResourceClaimTemplate which is then turned into a ResourceClaim\nfor the pod.\n\nIt adds a name to it that uniquely identifies the ResourceClaim inside the Pod.\nContainers that need access to the ResourceClaim reference it with this name.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name uniquely identifies this resource claim inside the pod.\nThis must be a DNS_LABEL.",
                                "type": "string"
                              },
                              "resourceClaimName": {
                                "description": "ResourceClaimName is the name of a ResourceClaim object in the same\nnamespace as this pod.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                                "type": "string"
                              },
                              "resourceClaimTemplateName": {
                                "description": "ResourceClaimTemplateName is the name of a ResourceClaimTemplate\nobject in the same namespace as this pod.\n\nThe template will be used to create a new ResourceClaim, which will\nbe bound to this pod. When this pod is deleted, the ResourceClaim\nwill also be deleted. The pod name and resource name, along with a\ngenerated component, will be used to form a unique name for the\nResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.\n\nThis field is immutable and no changes will be made to the\ncorresponding ResourceClaim by the control plane after creating the\nResourceClaim.\n\nExactly one of ResourceClaimName and ResourceClaimTemplateName must\nbe set.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "schedulingGates": {
                          "description": "SchedulingGates is an opaque list of values that if specified will block scheduling the pod.",
                          "type": "array",
                          "items": {
                            "description": "PodSchedulingGate is associated to a Pod to guard its scheduling.",
                            "type": "object",
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "description": "Name of the scheduling gate.\nEach scheduling gate must have a unique name field.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "securityContext": {
                          "description": "SecurityContext holds pod-level security attributes and common container settings.",
                          "type": "object",
                          "properties": {
                            "appArmorProfile": {
                              "description": "appArmorProfile is the AppArmor options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                                  "type": "string"
                                }
                              }
                            },
                            "fsGroup": {
                              "description": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:\n\n1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "fsGroupChangePolicy": {
                              "description": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "runAsGroup": {
                              "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "runAsNonRoot": {
                              "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "boolean"
                            },
                            "runAsUser": {
                              "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "seLinuxChangePolicy": {
                              "description": "seLinuxChangePolicy defines how the container's SELinux label is applied to all volumes used by the Pod.\nIt has no effect on nodes that do not support SELinux or to volumes does not support SELinux.\nValid values are \"MountOption\" and \"Recursive\".\n\n\"Recursive\" means relabeling of all files on all Pod volumes by the container runtime.\nThis may be slow for large volumes, but allows mixing privileged and unprivileged Pods sharing the same volume on the same node.\n\n\"MountOption\" mounts all eligible Pod volumes with `-o context` mount option.\nThis requires all Pods that share the same volume to use the same SELinux label.\nIt is not possible to share the same volume among privileged and unprivileged Pods.\nEligible volumes are in-tree FibreChannel and iSCSI volumes, and all CSI volumes\nwhose CSI driver announces SELinux support by setting spec.seLinuxMount: true in their\nCSIDriver instance. Other volumes are always re-labelled recursively.\n\"MountOption\" value is allowed only when SELinuxMount feature gate is enabled.\n\nIf not specified and SELinuxMount feature gate is enabled, \"MountOption\" is used.\nIf not specified and SELinuxMount feature gate is disabled, \"MountOption\" is used for ReadWriteOncePod volumes\nand \"Recursive\" for all other volumes.\n\nThis field affects only Pods that have SELinux label set, either in PodSecurityContext or in SecurityContext of all containers.\n\nAll Pods that use the same volume should use the same seLinuxChangePolicy, otherwise some pods can get stuck in ContainerCreating state.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "seLinuxOptions": {
                              "description": "The SELinux context to be applied to all containers.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in SecurityContext.  If set in\nboth SecurityContext and PodSecurityContext, the value specified in SecurityContext\ntakes precedence for that container.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "properties": {
                                "level": {
                                  "description": "Level is SELinux level label that applies to the container.",
                                  "type": "string"
                                },
                                "role": {
                                  "description": "Role is a SELinux role label that applies to the container.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "Type is a SELinux type label that applies to the container.",
                                  "type": "string"
                                },
                                "user": {
                                  "description": "User is a SELinux user label that applies to the container.",
                                  "type": "string"
                                }
                              }
                            },
                            "seccompProfile": {
                              "description": "The seccomp options to use by the containers in this pod.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "object",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "localhostProfile": {
                                  "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                                  "type": "string"
                                },
                                "type": {
                                  "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                                  "type": "string"
                                }
                              }
                            },
                            "supplementalGroups": {
                              "description": "A list of groups applied to the first process run in each container, in\naddition to the container's primary GID and fsGroup (if specified).  If\nthe SupplementalGroupsPolicy feature is enabled, the\nsupplementalGroupsPolicy field determines whether these are in addition\nto or instead of any group memberships defined in the container image.\nIf unspecified, no additional groups are added, though group memberships\ndefined in the container image may still be used, depending on the\nsupplementalGroupsPolicy field.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "supplementalGroupsPolicy": {
                              "description": "Defines how supplemental groups of the first container processes are calculated.\nValid values are \"Merge\" and \"Strict\". If not specified, \"Merge\" is used.\n(Alpha) Using the field requires the SupplementalGroupsPolicy feature gate to be enabled\nand the container runtime must implement support for this feature.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "string"
                            },
                            "sysctls": {
                              "description": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.",
                              "type": "array",
                              "items": {
                                "description": "Sysctl defines a kernel parameter to be set",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of a property to set",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "Value of a property to set",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "windowsOptions": {
                              "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options within a container's SecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                              "type": "object",
                              "properties": {
                                "gmsaCredentialSpec": {
                                  "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                                  "type": "string"
                                },
                                "gmsaCredentialSpecName": {
                                  "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                                  "type": "string"
                                },
                                "hostProcess": {
                                  "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                                  "type": "boolean"
                                },
                                "runAsUserName": {
                                  "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "serviceAccountName": {
                          "description": "default service account name for the scheduled pod",
                          "type": "string"
                        },
                        "subdomain": {
                          "description": "If specified, the fully qualified Pod hostname will be \"\u003chostname\u003e.\u003csubdomain\u003e.\u003cpod namespace\u003e.svc.\u003ccluster domain\u003e\".",
                          "type": "string"
                        },
                        "tolerations": {
                          "description": "If specified, the pod's tolerations.",
                          "type": "array",
                          "items": {
                            "description": "The pod this Toleration is attached to tolerates any taint that matches\nthe triple \u003ckey,value,effect\u003e using the matching operator \u003coperator\u003e.",
                            "type": "object",
                            "properties": {
                              "effect": {
                                "description": "Effect indicates the taint effect to match. Empty means match all taint effects.\nWhen specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.",
                                "type": "string"
                              },
                              "key": {
                                "description": "Key is the taint key that the toleration applies to. Empty means match all taint keys.\nIf the key is empty, operator must be Exists; this combination means to match all values and all keys.",
                                "type": "string"
                              },
                              "operator": {
                                "description": "Operator represents a key's relationship to the value.\nValid operators are Exists and Equal. Defaults to Equal.\nExists is equivalent to wildcard for value, so that a pod can\ntolerate all taints of a particular category.",
                                "type": "string"
                              },
                              "tolerationSeconds": {
                                "description": "TolerationSeconds represents the period of time the toleration (which must be\nof effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,\nit is not set, which means tolerate the taint forever (do not evict). Zero and\nnegative values will be treated as 0 (evict immediately) by the system.",
                                "type": "integer",
                                "format": "int64"
                              },
                              "value": {
                                "description": "Value is the taint value the toleration matches to.\nIf the operator is Exists, the value should be empty, otherwise just a regular string.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "topologySpreadConstraints": {
                          "description": "TopologySpreadConstraints describes how a group of pods ought to spread across topology domains.",
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "volumes": {
                          "description": "volumes to include in the pod",
                          "x-kubernetes-preserve-unknown-fields": true
                        }
                      }
                    },
                    "pvcs": {
                      "description": "list of accompanying permanent volume claims",
                      "type": "object",
                      "additionalProperties": {
                        "description": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes",
                        "type": "object",
                        "properties": {
                          "accessModes": {
                            "description": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "x-kubernetes-list-type": "atomic"
                          },
                          "dataSource": {
                            "description": "dataSource field can be used to specify either:\n* An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)\n* An existing PVC (PersistentVolumeClaim)\nIf the provisioner or an external controller can support the specified data source,\nit will create a new volume based on the contents of the specified data source.\nWhen the AnyVolumeDataSource feature gate is enabled, dataSource contents will be copied to dataSourceRef,\nand dataSourceRef contents will be copied to dataSource when dataSourceRef.namespace is not specified.\nIf the namespace is specified, then dataSourceRef will not be copied to dataSource.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "dataSourceRef": {
                            "description": "dataSourceRef specifies the object from which to populate the volume with data, if a non-empty\nvolume is desired. This may be any object from a non-empty API group (non\ncore object) or a PersistentVolumeClaim object.\nWhen this field is specified, volume binding will only succeed if the type of\nthe specified object matches some installed volume populator or dynamic\nprovisioner.\nThis field will replace the functionality of the dataSource field and as such\nif both fields are non-empty, they must have the same value. For backwards\ncompatibility, when namespace isn't specified in dataSourceRef,\nboth fields (dataSource and dataSourceRef) will be set to the same\nvalue automatically if one of them is empty and the other is non-empty.\nWhen namespace is specified in dataSourceRef,\ndataSource isn't set to the same value and must be empty.\nThere are three important differences between dataSource and dataSourceRef:\n* While dataSource only allows two specific types of objects, dataSourceRef\n  allows any non-core object, as well as PersistentVolumeClaim objects.\n* While dataSource ignores disallowed values (dropping them), dataSourceRef\n  preserves all values, and generates an error if a disallowed value is\n  specified.\n* While dataSource only allows local objects, dataSourceRef allows objects\n  in any namespaces.\n(Beta) Using this field requires the AnyVolumeDataSource feature gate to be enabled.\n(Alpha) Using the namespace field of dataSourceRef requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                            "type": "object",
                            "required": [
                              "kind",
                              "name"
                            ],
                            "properties": {
                              "apiGroup": {
                                "description": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the type of resource being referenced",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of resource being referenced",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.",
                                "type": "string"
                              }
                            }
                          },
                          "resources": {
                            "description": "resources represents the minimum resources the volume should have.\nIf RecoverVolumeExpansionFailure feature is enabled users are allowed to specify resource requirements\nthat are lower than previous value but must still be higher than capacity recorded in the\nstatus field of the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources",
                            "type": "object",
                            "properties": {
                              "limits": {
                                "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              },
                              "requests": {
                                "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                                "type": "object",
                                "additionalProperties": {
                                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                                  "anyOf": [
                                    {
                                      "type": "integer"
                                    },
                                    {
                                      "type": "string"
                                    }
                                  ],
                                  "x-kubernetes-int-or-string": true
                                }
                              }
                            }
                          },
                          "selector": {
                            "description": "selector is a label query over volumes to consider for binding.",
                            "type": "object",
                            "properties": {
                              "matchExpressions": {
                                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                                "type": "array",
                                "items": {
                                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                                  "type": "object",
                                  "required": [
                                    "key",
                                    "operator"
                                  ],
                                  "properties": {
                                    "key": {
                                      "description": "key is the label key that the selector applies to.",
                                      "type": "string"
                                    },
                                    "operator": {
                                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                                      "type": "string"
                                    },
                                    "values": {
                                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "atomic"
                                    }
                                  }
                                },
                                "x-kubernetes-list-type": "atomic"
                              },
                              "matchLabels": {
                                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                                "type": "object",
                                "additionalProperties": {
                                  "type": "string"
                                }
                              }
                            },
                            "x-kubernetes-map-type": "atomic"
                          },
                          "storageClassName": {
                            "description": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1",
                            "type": "string"
                          },
                          "volumeAttributesClassName": {
                            "description": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/volume-attributes-classes/\n(Beta) Using this field requires the VolumeAttributesClass feature gate to be enabled (off by default).",
                            "type": "string"
                          },
                          "volumeMode": {
                            "description": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.",
                            "type": "string"
                          },
                          "volumeName": {
                            "description": "volumeName is the binding reference to the PersistentVolume backing this claim.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "readinessProbe": {
                      "description": "Probe to check if the service has started correctly",
                      "type": "object",
                      "properties": {
                        "exec": {
                          "description": "Exec specifies a command to execute in the container.",
                          "type": "object",
                          "properties": {
                            "command": {
                              "description": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "failureThreshold": {
                          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "grpc": {
                          "description": "GRPC specifies a GRPC HealthCheckRequest.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "port": {
                              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535.",
                              "type": "integer",
                              "format": "int32"
                            },
                            "service": {
                              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.",
                              "type": "string",
                              "default": ""
                            }
                          }
                        },
                        "httpGet": {
                          "description": "HTTPGet specifies an HTTP GET request to perform.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.",
                              "type": "string"
                            },
                            "httpHeaders": {
                              "description": "Custom headers to set in the request. HTTP allows repeated headers.",
                              "type": "array",
                              "items": {
                                "description": "HTTPHeader describes a custom header to be used in HTTP probes",
                                "type": "object",
                                "required": [
                                  "name",
                                  "value"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header.",
                                    "type": "string"
                                  },
                                  "value": {
                                    "description": "The header field value",
                                    "type": "string"
                                  }
                                }
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "path": {
                              "description": "Path to access on the HTTP server.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Name or number of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            },
                            "scheme": {
                              "description": "Scheme to use for connecting to the host.\nDefaults to HTTP.",
                              "type": "string"
                            }
                          }
                        },
                        "initialDelaySeconds": {
                          "description": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        },
                        "periodSeconds": {
                          "description": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "successThreshold": {
                          "description": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "tcpSocket": {
                          "description": "TCPSocket specifies a connection to a TCP port.",
                          "type": "object",
                          "required": [
                            "port"
                          ],
                          "properties": {
                            "host": {
                              "description": "Optional: Host name to connect to, defaults to the pod IP.",
                              "type": "string"
                            },
                            "port": {
                              "description": "Number or name of the port to access on the container.\nNumber must be in the range 1 to 65535.\nName must be an IANA_SVC_NAME.",
                              "anyOf": [
                                {
                                  "type": "integer"
                                },
                                {
                                  "type": "string"
                                }
                              ],
                              "x-kubernetes-int-or-string": true
                            }
                          }
                        },
                        "terminationGracePeriodSeconds": {
                          "description": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "timeoutSeconds": {
                          "description": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "resources": {
                      "description": "expected resources for the container",
                      "type": "object",
                      "properties": {
                        "limits": {
                          "description": "resource limits for the container",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        },
                        "requests": {
                          "description": "resource requests for the container",
                          "type": "object",
                          "additionalProperties": {
                            "anyOf": [
                              {
                                "type": "integer"
                              },
                              {
                                "type": "string"
                              }
                            ],
                            "x-kubernetes-int-or-string": true
                          }
                        }
                      }
                    },
                    "restartPolicy": {
                      "description": "Restart policy for the main container in the pod. One of OnFailure or Never.",
                      "type": "string"
                    },
                    "securityContext": {
                      "description": "security context for the container",
                      "type": "object",
                      "properties": {
                        "allowPrivilegeEscalation": {
                          "description": "AllowPrivilegeEscalation controls whether a process can gain more\nprivileges than its parent process. This bool directly controls if\nthe no_new_privs flag will be set on the container process.\nAllowPrivilegeEscalation is true always when the container is:\n1) run as Privileged\n2) has CAP_SYS_ADMIN\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "appArmorProfile": {
                          "description": "appArmorProfile is the AppArmor options to use by this container. If set, this profile\noverrides the pod's appArmorProfile.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile loaded on the node that should be used.\nThe profile must be preconfigured on the node to work.\nMust match the loaded name of the profile.\nMust be set if and only if type is \"Localhost\".",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of AppArmor profile will be applied.\nValid options are:\n  Localhost - a profile pre-loaded on the node.\n  RuntimeDefault - the container runtime's default profile.\n  Unconfined - no AppArmor enforcement.",
                              "type": "string"
                            }
                          }
                        },
                        "capabilities": {
                          "description": "The capabilities to add/drop when running containers.\nDefaults to the default set of capabilities granted by the container runtime.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "add": {
                              "description": "Added capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            },
                            "drop": {
                              "description": "Removed capabilities",
                              "type": "array",
                              "items": {
                                "description": "Capability represent POSIX capabilities type",
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          }
                        },
                        "privileged": {
                          "description": "Run container in privileged mode.\nProcesses in privileged containers are essentially equivalent to root on the host.\nDefaults to false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "procMount": {
                          "description": "procMount denotes the type of proc mount to use for the containers.\nThe default value is Default which uses the container runtime defaults for\nreadonly paths and masked paths.\nThis requires the ProcMountType feature flag to be enabled.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "string"
                        },
                        "readOnlyRootFilesystem": {
                          "description": "Whether this container has a read-only root filesystem.\nDefault is false.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "boolean"
                        },
                        "runAsGroup": {
                          "description": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "runAsNonRoot": {
                          "description": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                          "type": "boolean"
                        },
                        "runAsUser": {
                          "description": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "integer",
                          "format": "int64"
                        },
                        "seLinuxOptions": {
                          "description": "The SELinux context to be applied to the container.\nIf unspecified, the container runtime will allocate a random SELinux context for each\ncontainer.  May also be set in PodSecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "properties": {
                            "level": {
                              "description": "Level is SELinux level label that applies to the container.",
                              "type": "string"
                            },
                            "role": {
                              "description": "Role is a SELinux role label that applies to the container.",
                              "type": "string"
                            },
                            "type": {
                              "description": "Type is a SELinux type label that applies to the container.",
                              "type": "string"
                            },
                            "user": {
                              "description": "User is a SELinux user label that applies to the container.",
                              "type": "string"
                            }
                          }
                        },
                        "seccompProfile": {
                          "description": "The seccomp options to use by this container. If seccomp options are\nprovided at both the pod \u0026 container level, the container options\noverride the pod options.\nNote that this field cannot be set when spec.os.name is windows.",
                          "type": "object",
                          "required": [
                            "type"
                          ],
                          "properties": {
                            "localhostProfile": {
                              "description": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.",
                              "type": "string"
                            },
                            "type": {
                              "description": "type indicates which kind of seccomp profile will be applied.\nValid options are:\n\nLocalhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.",
                              "type": "string"
                            }
                          }
                        },
                        "windowsOptions": {
                          "description": "The Windows specific settings applied to all containers.\nIf unspecified, the options from the PodSecurityContext will be used.\nIf set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.\nNote that this field cannot be set when spec.os.name is linux.",
                          "type": "object",
                          "properties": {
                            "gmsaCredentialSpec": {
                              "description": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.",
                              "type": "string"
                            },
                            "gmsaCredentialSpecName": {
                              "description": "GMSACredentialSpecName is the name of the GMSA credential spec to use.",
                              "type": "string"
                            },
                            "hostProcess": {
                              "description": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.",
                              "type": "boolean"
                            },
                            "runAsUserName": {
                              "description": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "shards": {
                      "description": "parameters that should be distributed across sharded instances",
                      "type": "object",
                      "additionalProperties": {
                        "type": "dynamicList"
                      }
                    },
                    "shell": {
                      "description": "script to run in a default shell for the container",
                      "type": "string"
                    },
                    "timeout": {
                      "description": "maximum time until reaching readiness",
                      "type": "string"
                    },
                    "transfer": {
                      "description": "instructions for transferring files",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "from"
                        ],
                        "properties": {
                          "files": {
                            "description": "file patterns to pack",
                            "type": "dynamicList"
                          },
                          "from": {
                            "description": "path to load the files from",
                            "type": "string"
                          },
                          "mount": {
                            "description": "should it mount a new volume there",
                            "type": "boolean"
                          },
                          "to": {
                            "description": "path where the tarball should be extracted",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "volumeMounts": {
                      "description": "volume mounts to append to the container",
                      "type": "array",
                      "items": {
                        "description": "VolumeMount describes a mounting of a Volume within a container.",
                        "type": "object",
                        "required": [
                          "mountPath",
                          "name"
                        ],
                        "properties": {
                          "mountPath": {
                            "description": "Path within the container at which the volume should be mounted.  Must\nnot contain ':'.",
                            "type": "string"
                          },
                          "mountPropagation": {
                            "description": "mountPropagation determines how mounts are propagated from the host\nto container and the other way around.\nWhen not set, MountPropagationNone is used.\nThis field is beta in 1.10.\nWhen RecursiveReadOnly is set to IfPossible or to Enabled, MountPropagation must be None or unspecified\n(which defaults to None).",
                            "type": "string"
                          },
                          "name": {
                            "description": "This must match the Name of a Volume.",
                            "type": "string"
                          },
                          "readOnly": {
                            "description": "Mounted read-only if true, read-write otherwise (false or unspecified).\nDefaults to false.",
                            "type": "boolean"
                          },
                          "recursiveReadOnly": {
                            "description": "RecursiveReadOnly specifies whether read-only mounts should be handled\nrecursively.\n\nIf ReadOnly is false, this field has no meaning and must be unspecified.\n\nIf ReadOnly is true, and this field is set to Disabled, the mount is not made\nrecursively read-only.  If this field is set to IfPossible, the mount is made\nrecursively read-only, if it is supported by the container runtime.  If this\nfield is set to Enabled, the mount is made recursively read-only if it is\nsupported by the container runtime, otherwise the pod will not be started and\nan error will be generated to indicate the reason.\n\nIf this field is set to IfPossible or Enabled, MountPropagation must be set to\nNone (or be unspecified, which defaults to None).\n\nIf this field is not specified, it is treated as an equivalent of Disabled.",
                            "type": "string"
                          },
                          "subPath": {
                            "description": "Path within the volume from which the container's volume should be mounted.\nDefaults to \"\" (volume's root).",
                            "type": "string"
                          },
                          "subPathExpr": {
                            "description": "Expanded path within the volume from which the container's volume should be mounted.\nBehaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.\nDefaults to \"\" (volume's root).\nSubPathExpr and SubPath are mutually exclusive.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "workingDir": {
                      "description": "override default working directory in the image (empty string to default WORKDIR for the image)",
                      "type": "string"
                    }
                  }
                }
              },
              "setup": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "shell": {
                "type": "string"
              },
              "steps": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "timeout": {
                "type": "string"
              },
              "workingDir": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "system": {
          "type": "object",
          "properties": {
            "isolatedContainers": {
              "type": "boolean"
            },
            "pureByDefault": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
