{
  "description": "Backend is the Schema for the Backends API. Writes auth methods for Vault",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BackendSpec defines the desired state of Backend",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "description": {
              "description": "A description of the auth method.\nThe description of the auth backend",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "identityTokenKey": {
              "description": "The key to use for signing identity tokens.",
              "type": "string"
            },
            "local": {
              "description": "Specifies if the auth method is local only.\nSpecifies if the auth method is local only",
              "type": "boolean"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "path": {
              "description": "The path to mount the auth method — this defaults to the name of the type.\npath to mount the backend. This defaults to the type.",
              "type": "string"
            },
            "tune": {
              "description": "Extra configuration block. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedResponseHeaders": {
                    "description": "List of headers to whitelist and allowing\na plugin to include them in the response.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "auditNonHmacRequestKeys": {
                    "description": "Specifies the list of keys that will\nnot be HMAC'd by audit devices in the request data object.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "auditNonHmacResponseKeys": {
                    "description": "Specifies the list of keys that will\nnot be HMAC'd by audit devices in the response data object.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultLeaseTtl": {
                    "description": "Specifies the default time-to-live.\nIf set, this overrides the global default.\nMust be a valid duration string",
                    "type": "string"
                  },
                  "listingVisibility": {
                    "description": "Specifies whether to show this mount in\nthe UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\".",
                    "type": "string"
                  },
                  "maxLeaseTtl": {
                    "description": "Specifies the maximum time-to-live.\nIf set, this overrides the global default.\nMust be a valid duration string",
                    "type": "string"
                  },
                  "passthroughRequestHeaders": {
                    "description": "List of headers to whitelist and\npass from the request to the backend.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tokenType": {
                    "description": "Specifies the type of tokens that should be returned by\nthe mount. Valid values are \"default-service\", \"default-batch\", \"service\", \"batch\".",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "type": {
              "description": "The name of the auth method type.\nName of the auth backend",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "description": {
              "description": "A description of the auth method.\nThe description of the auth backend",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "identityTokenKey": {
              "description": "The key to use for signing identity tokens.",
              "type": "string"
            },
            "local": {
              "description": "Specifies if the auth method is local only.\nSpecifies if the auth method is local only",
              "type": "boolean"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "path": {
              "description": "The path to mount the auth method — this defaults to the name of the type.\npath to mount the backend. This defaults to the type.",
              "type": "string"
            },
            "tune": {
              "description": "Extra configuration block. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedResponseHeaders": {
                    "description": "List of headers to whitelist and allowing\na plugin to include them in the response.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "auditNonHmacRequestKeys": {
                    "description": "Specifies the list of keys that will\nnot be HMAC'd by audit devices in the request data object.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "auditNonHmacResponseKeys": {
                    "description": "Specifies the list of keys that will\nnot be HMAC'd by audit devices in the response data object.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultLeaseTtl": {
                    "description": "Specifies the default time-to-live.\nIf set, this overrides the global default.\nMust be a valid duration string",
                    "type": "string"
                  },
                  "listingVisibility": {
                    "description": "Specifies whether to show this mount in\nthe UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\".",
                    "type": "string"
                  },
                  "maxLeaseTtl": {
                    "description": "Specifies the maximum time-to-live.\nIf set, this overrides the global default.\nMust be a valid duration string",
                    "type": "string"
                  },
                  "passthroughRequestHeaders": {
                    "description": "List of headers to whitelist and\npass from the request to the backend.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tokenType": {
                    "description": "Specifies the type of tokens that should be returned by\nthe mount. Valid values are \"default-service\", \"default-batch\", \"service\", \"batch\".",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "type": {
              "description": "The name of the auth method type.\nName of the auth backend",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.type))",
          "message": "spec.forProvider.type is a required parameter"
        }
      ]
    },
    "status": {
      "description": "BackendStatus defines the observed state of Backend.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accessor": {
              "description": "The accessor for this auth method\nThe accessor of the auth backend",
              "type": "string"
            },
            "description": {
              "description": "A description of the auth method.\nThe description of the auth backend",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "id": {
              "type": "string"
            },
            "identityTokenKey": {
              "description": "The key to use for signing identity tokens.",
              "type": "string"
            },
            "local": {
              "description": "Specifies if the auth method is local only.\nSpecifies if the auth method is local only",
              "type": "boolean"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "path": {
              "description": "The path to mount the auth method — this defaults to the name of the type.\npath to mount the backend. This defaults to the type.",
              "type": "string"
            },
            "tune": {
              "description": "Extra configuration block. Structure is documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowedResponseHeaders": {
                    "description": "List of headers to whitelist and allowing\na plugin to include them in the response.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "auditNonHmacRequestKeys": {
                    "description": "Specifies the list of keys that will\nnot be HMAC'd by audit devices in the request data object.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "auditNonHmacResponseKeys": {
                    "description": "Specifies the list of keys that will\nnot be HMAC'd by audit devices in the response data object.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultLeaseTtl": {
                    "description": "Specifies the default time-to-live.\nIf set, this overrides the global default.\nMust be a valid duration string",
                    "type": "string"
                  },
                  "listingVisibility": {
                    "description": "Specifies whether to show this mount in\nthe UI-specific listing endpoint. Valid values are \"unauth\" or \"hidden\".",
                    "type": "string"
                  },
                  "maxLeaseTtl": {
                    "description": "Specifies the maximum time-to-live.\nIf set, this overrides the global default.\nMust be a valid duration string",
                    "type": "string"
                  },
                  "passthroughRequestHeaders": {
                    "description": "List of headers to whitelist and\npass from the request to the backend.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "tokenType": {
                    "description": "Specifies the type of tokens that should be returned by\nthe mount. Valid values are \"default-service\", \"default-batch\", \"service\", \"batch\".",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "type": {
              "description": "The name of the auth method type.\nName of the auth backend",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
