{
  "description": "Workgroup is the Schema for the Workgroups API. Manages an Athena Workgroup.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "WorkgroupSpec defines the desired state of Workgroup",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "configuration": {
              "description": "Configuration block with various settings for the workgroup. Documented below.",
              "type": "object",
              "properties": {
                "bytesScannedCutoffPerQuery": {
                  "description": "Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least 10485760.",
                  "type": "number"
                },
                "enforceWorkgroupConfiguration": {
                  "description": "Boolean whether the settings for the workgroup override client-side settings. For more information, see Workgroup Settings Override Client-Side Settings. Defaults to true.",
                  "type": "boolean"
                },
                "engineVersion": {
                  "description": "Configuration block for the Athena Engine Versioning. For more information, see Athena Engine Versioning. See Engine Version below.",
                  "type": "object",
                  "properties": {
                    "selectedEngineVersion": {
                      "description": "Requested engine version. Defaults to AUTO.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "executionRole": {
                  "description": "Role used to access user resources in notebook sessions and IAM Identity Center enabled workgroups. The property is required for IAM Identity Center enabled workgroups.",
                  "type": "string"
                },
                "identityCenterConfiguration": {
                  "description": "Configuration block to set up an IAM Identity Center enabled workgroup. See Identity Center Configuration below.",
                  "type": "object",
                  "properties": {
                    "enableIdentityCenter": {
                      "description": "Specifies whether the workgroup is IAM Identity Center supported.",
                      "type": "boolean"
                    },
                    "identityCenterInstanceArn": {
                      "description": "The IAM Identity Center instance ARN that the workgroup associates to.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "publishCloudwatchMetricsEnabled": {
                  "description": "Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to true.",
                  "type": "boolean"
                },
                "requesterPaysEnabled": {
                  "description": "If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide.",
                  "type": "boolean"
                },
                "resultConfiguration": {
                  "description": "Configuration block with result settings. See Result Configuration below.",
                  "type": "object",
                  "properties": {
                    "aclConfiguration": {
                      "description": "That an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.",
                      "type": "object",
                      "properties": {
                        "s3AclOption": {
                          "description": "Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "encryptionConfiguration": {
                      "description": "Configuration block with encryption settings. See Encryption Configuration below.",
                      "type": "object",
                      "properties": {
                        "encryptionOption": {
                          "description": "Whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE_S3), server-side encryption with KMS-managed keys (SSE_KMS), or client-side encryption with KMS-managed keys (CSE_KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "For SSE_KMS and CSE_KMS, this is the KMS key ARN.",
                          "type": "string"
                        },
                        "kmsKeyArnRef": {
                          "description": "Reference to a Key in kms to populate kmsKeyArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referenced object",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "kmsKeyArnSelector": {
                          "description": "Selector for a Key in kms to populate kmsKeyArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "namespace": {
                              "description": "Namespace for the selector",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "expectedBucketOwner": {
                      "description": "AWS account ID that you expect to be the owner of the Amazon S3 bucket.",
                      "type": "string"
                    },
                    "outputLocation": {
                      "description": "Location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/. For more information, see Queries and Query Result Files.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Description of the workgroup.",
              "type": "string"
            },
            "forceDestroy": {
              "description": "Option to delete the workgroup and its contents even if the workgroup contains any named queries.",
              "type": "boolean"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "state": {
              "description": "State of the workgroup. Valid values are DISABLED or ENABLED. Defaults to ENABLED.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "configuration": {
              "description": "Configuration block with various settings for the workgroup. Documented below.",
              "type": "object",
              "properties": {
                "bytesScannedCutoffPerQuery": {
                  "description": "Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least 10485760.",
                  "type": "number"
                },
                "enforceWorkgroupConfiguration": {
                  "description": "Boolean whether the settings for the workgroup override client-side settings. For more information, see Workgroup Settings Override Client-Side Settings. Defaults to true.",
                  "type": "boolean"
                },
                "engineVersion": {
                  "description": "Configuration block for the Athena Engine Versioning. For more information, see Athena Engine Versioning. See Engine Version below.",
                  "type": "object",
                  "properties": {
                    "selectedEngineVersion": {
                      "description": "Requested engine version. Defaults to AUTO.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "executionRole": {
                  "description": "Role used to access user resources in notebook sessions and IAM Identity Center enabled workgroups. The property is required for IAM Identity Center enabled workgroups.",
                  "type": "string"
                },
                "identityCenterConfiguration": {
                  "description": "Configuration block to set up an IAM Identity Center enabled workgroup. See Identity Center Configuration below.",
                  "type": "object",
                  "properties": {
                    "enableIdentityCenter": {
                      "description": "Specifies whether the workgroup is IAM Identity Center supported.",
                      "type": "boolean"
                    },
                    "identityCenterInstanceArn": {
                      "description": "The IAM Identity Center instance ARN that the workgroup associates to.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "publishCloudwatchMetricsEnabled": {
                  "description": "Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to true.",
                  "type": "boolean"
                },
                "requesterPaysEnabled": {
                  "description": "If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide.",
                  "type": "boolean"
                },
                "resultConfiguration": {
                  "description": "Configuration block with result settings. See Result Configuration below.",
                  "type": "object",
                  "properties": {
                    "aclConfiguration": {
                      "description": "That an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.",
                      "type": "object",
                      "properties": {
                        "s3AclOption": {
                          "description": "Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "encryptionConfiguration": {
                      "description": "Configuration block with encryption settings. See Encryption Configuration below.",
                      "type": "object",
                      "properties": {
                        "encryptionOption": {
                          "description": "Whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE_S3), server-side encryption with KMS-managed keys (SSE_KMS), or client-side encryption with KMS-managed keys (CSE_KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "For SSE_KMS and CSE_KMS, this is the KMS key ARN.",
                          "type": "string"
                        },
                        "kmsKeyArnRef": {
                          "description": "Reference to a Key in kms to populate kmsKeyArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the referenced object",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "kmsKeyArnSelector": {
                          "description": "Selector for a Key in kms to populate kmsKeyArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "namespace": {
                              "description": "Namespace for the selector",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "expectedBucketOwner": {
                      "description": "AWS account ID that you expect to be the owner of the Amazon S3 bucket.",
                      "type": "string"
                    },
                    "outputLocation": {
                      "description": "Location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/. For more information, see Queries and Query Result Files.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Description of the workgroup.",
              "type": "string"
            },
            "forceDestroy": {
              "description": "Option to delete the workgroup and its contents even if the workgroup contains any named queries.",
              "type": "boolean"
            },
            "state": {
              "description": "State of the workgroup. Valid values are DISABLED or ENABLED. Defaults to ENABLED.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "WorkgroupStatus defines the observed state of Workgroup.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "ARN of the workgroup",
              "type": "string"
            },
            "configuration": {
              "description": "Configuration block with various settings for the workgroup. Documented below.",
              "type": "object",
              "properties": {
                "bytesScannedCutoffPerQuery": {
                  "description": "Integer for the upper data usage limit (cutoff) for the amount of bytes a single query in a workgroup is allowed to scan. Must be at least 10485760.",
                  "type": "number"
                },
                "enforceWorkgroupConfiguration": {
                  "description": "Boolean whether the settings for the workgroup override client-side settings. For more information, see Workgroup Settings Override Client-Side Settings. Defaults to true.",
                  "type": "boolean"
                },
                "engineVersion": {
                  "description": "Configuration block for the Athena Engine Versioning. For more information, see Athena Engine Versioning. See Engine Version below.",
                  "type": "object",
                  "properties": {
                    "effectiveEngineVersion": {
                      "description": "The engine version on which the query runs. If selected_engine_version is set to AUTO, the effective engine version is chosen by Athena.",
                      "type": "string"
                    },
                    "selectedEngineVersion": {
                      "description": "Requested engine version. Defaults to AUTO.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "executionRole": {
                  "description": "Role used to access user resources in notebook sessions and IAM Identity Center enabled workgroups. The property is required for IAM Identity Center enabled workgroups.",
                  "type": "string"
                },
                "identityCenterConfiguration": {
                  "description": "Configuration block to set up an IAM Identity Center enabled workgroup. See Identity Center Configuration below.",
                  "type": "object",
                  "properties": {
                    "enableIdentityCenter": {
                      "description": "Specifies whether the workgroup is IAM Identity Center supported.",
                      "type": "boolean"
                    },
                    "identityCenterInstanceArn": {
                      "description": "The IAM Identity Center instance ARN that the workgroup associates to.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "publishCloudwatchMetricsEnabled": {
                  "description": "Boolean whether Amazon CloudWatch metrics are enabled for the workgroup. Defaults to true.",
                  "type": "boolean"
                },
                "requesterPaysEnabled": {
                  "description": "If set to true , allows members assigned to a workgroup to reference Amazon S3 Requester Pays buckets in queries. If set to false , workgroup members cannot query data from Requester Pays buckets, and queries that retrieve data from Requester Pays buckets cause an error. The default is false . For more information about Requester Pays buckets, see Requester Pays Buckets in the Amazon Simple Storage Service Developer Guide.",
                  "type": "boolean"
                },
                "resultConfiguration": {
                  "description": "Configuration block with result settings. See Result Configuration below.",
                  "type": "object",
                  "properties": {
                    "aclConfiguration": {
                      "description": "That an Amazon S3 canned ACL should be set to control ownership of stored query results. See ACL Configuration below.",
                      "type": "object",
                      "properties": {
                        "s3AclOption": {
                          "description": "Amazon S3 canned ACL that Athena should specify when storing query results. Valid value is BUCKET_OWNER_FULL_CONTROL.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "encryptionConfiguration": {
                      "description": "Configuration block with encryption settings. See Encryption Configuration below.",
                      "type": "object",
                      "properties": {
                        "encryptionOption": {
                          "description": "Whether Amazon S3 server-side encryption with Amazon S3-managed keys (SSE_S3), server-side encryption with KMS-managed keys (SSE_KMS), or client-side encryption with KMS-managed keys (CSE_KMS) is used. If a query runs in a workgroup and the workgroup overrides client-side settings, then the workgroup's setting for encryption is used. It specifies whether query results must be encrypted, for all queries that run in this workgroup.",
                          "type": "string"
                        },
                        "kmsKeyArn": {
                          "description": "For SSE_KMS and CSE_KMS, this is the KMS key ARN.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "expectedBucketOwner": {
                      "description": "AWS account ID that you expect to be the owner of the Amazon S3 bucket.",
                      "type": "string"
                    },
                    "outputLocation": {
                      "description": "Location in Amazon S3 where your query results are stored, such as s3://path/to/query/bucket/. For more information, see Queries and Query Result Files.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Description of the workgroup.",
              "type": "string"
            },
            "forceDestroy": {
              "description": "Option to delete the workgroup and its contents even if the workgroup contains any named queries.",
              "type": "boolean"
            },
            "id": {
              "description": "Workgroup name",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "state": {
              "description": "State of the workgroup. Valid values are DISABLED or ENABLED. Defaults to ENABLED.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
