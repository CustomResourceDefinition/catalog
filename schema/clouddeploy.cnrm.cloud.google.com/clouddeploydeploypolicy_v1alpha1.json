{
  "description": "CloudDeployDeployPolicy is the Schema for the CloudDeployDeployPolicy API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DeployPolicySpec defines the desired state of DeployDeployPolicy",
      "type": "object",
      "required": [
        "location",
        "projectRef"
      ],
      "properties": {
        "description": {
          "description": "Description of the `DeployPolicy`. Max length is 255 characters.",
          "type": "string"
        },
        "location": {
          "description": "Immutable.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Location field is immutable"
            }
          ]
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The DeployDeployPolicy name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "rules": {
          "description": "Required. Rules to apply. At least one rule must be present.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "rolloutRestriction": {
                "description": "Rollout restrictions.",
                "type": "object",
                "properties": {
                  "actions": {
                    "description": "Optional. Rollout actions to be restricted as part of the policy. If left empty, all actions will be restricted.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "description": "Required. Restriction rule ID. Required and must be unique within a DeployPolicy. The format is `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`.",
                    "type": "string"
                  },
                  "invokers": {
                    "description": "Optional. What invoked the action. If left empty, all invoker types will be restricted.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "timeWindows": {
                    "description": "Required. Time window within which actions are restricted.",
                    "type": "object",
                    "properties": {
                      "oneTimeWindows": {
                        "description": "Optional. One-time windows within which actions are restricted.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "endDate": {
                              "description": "Required. End date.",
                              "type": "object",
                              "properties": {
                                "day": {
                                  "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "month": {
                                  "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "year": {
                                  "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              },
                              "additionalProperties": false
                            },
                            "endTime": {
                              "description": "Required. End time (exclusive). You may use 24:00 for the end of the day.",
                              "type": "object",
                              "properties": {
                                "hours": {
                                  "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "minutes": {
                                  "description": "Minutes of hour of day. Must be from 0 to 59.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "nanos": {
                                  "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "seconds": {
                                  "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              },
                              "additionalProperties": false
                            },
                            "startDate": {
                              "description": "Required. Start date.",
                              "type": "object",
                              "properties": {
                                "day": {
                                  "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "month": {
                                  "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "year": {
                                  "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              },
                              "additionalProperties": false
                            },
                            "startTime": {
                              "description": "Required. Start time (inclusive). Use 00:00 for the beginning of the day.",
                              "type": "object",
                              "properties": {
                                "hours": {
                                  "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "minutes": {
                                  "description": "Minutes of hour of day. Must be from 0 to 59.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "nanos": {
                                  "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "seconds": {
                                  "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "timeZone": {
                        "description": "Required. The time zone in IANA format [IANA Time Zone Database](https://www.iana.org/time-zones) (e.g. America/New_York).",
                        "type": "string"
                      },
                      "weeklyWindows": {
                        "description": "Optional. Recurring weekly windows within which actions are restricted.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "daysOfWeek": {
                              "description": "Optional. Days of week. If left empty, all days of the week will be included.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "endTime": {
                              "description": "Optional. End time (exclusive). Use 24:00 to indicate midnight. If you specify end_time you must also specify start_time. If left empty, this will block for the entire day for the days specified in days_of_week.",
                              "type": "object",
                              "properties": {
                                "hours": {
                                  "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "minutes": {
                                  "description": "Minutes of hour of day. Must be from 0 to 59.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "nanos": {
                                  "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "seconds": {
                                  "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              },
                              "additionalProperties": false
                            },
                            "startTime": {
                              "description": "Optional. Start time (inclusive). Use 00:00 for the beginning of the day. If you specify start_time you must also specify end_time. If left empty, this will block for the entire day for the days specified in days_of_week.",
                              "type": "object",
                              "properties": {
                                "hours": {
                                  "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "minutes": {
                                  "description": "Minutes of hour of day. Must be from 0 to 59.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "nanos": {
                                  "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "seconds": {
                                  "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
                                  "type": "integer",
                                  "format": "int32"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "selectors": {
          "description": "Required. Selected resources to which the policy will be applied. At least one selector is required. If one selector matches the resource the policy applies. For example, if there are two selectors and the action being attempted matches one of them, the policy will apply to that action.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "deliveryPipeline": {
                "description": "Optional. Contains attributes about a delivery pipeline.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "ID of the `DeliveryPipeline`. The value of this field could be one of the\n following:\n\n * The last segment of a pipeline name\n * \"*\", all delivery pipelines in a location",
                    "type": "string"
                  },
                  "labels": {
                    "description": "DeliveryPipeline labels.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              },
              "target": {
                "description": "Optional. Contains attributes about a target.",
                "type": "object",
                "properties": {
                  "id": {
                    "description": "ID of the `Target`. The value of this field could be one of the\n following:\n\n * The last segment of a target name\n * \"*\", all targets in a location",
                    "type": "string"
                  },
                  "labels": {
                    "description": "Target labels.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "suspended": {
          "description": "When suspended, the policy will not prevent actions from occurring, even if the action violates the policy.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DeployPolicyStatus defines the config connector machine state of DeployDeployPolicy",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DeployDeployPolicy resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "createTime": {
              "description": "Output only. Time at which the deploy policy was created.",
              "type": "string"
            },
            "name": {
              "description": "Output only. Name of the `DeployPolicy`. Format is `projects/{project}/locations/{location}/deployPolicies/{deployPolicy}`. The `deployPolicy` component must match `[a-z]([a-z0-9-]{0,61}[a-z0-9])?`",
              "type": "string"
            },
            "uid": {
              "description": "Output only. Unique identifier of the `DeployPolicy`.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. Most recent time at which the deploy policy was updated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
