{
  "description": "CloudDeployDeliveryPipeline is the Schema for the CloudDeployDeliveryPipeline API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DeliveryPipelineSpec defines the desired state of DeployDeliveryPipeline",
      "type": "object",
      "required": [
        "location",
        "projectRef"
      ],
      "properties": {
        "annotations": {
          "description": "User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the `DeliveryPipeline`. Max length is 255 characters.",
          "type": "string"
        },
        "etag": {
          "description": "This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.",
          "type": "string"
        },
        "location": {
          "description": "Immutable. The location where the DeliveryPipeline should reside.",
          "type": "string"
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The GCP resource identifier. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "serialPipeline": {
          "description": "SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.",
          "type": "object",
          "properties": {
            "stages": {
              "description": "Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "deployParameters": {
                    "description": "Optional. The deploy parameters to use for the target in this stage.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "matchTargetLabels": {
                          "description": "Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "values": {
                          "description": "Required. Values are deploy parameters in key-value pairs.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "profiles": {
                    "description": "Skaffold profiles to use when rendering the manifest for this stage's `Target`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "strategy": {
                    "description": "Optional. The strategy to use for a `Rollout` to this stage.",
                    "type": "object",
                    "properties": {
                      "canary": {
                        "description": "Canary deployment strategy provides progressive percentage based deployments to a Target.",
                        "type": "object",
                        "properties": {
                          "canaryDeployment": {
                            "description": "Configures the progressive based deployment for a Target.",
                            "type": "object",
                            "properties": {
                              "percentages": {
                                "description": "Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 \u003c= n \u003c 100. If the GatewayServiceMesh is configured for Kubernetes, then the range for n is 0 \u003c= n \u003c= 100.",
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              },
                              "postdeploy": {
                                "description": "Optional. Configuration for the postdeploy job of the last phase. If this is not configured, there will be no postdeploy job for this phase.",
                                "type": "object",
                                "properties": {
                                  "actions": {
                                    "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "predeploy": {
                                "description": "Optional. Configuration for the predeploy job of the first phase. If this is not configured, there will be no predeploy job for this phase.",
                                "type": "object",
                                "properties": {
                                  "actions": {
                                    "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "verify": {
                                "description": "Whether to run verify tests after each percentage deployment.",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          },
                          "customCanaryDeployment": {
                            "description": "Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.",
                            "type": "object",
                            "properties": {
                              "phaseConfigs": {
                                "description": "Required. Configuration for each phase in the canary deployment in the order executed.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "percentage": {
                                      "description": "Required. Percentage deployment for the phase.",
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "phaseID": {
                                      "description": "Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`.",
                                      "type": "string"
                                    },
                                    "postdeploy": {
                                      "description": "Optional. Configuration for the postdeploy job of this phase. If this is not configured, there will be no postdeploy job for this phase.",
                                      "type": "object",
                                      "properties": {
                                        "actions": {
                                          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "predeploy": {
                                      "description": "Optional. Configuration for the predeploy job of this phase. If this is not configured, there will be no predeploy job for this phase.",
                                      "type": "object",
                                      "properties": {
                                        "actions": {
                                          "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.",
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "additionalProperties": false
                                    },
                                    "profiles": {
                                      "description": "Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "verify": {
                                      "description": "Whether to run verify tests after the deployment.",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "runtimeConfig": {
                            "description": "Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.",
                            "type": "object",
                            "properties": {
                              "cloudRun": {
                                "description": "Cloud Run runtime configuration.",
                                "type": "object",
                                "properties": {
                                  "automaticTrafficControl": {
                                    "description": "Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.",
                                    "type": "boolean"
                                  },
                                  "canaryRevisionTags": {
                                    "description": "Optional. A list of tags that are added to the canary revision while the canary phase is in progress.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "priorRevisionTags": {
                                    "description": "Optional. A list of tags that are added to the prior revision while the canary phase is in progress.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "stableRevisionTags": {
                                    "description": "Optional. A list of tags that are added to the final stable revision when the stable phase is applied.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "additionalProperties": false
                              },
                              "kubernetes": {
                                "description": "Kubernetes runtime configuration.",
                                "type": "object",
                                "properties": {
                                  "gatewayServiceMesh": {
                                    "description": "Kubernetes Gateway API service mesh configuration.",
                                    "type": "object",
                                    "properties": {
                                      "deployment": {
                                        "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.",
                                        "type": "string"
                                      },
                                      "httpRoute": {
                                        "description": "Required. Name of the Gateway API HTTPRoute.",
                                        "type": "string"
                                      },
                                      "podSelectorLabel": {
                                        "description": "Optional. The label to use when selecting Pods for the Deployment and Service resources. This label must already be present in both resources.",
                                        "type": "string"
                                      },
                                      "routeDestinations": {
                                        "description": "Optional. Route destinations allow configuring the Gateway API HTTPRoute to be deployed to additional clusters. This option is available for multi-cluster service mesh set ups that require the route to exist in the clusters that call the service. If unspecified, the HTTPRoute will only be deployed to the Target cluster.",
                                        "type": "object",
                                        "properties": {
                                          "destinationIDs": {
                                            "description": "Required. The clusters where the Gateway API HTTPRoute resource will be deployed to. Valid entries include the associated entities IDs configured in the Target resource and \"@self\" to include the Target cluster.",
                                            "type": "array",
                                            "items": {
                                              "type": "string"
                                            }
                                          },
                                          "propagateService": {
                                            "description": "Optional. Whether to propagate the Kubernetes Service to the route destination clusters. The Service will always be deployed to the Target cluster even if the HTTPRoute is not. This option may be used to facilitate successful DNS lookup in the route destination clusters. Can only be set to true if destinations are specified.",
                                            "type": "boolean"
                                          }
                                        },
                                        "additionalProperties": false
                                      },
                                      "routeUpdateWaitTime": {
                                        "description": "Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.",
                                        "type": "string"
                                      },
                                      "service": {
                                        "description": "Required. Name of the Kubernetes Service.",
                                        "type": "string"
                                      },
                                      "stableCutbackDuration": {
                                        "description": "Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  },
                                  "serviceNetworking": {
                                    "description": "Kubernetes Service networking configuration.",
                                    "type": "object",
                                    "properties": {
                                      "deployment": {
                                        "description": "Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.",
                                        "type": "string"
                                      },
                                      "disablePodOverprovisioning": {
                                        "description": "Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.",
                                        "type": "boolean"
                                      },
                                      "podSelectorLabel": {
                                        "description": "Optional. The label to use when selecting Pods for the Deployment resource. This label must already be present in the Deployment.",
                                        "type": "string"
                                      },
                                      "service": {
                                        "description": "Required. Name of the Kubernetes Service.",
                                        "type": "string"
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "standard": {
                        "description": "Standard deployment strategy executes a single deploy and allows verifying the deployment.",
                        "type": "object",
                        "properties": {
                          "postdeploy": {
                            "description": "Optional. Configuration for the postdeploy job. If this is not configured, postdeploy job will not be present.",
                            "type": "object",
                            "properties": {
                              "actions": {
                                "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "predeploy": {
                            "description": "Optional. Configuration for the predeploy job. If this is not configured, predeploy job will not be present.",
                            "type": "object",
                            "properties": {
                              "actions": {
                                "description": "Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "verify": {
                            "description": "Whether to verify a deployment.",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetID": {
                    "description": "The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "suspended": {
          "description": "When suspended, no new releases or rollouts can be created, but in-progress ones will complete.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DeliveryPipelineStatus defines the config connector machine state of DeployDeliveryPipeline",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DeployDeliveryPipeline resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "condition": {
              "description": "Output only. Information around the state of the Delivery Pipeline.",
              "type": "object",
              "properties": {
                "pipelineReadyCondition": {
                  "description": "Details around the Pipeline's overall status.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline.",
                      "type": "boolean"
                    },
                    "updateTime": {
                      "description": "Last time the condition was updated.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "targetsPresentCondition": {
                  "description": "Details around targets enumerated in the pipeline.",
                  "type": "object",
                  "properties": {
                    "missingTargets": {
                      "description": "The list of Target names that do not exist. For example, `projects/{project_id}/locations/{location_name}/targets/{target_name}`.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "status": {
                      "description": "True if there aren't any missing Targets.",
                      "type": "boolean"
                    },
                    "updateTime": {
                      "description": "Last time the condition was updated.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "targetsTypeCondition": {
                  "description": "Details on the whether the targets enumerated in the pipeline are of the same type.",
                  "type": "object",
                  "properties": {
                    "errorDetails": {
                      "description": "Human readable error message.",
                      "type": "string"
                    },
                    "status": {
                      "description": "True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "createTime": {
              "description": "Output only. Time at which the pipeline was created.",
              "type": "string"
            },
            "uid": {
              "description": "Output only. Unique identifier of the `DeliveryPipeline`.",
              "type": "string"
            },
            "updateTime": {
              "description": "Output only. Most recent time at which the pipeline was updated.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
