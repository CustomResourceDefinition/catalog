{
  "description": "DataCatalogTagTemplate is the Schema for the DataCatalogTagTemplate API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DataCatalogTagTemplateSpec defines the desired state of DataCatalogTagTemplate",
      "type": "object",
      "required": [
        "location",
        "projectRef"
      ],
      "properties": {
        "displayName": {
          "description": "Display name for this template. Defaults to an empty string.\n\n The name must contain only Unicode letters, numbers (0-9), underscores (_),\n dashes (-), spaces ( ), and can't start or end with spaces.\n The maximum length is 200 characters.",
          "type": "string"
        },
        "fields": {
          "description": "Fields used to create a Tag",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "description": {
                "description": "The description for this field. Defaults to an empty string.",
                "type": "string"
              },
              "displayName": {
                "description": "The display name for this field. Defaults to an empty string.\n\n The name must contain only Unicode letters, numbers (0-9), underscores (_),\n dashes (-), spaces ( ), and can't start or end with spaces.\n The maximum length is 200 characters.",
                "type": "string"
              },
              "isRequired": {
                "description": "If true, this field is required. Defaults to false.",
                "type": "boolean"
              },
              "name": {
                "description": "Identifier. The resource name of the tag template field in URL format.\n\n Note: The tag template field itself might not be stored in the location\n specified in its name.\n\n The name must contain only letters (a-z, A-Z), numbers (0-9),\n or underscores (_), and must start with a letter or underscore.\n The maximum length is 64 characters.",
                "type": "string"
              },
              "order": {
                "description": "The order of this field with respect to other fields in this tag\n template.\n\n For example, a higher value can indicate a more important field.\n The value can be negative. Multiple fields can have the same order and\n field orders within a tag don't have to be sequential.",
                "type": "integer",
                "format": "int32"
              },
              "type": {
                "description": "Required. The type of value this tag field can contain.",
                "type": "object",
                "properties": {
                  "enumType": {
                    "description": "An enum type.",
                    "type": "object",
                    "properties": {
                      "allowedValues": {
                        "description": "The set of allowed values for this enum.\n\n This set must not be empty and can include up to 100 allowed values.\n The display names of the values in this set must not be empty and must\n be case-insensitively unique within this set.\n\n The order of items in this set is preserved. This field can be used to\n create, remove, and reorder enum values. To rename enum values, use the\n `RenameTagTemplateFieldEnumValue` method.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "displayName"
                          ],
                          "properties": {
                            "displayName": {
                              "description": "Required. The display name of the enum value. Must not be an empty\n string.\n\n The name must contain only Unicode letters, numbers (0-9), underscores\n (_), dashes (-), spaces ( ), and can't start or end with spaces. The\n maximum length is 200 characters.",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "primitiveType": {
                    "description": "Primitive types, such as string, boolean, etc.",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "isPubliclyReadable": {
          "description": "Indicates whether tags created with this template are public. Public tags\n do not require tag template access to appear in\n [ListTags][google.cloud.datacatalog.v1.DataCatalog.ListTags] API response.\n\n Additionally, you can search for a public tag by value with a\n simple search query in addition to using a ``tag:`` predicate.",
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The DataCatalogTagTemplate name. If not given, the metadata.name will be used.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DataCatalogTagTemplateStatus defines the config connector machine state of DataCatalogTagTemplate",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DataCatalogTagTemplate resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "dataplexTransferStatus": {
              "description": "Optional. Transfer status of the TagTemplate",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
