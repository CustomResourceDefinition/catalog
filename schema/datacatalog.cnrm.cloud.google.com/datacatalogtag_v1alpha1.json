{
  "description": "DataCatalogTag is the Schema for the DataCatalogTag API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DataCatalogTagSpec defines the desired state of DataCatalogTag",
      "type": "object",
      "required": [
        "entryRef",
        "templateRef"
      ],
      "properties": {
        "column": {
          "description": "Resources like entry can have schemas associated with them. This scope\n allows you to attach tags to an individual column based on that schema.\n\n To attach a tag to a nested column, separate column names with a dot\n (`.`). Example: `column.nested_column`.",
          "type": "string"
        },
        "entryRef": {
          "description": "Required. Reference to the DataCatalogEntry that owns this Tag. The entry must be in the same project and location as the tag.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed DataCatalogEntry resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/entrys/{{entryID}}\".",
              "type": "string"
            },
            "name": {
              "description": "The name of a DataCatalogEntry resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a DataCatalogEntry resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "fields": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "boolValue": {
                "description": "The value of a tag field with a boolean type.",
                "type": "boolean"
              },
              "doubleValue": {
                "description": "The value of a tag field with a double type.",
                "type": "number"
              },
              "enumValue": {
                "description": "The value of a tag field with an enum type.\n\n This value must be one of the allowed values listed in this enum.",
                "type": "object",
                "properties": {
                  "displayName": {
                    "description": "The display name of the enum value.",
                    "type": "string"
                  }
                }
              },
              "richtextValue": {
                "description": "The value of a tag field with a rich text type.\n\n The maximum length is 10 MiB as this value holds HTML descriptions\n including encoded images. The maximum length of the text without images\n is 100 KiB.",
                "type": "string"
              },
              "stringValue": {
                "description": "The value of a tag field with a string type.\n\n The maximum length is 2000 UTF-8 characters.",
                "type": "string"
              },
              "timestampValue": {
                "description": "The value of a tag field with a timestamp type.",
                "type": "string"
              }
            }
          }
        },
        "resourceID": {
          "description": "The DataCatalogTag name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "templateRef": {
          "description": "Required. The resource name of the tag template this tag uses.\n\n This field cannot be modified after creation.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "A reference to an externally managed DataCatalogTagTemplate resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/tagTemplates/{{tagTemplateID}}\".",
              "type": "string"
            },
            "name": {
              "description": "The name of a DataCatalogTagTemplate resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace of a DataCatalogTagTemplate resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DataCatalogTagStatus defines the config connector machine state of DataCatalogTag",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DataCatalogTag resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object",
          "properties": {
            "dataplexTransferStatus": {
              "description": "Output only. Denotes the transfer status of the Tag Template.",
              "type": "string"
            },
            "templateDisplayName": {
              "description": "Output only. The display name of the tag template.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
