{
  "description": "IntegrationProfile is the resource used to apply user defined settings to the Camel K operator behavior.\nIt defines the behavior of all Custom Resources (`IntegrationKit`, `Integration`, `Kamelet`) in the given namespace.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IntegrationProfileSpec applies user defined settings to the IntegrationProfile.",
      "type": "object",
      "properties": {
        "build": {
          "description": "specify how to build the Integration/IntegrationKits",
          "type": "object",
          "properties": {
            "baseImage": {
              "description": "a base image that can be used as base layer for all images.\nIt can be useful if you want to provide some custom base image with further utility software",
              "type": "string"
            },
            "maven": {
              "description": "Maven configuration used to build the Camel/Camel-Quarkus applications",
              "type": "object",
              "properties": {
                "caSecrets": {
                  "description": "The Secrets name and key, containing the CA certificate(s) used to connect\nto remote Maven repositories.\nIt can contain X.509 certificates, and PKCS#7 formatted certificate chains.\nA JKS formatted keystore is automatically created to store the CA certificate(s),\nand configured to be used as a trusted certificate(s) by the Maven commands.\nNote that the root CA certificates are also imported into the created keystore.",
                  "type": "array",
                  "items": {
                    "description": "SecretKeySelector selects a key of a Secret.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "cliOptions": {
                  "description": "The CLI options that are appended to the list of arguments for Maven commands,\ne.g., `-V,--no-transfer-progress,-Dstyle.color=never`.\nSee https://maven.apache.org/ref/3.8.4/maven-embedder/cli.html.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "extension": {
                  "description": "The Maven build extensions.\nSee https://maven.apache.org/guides/mini/guide-using-extensions.html.",
                  "type": "array",
                  "items": {
                    "description": "MavenArtifact defines a GAV (Group:Artifact:Type:Version:Classifier) Maven artifact.",
                    "type": "object",
                    "required": [
                      "artifactId",
                      "groupId"
                    ],
                    "properties": {
                      "artifactId": {
                        "description": "Maven Artifact",
                        "type": "string"
                      },
                      "classifier": {
                        "description": "Maven Classifier",
                        "type": "string"
                      },
                      "groupId": {
                        "description": "Maven Group",
                        "type": "string"
                      },
                      "type": {
                        "description": "Maven Type",
                        "type": "string"
                      },
                      "version": {
                        "description": "Maven Version",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "localRepository": {
                  "description": "The path of the local Maven repository.",
                  "type": "string"
                },
                "profiles": {
                  "description": "A reference to the ConfigMap or Secret key that contains\nthe Maven profile.",
                  "type": "array",
                  "items": {
                    "description": "ValueSource --.",
                    "type": "object",
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "properties": {
                  "description": "The Maven properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "settings": {
                  "description": "A reference to the ConfigMap or Secret key that contains\nthe Maven settings.",
                  "type": "object",
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Selects a key of a ConfigMap.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "description": "Selects a key of a secret.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "settingsSecurity": {
                  "description": "A reference to the ConfigMap or Secret key that contains\nthe security of the Maven settings.",
                  "type": "object",
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Selects a key of a ConfigMap.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "description": "Selects a key of a secret.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "registry": {
              "description": "the image registry used to push/pull Integration images",
              "type": "object",
              "properties": {
                "address": {
                  "description": "the URI to access",
                  "type": "string"
                },
                "ca": {
                  "description": "the configmap which stores the Certificate Authority",
                  "type": "string"
                },
                "insecure": {
                  "description": "if the container registry is insecure (ie, http only)",
                  "type": "boolean"
                },
                "organization": {
                  "description": "the registry organization",
                  "type": "string"
                },
                "secret": {
                  "description": "the secret where credentials are stored",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "runtimeProvider": {
              "description": "the runtime used. Likely Camel Quarkus (we used to have main runtime which has been discontinued since version 1.5)",
              "type": "string"
            },
            "runtimeVersion": {
              "description": "the Camel K Runtime dependency version",
              "type": "string"
            },
            "timeout": {
              "description": "how much time to wait before time out the pipeline process",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "kamelet": {
          "description": "configuration to be executed to all Kamelets controlled by this IntegrationProfile",
          "type": "object",
          "properties": {
            "repositories": {
              "description": "remote repository used to retrieve Kamelet catalog",
              "type": "array",
              "items": {
                "description": "KameletRepositorySpec defines the location of the Kamelet catalog to use.",
                "type": "object",
                "properties": {
                  "uri": {
                    "description": "the remote repository in the format github:ORG/REPO/PATH_TO_KAMELETS_FOLDER",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "traits": {
          "description": "list of traits to be executed for all the Integration/IntegrationKits built from this IntegrationProfile",
          "type": "object",
          "properties": {
            "3scale": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "addons": {
              "description": "The extension point with addon traits",
              "type": "object",
              "additionalProperties": {
                "description": "AddonTrait represents the configuration of an addon trait.",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              }
            },
            "affinity": {
              "description": "The configuration of Affinity trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "nodeAffinityLabels": {
                  "description": "Defines a set of nodes the integration pod(s) are eligible to be scheduled on, based on labels on the node.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podAffinity": {
                  "description": "Always co-locates multiple replicas of the integration in the same node (default `false`).",
                  "type": "boolean"
                },
                "podAffinityLabels": {
                  "description": "Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the\nintegration pod(s) should be co-located with.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podAntiAffinity": {
                  "description": "Never co-locates multiple replicas of the integration in the same node (default `false`).",
                  "type": "boolean"
                },
                "podAntiAffinityLabels": {
                  "description": "Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the\nintegration pod(s) should not be co-located with.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "builder": {
              "description": "The configuration of Builder trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "When using `pod` strategy, annotation to use for the builder pod.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "baseImage": {
                  "description": "Specify a base image. In order to have the application working properly it must be a container image which has a Java JDK\ninstalled and ready to use on path (ie `/usr/bin/java`).",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "incrementalImageBuild": {
                  "description": "Use the incremental image build option, to reuse existing containers (default `true`)",
                  "type": "boolean"
                },
                "limitCPU": {
                  "description": "When using `pod` strategy, the maximum amount of CPU required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "limitMemory": {
                  "description": "When using `pod` strategy, the maximum amount of memory required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "mavenProfiles": {
                  "description": "A list of references pointing to configmaps/secrets that contains a maven profile.\nThis configmap/secret is a resource of the IntegrationKit created, therefore it needs to be present in the namespace where the operator is going to create the IntegrationKit.\nThe content of the maven profile is expected to be a text containing a valid maven profile starting with `\u003cprofile\u003e` and ending with `\u003c/profile\u003e` that will be integrated as an inline profile in the POM.\nSyntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelector": {
                  "description": "Defines a set of nodes the builder pod is eligible to be scheduled on, based on labels on the node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "orderStrategy": {
                  "description": "The build order strategy to use, either `dependencies`, `fifo` or `sequential` (default is the platform default)",
                  "type": "string",
                  "enum": [
                    "dependencies",
                    "fifo",
                    "sequential"
                  ]
                },
                "platforms": {
                  "description": "The list of manifest platforms to use to build a container image (default `linux/amd64`).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "A list of properties to be provided to the build task",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "requestCPU": {
                  "description": "When using `pod` strategy, the minimum amount of CPU required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "requestMemory": {
                  "description": "When using `pod` strategy, the minimum amount of memory required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "strategy": {
                  "description": "The strategy to use, either `pod` or `routine` (default `routine`)",
                  "type": "string",
                  "enum": [
                    "pod",
                    "routine"
                  ]
                },
                "tasks": {
                  "description": "A list of tasks to be executed (available only when using `pod` strategy) with format `\u003cname\u003e;\u003ccontainer-image\u003e;\u003ccontainer-command\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksFilter": {
                  "description": "A list of tasks sorted by the order of execution in a csv format, ie, `\u003ctaskName1\u003e,\u003ctaskName2\u003e,...`.\nMind that you must include also the operator tasks (`builder`, `quarkus-native`, `package`, `jib`, `s2i`)\nif you need to execute them. Useful only with `pod` strategy.",
                  "type": "string"
                },
                "tasksLimitCPU": {
                  "description": "A list of limit cpu configuration for the specific task with format `\u003ctask-name\u003e:\u003climit-cpu-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksLimitMemory": {
                  "description": "A list of limit memory configuration for the specific task with format `\u003ctask-name\u003e:\u003climit-memory-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksRequestCPU": {
                  "description": "A list of request cpu configuration for the specific task with format `\u003ctask-name\u003e:\u003crequest-cpu-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksRequestMemory": {
                  "description": "A list of request memory configuration for the specific task with format `\u003ctask-name\u003e:\u003crequest-memory-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verbose": {
                  "description": "Enable verbose logging on build components that support it (e.g. Kaniko build pod).\nDeprecated no longer in use",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "camel": {
              "description": "The configuration of Camel trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "properties": {
                  "description": "A list of properties to be provided to the Integration runtime",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtimeProvider": {
                  "description": "The runtime provider to use for the integration. (Default, Camel K Runtime).",
                  "type": "string",
                  "enum": [
                    "quarkus",
                    "plain-quarkus"
                  ]
                },
                "runtimeVersion": {
                  "description": "The runtime version to use for the integration. It overrides the default version set in the Integration Platform.\nYou can use a fixed version (for example \"3.2.3\") or a semantic version (for example \"3.x\") which will try to resolve\nto the best matching Catalog existing on the cluster (Default, the one provided by the operator version).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "container": {
              "description": "The configuration of Container trait",
              "type": "object",
              "properties": {
                "allowPrivilegeEscalation": {
                  "description": "Security Context AllowPrivilegeEscalation configuration (default false).",
                  "type": "boolean"
                },
                "auto": {
                  "description": "To automatically enable the trait",
                  "type": "boolean"
                },
                "capabilitiesAdd": {
                  "description": "Security Context Capabilities Add configuration (default none).",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  }
                },
                "capabilitiesDrop": {
                  "description": "Security Context Capabilities Drop configuration (default ALL).",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "expose": {
                  "description": "Can be used to enable/disable http exposure via kubernetes Service.",
                  "type": "boolean"
                },
                "image": {
                  "description": "The main container image to use for the Integration. When using this parameter the operator will create a synthetic IntegrationKit which\nwon't be able to execute traits requiring CamelCatalog. If the container image you're using is coming from an IntegrationKit, use instead\nIntegration `.spec.integrationKit` parameter. If you're moving the Integration across environments, you will also need to create an \"external\" IntegrationKit.",
                  "type": "string"
                },
                "imagePullPolicy": {
                  "description": "The pull policy: Always|Never|IfNotPresent",
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                "limitCPU": {
                  "description": "The maximum amount of CPU to be provided (default 500 millicores).",
                  "type": "string"
                },
                "limitMemory": {
                  "description": "The maximum amount of memory to be provided (default 512 Mi).",
                  "type": "string"
                },
                "name": {
                  "description": "The main container name. It's named `integration` by default.",
                  "type": "string"
                },
                "port": {
                  "description": "To configure a different http port exposed by the container (default `8080`).",
                  "type": "integer",
                  "format": "int32"
                },
                "portName": {
                  "description": "To configure a different http port name for the port exposed by the container.\nIt defaults to `http` only when the `expose` parameter is true.",
                  "type": "string"
                },
                "ports": {
                  "description": "List of container ports available in the container (syntax: \u003cport-name\u003e;\u003cport-number\u003e[;port-protocol]).\nWhen omitted, `port-protocol` (admitted values `TCP`, `UDP` or `SCTP`) is `TCP`.\nDon't use this for the primary http managed port (for which case you need to use `portName` and `port`).\nDon't use in Knative based environments.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "requestCPU": {
                  "description": "The minimum amount of CPU required (default 125 millicores).",
                  "type": "string"
                },
                "requestMemory": {
                  "description": "The minimum amount of memory required (default 128 Mi).",
                  "type": "string"
                },
                "runAsNonRoot": {
                  "description": "Security Context RunAsNonRoot configuration (default false).",
                  "type": "boolean"
                },
                "runAsUser": {
                  "description": "Security Context RunAsUser configuration (default none): this value is automatically retrieved in Openshift clusters when not explicitly set.",
                  "type": "integer",
                  "format": "int64"
                },
                "seccompProfileType": {
                  "description": "Security Context SeccompProfileType configuration (default RuntimeDefault).",
                  "type": "string",
                  "enum": [
                    "Unconfined",
                    "RuntimeDefault"
                  ]
                },
                "servicePort": {
                  "description": "To configure under which service port the http container port is to be exposed (default `80`).",
                  "type": "integer",
                  "format": "int32"
                },
                "servicePortName": {
                  "description": "To configure under which service port name the http container port is to be exposed (default `http`).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "cron": {
              "description": "The configuration of Cron trait",
              "type": "object",
              "properties": {
                "activeDeadlineSeconds": {
                  "description": "Specifies the duration in seconds, relative to the start time, that the job\nmay be continuously active before it is considered to be failed.\nIt defaults to 60s.",
                  "type": "integer",
                  "format": "int64"
                },
                "auto": {
                  "description": "Automatically deploy the integration as CronJob when all routes are\neither starting from a periodic consumer (only `cron`, `timer` and `quartz` are supported) or a passive consumer (e.g. `direct` is a passive consumer).\n\nIt's required that all periodic consumers have the same period, and it can be expressed as cron schedule (e.g. `1m` can be expressed as `0/1 * * * *`,\nwhile `35m` or `50s` cannot).",
                  "type": "boolean"
                },
                "backoffLimit": {
                  "description": "Specifies the number of retries before marking the job failed.\nIt defaults to 2.",
                  "type": "integer",
                  "format": "int32"
                },
                "components": {
                  "description": "A comma separated list of the Camel components that need to be customized in order for them to work when the schedule is triggered externally by Kubernetes.\nSupported components are currently: `cron`, `timer` and `quartz`.",
                  "type": "string"
                },
                "concurrencyPolicy": {
                  "description": "Specifies how to treat concurrent executions of a Job.\nValid values are:\n- \"Allow\": allows CronJobs to run concurrently;\n- \"Forbid\" (default): forbids concurrent runs, skipping next run if previous run hasn't finished yet;\n- \"Replace\": cancels currently running job and replaces it with a new one",
                  "type": "string",
                  "enum": [
                    "Allow",
                    "Forbid",
                    "Replace"
                  ]
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "fallback": {
                  "description": "Use the default Camel implementation of the `cron` endpoint (`quartz`) instead of trying to materialize the integration\nas Kubernetes CronJob.",
                  "type": "boolean"
                },
                "schedule": {
                  "description": "The CronJob schedule for the whole integration. If multiple routes are declared, they must have the same schedule for this\nmechanism to work correctly.",
                  "type": "string"
                },
                "startingDeadlineSeconds": {
                  "description": "Optional deadline in seconds for starting the job if it misses scheduled\ntime for any reason.  Missed jobs executions will be counted as failed ones.",
                  "type": "integer",
                  "format": "int64"
                },
                "timeZone": {
                  "description": "The timezone that the CronJob will run on",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dependencies": {
              "description": "The configuration of Dependencies trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "deployer": {
              "description": "The configuration of Deployer trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "kind": {
                  "description": "Allows to explicitly select the desired deployment kind between `deployment`, `cron-job` or `knative-service` when creating the resources for running the integration.",
                  "type": "string",
                  "enum": [
                    "deployment",
                    "cron-job",
                    "knative-service"
                  ]
                },
                "useSSA": {
                  "description": "Deprecated: won't be able to enforce client side update in the future.\nUse server-side apply to update the owned resources (default `true`).\nNote that it automatically falls back to client-side patching, if SSA is not available, e.g., on old Kubernetes clusters.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "deployment": {
              "description": "The configuration of Deployment trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "progressDeadlineSeconds": {
                  "description": "The maximum time in seconds for the deployment to make progress before it\nis considered to be failed. It defaults to `60s`.",
                  "type": "integer",
                  "format": "int32"
                },
                "rollingUpdateMaxSurge": {
                  "description": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to `25%`.",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "rollingUpdateMaxUnavailable": {
                  "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to `25%`.",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "strategy": {
                  "description": "The deployment strategy to use to replace existing pods with new ones.",
                  "type": "string",
                  "enum": [
                    "Recreate",
                    "RollingUpdate"
                  ]
                }
              },
              "additionalProperties": false
            },
            "environment": {
              "description": "The configuration of Environment trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "containerMeta": {
                  "description": "Enables injection of `NAMESPACE` and `POD_NAME` environment variables (default `true`)",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "httpProxy": {
                  "description": "Propagates the `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` environment variables (default `true`)",
                  "type": "boolean"
                },
                "vars": {
                  "description": "A list of environment variables to be added to the integration container.\nThe syntax is either VAR=VALUE or VAR=[configmap|secret]:name/key, where name represents the resource name,\nand key represents the resource key to be mapped as and environment variable.\nThese take precedence over any previously defined environment variables.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "error-handler": {
              "description": "The configuration of Error Handler trait\nDeprecated: no longer in use.",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "ref": {
                  "description": "The error handler ref name provided or found in application properties",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "gc": {
              "description": "The configuration of GC trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "discoveryCache": {
                  "description": "Discovery client cache to be used, either `disabled`, `disk` or `memory` (default `memory`).\nDeprecated: no longer in use.",
                  "type": "string",
                  "enum": [
                    "disabled",
                    "disk",
                    "memory"
                  ]
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "health": {
              "description": "The configuration of Health trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "livenessFailureThreshold": {
                  "description": "Minimum consecutive failures for the liveness probe to be considered failed after having succeeded.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessInitialDelay": {
                  "description": "Number of seconds after the container has started before the liveness probe is initiated.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessPeriod": {
                  "description": "How often to perform the liveness probe.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessProbe": {
                  "description": "The liveness probe path to use (default provided by the Catalog runtime used).",
                  "type": "string"
                },
                "livenessProbeEnabled": {
                  "description": "Configures the liveness probe for the integration container (default `false`).",
                  "type": "boolean"
                },
                "livenessScheme": {
                  "description": "Scheme to use when connecting to the liveness probe (default `HTTP`).",
                  "type": "string"
                },
                "livenessSuccessThreshold": {
                  "description": "Minimum consecutive successes for the liveness probe to be considered successful after having failed.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessTimeout": {
                  "description": "Number of seconds after which the liveness probe times out.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessFailureThreshold": {
                  "description": "Minimum consecutive failures for the readiness probe to be considered failed after having succeeded.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessInitialDelay": {
                  "description": "Number of seconds after the container has started before the readiness probe is initiated.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessPeriod": {
                  "description": "How often to perform the readiness probe.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessProbe": {
                  "description": "The readiness probe path to use (default provided by the Catalog runtime used).",
                  "type": "string"
                },
                "readinessProbeEnabled": {
                  "description": "Configures the readiness probe for the integration container (default `true`).",
                  "type": "boolean"
                },
                "readinessScheme": {
                  "description": "Scheme to use when connecting to the readiness probe (default `HTTP`).",
                  "type": "string"
                },
                "readinessSuccessThreshold": {
                  "description": "Minimum consecutive successes for the readiness probe to be considered successful after having failed.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessTimeout": {
                  "description": "Number of seconds after which the readiness probe times out.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupFailureThreshold": {
                  "description": "Minimum consecutive failures for the startup probe to be considered failed after having succeeded.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupInitialDelay": {
                  "description": "Number of seconds after the container has started before the startup probe is initiated.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupPeriod": {
                  "description": "How often to perform the startup probe.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupProbe": {
                  "description": "The startup probe path to use (default provided by the Catalog runtime used).",
                  "type": "string"
                },
                "startupProbeEnabled": {
                  "description": "Configures the startup probe for the integration container (default `false`).",
                  "type": "boolean"
                },
                "startupScheme": {
                  "description": "Scheme to use when connecting to the startup probe (default `HTTP`).",
                  "type": "string"
                },
                "startupSuccessThreshold": {
                  "description": "Minimum consecutive successes for the startup probe to be considered successful after having failed.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupTimeout": {
                  "description": "Number of seconds after which the startup probe times out.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "ingress": {
              "description": "The configuration of Ingress trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to the ingress.\nThis can be used to set controller specific annotations, e.g., when using the NGINX Ingress controller:\nSee https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "auto": {
                  "description": "To automatically add an ingress whenever the integration uses an HTTP endpoint consumer.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "host": {
                  "description": "To configure the host exposed by the ingress.",
                  "type": "string"
                },
                "ingressClassName": {
                  "description": "The Ingress class name as defined by the Ingress spec\nSee https://kubernetes.io/docs/concepts/services-networking/ingress/",
                  "type": "string"
                },
                "path": {
                  "description": "To configure the path exposed by the ingress (default `/`).\nDeprecated: In favor of `paths` - left for backward compatibility.",
                  "type": "string"
                },
                "pathType": {
                  "description": "To configure the path type exposed by the ingress.\nOne of `Exact`, `Prefix`, `ImplementationSpecific` (default to `Prefix`).",
                  "type": "string",
                  "enum": [
                    "Exact",
                    "Prefix",
                    "ImplementationSpecific"
                  ]
                },
                "paths": {
                  "description": "To configure the paths exposed by the ingress (default `['/']`).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tlsHosts": {
                  "description": "To configure tls hosts",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tlsSecretName": {
                  "description": "To configure tls secret name",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "init-containers": {
              "description": "The configuration of Init Containers trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "initTasks": {
                  "description": "A list of init tasks to be executed with format `\u003cname\u003e;\u003ccontainer-image\u003e;\u003ccontainer-command\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sideCarTasks": {
                  "description": "A list of sidecar tasks to be executed with format `\u003cname\u003e;\u003ccontainer-image\u003e;\u003ccontainer-command\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "istio": {
              "description": "The configuration of Istio trait",
              "type": "object",
              "properties": {
                "allow": {
                  "description": "Configures a (comma-separated) list of CIDR subnets that should not be intercepted by the Istio proxy (`10.0.0.0/8,172.16.0.0/12,192.168.0.0/16` by default).",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "inject": {
                  "description": "Forces the value for labels `sidecar.istio.io/inject`. By default the label is set to `true` on deployment and not set on Knative Service.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "jolokia": {
              "description": "The configuration of Jolokia trait",
              "type": "object",
              "properties": {
                "CACert": {
                  "description": "The PEM encoded CA certification file path, used to verify client certificates,\napplicable when `protocol` is `https` and `use-ssl-client-authentication` is `true`\n(default `/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt` for OpenShift).",
                  "type": "string"
                },
                "clientPrincipal": {
                  "description": "The principal(s) which must be given in a client certificate to allow access to the Jolokia endpoint,\napplicable when `protocol` is `https` and `use-ssl-client-authentication` is `true`\n(default `clientPrincipal=cn=system:master-proxy`, `cn=hawtio-online.hawtio.svc` and `cn=fuse-console.fuse.svc` for OpenShift).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "discoveryEnabled": {
                  "description": "Listen for multicast requests (default `false`)",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "extendedClientCheck": {
                  "description": "Mandate the client certificate contains a client flag in the extended key usage section,\napplicable when `protocol` is `https` and `use-ssl-client-authentication` is `true`\n(default `true` for OpenShift).",
                  "type": "boolean"
                },
                "host": {
                  "description": "The Host address to which the Jolokia agent should bind to. If `\"\\*\"` or `\"0.0.0.0\"` is given,\nthe servers binds to every network interface (default `\"*\"`).",
                  "type": "string"
                },
                "options": {
                  "description": "A list of additional Jolokia options as defined\nin https://jolokia.org/reference/html/agents.html#agent-jvm-config[JVM agent configuration options]",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "password": {
                  "description": "The password used for authentication, applicable when the `user` option is set.",
                  "type": "string"
                },
                "port": {
                  "description": "The Jolokia endpoint port (default `8778`).",
                  "type": "integer",
                  "format": "int32"
                },
                "protocol": {
                  "description": "The protocol to use, either `http` or `https` (default `https` for OpenShift)",
                  "type": "string"
                },
                "useSSLClientAuthentication": {
                  "description": "Whether client certificates should be used for authentication (default `true` for OpenShift).",
                  "type": "boolean"
                },
                "user": {
                  "description": "The user to be used for authentication",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "jvm": {
              "description": "The configuration of JVM trait",
              "type": "object",
              "properties": {
                "agents": {
                  "description": "A list of JVM agents to download and execute with format `\u003cagent-name\u003e;\u003cagent-url\u003e[;\u003cjvm-agent-options\u003e]`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "classpath": {
                  "description": "Additional JVM classpath (use `Linux` classpath separator)",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "debug": {
                  "description": "Activates remote debugging, so that a debugger can be attached to the JVM, e.g., using port-forwarding",
                  "type": "boolean"
                },
                "debugAddress": {
                  "description": "Transport address at which to listen for the newly launched JVM (default `*:5005`)",
                  "type": "string"
                },
                "debugSuspend": {
                  "description": "Suspends the target JVM immediately before the main class is loaded",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "jar": {
                  "description": "The Jar dependency which will run the application. Leave it empty for managed Integrations.",
                  "type": "string"
                },
                "options": {
                  "description": "A list of JVM options",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "printCommand": {
                  "description": "Prints the command used the start the JVM in the container logs (default `true`)\nDeprecated: no longer in use.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "kamelets": {
              "description": "The configuration of Kamelets trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Automatically inject all referenced Kamelets and their default configuration (enabled by default)",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "list": {
                  "description": "Comma separated list of Kamelet names to load into the current integration",
                  "type": "string"
                },
                "mountPoint": {
                  "description": "The directory where the application mounts and reads Kamelet spec (default `/etc/camel/kamelets`)",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keda": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "knative": {
              "description": "The configuration of Knative trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Enable automatic discovery of all trait properties.",
                  "type": "boolean"
                },
                "channelSinks": {
                  "description": "List of channels used as destination of integration routes.\nCan contain simple channel names or full Camel URIs.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "channelSources": {
                  "description": "List of channels used as source of integration routes.\nCan contain simple channel names or full Camel URIs.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "config": {
                  "description": "Can be used to inject a Knative complete configuration in JSON format.",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "endpointSinks": {
                  "description": "List of endpoints used as destination of integration routes.\nCan contain simple endpoint names or full Camel URIs.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "endpointSources": {
                  "description": "List of channels used as source of integration routes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "eventSinks": {
                  "description": "List of event types that the integration will produce.\nCan contain simple event types or full Camel URIs (to use a specific broker).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "eventSources": {
                  "description": "List of event types that the integration will be subscribed to.\nCan contain simple event types or full Camel URIs (to use a specific broker different from \"default\").",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filterEventType": {
                  "description": "Enables the default filtering for the Knative trigger using the event type\nIf this is true, the created Knative trigger uses the event type as a filter on the event stream when no other filter criteria is given. (default: true)",
                  "type": "boolean"
                },
                "filterSourceChannels": {
                  "description": "Enables filtering on events based on the header \"ce-knativehistory\". Since this header has been removed in newer versions of\nKnative, filtering is disabled by default.",
                  "type": "boolean"
                },
                "filters": {
                  "description": "Sets filter attributes on the event stream (such as event type, source, subject and so on).\nA list of key-value pairs that represent filter attributes and its values.\nThe syntax is KEY=VALUE, e.g., `source=\"my.source\"`.\nFilter attributes get set on the Knative trigger that is being created as part of this integration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "namespaceLabel": {
                  "description": "Enables the camel-k-operator to set the \"bindings.knative.dev/include=true\" label to the namespace\nAs Knative requires this label to perform injection of K_SINK URL into the service.\nIf this is false, the integration pod may start and fail, read the SinkBinding Knative documentation. (default: true)",
                  "type": "boolean"
                },
                "sinkBinding": {
                  "description": "Allows binding the integration to a sink via a Knative SinkBinding resource.\nThis can be used when the integration targets a single sink.\nIt's enabled by default when the integration targets a single sink\n(except when the integration is owned by a Knative source).",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "knative-service": {
              "description": "The configuration of Knative Service trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to route.\nThis can be used to set knative service specific annotations\nCLI usage example: -t \"knative-service.annotations.'haproxy.router.openshift.io/balance'=true\"",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "auto": {
                  "description": "Automatically deploy the integration as Knative service when all conditions hold:\n\n* Integration is using the Knative profile\n* All routes are either starting from an HTTP based consumer or a passive consumer (e.g. `direct` is a passive consumer)",
                  "type": "boolean"
                },
                "autoscalingMetric": {
                  "description": "Configures the Knative autoscaling metric property (e.g. to set `concurrency` based or `cpu` based autoscaling).\n\nRefer to the Knative documentation for more information.",
                  "type": "string"
                },
                "autoscalingTarget": {
                  "description": "Sets the allowed concurrency level or CPU percentage (depending on the autoscaling metric) for each Pod.\n\nRefer to the Knative documentation for more information.",
                  "type": "integer"
                },
                "class": {
                  "description": "Configures the Knative autoscaling class property (e.g. to set `hpa.autoscaling.knative.dev` or `kpa.autoscaling.knative.dev` autoscaling).\n\nRefer to the Knative documentation for more information.",
                  "type": "string",
                  "enum": [
                    "kpa.autoscaling.knative.dev",
                    "hpa.autoscaling.knative.dev"
                  ]
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "maxScale": {
                  "description": "An upper bound for the number of Pods that can be running in parallel for the integration.\nKnative has its own cap value that depends on the installation.\n\nRefer to the Knative documentation for more information.",
                  "type": "integer"
                },
                "minScale": {
                  "description": "The minimum number of Pods that should be running at any time for the integration. It's **zero** by default, meaning that\nthe integration is scaled down to zero when not used for a configured amount of time.\n\nRefer to the Knative documentation for more information.",
                  "type": "integer"
                },
                "rolloutDuration": {
                  "description": "Enables to gradually shift traffic to the latest Revision and sets the rollout duration.\nIt's disabled by default and must be expressed as a Golang `time.Duration` string representation,\nrounded to a second precision.",
                  "type": "string"
                },
                "timeoutSeconds": {
                  "description": "The maximum duration in seconds that the request instance is allowed to respond to a request.\nThis field propagates to the integration pod's terminationGracePeriodSeconds\n\nRefer to the Knative documentation for more information.",
                  "type": "integer",
                  "format": "int64"
                },
                "visibility": {
                  "description": "Setting `cluster-local`, Knative service becomes a private service.\nSpecifically, this option applies the `networking.knative.dev/visibility` label to Knative service.\n\nRefer to the Knative documentation for more information.",
                  "type": "string",
                  "enum": [
                    "cluster-local"
                  ]
                }
              },
              "additionalProperties": false
            },
            "logging": {
              "description": "The configuration of Logging trait",
              "type": "object",
              "properties": {
                "color": {
                  "description": "Colorize the log output",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "format": {
                  "description": "Logs message format",
                  "type": "string"
                },
                "json": {
                  "description": "Output the logs in JSON",
                  "type": "boolean"
                },
                "jsonPrettyPrint": {
                  "description": "Enable \"pretty printing\" of the JSON logs",
                  "type": "boolean"
                },
                "level": {
                  "description": "Adjust the logging level (defaults to `INFO`)",
                  "type": "string",
                  "enum": [
                    "FATAL",
                    "WARN",
                    "INFO",
                    "DEBUG",
                    "TRACE"
                  ]
                }
              },
              "additionalProperties": false
            },
            "master": {
              "description": "The configuration of Master trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Enables automatic configuration of the trait.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "includeDelegateDependencies": {
                  "description": "When this flag is active, the operator analyzes the source code to add dependencies required by delegate endpoints.\nE.g. when using `master:lockname:timer`, then `camel:timer` is automatically added to the set of dependencies.\nIt's enabled by default.",
                  "type": "boolean"
                },
                "labelKey": {
                  "description": "Label that will be used to identify all pods contending the lock. Defaults to \"camel.apache.org/integration\".",
                  "type": "string"
                },
                "labelValue": {
                  "description": "Label value that will be used to identify all pods contending the lock. Defaults to the integration name.",
                  "type": "string"
                },
                "resourceName": {
                  "description": "Name of the configmap that will be used to store the lock. Defaults to \"\u003cintegration-name\u003e-lock\".\nName of the configmap/lease resource that will be used to store the lock. Defaults to \"\u003cintegration-name\u003e-lock\".",
                  "type": "string"
                },
                "resourceType": {
                  "description": "Type of Kubernetes resource to use for locking (\"ConfigMap\" or \"Lease\"). Defaults to \"Lease\".",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "mount": {
              "description": "The configuration of Mount trait",
              "type": "object",
              "properties": {
                "configs": {
                  "description": "A list of configuration pointing to configmap/secret.\nThe configuration are expected to be UTF-8 resources as they are processed by runtime Camel Context and tried to be parsed as property files.\nThey are also made available on the classpath in order to ease their usage directly from the Route.\nSyntax: [configmap|secret]:name[/key], where name represents the resource name and key optionally represents the resource key to be filtered",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "emptyDirs": {
                  "description": "A list of EmptyDir volumes to be mounted. An optional size limit may be configured (default 500Mi).\nSyntax: name:/container/path[:sizeLimit]",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "hotReload": {
                  "description": "Enable \"hot reload\" when a secret/configmap mounted is edited (default `false`). The configmap/secret must be\nmarked with `camel.apache.org/integration` label to be taken in account. The resource will be watched for any kind change, also for\nchanges in metadata.",
                  "type": "boolean"
                },
                "resources": {
                  "description": "A list of resources (text or binary content) pointing to configmap/secret.\nThe resources are expected to be any resource type (text or binary content).\nThe destination path can be either a default location or any path specified by the user.\nSyntax: [configmap|secret]:name[/key][@path], where name represents the resource name, key optionally represents the resource key to be filtered and path represents the destination path",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "scanKameletsImplicitLabelSecrets": {
                  "description": "Deprecated: no longer available since version 2.5.",
                  "type": "boolean"
                },
                "volumes": {
                  "description": "A list of Persistent Volume Claims to be mounted. Syntax: [pvcname:/container/path]. If the PVC is not found, the Integration fails.\nYou can use the syntax [pvcname:/container/path:size:accessMode\u003c:storageClass\u003e] to create a dynamic PVC based on the Storage Class provided\nor the default cluster Storage Class. However, if the PVC exists, the operator would mount it.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "openapi": {
              "description": "The configuration of OpenAPI trait",
              "type": "object",
              "properties": {
                "configmaps": {
                  "description": "The configmaps holding the spec of the OpenAPI (compatible with \u003e 3.0 spec only).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "owner": {
              "description": "The configuration of Owner trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "targetAnnotations": {
                  "description": "The set of annotations to be transferred",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "targetLabels": {
                  "description": "The set of labels to be transferred",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "pdb": {
              "description": "The configuration of PDB trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "maxUnavailable": {
                  "description": "The number of pods for the Integration that can be unavailable after an eviction.\nIt can be either an absolute number or a percentage (default `1` if `min-available` is also not set).\nOnly one of `max-unavailable` and `min-available` can be specified.",
                  "type": "string"
                },
                "minAvailable": {
                  "description": "The number of pods for the Integration that must still be available after an eviction.\nIt can be either an absolute number or a percentage.\nOnly one of `min-available` and `max-unavailable` can be specified.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "platform": {
              "description": "The configuration of Platform trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "To automatically detect from the environment if a default platform can be created (it will be created on OpenShift or when a registry address is set).\nDeprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "createDefault": {
                  "description": "To create a default (empty) platform when the platform is missing.\nDeprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "global": {
                  "description": "Indicates if the platform should be created globally in the case of global operator (default true).\nDeprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "pod": {
              "description": "The configuration of Pod trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "prometheus": {
              "description": "The configuration of Prometheus trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "podMonitor": {
                  "description": "Whether a `PodMonitor` resource is created (default `true`).",
                  "type": "boolean"
                },
                "podMonitorLabels": {
                  "description": "The `PodMonitor` resource labels, applicable when `pod-monitor` is `true`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "pull-secret": {
              "description": "The configuration of Pull Secret trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Automatically configures the platform registry secret on the pod if it is of type `kubernetes.io/dockerconfigjson`.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "imagePullerDelegation": {
                  "description": "When using a global operator with a shared platform, this enables delegation of the `system:image-puller` cluster role on the operator namespace to the integration service account.",
                  "type": "boolean"
                },
                "secretName": {
                  "description": "The pull secret name to set on the Pod. If left empty this is automatically taken from the `IntegrationPlatform` registry configuration.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "quarkus": {
              "description": "The configuration of Quarkus trait",
              "type": "object",
              "properties": {
                "buildMode": {
                  "description": "The Quarkus mode to run: either `jvm` or `native` (default `jvm`).\nIn case both `jvm` and `native` are specified, two `IntegrationKit` resources are created,\nwith the `native` kit having precedence over the `jvm` one once ready.",
                  "type": "array",
                  "items": {
                    "description": "QuarkusMode is the type of Quarkus build packaging.",
                    "type": "string",
                    "enum": [
                      "jvm",
                      "native"
                    ]
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "nativeBaseImage": {
                  "description": "The base image to use when running a native build (default `quay.io/quarkus/quarkus-micro-image:2.0`)",
                  "type": "string"
                },
                "nativeBuilderImage": {
                  "description": "The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)",
                  "type": "string"
                },
                "packageTypes": {
                  "description": "The Quarkus package types, `fast-jar` or `native` (default `fast-jar`).\nIn case both `fast-jar` and `native` are specified, two `IntegrationKit` resources are created,\nwith the native kit having precedence over the `fast-jar` one once ready.\nThe order influences the resolution of the current kit for the integration.\nThe kit corresponding to the first package type will be assigned to the\nintegration in case no existing kit that matches the integration exists.\nDeprecated: use `build-mode` instead.",
                  "type": "array",
                  "items": {
                    "description": "QuarkusPackageType is the type of Quarkus build packaging.\nDeprecated: use `QuarkusMode` instead.",
                    "type": "string",
                    "enum": [
                      "fast-jar",
                      "native"
                    ]
                  }
                }
              },
              "additionalProperties": false
            },
            "registry": {
              "description": "The configuration of Registry trait (support removed since version 2.5.0).\nDeprecated: use jvm trait or read documentation.",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "route": {
              "description": "The configuration of Route trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to route.\nThis can be used to set route specific annotations\nFor annotations options see https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#route-specific-annotations\nCLI usage example: -t \"route.annotations.'haproxy.router.openshift.io/balance'=true\"",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "host": {
                  "description": "To configure the host exposed by the route.",
                  "type": "string"
                },
                "tlsCACertificate": {
                  "description": "The TLS CA certificate contents.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsCACertificateSecret": {
                  "description": "The secret name and key reference to the TLS CA certificate. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsCertificate": {
                  "description": "The TLS certificate contents.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsCertificateSecret": {
                  "description": "The secret name and key reference to the TLS certificate. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsDestinationCACertificate": {
                  "description": "The destination CA certificate provides the contents of the ca certificate of the final destination.  When using reencrypt\ntermination this file should be provided in order to have routers use it for health checks on the secure connection.\nIf this field is not specified, the router may provide its own destination CA and perform hostname validation using\nthe short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically\nverify.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsDestinationCACertificateSecret": {
                  "description": "The secret name and key reference to the destination CA certificate. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsInsecureEdgeTerminationPolicy": {
                  "description": "To configure how to deal with insecure traffic, e.g. `Allow`, `Disable` or `Redirect` traffic.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Allow",
                    "Redirect"
                  ]
                },
                "tlsKey": {
                  "description": "The TLS certificate key contents.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsKeySecret": {
                  "description": "The secret name and key reference to the TLS certificate key. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsTermination": {
                  "description": "The TLS termination type, like `edge`, `passthrough` or `reencrypt`.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string",
                  "enum": [
                    "edge",
                    "reencrypt",
                    "passthrough"
                  ]
                }
              },
              "additionalProperties": false
            },
            "security-context": {
              "description": "The configuration of Security Context trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "runAsNonRoot": {
                  "description": "Security Context RunAsNonRoot configuration (default false).",
                  "type": "boolean"
                },
                "runAsUser": {
                  "description": "Security Context RunAsUser configuration (default none): this value is automatically retrieved in Openshift clusters when not explicitly set.",
                  "type": "integer",
                  "format": "int64"
                },
                "seccompProfileType": {
                  "description": "Security Context SeccompProfileType configuration (default RuntimeDefault).",
                  "type": "string",
                  "enum": [
                    "Unconfined",
                    "RuntimeDefault"
                  ]
                }
              },
              "additionalProperties": false
            },
            "service": {
              "description": "The configuration of Service trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to the Service object.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "auto": {
                  "description": "To automatically detect from the code if a Service needs to be created.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "labels": {
                  "description": "The labels added to the Service object.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodePort": {
                  "description": "Enable Service to be exposed as NodePort (default `false`).\nDeprecated: Use service type instead.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "List of container ports available in the container to expose\n(syntax: \u003cport-name\u003e;\u003cport-number\u003e;\u003ccontainer-port-number\u003e[;\u003cport-protocol]).\nWhen omitted, `port-protocol` (admitted values `TCP`, `UDP` or `SCTP`) is `TCP`.\nDon't use this for the primary http managed port (which is managed by container trait).\nDon't use in Knative based environments.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "The type of service to be used, either 'ClusterIP', 'NodePort' or 'LoadBalancer'.",
                  "type": "string",
                  "enum": [
                    "ClusterIP",
                    "NodePort",
                    "LoadBalancer"
                  ]
                }
              },
              "additionalProperties": false
            },
            "service-binding": {
              "description": "The configuration of Service Binding trait\nDeprecated: no longer in use.",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "services": {
                  "description": "List of Services in the form [[apigroup/]version:]kind:[namespace/]name",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "strimzi": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "telemetry": {
              "description": "The configuration of Telemetry trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Enables automatic configuration of the trait, including automatic discovery of the telemetry endpoint.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "endpoint": {
                  "description": "The target endpoint of the Telemetry service (automatically discovered by default)",
                  "type": "string"
                },
                "sampler": {
                  "description": "The sampler of the telemetry used for tracing (default \"on\")",
                  "type": "string"
                },
                "sampler-parent-based": {
                  "description": "The sampler of the telemetry used for tracing is parent based (default \"true\")",
                  "type": "boolean"
                },
                "sampler-ratio": {
                  "description": "The sampler ratio of the telemetry used for tracing",
                  "type": "string"
                },
                "serviceName": {
                  "description": "The name of the service that publishes telemetry data (defaults to the integration name)",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "toleration": {
              "description": "The configuration of Toleration trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "taints": {
                  "description": "The list of taints to tolerate, in the form `Key[=Value]:Effect[:Seconds]`",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "tracing": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "Deprecated: no longer in use.",
      "type": "object",
      "properties": {
        "build": {
          "description": "specify how to build the Integration/IntegrationKits",
          "type": "object",
          "properties": {
            "baseImage": {
              "description": "a base image that can be used as base layer for all images.\nIt can be useful if you want to provide some custom base image with further utility software",
              "type": "string"
            },
            "maven": {
              "description": "Maven configuration used to build the Camel/Camel-Quarkus applications",
              "type": "object",
              "properties": {
                "caSecrets": {
                  "description": "The Secrets name and key, containing the CA certificate(s) used to connect\nto remote Maven repositories.\nIt can contain X.509 certificates, and PKCS#7 formatted certificate chains.\nA JKS formatted keystore is automatically created to store the CA certificate(s),\nand configured to be used as a trusted certificate(s) by the Maven commands.\nNote that the root CA certificates are also imported into the created keystore.",
                  "type": "array",
                  "items": {
                    "description": "SecretKeySelector selects a key of a Secret.",
                    "type": "object",
                    "required": [
                      "key"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key of the secret to select from.  Must be a valid secret key.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                        "type": "string",
                        "default": ""
                      },
                      "optional": {
                        "description": "Specify whether the Secret or its key must be defined",
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "cliOptions": {
                  "description": "The CLI options that are appended to the list of arguments for Maven commands,\ne.g., `-V,--no-transfer-progress,-Dstyle.color=never`.\nSee https://maven.apache.org/ref/3.8.4/maven-embedder/cli.html.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "extension": {
                  "description": "The Maven build extensions.\nSee https://maven.apache.org/guides/mini/guide-using-extensions.html.",
                  "type": "array",
                  "items": {
                    "description": "MavenArtifact defines a GAV (Group:Artifact:Type:Version:Classifier) Maven artifact.",
                    "type": "object",
                    "required": [
                      "artifactId",
                      "groupId"
                    ],
                    "properties": {
                      "artifactId": {
                        "description": "Maven Artifact",
                        "type": "string"
                      },
                      "classifier": {
                        "description": "Maven Classifier",
                        "type": "string"
                      },
                      "groupId": {
                        "description": "Maven Group",
                        "type": "string"
                      },
                      "type": {
                        "description": "Maven Type",
                        "type": "string"
                      },
                      "version": {
                        "description": "Maven Version",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "localRepository": {
                  "description": "The path of the local Maven repository.",
                  "type": "string"
                },
                "profiles": {
                  "description": "A reference to the ConfigMap or Secret key that contains\nthe Maven profile.",
                  "type": "array",
                  "items": {
                    "description": "ValueSource --.",
                    "type": "object",
                    "properties": {
                      "configMapKeyRef": {
                        "description": "Selects a key of a ConfigMap.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the ConfigMap or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      },
                      "secretKeyRef": {
                        "description": "Selects a key of a secret.",
                        "type": "object",
                        "required": [
                          "key"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key of the secret to select from.  Must be a valid secret key.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                            "type": "string",
                            "default": ""
                          },
                          "optional": {
                            "description": "Specify whether the Secret or its key must be defined",
                            "type": "boolean"
                          }
                        },
                        "additionalProperties": false,
                        "x-kubernetes-map-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "properties": {
                  "description": "The Maven properties.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "settings": {
                  "description": "A reference to the ConfigMap or Secret key that contains\nthe Maven settings.",
                  "type": "object",
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Selects a key of a ConfigMap.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "description": "Selects a key of a secret.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "settingsSecurity": {
                  "description": "A reference to the ConfigMap or Secret key that contains\nthe security of the Maven settings.",
                  "type": "object",
                  "properties": {
                    "configMapKeyRef": {
                      "description": "Selects a key of a ConfigMap.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the ConfigMap or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    },
                    "secretKeyRef": {
                      "description": "Selects a key of a secret.",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key of the secret to select from.  Must be a valid secret key.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the referent.\nThis field is effectively required, but due to backwards compatibility is\nallowed to be empty. Instances of this type with an empty value here are\nalmost certainly wrong.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                          "type": "string",
                          "default": ""
                        },
                        "optional": {
                          "description": "Specify whether the Secret or its key must be defined",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false,
                      "x-kubernetes-map-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "registry": {
              "description": "the image registry used to push/pull Integration images",
              "type": "object",
              "properties": {
                "address": {
                  "description": "the URI to access",
                  "type": "string"
                },
                "ca": {
                  "description": "the configmap which stores the Certificate Authority",
                  "type": "string"
                },
                "insecure": {
                  "description": "if the container registry is insecure (ie, http only)",
                  "type": "boolean"
                },
                "organization": {
                  "description": "the registry organization",
                  "type": "string"
                },
                "secret": {
                  "description": "the secret where credentials are stored",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "runtimeProvider": {
              "description": "the runtime used. Likely Camel Quarkus (we used to have main runtime which has been discontinued since version 1.5)",
              "type": "string"
            },
            "runtimeVersion": {
              "description": "the Camel K Runtime dependency version",
              "type": "string"
            },
            "timeout": {
              "description": "how much time to wait before time out the pipeline process",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "which are the conditions met (particularly useful when in ERROR phase)",
          "type": "array",
          "items": {
            "description": "IntegrationProfileCondition describes the state of a resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "lastUpdateTime": {
                "description": "The last time this condition was updated.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human-readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of integration condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "kamelet": {
          "description": "configuration to be executed to all Kamelets controlled by this IntegrationProfile",
          "type": "object",
          "properties": {
            "repositories": {
              "description": "remote repository used to retrieve Kamelet catalog",
              "type": "array",
              "items": {
                "description": "KameletRepositorySpec defines the location of the Kamelet catalog to use.",
                "type": "object",
                "properties": {
                  "uri": {
                    "description": "the remote repository in the format github:ORG/REPO/PATH_TO_KAMELETS_FOLDER",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this IntegrationProfile.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "defines in what phase the IntegrationProfile is found",
          "type": "string"
        },
        "traits": {
          "description": "list of traits to be executed for all the Integration/IntegrationKits built from this IntegrationProfile",
          "type": "object",
          "properties": {
            "3scale": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "addons": {
              "description": "The extension point with addon traits",
              "type": "object",
              "additionalProperties": {
                "description": "AddonTrait represents the configuration of an addon trait.",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              }
            },
            "affinity": {
              "description": "The configuration of Affinity trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "nodeAffinityLabels": {
                  "description": "Defines a set of nodes the integration pod(s) are eligible to be scheduled on, based on labels on the node.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podAffinity": {
                  "description": "Always co-locates multiple replicas of the integration in the same node (default `false`).",
                  "type": "boolean"
                },
                "podAffinityLabels": {
                  "description": "Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the\nintegration pod(s) should be co-located with.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "podAntiAffinity": {
                  "description": "Never co-locates multiple replicas of the integration in the same node (default `false`).",
                  "type": "boolean"
                },
                "podAntiAffinityLabels": {
                  "description": "Defines a set of pods (namely those matching the label selector, relative to the given namespace) that the\nintegration pod(s) should not be co-located with.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "builder": {
              "description": "The configuration of Builder trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "When using `pod` strategy, annotation to use for the builder pod.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "baseImage": {
                  "description": "Specify a base image. In order to have the application working properly it must be a container image which has a Java JDK\ninstalled and ready to use on path (ie `/usr/bin/java`).",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "incrementalImageBuild": {
                  "description": "Use the incremental image build option, to reuse existing containers (default `true`)",
                  "type": "boolean"
                },
                "limitCPU": {
                  "description": "When using `pod` strategy, the maximum amount of CPU required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "limitMemory": {
                  "description": "When using `pod` strategy, the maximum amount of memory required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "mavenProfiles": {
                  "description": "A list of references pointing to configmaps/secrets that contains a maven profile.\nThis configmap/secret is a resource of the IntegrationKit created, therefore it needs to be present in the namespace where the operator is going to create the IntegrationKit.\nThe content of the maven profile is expected to be a text containing a valid maven profile starting with `\u003cprofile\u003e` and ending with `\u003c/profile\u003e` that will be integrated as an inline profile in the POM.\nSyntax: [configmap|secret]:name[/key], where name represents the resource name, key optionally represents the resource key to be filtered (default key value = profile.xml).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nodeSelector": {
                  "description": "Defines a set of nodes the builder pod is eligible to be scheduled on, based on labels on the node.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "orderStrategy": {
                  "description": "The build order strategy to use, either `dependencies`, `fifo` or `sequential` (default is the platform default)",
                  "type": "string",
                  "enum": [
                    "dependencies",
                    "fifo",
                    "sequential"
                  ]
                },
                "platforms": {
                  "description": "The list of manifest platforms to use to build a container image (default `linux/amd64`).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "A list of properties to be provided to the build task",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "requestCPU": {
                  "description": "When using `pod` strategy, the minimum amount of CPU required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "requestMemory": {
                  "description": "When using `pod` strategy, the minimum amount of memory required by the pod builder.\nDeprecated: use TasksRequestCPU instead with task name `builder`.",
                  "type": "string"
                },
                "strategy": {
                  "description": "The strategy to use, either `pod` or `routine` (default `routine`)",
                  "type": "string",
                  "enum": [
                    "pod",
                    "routine"
                  ]
                },
                "tasks": {
                  "description": "A list of tasks to be executed (available only when using `pod` strategy) with format `\u003cname\u003e;\u003ccontainer-image\u003e;\u003ccontainer-command\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksFilter": {
                  "description": "A list of tasks sorted by the order of execution in a csv format, ie, `\u003ctaskName1\u003e,\u003ctaskName2\u003e,...`.\nMind that you must include also the operator tasks (`builder`, `quarkus-native`, `package`, `jib`, `s2i`)\nif you need to execute them. Useful only with `pod` strategy.",
                  "type": "string"
                },
                "tasksLimitCPU": {
                  "description": "A list of limit cpu configuration for the specific task with format `\u003ctask-name\u003e:\u003climit-cpu-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksLimitMemory": {
                  "description": "A list of limit memory configuration for the specific task with format `\u003ctask-name\u003e:\u003climit-memory-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksRequestCPU": {
                  "description": "A list of request cpu configuration for the specific task with format `\u003ctask-name\u003e:\u003crequest-cpu-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tasksRequestMemory": {
                  "description": "A list of request memory configuration for the specific task with format `\u003ctask-name\u003e:\u003crequest-memory-conf\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "verbose": {
                  "description": "Enable verbose logging on build components that support it (e.g. Kaniko build pod).\nDeprecated no longer in use",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "camel": {
              "description": "The configuration of Camel trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "properties": {
                  "description": "A list of properties to be provided to the Integration runtime",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "runtimeProvider": {
                  "description": "The runtime provider to use for the integration. (Default, Camel K Runtime).",
                  "type": "string",
                  "enum": [
                    "quarkus",
                    "plain-quarkus"
                  ]
                },
                "runtimeVersion": {
                  "description": "The runtime version to use for the integration. It overrides the default version set in the Integration Platform.\nYou can use a fixed version (for example \"3.2.3\") or a semantic version (for example \"3.x\") which will try to resolve\nto the best matching Catalog existing on the cluster (Default, the one provided by the operator version).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "container": {
              "description": "The configuration of Container trait",
              "type": "object",
              "properties": {
                "allowPrivilegeEscalation": {
                  "description": "Security Context AllowPrivilegeEscalation configuration (default false).",
                  "type": "boolean"
                },
                "auto": {
                  "description": "To automatically enable the trait",
                  "type": "boolean"
                },
                "capabilitiesAdd": {
                  "description": "Security Context Capabilities Add configuration (default none).",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  }
                },
                "capabilitiesDrop": {
                  "description": "Security Context Capabilities Drop configuration (default ALL).",
                  "type": "array",
                  "items": {
                    "description": "Capability represent POSIX capabilities type",
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "expose": {
                  "description": "Can be used to enable/disable http exposure via kubernetes Service.",
                  "type": "boolean"
                },
                "image": {
                  "description": "The main container image to use for the Integration. When using this parameter the operator will create a synthetic IntegrationKit which\nwon't be able to execute traits requiring CamelCatalog. If the container image you're using is coming from an IntegrationKit, use instead\nIntegration `.spec.integrationKit` parameter. If you're moving the Integration across environments, you will also need to create an \"external\" IntegrationKit.",
                  "type": "string"
                },
                "imagePullPolicy": {
                  "description": "The pull policy: Always|Never|IfNotPresent",
                  "type": "string",
                  "enum": [
                    "Always",
                    "Never",
                    "IfNotPresent"
                  ]
                },
                "limitCPU": {
                  "description": "The maximum amount of CPU to be provided (default 500 millicores).",
                  "type": "string"
                },
                "limitMemory": {
                  "description": "The maximum amount of memory to be provided (default 512 Mi).",
                  "type": "string"
                },
                "name": {
                  "description": "The main container name. It's named `integration` by default.",
                  "type": "string"
                },
                "port": {
                  "description": "To configure a different http port exposed by the container (default `8080`).",
                  "type": "integer",
                  "format": "int32"
                },
                "portName": {
                  "description": "To configure a different http port name for the port exposed by the container.\nIt defaults to `http` only when the `expose` parameter is true.",
                  "type": "string"
                },
                "ports": {
                  "description": "List of container ports available in the container (syntax: \u003cport-name\u003e;\u003cport-number\u003e[;port-protocol]).\nWhen omitted, `port-protocol` (admitted values `TCP`, `UDP` or `SCTP`) is `TCP`.\nDon't use this for the primary http managed port (for which case you need to use `portName` and `port`).\nDon't use in Knative based environments.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "requestCPU": {
                  "description": "The minimum amount of CPU required (default 125 millicores).",
                  "type": "string"
                },
                "requestMemory": {
                  "description": "The minimum amount of memory required (default 128 Mi).",
                  "type": "string"
                },
                "runAsNonRoot": {
                  "description": "Security Context RunAsNonRoot configuration (default false).",
                  "type": "boolean"
                },
                "runAsUser": {
                  "description": "Security Context RunAsUser configuration (default none): this value is automatically retrieved in Openshift clusters when not explicitly set.",
                  "type": "integer",
                  "format": "int64"
                },
                "seccompProfileType": {
                  "description": "Security Context SeccompProfileType configuration (default RuntimeDefault).",
                  "type": "string",
                  "enum": [
                    "Unconfined",
                    "RuntimeDefault"
                  ]
                },
                "servicePort": {
                  "description": "To configure under which service port the http container port is to be exposed (default `80`).",
                  "type": "integer",
                  "format": "int32"
                },
                "servicePortName": {
                  "description": "To configure under which service port name the http container port is to be exposed (default `http`).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "cron": {
              "description": "The configuration of Cron trait",
              "type": "object",
              "properties": {
                "activeDeadlineSeconds": {
                  "description": "Specifies the duration in seconds, relative to the start time, that the job\nmay be continuously active before it is considered to be failed.\nIt defaults to 60s.",
                  "type": "integer",
                  "format": "int64"
                },
                "auto": {
                  "description": "Automatically deploy the integration as CronJob when all routes are\neither starting from a periodic consumer (only `cron`, `timer` and `quartz` are supported) or a passive consumer (e.g. `direct` is a passive consumer).\n\nIt's required that all periodic consumers have the same period, and it can be expressed as cron schedule (e.g. `1m` can be expressed as `0/1 * * * *`,\nwhile `35m` or `50s` cannot).",
                  "type": "boolean"
                },
                "backoffLimit": {
                  "description": "Specifies the number of retries before marking the job failed.\nIt defaults to 2.",
                  "type": "integer",
                  "format": "int32"
                },
                "components": {
                  "description": "A comma separated list of the Camel components that need to be customized in order for them to work when the schedule is triggered externally by Kubernetes.\nSupported components are currently: `cron`, `timer` and `quartz`.",
                  "type": "string"
                },
                "concurrencyPolicy": {
                  "description": "Specifies how to treat concurrent executions of a Job.\nValid values are:\n- \"Allow\": allows CronJobs to run concurrently;\n- \"Forbid\" (default): forbids concurrent runs, skipping next run if previous run hasn't finished yet;\n- \"Replace\": cancels currently running job and replaces it with a new one",
                  "type": "string",
                  "enum": [
                    "Allow",
                    "Forbid",
                    "Replace"
                  ]
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "fallback": {
                  "description": "Use the default Camel implementation of the `cron` endpoint (`quartz`) instead of trying to materialize the integration\nas Kubernetes CronJob.",
                  "type": "boolean"
                },
                "schedule": {
                  "description": "The CronJob schedule for the whole integration. If multiple routes are declared, they must have the same schedule for this\nmechanism to work correctly.",
                  "type": "string"
                },
                "startingDeadlineSeconds": {
                  "description": "Optional deadline in seconds for starting the job if it misses scheduled\ntime for any reason.  Missed jobs executions will be counted as failed ones.",
                  "type": "integer",
                  "format": "int64"
                },
                "timeZone": {
                  "description": "The timezone that the CronJob will run on",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dependencies": {
              "description": "The configuration of Dependencies trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "deployer": {
              "description": "The configuration of Deployer trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "kind": {
                  "description": "Allows to explicitly select the desired deployment kind between `deployment`, `cron-job` or `knative-service` when creating the resources for running the integration.",
                  "type": "string",
                  "enum": [
                    "deployment",
                    "cron-job",
                    "knative-service"
                  ]
                },
                "useSSA": {
                  "description": "Deprecated: won't be able to enforce client side update in the future.\nUse server-side apply to update the owned resources (default `true`).\nNote that it automatically falls back to client-side patching, if SSA is not available, e.g., on old Kubernetes clusters.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "deployment": {
              "description": "The configuration of Deployment trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "progressDeadlineSeconds": {
                  "description": "The maximum time in seconds for the deployment to make progress before it\nis considered to be failed. It defaults to `60s`.",
                  "type": "integer",
                  "format": "int32"
                },
                "rollingUpdateMaxSurge": {
                  "description": "The maximum number of pods that can be scheduled above the desired number of\npods.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nThis can not be 0 if MaxUnavailable is 0.\nAbsolute number is calculated from percentage by rounding up.\nDefaults to `25%`.",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "rollingUpdateMaxUnavailable": {
                  "description": "The maximum number of pods that can be unavailable during the update.\nValue can be an absolute number (ex: 5) or a percentage of desired pods (ex: 10%).\nAbsolute number is calculated from percentage by rounding down.\nThis can not be 0 if MaxSurge is 0.\nDefaults to `25%`.",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "strategy": {
                  "description": "The deployment strategy to use to replace existing pods with new ones.",
                  "type": "string",
                  "enum": [
                    "Recreate",
                    "RollingUpdate"
                  ]
                }
              },
              "additionalProperties": false
            },
            "environment": {
              "description": "The configuration of Environment trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "containerMeta": {
                  "description": "Enables injection of `NAMESPACE` and `POD_NAME` environment variables (default `true`)",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "httpProxy": {
                  "description": "Propagates the `HTTP_PROXY`, `HTTPS_PROXY` and `NO_PROXY` environment variables (default `true`)",
                  "type": "boolean"
                },
                "vars": {
                  "description": "A list of environment variables to be added to the integration container.\nThe syntax is either VAR=VALUE or VAR=[configmap|secret]:name/key, where name represents the resource name,\nand key represents the resource key to be mapped as and environment variable.\nThese take precedence over any previously defined environment variables.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "error-handler": {
              "description": "The configuration of Error Handler trait\nDeprecated: no longer in use.",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "ref": {
                  "description": "The error handler ref name provided or found in application properties",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "gc": {
              "description": "The configuration of GC trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "discoveryCache": {
                  "description": "Discovery client cache to be used, either `disabled`, `disk` or `memory` (default `memory`).\nDeprecated: no longer in use.",
                  "type": "string",
                  "enum": [
                    "disabled",
                    "disk",
                    "memory"
                  ]
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "health": {
              "description": "The configuration of Health trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "livenessFailureThreshold": {
                  "description": "Minimum consecutive failures for the liveness probe to be considered failed after having succeeded.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessInitialDelay": {
                  "description": "Number of seconds after the container has started before the liveness probe is initiated.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessPeriod": {
                  "description": "How often to perform the liveness probe.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessProbe": {
                  "description": "The liveness probe path to use (default provided by the Catalog runtime used).",
                  "type": "string"
                },
                "livenessProbeEnabled": {
                  "description": "Configures the liveness probe for the integration container (default `false`).",
                  "type": "boolean"
                },
                "livenessScheme": {
                  "description": "Scheme to use when connecting to the liveness probe (default `HTTP`).",
                  "type": "string"
                },
                "livenessSuccessThreshold": {
                  "description": "Minimum consecutive successes for the liveness probe to be considered successful after having failed.",
                  "type": "integer",
                  "format": "int32"
                },
                "livenessTimeout": {
                  "description": "Number of seconds after which the liveness probe times out.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessFailureThreshold": {
                  "description": "Minimum consecutive failures for the readiness probe to be considered failed after having succeeded.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessInitialDelay": {
                  "description": "Number of seconds after the container has started before the readiness probe is initiated.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessPeriod": {
                  "description": "How often to perform the readiness probe.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessProbe": {
                  "description": "The readiness probe path to use (default provided by the Catalog runtime used).",
                  "type": "string"
                },
                "readinessProbeEnabled": {
                  "description": "Configures the readiness probe for the integration container (default `true`).",
                  "type": "boolean"
                },
                "readinessScheme": {
                  "description": "Scheme to use when connecting to the readiness probe (default `HTTP`).",
                  "type": "string"
                },
                "readinessSuccessThreshold": {
                  "description": "Minimum consecutive successes for the readiness probe to be considered successful after having failed.",
                  "type": "integer",
                  "format": "int32"
                },
                "readinessTimeout": {
                  "description": "Number of seconds after which the readiness probe times out.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupFailureThreshold": {
                  "description": "Minimum consecutive failures for the startup probe to be considered failed after having succeeded.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupInitialDelay": {
                  "description": "Number of seconds after the container has started before the startup probe is initiated.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupPeriod": {
                  "description": "How often to perform the startup probe.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupProbe": {
                  "description": "The startup probe path to use (default provided by the Catalog runtime used).",
                  "type": "string"
                },
                "startupProbeEnabled": {
                  "description": "Configures the startup probe for the integration container (default `false`).",
                  "type": "boolean"
                },
                "startupScheme": {
                  "description": "Scheme to use when connecting to the startup probe (default `HTTP`).",
                  "type": "string"
                },
                "startupSuccessThreshold": {
                  "description": "Minimum consecutive successes for the startup probe to be considered successful after having failed.",
                  "type": "integer",
                  "format": "int32"
                },
                "startupTimeout": {
                  "description": "Number of seconds after which the startup probe times out.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "additionalProperties": false
            },
            "ingress": {
              "description": "The configuration of Ingress trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to the ingress.\nThis can be used to set controller specific annotations, e.g., when using the NGINX Ingress controller:\nSee https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/nginx-configuration/annotations.md",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "auto": {
                  "description": "To automatically add an ingress whenever the integration uses an HTTP endpoint consumer.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "host": {
                  "description": "To configure the host exposed by the ingress.",
                  "type": "string"
                },
                "ingressClassName": {
                  "description": "The Ingress class name as defined by the Ingress spec\nSee https://kubernetes.io/docs/concepts/services-networking/ingress/",
                  "type": "string"
                },
                "path": {
                  "description": "To configure the path exposed by the ingress (default `/`).\nDeprecated: In favor of `paths` - left for backward compatibility.",
                  "type": "string"
                },
                "pathType": {
                  "description": "To configure the path type exposed by the ingress.\nOne of `Exact`, `Prefix`, `ImplementationSpecific` (default to `Prefix`).",
                  "type": "string",
                  "enum": [
                    "Exact",
                    "Prefix",
                    "ImplementationSpecific"
                  ]
                },
                "paths": {
                  "description": "To configure the paths exposed by the ingress (default `['/']`).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tlsHosts": {
                  "description": "To configure tls hosts",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "tlsSecretName": {
                  "description": "To configure tls secret name",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "init-containers": {
              "description": "The configuration of Init Containers trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "initTasks": {
                  "description": "A list of init tasks to be executed with format `\u003cname\u003e;\u003ccontainer-image\u003e;\u003ccontainer-command\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sideCarTasks": {
                  "description": "A list of sidecar tasks to be executed with format `\u003cname\u003e;\u003ccontainer-image\u003e;\u003ccontainer-command\u003e`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "istio": {
              "description": "The configuration of Istio trait",
              "type": "object",
              "properties": {
                "allow": {
                  "description": "Configures a (comma-separated) list of CIDR subnets that should not be intercepted by the Istio proxy (`10.0.0.0/8,172.16.0.0/12,192.168.0.0/16` by default).",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "inject": {
                  "description": "Forces the value for labels `sidecar.istio.io/inject`. By default the label is set to `true` on deployment and not set on Knative Service.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "jolokia": {
              "description": "The configuration of Jolokia trait",
              "type": "object",
              "properties": {
                "CACert": {
                  "description": "The PEM encoded CA certification file path, used to verify client certificates,\napplicable when `protocol` is `https` and `use-ssl-client-authentication` is `true`\n(default `/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt` for OpenShift).",
                  "type": "string"
                },
                "clientPrincipal": {
                  "description": "The principal(s) which must be given in a client certificate to allow access to the Jolokia endpoint,\napplicable when `protocol` is `https` and `use-ssl-client-authentication` is `true`\n(default `clientPrincipal=cn=system:master-proxy`, `cn=hawtio-online.hawtio.svc` and `cn=fuse-console.fuse.svc` for OpenShift).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "discoveryEnabled": {
                  "description": "Listen for multicast requests (default `false`)",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "extendedClientCheck": {
                  "description": "Mandate the client certificate contains a client flag in the extended key usage section,\napplicable when `protocol` is `https` and `use-ssl-client-authentication` is `true`\n(default `true` for OpenShift).",
                  "type": "boolean"
                },
                "host": {
                  "description": "The Host address to which the Jolokia agent should bind to. If `\"\\*\"` or `\"0.0.0.0\"` is given,\nthe servers binds to every network interface (default `\"*\"`).",
                  "type": "string"
                },
                "options": {
                  "description": "A list of additional Jolokia options as defined\nin https://jolokia.org/reference/html/agents.html#agent-jvm-config[JVM agent configuration options]",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "password": {
                  "description": "The password used for authentication, applicable when the `user` option is set.",
                  "type": "string"
                },
                "port": {
                  "description": "The Jolokia endpoint port (default `8778`).",
                  "type": "integer",
                  "format": "int32"
                },
                "protocol": {
                  "description": "The protocol to use, either `http` or `https` (default `https` for OpenShift)",
                  "type": "string"
                },
                "useSSLClientAuthentication": {
                  "description": "Whether client certificates should be used for authentication (default `true` for OpenShift).",
                  "type": "boolean"
                },
                "user": {
                  "description": "The user to be used for authentication",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "jvm": {
              "description": "The configuration of JVM trait",
              "type": "object",
              "properties": {
                "agents": {
                  "description": "A list of JVM agents to download and execute with format `\u003cagent-name\u003e;\u003cagent-url\u003e[;\u003cjvm-agent-options\u003e]`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "classpath": {
                  "description": "Additional JVM classpath (use `Linux` classpath separator)",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "debug": {
                  "description": "Activates remote debugging, so that a debugger can be attached to the JVM, e.g., using port-forwarding",
                  "type": "boolean"
                },
                "debugAddress": {
                  "description": "Transport address at which to listen for the newly launched JVM (default `*:5005`)",
                  "type": "string"
                },
                "debugSuspend": {
                  "description": "Suspends the target JVM immediately before the main class is loaded",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "jar": {
                  "description": "The Jar dependency which will run the application. Leave it empty for managed Integrations.",
                  "type": "string"
                },
                "options": {
                  "description": "A list of JVM options",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "printCommand": {
                  "description": "Prints the command used the start the JVM in the container logs (default `true`)\nDeprecated: no longer in use.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "kamelets": {
              "description": "The configuration of Kamelets trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Automatically inject all referenced Kamelets and their default configuration (enabled by default)",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "list": {
                  "description": "Comma separated list of Kamelet names to load into the current integration",
                  "type": "string"
                },
                "mountPoint": {
                  "description": "The directory where the application mounts and reads Kamelet spec (default `/etc/camel/kamelets`)",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keda": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "knative": {
              "description": "The configuration of Knative trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Enable automatic discovery of all trait properties.",
                  "type": "boolean"
                },
                "channelSinks": {
                  "description": "List of channels used as destination of integration routes.\nCan contain simple channel names or full Camel URIs.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "channelSources": {
                  "description": "List of channels used as source of integration routes.\nCan contain simple channel names or full Camel URIs.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "config": {
                  "description": "Can be used to inject a Knative complete configuration in JSON format.",
                  "type": "string"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "endpointSinks": {
                  "description": "List of endpoints used as destination of integration routes.\nCan contain simple endpoint names or full Camel URIs.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "endpointSources": {
                  "description": "List of channels used as source of integration routes.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "eventSinks": {
                  "description": "List of event types that the integration will produce.\nCan contain simple event types or full Camel URIs (to use a specific broker).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "eventSources": {
                  "description": "List of event types that the integration will be subscribed to.\nCan contain simple event types or full Camel URIs (to use a specific broker different from \"default\").",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "filterEventType": {
                  "description": "Enables the default filtering for the Knative trigger using the event type\nIf this is true, the created Knative trigger uses the event type as a filter on the event stream when no other filter criteria is given. (default: true)",
                  "type": "boolean"
                },
                "filterSourceChannels": {
                  "description": "Enables filtering on events based on the header \"ce-knativehistory\". Since this header has been removed in newer versions of\nKnative, filtering is disabled by default.",
                  "type": "boolean"
                },
                "filters": {
                  "description": "Sets filter attributes on the event stream (such as event type, source, subject and so on).\nA list of key-value pairs that represent filter attributes and its values.\nThe syntax is KEY=VALUE, e.g., `source=\"my.source\"`.\nFilter attributes get set on the Knative trigger that is being created as part of this integration.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "namespaceLabel": {
                  "description": "Enables the camel-k-operator to set the \"bindings.knative.dev/include=true\" label to the namespace\nAs Knative requires this label to perform injection of K_SINK URL into the service.\nIf this is false, the integration pod may start and fail, read the SinkBinding Knative documentation. (default: true)",
                  "type": "boolean"
                },
                "sinkBinding": {
                  "description": "Allows binding the integration to a sink via a Knative SinkBinding resource.\nThis can be used when the integration targets a single sink.\nIt's enabled by default when the integration targets a single sink\n(except when the integration is owned by a Knative source).",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "knative-service": {
              "description": "The configuration of Knative Service trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to route.\nThis can be used to set knative service specific annotations\nCLI usage example: -t \"knative-service.annotations.'haproxy.router.openshift.io/balance'=true\"",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "auto": {
                  "description": "Automatically deploy the integration as Knative service when all conditions hold:\n\n* Integration is using the Knative profile\n* All routes are either starting from an HTTP based consumer or a passive consumer (e.g. `direct` is a passive consumer)",
                  "type": "boolean"
                },
                "autoscalingMetric": {
                  "description": "Configures the Knative autoscaling metric property (e.g. to set `concurrency` based or `cpu` based autoscaling).\n\nRefer to the Knative documentation for more information.",
                  "type": "string"
                },
                "autoscalingTarget": {
                  "description": "Sets the allowed concurrency level or CPU percentage (depending on the autoscaling metric) for each Pod.\n\nRefer to the Knative documentation for more information.",
                  "type": "integer"
                },
                "class": {
                  "description": "Configures the Knative autoscaling class property (e.g. to set `hpa.autoscaling.knative.dev` or `kpa.autoscaling.knative.dev` autoscaling).\n\nRefer to the Knative documentation for more information.",
                  "type": "string",
                  "enum": [
                    "kpa.autoscaling.knative.dev",
                    "hpa.autoscaling.knative.dev"
                  ]
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "maxScale": {
                  "description": "An upper bound for the number of Pods that can be running in parallel for the integration.\nKnative has its own cap value that depends on the installation.\n\nRefer to the Knative documentation for more information.",
                  "type": "integer"
                },
                "minScale": {
                  "description": "The minimum number of Pods that should be running at any time for the integration. It's **zero** by default, meaning that\nthe integration is scaled down to zero when not used for a configured amount of time.\n\nRefer to the Knative documentation for more information.",
                  "type": "integer"
                },
                "rolloutDuration": {
                  "description": "Enables to gradually shift traffic to the latest Revision and sets the rollout duration.\nIt's disabled by default and must be expressed as a Golang `time.Duration` string representation,\nrounded to a second precision.",
                  "type": "string"
                },
                "timeoutSeconds": {
                  "description": "The maximum duration in seconds that the request instance is allowed to respond to a request.\nThis field propagates to the integration pod's terminationGracePeriodSeconds\n\nRefer to the Knative documentation for more information.",
                  "type": "integer",
                  "format": "int64"
                },
                "visibility": {
                  "description": "Setting `cluster-local`, Knative service becomes a private service.\nSpecifically, this option applies the `networking.knative.dev/visibility` label to Knative service.\n\nRefer to the Knative documentation for more information.",
                  "type": "string",
                  "enum": [
                    "cluster-local"
                  ]
                }
              },
              "additionalProperties": false
            },
            "logging": {
              "description": "The configuration of Logging trait",
              "type": "object",
              "properties": {
                "color": {
                  "description": "Colorize the log output",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "format": {
                  "description": "Logs message format",
                  "type": "string"
                },
                "json": {
                  "description": "Output the logs in JSON",
                  "type": "boolean"
                },
                "jsonPrettyPrint": {
                  "description": "Enable \"pretty printing\" of the JSON logs",
                  "type": "boolean"
                },
                "level": {
                  "description": "Adjust the logging level (defaults to `INFO`)",
                  "type": "string",
                  "enum": [
                    "FATAL",
                    "WARN",
                    "INFO",
                    "DEBUG",
                    "TRACE"
                  ]
                }
              },
              "additionalProperties": false
            },
            "master": {
              "description": "The configuration of Master trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Enables automatic configuration of the trait.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "includeDelegateDependencies": {
                  "description": "When this flag is active, the operator analyzes the source code to add dependencies required by delegate endpoints.\nE.g. when using `master:lockname:timer`, then `camel:timer` is automatically added to the set of dependencies.\nIt's enabled by default.",
                  "type": "boolean"
                },
                "labelKey": {
                  "description": "Label that will be used to identify all pods contending the lock. Defaults to \"camel.apache.org/integration\".",
                  "type": "string"
                },
                "labelValue": {
                  "description": "Label value that will be used to identify all pods contending the lock. Defaults to the integration name.",
                  "type": "string"
                },
                "resourceName": {
                  "description": "Name of the configmap that will be used to store the lock. Defaults to \"\u003cintegration-name\u003e-lock\".\nName of the configmap/lease resource that will be used to store the lock. Defaults to \"\u003cintegration-name\u003e-lock\".",
                  "type": "string"
                },
                "resourceType": {
                  "description": "Type of Kubernetes resource to use for locking (\"ConfigMap\" or \"Lease\"). Defaults to \"Lease\".",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "mount": {
              "description": "The configuration of Mount trait",
              "type": "object",
              "properties": {
                "configs": {
                  "description": "A list of configuration pointing to configmap/secret.\nThe configuration are expected to be UTF-8 resources as they are processed by runtime Camel Context and tried to be parsed as property files.\nThey are also made available on the classpath in order to ease their usage directly from the Route.\nSyntax: [configmap|secret]:name[/key], where name represents the resource name and key optionally represents the resource key to be filtered",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "emptyDirs": {
                  "description": "A list of EmptyDir volumes to be mounted. An optional size limit may be configured (default 500Mi).\nSyntax: name:/container/path[:sizeLimit]",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "hotReload": {
                  "description": "Enable \"hot reload\" when a secret/configmap mounted is edited (default `false`). The configmap/secret must be\nmarked with `camel.apache.org/integration` label to be taken in account. The resource will be watched for any kind change, also for\nchanges in metadata.",
                  "type": "boolean"
                },
                "resources": {
                  "description": "A list of resources (text or binary content) pointing to configmap/secret.\nThe resources are expected to be any resource type (text or binary content).\nThe destination path can be either a default location or any path specified by the user.\nSyntax: [configmap|secret]:name[/key][@path], where name represents the resource name, key optionally represents the resource key to be filtered and path represents the destination path",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "scanKameletsImplicitLabelSecrets": {
                  "description": "Deprecated: no longer available since version 2.5.",
                  "type": "boolean"
                },
                "volumes": {
                  "description": "A list of Persistent Volume Claims to be mounted. Syntax: [pvcname:/container/path]. If the PVC is not found, the Integration fails.\nYou can use the syntax [pvcname:/container/path:size:accessMode\u003c:storageClass\u003e] to create a dynamic PVC based on the Storage Class provided\nor the default cluster Storage Class. However, if the PVC exists, the operator would mount it.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "openapi": {
              "description": "The configuration of OpenAPI trait",
              "type": "object",
              "properties": {
                "configmaps": {
                  "description": "The configmaps holding the spec of the OpenAPI (compatible with \u003e 3.0 spec only).",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "owner": {
              "description": "The configuration of Owner trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "targetAnnotations": {
                  "description": "The set of annotations to be transferred",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "targetLabels": {
                  "description": "The set of labels to be transferred",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "pdb": {
              "description": "The configuration of PDB trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "maxUnavailable": {
                  "description": "The number of pods for the Integration that can be unavailable after an eviction.\nIt can be either an absolute number or a percentage (default `1` if `min-available` is also not set).\nOnly one of `max-unavailable` and `min-available` can be specified.",
                  "type": "string"
                },
                "minAvailable": {
                  "description": "The number of pods for the Integration that must still be available after an eviction.\nIt can be either an absolute number or a percentage.\nOnly one of `min-available` and `max-unavailable` can be specified.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "platform": {
              "description": "The configuration of Platform trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "To automatically detect from the environment if a default platform can be created (it will be created on OpenShift or when a registry address is set).\nDeprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "createDefault": {
                  "description": "To create a default (empty) platform when the platform is missing.\nDeprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility",
                  "type": "boolean"
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "global": {
                  "description": "Indicates if the platform should be created globally in the case of global operator (default true).\nDeprecated: Platform is auto generated by the operator install procedure - maintained for backward compatibility",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "pod": {
              "description": "The configuration of Pod trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "prometheus": {
              "description": "The configuration of Prometheus trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "podMonitor": {
                  "description": "Whether a `PodMonitor` resource is created (default `true`).",
                  "type": "boolean"
                },
                "podMonitorLabels": {
                  "description": "The `PodMonitor` resource labels, applicable when `pod-monitor` is `true`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "pull-secret": {
              "description": "The configuration of Pull Secret trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Automatically configures the platform registry secret on the pod if it is of type `kubernetes.io/dockerconfigjson`.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "imagePullerDelegation": {
                  "description": "When using a global operator with a shared platform, this enables delegation of the `system:image-puller` cluster role on the operator namespace to the integration service account.",
                  "type": "boolean"
                },
                "secretName": {
                  "description": "The pull secret name to set on the Pod. If left empty this is automatically taken from the `IntegrationPlatform` registry configuration.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "quarkus": {
              "description": "The configuration of Quarkus trait",
              "type": "object",
              "properties": {
                "buildMode": {
                  "description": "The Quarkus mode to run: either `jvm` or `native` (default `jvm`).\nIn case both `jvm` and `native` are specified, two `IntegrationKit` resources are created,\nwith the `native` kit having precedence over the `jvm` one once ready.",
                  "type": "array",
                  "items": {
                    "description": "QuarkusMode is the type of Quarkus build packaging.",
                    "type": "string",
                    "enum": [
                      "jvm",
                      "native"
                    ]
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "nativeBaseImage": {
                  "description": "The base image to use when running a native build (default `quay.io/quarkus/quarkus-micro-image:2.0`)",
                  "type": "string"
                },
                "nativeBuilderImage": {
                  "description": "The image containing the tooling required for a native build (by default it will use the one provided in the runtime catalog)",
                  "type": "string"
                },
                "packageTypes": {
                  "description": "The Quarkus package types, `fast-jar` or `native` (default `fast-jar`).\nIn case both `fast-jar` and `native` are specified, two `IntegrationKit` resources are created,\nwith the native kit having precedence over the `fast-jar` one once ready.\nThe order influences the resolution of the current kit for the integration.\nThe kit corresponding to the first package type will be assigned to the\nintegration in case no existing kit that matches the integration exists.\nDeprecated: use `build-mode` instead.",
                  "type": "array",
                  "items": {
                    "description": "QuarkusPackageType is the type of Quarkus build packaging.\nDeprecated: use `QuarkusMode` instead.",
                    "type": "string",
                    "enum": [
                      "fast-jar",
                      "native"
                    ]
                  }
                }
              },
              "additionalProperties": false
            },
            "registry": {
              "description": "The configuration of Registry trait (support removed since version 2.5.0).\nDeprecated: use jvm trait or read documentation.",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "route": {
              "description": "The configuration of Route trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to route.\nThis can be used to set route specific annotations\nFor annotations options see https://docs.openshift.com/container-platform/3.11/architecture/networking/routes.html#route-specific-annotations\nCLI usage example: -t \"route.annotations.'haproxy.router.openshift.io/balance'=true\"",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "host": {
                  "description": "To configure the host exposed by the route.",
                  "type": "string"
                },
                "tlsCACertificate": {
                  "description": "The TLS CA certificate contents.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsCACertificateSecret": {
                  "description": "The secret name and key reference to the TLS CA certificate. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsCertificate": {
                  "description": "The TLS certificate contents.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsCertificateSecret": {
                  "description": "The secret name and key reference to the TLS certificate. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsDestinationCACertificate": {
                  "description": "The destination CA certificate provides the contents of the ca certificate of the final destination.  When using reencrypt\ntermination this file should be provided in order to have routers use it for health checks on the secure connection.\nIf this field is not specified, the router may provide its own destination CA and perform hostname validation using\nthe short service name (service.namespace.svc), which allows infrastructure generated certificates to automatically\nverify.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsDestinationCACertificateSecret": {
                  "description": "The secret name and key reference to the destination CA certificate. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsInsecureEdgeTerminationPolicy": {
                  "description": "To configure how to deal with insecure traffic, e.g. `Allow`, `Disable` or `Redirect` traffic.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Allow",
                    "Redirect"
                  ]
                },
                "tlsKey": {
                  "description": "The TLS certificate key contents.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsKeySecret": {
                  "description": "The secret name and key reference to the TLS certificate key. The format is \"secret-name[/key-name]\", the value represents the secret name, if there is only one key in the secret it will be read, otherwise you can set a key name separated with a \"/\".\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string"
                },
                "tlsTermination": {
                  "description": "The TLS termination type, like `edge`, `passthrough` or `reencrypt`.\n\nRefer to the OpenShift route documentation for additional information.",
                  "type": "string",
                  "enum": [
                    "edge",
                    "reencrypt",
                    "passthrough"
                  ]
                }
              },
              "additionalProperties": false
            },
            "security-context": {
              "description": "The configuration of Security Context trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Deprecated: no longer in use.",
                  "type": "boolean"
                },
                "runAsNonRoot": {
                  "description": "Security Context RunAsNonRoot configuration (default false).",
                  "type": "boolean"
                },
                "runAsUser": {
                  "description": "Security Context RunAsUser configuration (default none): this value is automatically retrieved in Openshift clusters when not explicitly set.",
                  "type": "integer",
                  "format": "int64"
                },
                "seccompProfileType": {
                  "description": "Security Context SeccompProfileType configuration (default RuntimeDefault).",
                  "type": "string",
                  "enum": [
                    "Unconfined",
                    "RuntimeDefault"
                  ]
                }
              },
              "additionalProperties": false
            },
            "service": {
              "description": "The configuration of Service trait",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "The annotations added to the Service object.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "auto": {
                  "description": "To automatically detect from the code if a Service needs to be created.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "labels": {
                  "description": "The labels added to the Service object.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "nodePort": {
                  "description": "Enable Service to be exposed as NodePort (default `false`).\nDeprecated: Use service type instead.",
                  "type": "boolean"
                },
                "ports": {
                  "description": "List of container ports available in the container to expose\n(syntax: \u003cport-name\u003e;\u003cport-number\u003e;\u003ccontainer-port-number\u003e[;\u003cport-protocol]).\nWhen omitted, `port-protocol` (admitted values `TCP`, `UDP` or `SCTP`) is `TCP`.\nDon't use this for the primary http managed port (which is managed by container trait).\nDon't use in Knative based environments.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "The type of service to be used, either 'ClusterIP', 'NodePort' or 'LoadBalancer'.",
                  "type": "string",
                  "enum": [
                    "ClusterIP",
                    "NodePort",
                    "LoadBalancer"
                  ]
                }
              },
              "additionalProperties": false
            },
            "service-binding": {
              "description": "The configuration of Service Binding trait\nDeprecated: no longer in use.",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "services": {
                  "description": "List of Services in the form [[apigroup/]version:]kind:[namespace/]name",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "strimzi": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            },
            "telemetry": {
              "description": "The configuration of Telemetry trait",
              "type": "object",
              "properties": {
                "auto": {
                  "description": "Enables automatic configuration of the trait, including automatic discovery of the telemetry endpoint.",
                  "type": "boolean"
                },
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "endpoint": {
                  "description": "The target endpoint of the Telemetry service (automatically discovered by default)",
                  "type": "string"
                },
                "sampler": {
                  "description": "The sampler of the telemetry used for tracing (default \"on\")",
                  "type": "string"
                },
                "sampler-parent-based": {
                  "description": "The sampler of the telemetry used for tracing is parent based (default \"true\")",
                  "type": "boolean"
                },
                "sampler-ratio": {
                  "description": "The sampler ratio of the telemetry used for tracing",
                  "type": "string"
                },
                "serviceName": {
                  "description": "The name of the service that publishes telemetry data (defaults to the integration name)",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "toleration": {
              "description": "The configuration of Toleration trait",
              "type": "object",
              "properties": {
                "configuration": {
                  "description": "Legacy trait configuration parameters.\nDeprecated: for backward compatibility.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "enabled": {
                  "description": "Can be used to enable or disable a trait. All traits share this common property.",
                  "type": "boolean"
                },
                "taints": {
                  "description": "The list of taints to tolerate, in the form `Key[=Value]:Effect[:Seconds]`",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "tracing": {
              "description": "Deprecated: for backward compatibility.",
              "type": "object",
              "required": [
                "configuration"
              ],
              "properties": {
                "configuration": {
                  "description": "TraitConfiguration parameters configuration",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
