{
  "description": "AuthBackend is the Schema for the AuthBackends API. \u003cno value\u003e",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AuthBackendSpec defines the desired state of AuthBackend",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "baseUrl": {
              "description": "The Okta url. Examples: oktapreview.com, okta.com (default)",
              "type": "string"
            },
            "bypassOktaMfa": {
              "description": "When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.",
              "type": "boolean"
            },
            "description": {
              "description": "The description of the auth backend",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "group": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groupName": {
                    "type": "string"
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                },
                "additionalProperties": false
              }
            },
            "namespace": {
              "description": "Target namespace. (requires Enterprise)",
              "type": "string"
            },
            "organization": {
              "description": "The Okta organization. This will be the first part of the url https://XXX.okta.com.",
              "type": "string"
            },
            "path": {
              "description": "path to mount the backend",
              "type": "string"
            },
            "tokenBoundCidrs": {
              "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tokenExplicitMaxTtl": {
              "description": "Generated Token's Explicit Maximum TTL in seconds",
              "type": "number"
            },
            "tokenMaxTtl": {
              "description": "The maximum lifetime of the generated token",
              "type": "number"
            },
            "tokenNoDefaultPolicy": {
              "description": "If true, the 'default' policy will not automatically be added to generated tokens",
              "type": "boolean"
            },
            "tokenNumUses": {
              "description": "The maximum number of times a token may be used, a value of zero means unlimited",
              "type": "number"
            },
            "tokenPeriod": {
              "description": "Generated Token's Period",
              "type": "number"
            },
            "tokenPolicies": {
              "description": "Generated Token's Policies",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tokenSecretRef": {
              "description": "The Okta API token. This is required to query Okta for user group membership. If this is not supplied only locally configured groups will be enabled.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "tokenTtl": {
              "description": "The initial ttl of the token to generate in seconds",
              "type": "number"
            },
            "tokenType": {
              "description": "The type of token to generate, service or batch",
              "type": "string"
            },
            "user": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "baseUrl": {
              "description": "The Okta url. Examples: oktapreview.com, okta.com (default)",
              "type": "string"
            },
            "bypassOktaMfa": {
              "description": "When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.",
              "type": "boolean"
            },
            "description": {
              "description": "The description of the auth backend",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "group": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groupName": {
                    "type": "string"
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                },
                "additionalProperties": false
              }
            },
            "namespace": {
              "description": "Target namespace. (requires Enterprise)",
              "type": "string"
            },
            "organization": {
              "description": "The Okta organization. This will be the first part of the url https://XXX.okta.com.",
              "type": "string"
            },
            "path": {
              "description": "path to mount the backend",
              "type": "string"
            },
            "tokenBoundCidrs": {
              "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tokenExplicitMaxTtl": {
              "description": "Generated Token's Explicit Maximum TTL in seconds",
              "type": "number"
            },
            "tokenMaxTtl": {
              "description": "The maximum lifetime of the generated token",
              "type": "number"
            },
            "tokenNoDefaultPolicy": {
              "description": "If true, the 'default' policy will not automatically be added to generated tokens",
              "type": "boolean"
            },
            "tokenNumUses": {
              "description": "The maximum number of times a token may be used, a value of zero means unlimited",
              "type": "number"
            },
            "tokenPeriod": {
              "description": "Generated Token's Period",
              "type": "number"
            },
            "tokenPolicies": {
              "description": "Generated Token's Policies",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tokenSecretRef": {
              "description": "The Okta API token. This is required to query Okta for user group membership. If this is not supplied only locally configured groups will be enabled.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "tokenTtl": {
              "description": "The initial ttl of the token to generate in seconds",
              "type": "number"
            },
            "tokenType": {
              "description": "The type of token to generate, service or batch",
              "type": "string"
            },
            "user": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.organization) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.organization))",
          "message": "spec.forProvider.organization is a required parameter"
        }
      ]
    },
    "status": {
      "description": "AuthBackendStatus defines the observed state of AuthBackend.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accessor": {
              "description": "The mount accessor related to the auth mount.",
              "type": "string"
            },
            "baseUrl": {
              "description": "The Okta url. Examples: oktapreview.com, okta.com (default)",
              "type": "string"
            },
            "bypassOktaMfa": {
              "description": "When true, requests by Okta for a MFA check will be bypassed. This also disallows certain status checks on the account, such as whether the password is expired.",
              "type": "boolean"
            },
            "description": {
              "description": "The description of the auth backend",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "group": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groupName": {
                    "type": "string"
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "type": "string"
            },
            "namespace": {
              "description": "Target namespace. (requires Enterprise)",
              "type": "string"
            },
            "organization": {
              "description": "The Okta organization. This will be the first part of the url https://XXX.okta.com.",
              "type": "string"
            },
            "path": {
              "description": "path to mount the backend",
              "type": "string"
            },
            "tokenBoundCidrs": {
              "description": "Specifies the blocks of IP addresses which are allowed to use the generated token",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tokenExplicitMaxTtl": {
              "description": "Generated Token's Explicit Maximum TTL in seconds",
              "type": "number"
            },
            "tokenMaxTtl": {
              "description": "The maximum lifetime of the generated token",
              "type": "number"
            },
            "tokenNoDefaultPolicy": {
              "description": "If true, the 'default' policy will not automatically be added to generated tokens",
              "type": "boolean"
            },
            "tokenNumUses": {
              "description": "The maximum number of times a token may be used, a value of zero means unlimited",
              "type": "number"
            },
            "tokenPeriod": {
              "description": "Generated Token's Period",
              "type": "number"
            },
            "tokenPolicies": {
              "description": "Generated Token's Policies",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tokenTtl": {
              "description": "The initial ttl of the token to generate in seconds",
              "type": "number"
            },
            "tokenType": {
              "description": "The type of token to generate, service or batch",
              "type": "string"
            },
            "user": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "policies": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "username": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
