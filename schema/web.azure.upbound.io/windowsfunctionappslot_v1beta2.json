{
  "description": "WindowsFunctionAppSlot is the Schema for the WindowsFunctionAppSlots API. Manages a Windows Function App Slot.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "WindowsFunctionAppSlotSpec defines the desired state of WindowsFunctionAppSlot",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs for App Settings and custom values.\nA map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "authSettings": {
              "description": "an auth_settings block as detailed below.",
              "type": "object",
              "properties": {
                "activeDirectory": {
                  "description": "an active_directory block as detailed below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "additionalLoginParameters": {
                  "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.\nSpecifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "allowedExternalRedirectUrls": {
                  "description": "Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.\nSpecifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "defaultProvider": {
                  "description": "The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github.\nThe default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Should the Authentication / Authorization feature be enabled?\nShould the Authentication / Authorization feature be enabled?",
                  "type": "boolean"
                },
                "facebook": {
                  "description": "a facebook block as detailed below.",
                  "type": "object",
                  "properties": {
                    "appId": {
                      "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                      "type": "string"
                    },
                    "appSecretSecretRef": {
                      "description": "The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.\nThe App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "appSecretSettingName": {
                      "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "github": {
                  "description": "a github block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "google": {
                  "description": "a google block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "issuer": {
                  "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens.\nThe OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                  "type": "string"
                },
                "microsoft": {
                  "description": "a microsoft block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nThe list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "runtimeVersion": {
                  "description": "The RuntimeVersion of the Authentication / Authorization feature in use.\nThe RuntimeVersion of the Authentication / Authorization feature in use.",
                  "type": "string"
                },
                "tokenRefreshExtensionHours": {
                  "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                  "type": "number"
                },
                "tokenStoreEnabled": {
                  "description": "Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.\nShould the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                  "type": "boolean"
                },
                "twitter": {
                  "description": "a twitter block as detailed below.",
                  "type": "object",
                  "properties": {
                    "consumerKey": {
                      "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                      "type": "string"
                    },
                    "consumerSecretSecretRef": {
                      "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.\nThe OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "consumerSecretSettingName": {
                      "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "unauthenticatedClientAction": {
                  "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.\nThe action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "authSettingsV2": {
              "description": "an auth_settings_v2 block as detailed below.",
              "type": "object",
              "properties": {
                "activeDirectoryV2": {
                  "description": "An active_directory_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedApplications": {
                      "description": "The list of allowed Applications for the Default Authorisation Policy.\nThe list of allowed Applications for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedGroups": {
                      "description": "The list of allowed Group Names for the Default Authorisation Policy.\nThe list of allowed Group Names for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedIdentities": {
                      "description": "The list of allowed Identities for the Default Authorisation Policy.\nThe list of allowed Identities for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                      "type": "string"
                    },
                    "clientSecretCertificateThumbprint": {
                      "description": "The thumbprint of the certificate used for signing purposes.\nThe thumbprint of the certificate used for signing purposes.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client.",
                      "type": "string"
                    },
                    "jwtAllowedClientApplications": {
                      "description": "A list of Allowed Client Applications in the JWT Claim.\nA list of Allowed Client Applications in the JWT Claim.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jwtAllowedGroups": {
                      "description": "A list of Allowed Groups in the JWT Claim.\nA list of Allowed Groups in the JWT Claim.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "loginParameters": {
                      "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.\nA map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "tenantAuthEndpoint": {
                      "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/\nThe Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                      "type": "string"
                    },
                    "wwwAuthenticationDisabled": {
                      "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false.\nShould the www-authenticate provider should be omitted from the request? Defaults to `false`",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "appleV2": {
                  "description": "An apple_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Apple web application.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Apple Login.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "authEnabled": {
                  "description": "Should the AuthV2 Settings be enabled. Defaults to false.\nShould the AuthV2 Settings be enabled. Defaults to `false`",
                  "type": "boolean"
                },
                "azureStaticWebAppV2": {
                  "description": "An azure_static_web_app_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "configFilePath": {
                  "description": "The path to the App Auth settings.\nThe path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                  "type": "string"
                },
                "customOidcV2": {
                  "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with this Custom OIDC.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name of the Custom OIDC Authentication Provider.",
                        "type": "string"
                      },
                      "nameClaimType": {
                        "description": "The name of the claim that contains the users name.\nThe name of the claim that contains the users name.",
                        "type": "string"
                      },
                      "openidConfigurationEndpoint": {
                        "description": "The app setting name that contains the client_secret value used for the Custom OIDC Login.\nThe endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                        "type": "string"
                      },
                      "scopes": {
                        "description": "The list of the scopes that should be requested while authenticating.\nThe list of the scopes that should be requested while authenticating.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "defaultProvider": {
                  "description": "The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.\nThe Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.",
                  "type": "string"
                },
                "excludedPaths": {
                  "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.\nThe paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "facebookV2": {
                  "description": "A facebook_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "appId": {
                      "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                      "type": "string"
                    },
                    "appSecretSettingName": {
                      "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login.",
                      "type": "string"
                    },
                    "graphApiVersion": {
                      "description": "The version of the Facebook API to be used while logging in.\nThe version of the Facebook API to be used while logging in.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of scopes to be requested as part of Facebook Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "forwardProxyConvention": {
                  "description": "The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.\nThe convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                  "type": "string"
                },
                "forwardProxyCustomHostHeaderName": {
                  "description": "The name of the custom header containing the host of the request.\nThe name of the header containing the host of the request.",
                  "type": "string"
                },
                "forwardProxyCustomSchemeHeaderName": {
                  "description": "The name of the custom header containing the scheme of the request.\nThe name of the header containing the scheme of the request.",
                  "type": "string"
                },
                "githubV2": {
                  "description": "A github_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "googleV2": {
                  "description": "A google_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "httpRouteApiPrefix": {
                  "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.\nThe prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                  "type": "string"
                },
                "login": {
                  "description": "A login block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedExternalRedirectUrls": {
                      "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.\nExternal URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookieExpirationConvention": {
                      "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.\nThe method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                      "type": "string"
                    },
                    "cookieExpirationTime": {
                      "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00.\nThe time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                      "type": "string"
                    },
                    "logoutEndpoint": {
                      "description": "The endpoint to which logout requests should be made.\nThe endpoint to which logout requests should be made.",
                      "type": "string"
                    },
                    "nonceExpirationTime": {
                      "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00.\nThe time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                      "type": "string"
                    },
                    "preserveUrlFragmentsForLogins": {
                      "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false.\nShould the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                      "type": "boolean"
                    },
                    "tokenRefreshExtensionTime": {
                      "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                      "type": "number"
                    },
                    "tokenStoreEnabled": {
                      "description": "Should the Token Store configuration Enabled. Defaults to false\nShould the Token Store configuration Enabled. Defaults to `false`",
                      "type": "boolean"
                    },
                    "tokenStorePath": {
                      "description": "The directory path in the App Filesystem in which the tokens will be stored.\nThe directory path in the App Filesystem in which the tokens will be stored.",
                      "type": "string"
                    },
                    "tokenStoreSasSettingName": {
                      "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens.\nThe name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                      "type": "string"
                    },
                    "validateNonce": {
                      "description": "Should the nonce be validated while completing the login flow. Defaults to true.\nShould the nonce be validated while completing the login flow. Defaults to `true`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "microsoftV2": {
                  "description": "A microsoft_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nThe list of Login scopes that will be requested as part of Microsoft Account authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "requireAuthentication": {
                  "description": "Should the authentication flow be used for all requests.\nShould the authentication flow be used for all requests.",
                  "type": "boolean"
                },
                "requireHttps": {
                  "description": "Should HTTPS be required on connections? Defaults to true.\nShould HTTPS be required on connections? Defaults to true.",
                  "type": "boolean"
                },
                "runtimeVersion": {
                  "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.\nThe Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                  "type": "string"
                },
                "twitterV2": {
                  "description": "A twitter_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "consumerKey": {
                      "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                      "type": "string"
                    },
                    "consumerSecretSettingName": {
                      "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "unauthenticatedAction": {
                  "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.\nThe action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "backup": {
              "description": "a backup block as detailed below.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Should this backup job be enabled? Defaults to true.\nShould this backup job be enabled?",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name which should be used for this Backup.\nThe name which should be used for this Backup.",
                  "type": "string"
                },
                "schedule": {
                  "description": "a schedule block as detailed below.",
                  "type": "object",
                  "properties": {
                    "frequencyInterval": {
                      "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).\nHow often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                      "type": "number"
                    },
                    "frequencyUnit": {
                      "description": "The unit of time for how often the backup should take place. Possible values include: Day and Hour.\nThe unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                      "type": "string"
                    },
                    "keepAtLeastOneBackup": {
                      "description": "Should the service keep at least one backup, regardless of age of backup. Defaults to false.\nShould the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                      "type": "boolean"
                    },
                    "retentionPeriodDays": {
                      "description": "After how many days backups should be deleted. Defaults to 30.\nAfter how many days backups should be deleted.",
                      "type": "number"
                    },
                    "startTime": {
                      "description": "When the schedule should start working in RFC-3339 format.\nWhen the schedule should start working in RFC-3339 format.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "storageAccountUrlSecretRef": {
                  "description": "The SAS URL to the container.\nThe SAS URL to the container.",
                  "type": "object",
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "builtinLoggingEnabled": {
              "description": "Should built-in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true.\nShould built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting.",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should the Function App Slot use Client Certificates.\nShould the Function App Slot use Client Certificates.",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ;\nPaths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. Defaults to Optional.\nThe mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`.",
              "type": "string"
            },
            "connectionString": {
              "description": "a connection_string block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name which should be used for this Connection.\nThe name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.\nType of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  },
                  "valueSecretRef": {
                    "description": "The connection string value.\nThe connection string value.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "contentShareForceDisabled": {
              "description": "Force disable the content share settings.\nForce disable the content share settings.",
              "type": "boolean"
            },
            "dailyMemoryTimeQuota": {
              "description": "The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to 0.\nThe amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.",
              "type": "number"
            },
            "enabled": {
              "description": "Is the Windows Function App Slot enabled. Defaults to true.\nIs the Windows Function App Slot enabled.",
              "type": "boolean"
            },
            "ftpPublishBasicAuthenticationEnabled": {
              "description": "Should the default FTP Basic Authentication publishing profile be enabled. Defaults to true.",
              "type": "boolean"
            },
            "functionAppId": {
              "description": "The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.\nThe ID of the Windows Function App this Slot is a member of.",
              "type": "string"
            },
            "functionAppIdRef": {
              "description": "Reference to a WindowsFunctionApp in web to populate functionAppId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "functionAppIdSelector": {
              "description": "Selector for a WindowsFunctionApp in web to populate functionAppId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "functionsExtensionVersion": {
              "description": "The runtime version associated with the Function App Slot. Defaults to ~4.\nThe runtime version associated with the Function App Slot.",
              "type": "string"
            },
            "httpsOnly": {
              "description": "Can the Function App Slot only be accessed via HTTPS?. Defaults to false.\nCan the Function App Slot only be accessed via HTTPS?",
              "type": "boolean"
            },
            "identity": {
              "description": "an identity block as detailed below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "A list of User Assigned Managed Identity IDs to be assigned to this Windows Function App Slot.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Windows Function App Slot. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity\nThe User Assigned Identity to use for Key Vault access.",
              "type": "string"
            },
            "publicNetworkAccessEnabled": {
              "description": "Should public network access be enabled for the Function App. Defaults to true.",
              "type": "boolean"
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.",
              "type": "string"
            },
            "siteConfig": {
              "description": "a site_config block as detailed below.",
              "type": "object",
              "properties": {
                "alwaysOn": {
                  "description": "If this Windows Web App is Always On enabled. Defaults to false.\nIf this Windows Web App is Always On enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "apiDefinitionUrl": {
                  "description": "The URL of the API definition that describes this Windows Function App.\nThe URL of the API definition that describes this Windows Function App.",
                  "type": "string"
                },
                "apiManagementApiId": {
                  "description": "The ID of the API Management API for this Windows Function App.\nThe ID of the API Management API for this Windows Function App.",
                  "type": "string"
                },
                "appCommandLine": {
                  "description": "The program and any arguments used to launch this app via the command line. (Example node myapp.js).\nThe program and any arguments used to launch this app via the command line. (Example `node myapp.js`).",
                  "type": "string"
                },
                "appScaleLimit": {
                  "description": "The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.\nThe number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.",
                  "type": "number"
                },
                "appServiceLogs": {
                  "description": "an app_service_logs block as detailed below.",
                  "type": "object",
                  "properties": {
                    "diskQuotaMb": {
                      "description": "The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.\nThe amount of disk space to use for logs. Valid values are between `25` and `100`.",
                      "type": "number"
                    },
                    "retentionPeriodDays": {
                      "description": "After how many days backups should be deleted. Defaults to 30.\nThe retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).",
                      "type": "number"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationInsightsConnectionStringSecretRef": {
                  "description": "The Connection String for linking the Windows Function App to Application Insights.\nThe Connection String for linking the Windows Function App to Application Insights.",
                  "type": "object",
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationInsightsKeySecretRef": {
                  "description": "The Instrumentation Key for connecting the Windows Function App to Application Insights.\nThe Instrumentation Key for connecting the Windows Function App to Application Insights.",
                  "type": "object",
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationStack": {
                  "description": "an application_stack block as detailed below.",
                  "type": "object",
                  "properties": {
                    "dotnetVersion": {
                      "description": "The version of .Net. Possible values are v3.0, v4.0, v6.0, v7.0, v8.0 and v9.0. Defaults to v4.0.\nThe version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0`, `v7.0`, `v8.0` and `v9.0`",
                      "type": "string"
                    },
                    "javaVersion": {
                      "description": "The version of Java to use. Possible values are 1.8, 11 and 17 (In-Preview).\nThe version of Java to use. Possible values are `1.8`, `11`, `17`, and `21`",
                      "type": "string"
                    },
                    "nodeVersion": {
                      "description": "The version of Node to use. Possible values are ~12, ~14, ~16, ~18, ~20, and ~22.\nThe version of Node to use. Possible values include `~12`, `~14`, `~16`, `~18`, `~20` and `~22`",
                      "type": "string"
                    },
                    "powershellCoreVersion": {
                      "description": "The PowerShell Core version to use. Possible values are 7, 7.2, and 7.4.\nThe PowerShell Core version to use. Possible values are `7`, `7.2`, and `7.4`",
                      "type": "string"
                    },
                    "useCustomRuntime": {
                      "description": "Does the Function App use a custom Application Stack?\nDoes the Function App use a custom Application Stack?",
                      "type": "boolean"
                    },
                    "useDotnetIsolatedRuntime": {
                      "description": "Should the DotNet process use an isolated runtime. Defaults to false.\nShould the DotNet process use an isolated runtime. Defaults to `false`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "autoSwapSlotName": {
                  "description": "The name of the slot to automatically swap with when this slot is successfully deployed.",
                  "type": "string"
                },
                "cors": {
                  "description": "a cors block as detailed below.",
                  "type": "object",
                  "properties": {
                    "allowedOrigins": {
                      "description": "Specifies a list of origins that should be allowed to make cross-origin calls.\nSpecifies a list of origins that should be allowed to make cross-origin calls.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "supportCredentials": {
                      "description": "Are credentials allowed in CORS requests? Defaults to false.\nAre credentials allowed in CORS requests? Defaults to `false`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "defaultDocuments": {
                  "description": "Specifies a list of Default Documents for the Windows Web App.\nSpecifies a list of Default Documents for the Windows Web App.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "elasticInstanceMinimum": {
                  "description": "The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.\nThe number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.",
                  "type": "number"
                },
                "ftpsState": {
                  "description": "State of FTP / FTPS service for this function app. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled.\nState of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.",
                  "type": "string"
                },
                "healthCheckEvictionTimeInMin": {
                  "description": "The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Defaults to 0. Only valid in conjunction with health_check_path.\nThe amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`",
                  "type": "number"
                },
                "healthCheckPath": {
                  "description": "The path to be checked for this function app health.\nThe path to be checked for this function app health.",
                  "type": "string"
                },
                "http2Enabled": {
                  "description": "Specifies if the HTTP2 protocol should be enabled. Defaults to false.\nSpecifies if the http2 protocol should be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "ipRestriction": {
                  "description": "an ip_restriction block as detailed below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                        "type": "string"
                      },
                      "headers": {
                        "description": "a headers block as detailed below.",
                        "type": "object",
                        "properties": {
                          "xAzureFdid": {
                            "description": "Specifies a list of Azure Front Door IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xFdHealthProbe": {
                            "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedFor": {
                            "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedHost": {
                            "description": "Specifies a list of Hosts for which matching should be applied.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ipAddress": {
                        "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                        "type": "string"
                      },
                      "priority": {
                        "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                        "type": "number"
                      },
                      "serviceTag": {
                        "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetId": {
                        "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetIdRef": {
                        "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "virtualNetworkSubnetIdSelector": {
                        "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "ipRestrictionDefaultAction": {
                  "description": "The Default action for traffic that does not match any ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                  "type": "string"
                },
                "loadBalancingMode": {
                  "description": "The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.\nThe Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.",
                  "type": "string"
                },
                "managedPipelineMode": {
                  "description": "The Managed Pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.\nThe Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.",
                  "type": "string"
                },
                "minimumTlsVersion": {
                  "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.\nThe configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, `1.2` and `1.3`. Defaults to `1.2`.",
                  "type": "string"
                },
                "preWarmedInstanceCount": {
                  "description": "The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.\nThe number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.",
                  "type": "number"
                },
                "remoteDebuggingEnabled": {
                  "description": "Should Remote Debugging be enabled. Defaults to false.\nShould Remote Debugging be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "remoteDebuggingVersion": {
                  "description": "The Remote Debugging Version. Currently only VS2022 is supported.\nThe Remote Debugging Version. Currently only `VS2022` is supported.",
                  "type": "string"
                },
                "runtimeScaleMonitoringEnabled": {
                  "description": "Should Scale Monitoring of the Functions Runtime be enabled?\nShould Functions Runtime Scale Monitoring be enabled.",
                  "type": "boolean"
                },
                "scmIpRestriction": {
                  "description": "a scm_ip_restriction block as detailed below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                        "type": "string"
                      },
                      "headers": {
                        "description": "a headers block as detailed below.",
                        "type": "object",
                        "properties": {
                          "xAzureFdid": {
                            "description": "Specifies a list of Azure Front Door IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xFdHealthProbe": {
                            "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedFor": {
                            "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedHost": {
                            "description": "Specifies a list of Hosts for which matching should be applied.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ipAddress": {
                        "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                        "type": "string"
                      },
                      "priority": {
                        "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                        "type": "number"
                      },
                      "serviceTag": {
                        "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetId": {
                        "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetIdRef": {
                        "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "virtualNetworkSubnetIdSelector": {
                        "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "scmIpRestrictionDefaultAction": {
                  "description": "The Default action for traffic that does not match any scm_ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                  "type": "string"
                },
                "scmMinimumTlsVersion": {
                  "description": "Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.\nConfigures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, `1.2` and `1.3`. Defaults to `1.2`.",
                  "type": "string"
                },
                "scmUseMainIpRestriction": {
                  "description": "Should the Windows Function App ip_restriction configuration be used for the SCM also.\nShould the Windows Function App `ip_restriction` configuration be used for the SCM also.",
                  "type": "boolean"
                },
                "use32BitWorker": {
                  "description": "Should the Windows Web App use a 32-bit worker. Defaults to true.\nShould the Windows Function App use a 32-bit worker.",
                  "type": "boolean"
                },
                "vnetRouteAllEnabled": {
                  "description": "Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.\nShould all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                  "type": "boolean"
                },
                "websocketsEnabled": {
                  "description": "Should Web Sockets be enabled. Defaults to false.\nShould Web Sockets be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "workerCount": {
                  "description": "The number of Workers for this Windows Function App.\nThe number of Workers for this Windows Function App.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accessKeySecretRef": {
                    "description": "The Access key for the storage account.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccountAccessKeySecretRef": {
              "description": "The access key which will be used to access the storage account for the Function App Slot.\nThe access key which will be used to access the storage account for the Function App Slot.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "storageAccountName": {
              "description": "The backend storage account name which will be used by this Function App Slot.\nThe backend storage account name which will be used by this Function App Slot.",
              "type": "string"
            },
            "storageAccountNameRef": {
              "description": "Reference to a Account in storage to populate storageAccountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "storageAccountNameSelector": {
              "description": "Selector for a Account in storage to populate storageAccountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "storageKeyVaultSecretId": {
              "description": "The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.\nThe Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.",
              "type": "string"
            },
            "storageUsesManagedIdentity": {
              "description": "Should the Function App Slot use its Managed Identity to access storage.\nShould the Function App Slot use its Managed Identity to access storage?",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Windows Function App Slot.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkBackupRestoreEnabled": {
              "description": "Whether backup and restore operations over the linked virtual network are enabled. Defaults to false.",
              "type": "boolean"
            },
            "virtualNetworkSubnetId": {
              "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.",
              "type": "string"
            },
            "virtualNetworkSubnetIdRef": {
              "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "virtualNetworkSubnetIdSelector": {
              "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "vnetImagePullEnabled": {
              "description": "Specifies whether traffic for the image pull should be routed over virtual network. Defaults to false.\nIs container image pull over virtual network enabled? Defaults to `false`.",
              "type": "boolean"
            },
            "webdeployPublishBasicAuthenticationEnabled": {
              "description": "Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to true.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs for App Settings and custom values.\nA map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "authSettings": {
              "description": "an auth_settings block as detailed below.",
              "type": "object",
              "properties": {
                "activeDirectory": {
                  "description": "an active_directory block as detailed below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "additionalLoginParameters": {
                  "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.\nSpecifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "allowedExternalRedirectUrls": {
                  "description": "Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.\nSpecifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "defaultProvider": {
                  "description": "The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github.\nThe default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Should the Authentication / Authorization feature be enabled?\nShould the Authentication / Authorization feature be enabled?",
                  "type": "boolean"
                },
                "facebook": {
                  "description": "a facebook block as detailed below.",
                  "type": "object",
                  "properties": {
                    "appId": {
                      "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                      "type": "string"
                    },
                    "appSecretSecretRef": {
                      "description": "The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.\nThe App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "appSecretSettingName": {
                      "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "github": {
                  "description": "a github block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "google": {
                  "description": "a google block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "issuer": {
                  "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens.\nThe OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                  "type": "string"
                },
                "microsoft": {
                  "description": "a microsoft block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "clientSecretSecretRef": {
                      "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nThe list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "runtimeVersion": {
                  "description": "The RuntimeVersion of the Authentication / Authorization feature in use.\nThe RuntimeVersion of the Authentication / Authorization feature in use.",
                  "type": "string"
                },
                "tokenRefreshExtensionHours": {
                  "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                  "type": "number"
                },
                "tokenStoreEnabled": {
                  "description": "Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.\nShould the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                  "type": "boolean"
                },
                "twitter": {
                  "description": "a twitter block as detailed below.",
                  "type": "object",
                  "properties": {
                    "consumerKey": {
                      "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                      "type": "string"
                    },
                    "consumerSecretSecretRef": {
                      "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.\nThe OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.",
                      "type": "object",
                      "required": [
                        "key",
                        "name",
                        "namespace"
                      ],
                      "properties": {
                        "key": {
                          "description": "The key to select.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "consumerSecretSettingName": {
                      "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "unauthenticatedClientAction": {
                  "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.\nThe action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "authSettingsV2": {
              "description": "an auth_settings_v2 block as detailed below.",
              "type": "object",
              "properties": {
                "activeDirectoryV2": {
                  "description": "An active_directory_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedApplications": {
                      "description": "The list of allowed Applications for the Default Authorisation Policy.\nThe list of allowed Applications for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedGroups": {
                      "description": "The list of allowed Group Names for the Default Authorisation Policy.\nThe list of allowed Group Names for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedIdentities": {
                      "description": "The list of allowed Identities for the Default Authorisation Policy.\nThe list of allowed Identities for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                      "type": "string"
                    },
                    "clientSecretCertificateThumbprint": {
                      "description": "The thumbprint of the certificate used for signing purposes.\nThe thumbprint of the certificate used for signing purposes.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client.",
                      "type": "string"
                    },
                    "jwtAllowedClientApplications": {
                      "description": "A list of Allowed Client Applications in the JWT Claim.\nA list of Allowed Client Applications in the JWT Claim.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jwtAllowedGroups": {
                      "description": "A list of Allowed Groups in the JWT Claim.\nA list of Allowed Groups in the JWT Claim.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "loginParameters": {
                      "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.\nA map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "tenantAuthEndpoint": {
                      "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/\nThe Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                      "type": "string"
                    },
                    "wwwAuthenticationDisabled": {
                      "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false.\nShould the www-authenticate provider should be omitted from the request? Defaults to `false`",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "appleV2": {
                  "description": "An apple_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Apple web application.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Apple Login.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "authEnabled": {
                  "description": "Should the AuthV2 Settings be enabled. Defaults to false.\nShould the AuthV2 Settings be enabled. Defaults to `false`",
                  "type": "boolean"
                },
                "azureStaticWebAppV2": {
                  "description": "An azure_static_web_app_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "configFilePath": {
                  "description": "The path to the App Auth settings.\nThe path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                  "type": "string"
                },
                "customOidcV2": {
                  "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "clientId": {
                        "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with this Custom OIDC.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name of the Custom OIDC Authentication Provider.",
                        "type": "string"
                      },
                      "nameClaimType": {
                        "description": "The name of the claim that contains the users name.\nThe name of the claim that contains the users name.",
                        "type": "string"
                      },
                      "openidConfigurationEndpoint": {
                        "description": "The app setting name that contains the client_secret value used for the Custom OIDC Login.\nThe endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                        "type": "string"
                      },
                      "scopes": {
                        "description": "The list of the scopes that should be requested while authenticating.\nThe list of the scopes that should be requested while authenticating.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "defaultProvider": {
                  "description": "The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.\nThe Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.",
                  "type": "string"
                },
                "excludedPaths": {
                  "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.\nThe paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "facebookV2": {
                  "description": "A facebook_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "appId": {
                      "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                      "type": "string"
                    },
                    "appSecretSettingName": {
                      "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login.",
                      "type": "string"
                    },
                    "graphApiVersion": {
                      "description": "The version of the Facebook API to be used while logging in.\nThe version of the Facebook API to be used while logging in.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of scopes to be requested as part of Facebook Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "forwardProxyConvention": {
                  "description": "The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.\nThe convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                  "type": "string"
                },
                "forwardProxyCustomHostHeaderName": {
                  "description": "The name of the custom header containing the host of the request.\nThe name of the header containing the host of the request.",
                  "type": "string"
                },
                "forwardProxyCustomSchemeHeaderName": {
                  "description": "The name of the custom header containing the scheme of the request.\nThe name of the header containing the scheme of the request.",
                  "type": "string"
                },
                "githubV2": {
                  "description": "A github_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "googleV2": {
                  "description": "A google_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "httpRouteApiPrefix": {
                  "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.\nThe prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                  "type": "string"
                },
                "login": {
                  "description": "A login block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedExternalRedirectUrls": {
                      "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.\nExternal URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookieExpirationConvention": {
                      "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.\nThe method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                      "type": "string"
                    },
                    "cookieExpirationTime": {
                      "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00.\nThe time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                      "type": "string"
                    },
                    "logoutEndpoint": {
                      "description": "The endpoint to which logout requests should be made.\nThe endpoint to which logout requests should be made.",
                      "type": "string"
                    },
                    "nonceExpirationTime": {
                      "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00.\nThe time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                      "type": "string"
                    },
                    "preserveUrlFragmentsForLogins": {
                      "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false.\nShould the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                      "type": "boolean"
                    },
                    "tokenRefreshExtensionTime": {
                      "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                      "type": "number"
                    },
                    "tokenStoreEnabled": {
                      "description": "Should the Token Store configuration Enabled. Defaults to false\nShould the Token Store configuration Enabled. Defaults to `false`",
                      "type": "boolean"
                    },
                    "tokenStorePath": {
                      "description": "The directory path in the App Filesystem in which the tokens will be stored.\nThe directory path in the App Filesystem in which the tokens will be stored.",
                      "type": "string"
                    },
                    "tokenStoreSasSettingName": {
                      "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens.\nThe name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                      "type": "string"
                    },
                    "validateNonce": {
                      "description": "Should the nonce be validated while completing the login flow. Defaults to true.\nShould the nonce be validated while completing the login flow. Defaults to `true`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "microsoftV2": {
                  "description": "A microsoft_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nThe list of Login scopes that will be requested as part of Microsoft Account authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "requireAuthentication": {
                  "description": "Should the authentication flow be used for all requests.\nShould the authentication flow be used for all requests.",
                  "type": "boolean"
                },
                "requireHttps": {
                  "description": "Should HTTPS be required on connections? Defaults to true.\nShould HTTPS be required on connections? Defaults to true.",
                  "type": "boolean"
                },
                "runtimeVersion": {
                  "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.\nThe Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                  "type": "string"
                },
                "twitterV2": {
                  "description": "A twitter_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "consumerKey": {
                      "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                      "type": "string"
                    },
                    "consumerSecretSettingName": {
                      "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "unauthenticatedAction": {
                  "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.\nThe action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "backup": {
              "description": "a backup block as detailed below.",
              "type": "object",
              "required": [
                "storageAccountUrlSecretRef"
              ],
              "properties": {
                "enabled": {
                  "description": "Should this backup job be enabled? Defaults to true.\nShould this backup job be enabled?",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name which should be used for this Backup.\nThe name which should be used for this Backup.",
                  "type": "string"
                },
                "schedule": {
                  "description": "a schedule block as detailed below.",
                  "type": "object",
                  "properties": {
                    "frequencyInterval": {
                      "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).\nHow often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                      "type": "number"
                    },
                    "frequencyUnit": {
                      "description": "The unit of time for how often the backup should take place. Possible values include: Day and Hour.\nThe unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                      "type": "string"
                    },
                    "keepAtLeastOneBackup": {
                      "description": "Should the service keep at least one backup, regardless of age of backup. Defaults to false.\nShould the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                      "type": "boolean"
                    },
                    "retentionPeriodDays": {
                      "description": "After how many days backups should be deleted. Defaults to 30.\nAfter how many days backups should be deleted.",
                      "type": "number"
                    },
                    "startTime": {
                      "description": "When the schedule should start working in RFC-3339 format.\nWhen the schedule should start working in RFC-3339 format.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "storageAccountUrlSecretRef": {
                  "description": "The SAS URL to the container.\nThe SAS URL to the container.",
                  "type": "object",
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "builtinLoggingEnabled": {
              "description": "Should built-in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true.\nShould built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting.",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should the Function App Slot use Client Certificates.\nShould the Function App Slot use Client Certificates.",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ;\nPaths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. Defaults to Optional.\nThe mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`.",
              "type": "string"
            },
            "connectionString": {
              "description": "a connection_string block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "valueSecretRef"
                ],
                "properties": {
                  "name": {
                    "description": "The name which should be used for this Connection.\nThe name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.\nType of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  },
                  "valueSecretRef": {
                    "description": "The connection string value.\nThe connection string value.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "contentShareForceDisabled": {
              "description": "Force disable the content share settings.\nForce disable the content share settings.",
              "type": "boolean"
            },
            "dailyMemoryTimeQuota": {
              "description": "The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to 0.\nThe amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.",
              "type": "number"
            },
            "enabled": {
              "description": "Is the Windows Function App Slot enabled. Defaults to true.\nIs the Windows Function App Slot enabled.",
              "type": "boolean"
            },
            "ftpPublishBasicAuthenticationEnabled": {
              "description": "Should the default FTP Basic Authentication publishing profile be enabled. Defaults to true.",
              "type": "boolean"
            },
            "functionsExtensionVersion": {
              "description": "The runtime version associated with the Function App Slot. Defaults to ~4.\nThe runtime version associated with the Function App Slot.",
              "type": "string"
            },
            "httpsOnly": {
              "description": "Can the Function App Slot only be accessed via HTTPS?. Defaults to false.\nCan the Function App Slot only be accessed via HTTPS?",
              "type": "boolean"
            },
            "identity": {
              "description": "an identity block as detailed below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "A list of User Assigned Managed Identity IDs to be assigned to this Windows Function App Slot.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Windows Function App Slot. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity\nThe User Assigned Identity to use for Key Vault access.",
              "type": "string"
            },
            "publicNetworkAccessEnabled": {
              "description": "Should public network access be enabled for the Function App. Defaults to true.",
              "type": "boolean"
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.",
              "type": "string"
            },
            "siteConfig": {
              "description": "a site_config block as detailed below.",
              "type": "object",
              "properties": {
                "alwaysOn": {
                  "description": "If this Windows Web App is Always On enabled. Defaults to false.\nIf this Windows Web App is Always On enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "apiDefinitionUrl": {
                  "description": "The URL of the API definition that describes this Windows Function App.\nThe URL of the API definition that describes this Windows Function App.",
                  "type": "string"
                },
                "apiManagementApiId": {
                  "description": "The ID of the API Management API for this Windows Function App.\nThe ID of the API Management API for this Windows Function App.",
                  "type": "string"
                },
                "appCommandLine": {
                  "description": "The program and any arguments used to launch this app via the command line. (Example node myapp.js).\nThe program and any arguments used to launch this app via the command line. (Example `node myapp.js`).",
                  "type": "string"
                },
                "appScaleLimit": {
                  "description": "The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.\nThe number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.",
                  "type": "number"
                },
                "appServiceLogs": {
                  "description": "an app_service_logs block as detailed below.",
                  "type": "object",
                  "properties": {
                    "diskQuotaMb": {
                      "description": "The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.\nThe amount of disk space to use for logs. Valid values are between `25` and `100`.",
                      "type": "number"
                    },
                    "retentionPeriodDays": {
                      "description": "After how many days backups should be deleted. Defaults to 30.\nThe retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).",
                      "type": "number"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationInsightsConnectionStringSecretRef": {
                  "description": "The Connection String for linking the Windows Function App to Application Insights.\nThe Connection String for linking the Windows Function App to Application Insights.",
                  "type": "object",
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationInsightsKeySecretRef": {
                  "description": "The Instrumentation Key for connecting the Windows Function App to Application Insights.\nThe Instrumentation Key for connecting the Windows Function App to Application Insights.",
                  "type": "object",
                  "required": [
                    "key",
                    "name",
                    "namespace"
                  ],
                  "properties": {
                    "key": {
                      "description": "The key to select.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationStack": {
                  "description": "an application_stack block as detailed below.",
                  "type": "object",
                  "properties": {
                    "dotnetVersion": {
                      "description": "The version of .Net. Possible values are v3.0, v4.0, v6.0, v7.0, v8.0 and v9.0. Defaults to v4.0.\nThe version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0`, `v7.0`, `v8.0` and `v9.0`",
                      "type": "string"
                    },
                    "javaVersion": {
                      "description": "The version of Java to use. Possible values are 1.8, 11 and 17 (In-Preview).\nThe version of Java to use. Possible values are `1.8`, `11`, `17`, and `21`",
                      "type": "string"
                    },
                    "nodeVersion": {
                      "description": "The version of Node to use. Possible values are ~12, ~14, ~16, ~18, ~20, and ~22.\nThe version of Node to use. Possible values include `~12`, `~14`, `~16`, `~18`, `~20` and `~22`",
                      "type": "string"
                    },
                    "powershellCoreVersion": {
                      "description": "The PowerShell Core version to use. Possible values are 7, 7.2, and 7.4.\nThe PowerShell Core version to use. Possible values are `7`, `7.2`, and `7.4`",
                      "type": "string"
                    },
                    "useCustomRuntime": {
                      "description": "Does the Function App use a custom Application Stack?\nDoes the Function App use a custom Application Stack?",
                      "type": "boolean"
                    },
                    "useDotnetIsolatedRuntime": {
                      "description": "Should the DotNet process use an isolated runtime. Defaults to false.\nShould the DotNet process use an isolated runtime. Defaults to `false`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "autoSwapSlotName": {
                  "description": "The name of the slot to automatically swap with when this slot is successfully deployed.",
                  "type": "string"
                },
                "cors": {
                  "description": "a cors block as detailed below.",
                  "type": "object",
                  "properties": {
                    "allowedOrigins": {
                      "description": "Specifies a list of origins that should be allowed to make cross-origin calls.\nSpecifies a list of origins that should be allowed to make cross-origin calls.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "supportCredentials": {
                      "description": "Are credentials allowed in CORS requests? Defaults to false.\nAre credentials allowed in CORS requests? Defaults to `false`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "defaultDocuments": {
                  "description": "Specifies a list of Default Documents for the Windows Web App.\nSpecifies a list of Default Documents for the Windows Web App.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "elasticInstanceMinimum": {
                  "description": "The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.\nThe number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.",
                  "type": "number"
                },
                "ftpsState": {
                  "description": "State of FTP / FTPS service for this function app. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled.\nState of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.",
                  "type": "string"
                },
                "healthCheckEvictionTimeInMin": {
                  "description": "The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Defaults to 0. Only valid in conjunction with health_check_path.\nThe amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`",
                  "type": "number"
                },
                "healthCheckPath": {
                  "description": "The path to be checked for this function app health.\nThe path to be checked for this function app health.",
                  "type": "string"
                },
                "http2Enabled": {
                  "description": "Specifies if the HTTP2 protocol should be enabled. Defaults to false.\nSpecifies if the http2 protocol should be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "ipRestriction": {
                  "description": "an ip_restriction block as detailed below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                        "type": "string"
                      },
                      "headers": {
                        "description": "a headers block as detailed below.",
                        "type": "object",
                        "properties": {
                          "xAzureFdid": {
                            "description": "Specifies a list of Azure Front Door IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xFdHealthProbe": {
                            "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedFor": {
                            "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedHost": {
                            "description": "Specifies a list of Hosts for which matching should be applied.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ipAddress": {
                        "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                        "type": "string"
                      },
                      "priority": {
                        "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                        "type": "number"
                      },
                      "serviceTag": {
                        "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetId": {
                        "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetIdRef": {
                        "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "virtualNetworkSubnetIdSelector": {
                        "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "ipRestrictionDefaultAction": {
                  "description": "The Default action for traffic that does not match any ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                  "type": "string"
                },
                "loadBalancingMode": {
                  "description": "The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.\nThe Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.",
                  "type": "string"
                },
                "managedPipelineMode": {
                  "description": "The Managed Pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.\nThe Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.",
                  "type": "string"
                },
                "minimumTlsVersion": {
                  "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.\nThe configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, `1.2` and `1.3`. Defaults to `1.2`.",
                  "type": "string"
                },
                "preWarmedInstanceCount": {
                  "description": "The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.\nThe number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.",
                  "type": "number"
                },
                "remoteDebuggingEnabled": {
                  "description": "Should Remote Debugging be enabled. Defaults to false.\nShould Remote Debugging be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "remoteDebuggingVersion": {
                  "description": "The Remote Debugging Version. Currently only VS2022 is supported.\nThe Remote Debugging Version. Currently only `VS2022` is supported.",
                  "type": "string"
                },
                "runtimeScaleMonitoringEnabled": {
                  "description": "Should Scale Monitoring of the Functions Runtime be enabled?\nShould Functions Runtime Scale Monitoring be enabled.",
                  "type": "boolean"
                },
                "scmIpRestriction": {
                  "description": "a scm_ip_restriction block as detailed below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                        "type": "string"
                      },
                      "headers": {
                        "description": "a headers block as detailed below.",
                        "type": "object",
                        "properties": {
                          "xAzureFdid": {
                            "description": "Specifies a list of Azure Front Door IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xFdHealthProbe": {
                            "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedFor": {
                            "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedHost": {
                            "description": "Specifies a list of Hosts for which matching should be applied.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ipAddress": {
                        "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                        "type": "string"
                      },
                      "priority": {
                        "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                        "type": "number"
                      },
                      "serviceTag": {
                        "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetId": {
                        "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetIdRef": {
                        "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced object.",
                            "type": "string"
                          },
                          "policy": {
                            "description": "Policies for referencing.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "virtualNetworkSubnetIdSelector": {
                        "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                        "type": "object",
                        "properties": {
                          "matchControllerRef": {
                            "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                            "type": "boolean"
                          },
                          "matchLabels": {
                            "description": "MatchLabels ensures an object with matching labels is selected.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "policy": {
                            "description": "Policies for selection.",
                            "type": "object",
                            "properties": {
                              "resolution": {
                                "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                "type": "string",
                                "default": "Required",
                                "enum": [
                                  "Required",
                                  "Optional"
                                ]
                              },
                              "resolve": {
                                "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                "type": "string",
                                "enum": [
                                  "Always",
                                  "IfNotPresent"
                                ]
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "scmIpRestrictionDefaultAction": {
                  "description": "The Default action for traffic that does not match any scm_ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                  "type": "string"
                },
                "scmMinimumTlsVersion": {
                  "description": "Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.\nConfigures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, `1.2` and `1.3`. Defaults to `1.2`.",
                  "type": "string"
                },
                "scmUseMainIpRestriction": {
                  "description": "Should the Windows Function App ip_restriction configuration be used for the SCM also.\nShould the Windows Function App `ip_restriction` configuration be used for the SCM also.",
                  "type": "boolean"
                },
                "use32BitWorker": {
                  "description": "Should the Windows Web App use a 32-bit worker. Defaults to true.\nShould the Windows Function App use a 32-bit worker.",
                  "type": "boolean"
                },
                "vnetRouteAllEnabled": {
                  "description": "Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.\nShould all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                  "type": "boolean"
                },
                "websocketsEnabled": {
                  "description": "Should Web Sockets be enabled. Defaults to false.\nShould Web Sockets be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "workerCount": {
                  "description": "The number of Workers for this Windows Function App.\nThe number of Workers for this Windows Function App.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "accessKeySecretRef"
                ],
                "properties": {
                  "accessKeySecretRef": {
                    "description": "The Access key for the storage account.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccountAccessKeySecretRef": {
              "description": "The access key which will be used to access the storage account for the Function App Slot.\nThe access key which will be used to access the storage account for the Function App Slot.",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "storageAccountName": {
              "description": "The backend storage account name which will be used by this Function App Slot.\nThe backend storage account name which will be used by this Function App Slot.",
              "type": "string"
            },
            "storageAccountNameRef": {
              "description": "Reference to a Account in storage to populate storageAccountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "storageAccountNameSelector": {
              "description": "Selector for a Account in storage to populate storageAccountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "storageKeyVaultSecretId": {
              "description": "The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.\nThe Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.",
              "type": "string"
            },
            "storageUsesManagedIdentity": {
              "description": "Should the Function App Slot use its Managed Identity to access storage.\nShould the Function App Slot use its Managed Identity to access storage?",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Windows Function App Slot.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkBackupRestoreEnabled": {
              "description": "Whether backup and restore operations over the linked virtual network are enabled. Defaults to false.",
              "type": "boolean"
            },
            "virtualNetworkSubnetId": {
              "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.",
              "type": "string"
            },
            "virtualNetworkSubnetIdRef": {
              "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "virtualNetworkSubnetIdSelector": {
              "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "vnetImagePullEnabled": {
              "description": "Specifies whether traffic for the image pull should be routed over virtual network. Defaults to false.\nIs container image pull over virtual network enabled? Defaults to `false`.",
              "type": "boolean"
            },
            "webdeployPublishBasicAuthenticationEnabled": {
              "description": "Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to true.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.siteConfig) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.siteConfig))",
          "message": "spec.forProvider.siteConfig is a required parameter"
        }
      ]
    },
    "status": {
      "description": "WindowsFunctionAppSlotStatus defines the observed state of WindowsFunctionAppSlot.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs for App Settings and custom values.\nA map of key-value pairs for [App Settings](https://docs.microsoft.com/en-us/azure/azure-functions/functions-app-settings) and custom values.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "authSettings": {
              "description": "an auth_settings block as detailed below.",
              "type": "object",
              "properties": {
                "activeDirectory": {
                  "description": "an active_directory block as detailed below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "additionalLoginParameters": {
                  "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.\nSpecifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "allowedExternalRedirectUrls": {
                  "description": "Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.\nSpecifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "defaultProvider": {
                  "description": "The default authentication provider to use when multiple providers are configured. Possible values include: AzureActiveDirectory, Facebook, Google, MicrosoftAccount, Twitter, Github.\nThe default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Should the Authentication / Authorization feature be enabled?\nShould the Authentication / Authorization feature be enabled?",
                  "type": "boolean"
                },
                "facebook": {
                  "description": "a facebook block as detailed below.",
                  "type": "object",
                  "properties": {
                    "appId": {
                      "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                      "type": "string"
                    },
                    "appSecretSettingName": {
                      "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "github": {
                  "description": "a github block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "google": {
                  "description": "a google block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "issuer": {
                  "description": "The OpenID Connect Issuer URI that represents the entity which issues access tokens.\nThe OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                  "type": "string"
                },
                "microsoft": {
                  "description": "a microsoft block as detailed below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                      "type": "string"
                    },
                    "oauthScopes": {
                      "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, wl.basic is used as the default scope.\nThe list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "runtimeVersion": {
                  "description": "The RuntimeVersion of the Authentication / Authorization feature in use.\nThe RuntimeVersion of the Authentication / Authorization feature in use.",
                  "type": "string"
                },
                "tokenRefreshExtensionHours": {
                  "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                  "type": "number"
                },
                "tokenStoreEnabled": {
                  "description": "Should the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.\nShould the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                  "type": "boolean"
                },
                "twitter": {
                  "description": "a twitter block as detailed below.",
                  "type": "object",
                  "properties": {
                    "consumerKey": {
                      "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                      "type": "string"
                    },
                    "consumerSecretSettingName": {
                      "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "unauthenticatedClientAction": {
                  "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.\nThe action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "authSettingsV2": {
              "description": "an auth_settings_v2 block as detailed below.",
              "type": "object",
              "properties": {
                "activeDirectoryV2": {
                  "description": "An active_directory_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedApplications": {
                      "description": "The list of allowed Applications for the Default Authorisation Policy.\nThe list of allowed Applications for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedGroups": {
                      "description": "The list of allowed Group Names for the Default Authorisation Policy.\nThe list of allowed Group Names for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "allowedIdentities": {
                      "description": "The list of allowed Identities for the Default Authorisation Policy.\nThe list of allowed Identities for the Default Authorisation Policy.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                      "type": "string"
                    },
                    "clientSecretCertificateThumbprint": {
                      "description": "The thumbprint of the certificate used for signing purposes.\nThe thumbprint of the certificate used for signing purposes.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client.",
                      "type": "string"
                    },
                    "jwtAllowedClientApplications": {
                      "description": "A list of Allowed Client Applications in the JWT Claim.\nA list of Allowed Client Applications in the JWT Claim.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "jwtAllowedGroups": {
                      "description": "A list of Allowed Groups in the JWT Claim.\nA list of Allowed Groups in the JWT Claim.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "loginParameters": {
                      "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.\nA map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-map-type": "granular"
                    },
                    "tenantAuthEndpoint": {
                      "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/\nThe Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                      "type": "string"
                    },
                    "wwwAuthenticationDisabled": {
                      "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false.\nShould the www-authenticate provider should be omitted from the request? Defaults to `false`",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "appleV2": {
                  "description": "An apple_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Apple web application.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Apple Login.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "authEnabled": {
                  "description": "Should the AuthV2 Settings be enabled. Defaults to false.\nShould the AuthV2 Settings be enabled. Defaults to `false`",
                  "type": "boolean"
                },
                "azureStaticWebAppV2": {
                  "description": "An azure_static_web_app_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "configFilePath": {
                  "description": "The path to the App Auth settings.\nThe path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                  "type": "string"
                },
                "customOidcV2": {
                  "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "authorisationEndpoint": {
                        "description": "The endpoint to make the Authorisation Request as supplied by openid_configuration_endpoint response.\nThe endpoint to make the Authorisation Request.",
                        "type": "string"
                      },
                      "certificationUri": {
                        "description": "The endpoint that provides the keys necessary to validate the token as supplied by openid_configuration_endpoint response.\nThe endpoint that provides the keys necessary to validate the token.",
                        "type": "string"
                      },
                      "clientCredentialMethod": {
                        "description": "The Client Credential Method used.\nThe Client Credential Method used. Currently the only supported value is `ClientSecretPost`.",
                        "type": "string"
                      },
                      "clientId": {
                        "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with this Custom OIDC.",
                        "type": "string"
                      },
                      "clientSecretSettingName": {
                        "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the secret for this Custom OIDC Client.",
                        "type": "string"
                      },
                      "issuerEndpoint": {
                        "description": "The endpoint that issued the Token as supplied by openid_configuration_endpoint response.\nThe endpoint that issued the Token.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name of the Custom OIDC Authentication Provider.",
                        "type": "string"
                      },
                      "nameClaimType": {
                        "description": "The name of the claim that contains the users name.\nThe name of the claim that contains the users name.",
                        "type": "string"
                      },
                      "openidConfigurationEndpoint": {
                        "description": "The app setting name that contains the client_secret value used for the Custom OIDC Login.\nThe endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                        "type": "string"
                      },
                      "scopes": {
                        "description": "The list of the scopes that should be requested while authenticating.\nThe list of the scopes that should be requested while authenticating.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "tokenEndpoint": {
                        "description": "The endpoint used to request a Token as supplied by openid_configuration_endpoint response.\nThe endpoint used to request a Token.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "defaultProvider": {
                  "description": "The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.\nThe Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.",
                  "type": "string"
                },
                "excludedPaths": {
                  "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.\nThe paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "facebookV2": {
                  "description": "A facebook_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "appId": {
                      "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                      "type": "string"
                    },
                    "appSecretSettingName": {
                      "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login.",
                      "type": "string"
                    },
                    "graphApiVersion": {
                      "description": "The version of the Facebook API to be used while logging in.\nThe version of the Facebook API to be used while logging in.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of scopes to be requested as part of Facebook Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "forwardProxyConvention": {
                  "description": "The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.\nThe convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                  "type": "string"
                },
                "forwardProxyCustomHostHeaderName": {
                  "description": "The name of the custom header containing the host of the request.\nThe name of the header containing the host of the request.",
                  "type": "string"
                },
                "forwardProxyCustomSchemeHeaderName": {
                  "description": "The name of the custom header containing the scheme of the request.\nThe name of the header containing the scheme of the request.",
                  "type": "string"
                },
                "githubV2": {
                  "description": "A github_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "googleV2": {
                  "description": "A google_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "httpRouteApiPrefix": {
                  "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.\nThe prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                  "type": "string"
                },
                "login": {
                  "description": "A login block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedExternalRedirectUrls": {
                      "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.\nExternal URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cookieExpirationConvention": {
                      "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.\nThe method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                      "type": "string"
                    },
                    "cookieExpirationTime": {
                      "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00.\nThe time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                      "type": "string"
                    },
                    "logoutEndpoint": {
                      "description": "The endpoint to which logout requests should be made.\nThe endpoint to which logout requests should be made.",
                      "type": "string"
                    },
                    "nonceExpirationTime": {
                      "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00.\nThe time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                      "type": "string"
                    },
                    "preserveUrlFragmentsForLogins": {
                      "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false.\nShould the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                      "type": "boolean"
                    },
                    "tokenRefreshExtensionTime": {
                      "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                      "type": "number"
                    },
                    "tokenStoreEnabled": {
                      "description": "Should the Token Store configuration Enabled. Defaults to false\nShould the Token Store configuration Enabled. Defaults to `false`",
                      "type": "boolean"
                    },
                    "tokenStorePath": {
                      "description": "The directory path in the App Filesystem in which the tokens will be stored.\nThe directory path in the App Filesystem in which the tokens will be stored.",
                      "type": "string"
                    },
                    "tokenStoreSasSettingName": {
                      "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens.\nThe name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                      "type": "string"
                    },
                    "validateNonce": {
                      "description": "Should the nonce be validated while completing the login flow. Defaults to true.\nShould the nonce be validated while completing the login flow. Defaults to `true`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "microsoftV2": {
                  "description": "A microsoft_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "allowedAudiences": {
                      "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "clientId": {
                      "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "clientSecretSettingName": {
                      "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                      "type": "string"
                    },
                    "loginScopes": {
                      "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nThe list of Login scopes that will be requested as part of Microsoft Account authentication.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "requireAuthentication": {
                  "description": "Should the authentication flow be used for all requests.\nShould the authentication flow be used for all requests.",
                  "type": "boolean"
                },
                "requireHttps": {
                  "description": "Should HTTPS be required on connections? Defaults to true.\nShould HTTPS be required on connections? Defaults to true.",
                  "type": "boolean"
                },
                "runtimeVersion": {
                  "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.\nThe Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                  "type": "string"
                },
                "twitterV2": {
                  "description": "A twitter_v2 block as defined below.",
                  "type": "object",
                  "properties": {
                    "consumerKey": {
                      "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                      "type": "string"
                    },
                    "consumerSecretSettingName": {
                      "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "unauthenticatedAction": {
                  "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.\nThe action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "backup": {
              "description": "a backup block as detailed below.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Should this backup job be enabled? Defaults to true.\nShould this backup job be enabled?",
                  "type": "boolean"
                },
                "name": {
                  "description": "The name which should be used for this Backup.\nThe name which should be used for this Backup.",
                  "type": "string"
                },
                "schedule": {
                  "description": "a schedule block as detailed below.",
                  "type": "object",
                  "properties": {
                    "frequencyInterval": {
                      "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).\nHow often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                      "type": "number"
                    },
                    "frequencyUnit": {
                      "description": "The unit of time for how often the backup should take place. Possible values include: Day and Hour.\nThe unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                      "type": "string"
                    },
                    "keepAtLeastOneBackup": {
                      "description": "Should the service keep at least one backup, regardless of age of backup. Defaults to false.\nShould the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                      "type": "boolean"
                    },
                    "lastExecutionTime": {
                      "description": "The time the backup was last attempted.\nThe time the backup was last attempted.",
                      "type": "string"
                    },
                    "retentionPeriodDays": {
                      "description": "After how many days backups should be deleted. Defaults to 30.\nAfter how many days backups should be deleted.",
                      "type": "number"
                    },
                    "startTime": {
                      "description": "When the schedule should start working in RFC-3339 format.\nWhen the schedule should start working in RFC-3339 format.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "builtinLoggingEnabled": {
              "description": "Should built-in logging be enabled. Configures AzureWebJobsDashboard app setting based on the configured storage setting. Defaults to true.\nShould built in logging be enabled. Configures `AzureWebJobsDashboard` app setting based on the configured storage setting.",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should the Function App Slot use Client Certificates.\nShould the Function App Slot use Client Certificates.",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ;\nPaths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are Required, Optional, and OptionalInteractiveUser. Defaults to Optional.\nThe mode of the Function App Slot's client certificates requirement for incoming requests. Possible values are `Required`, `Optional`, and `OptionalInteractiveUser`.",
              "type": "string"
            },
            "connectionString": {
              "description": "a connection_string block as detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name which should be used for this Connection.\nThe name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: APIHub, Custom, DocDb, EventHub, MySQL, NotificationHub, PostgreSQL, RedisCache, ServiceBus, SQLAzure, and SQLServer.\nType of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "contentShareForceDisabled": {
              "description": "Force disable the content share settings.\nForce disable the content share settings.",
              "type": "boolean"
            },
            "dailyMemoryTimeQuota": {
              "description": "The amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans. Defaults to 0.\nThe amount of memory in gigabyte-seconds that your application is allowed to consume per day. Setting this value only affects function apps in Consumption Plans.",
              "type": "number"
            },
            "defaultHostname": {
              "description": "The default hostname of the Windows Function App Slot.\nThe default hostname of the Windows Function App Slot.",
              "type": "string"
            },
            "enabled": {
              "description": "Is the Windows Function App Slot enabled. Defaults to true.\nIs the Windows Function App Slot enabled.",
              "type": "boolean"
            },
            "ftpPublishBasicAuthenticationEnabled": {
              "description": "Should the default FTP Basic Authentication publishing profile be enabled. Defaults to true.",
              "type": "boolean"
            },
            "functionAppId": {
              "description": "The name of the Windows Function App this Slot is a member of. Changing this forces a new resource to be created.\nThe ID of the Windows Function App this Slot is a member of.",
              "type": "string"
            },
            "functionsExtensionVersion": {
              "description": "The runtime version associated with the Function App Slot. Defaults to ~4.\nThe runtime version associated with the Function App Slot.",
              "type": "string"
            },
            "hostingEnvironmentId": {
              "description": "The ID of the App Service Environment used by Function App Slot.",
              "type": "string"
            },
            "httpsOnly": {
              "description": "Can the Function App Slot only be accessed via HTTPS?. Defaults to false.\nCan the Function App Slot only be accessed via HTTPS?",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the Windows Function App Slot",
              "type": "string"
            },
            "identity": {
              "description": "an identity block as detailed below.",
              "type": "object",
              "properties": {
                "identityIds": {
                  "description": "A list of User Assigned Managed Identity IDs to be assigned to this Windows Function App Slot.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "principalId": {
                  "description": "The Principal ID associated with this Managed Service Identity.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "The Tenant ID associated with this Managed Service Identity.",
                  "type": "string"
                },
                "type": {
                  "description": "Specifies the type of Managed Service Identity that should be configured on this Windows Function App Slot. Possible values are SystemAssigned, UserAssigned, SystemAssigned, UserAssigned (to enable both).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity\nThe User Assigned Identity to use for Key Vault access.",
              "type": "string"
            },
            "kind": {
              "description": "The Kind value for this Windows Function App Slot.\nThe Kind value for this Windows Function App Slot.",
              "type": "string"
            },
            "outboundIpAddressList": {
              "description": "A list of outbound IP addresses. For example [\"52.23.25.3\", \"52.143.43.12\"].\nA list of outbound IP addresses. For example `[\"52.23.25.3\", \"52.143.43.12\"]`.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outboundIpAddresses": {
              "description": "A comma separated list of outbound IP addresses as a string. For example 52.23.25.3,52.143.43.12.\nA comma separated list of outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12`.",
              "type": "string"
            },
            "possibleOutboundIpAddressList": {
              "description": "A list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of outbound_ip_address_list. For example [\"52.23.25.3\", \"52.143.43.12\"].\nA list of possible outbound IP addresses, not all of which are necessarily in use. This is a superset of `outbound_ip_address_list`. For example `[\"52.23.25.3\", \"52.143.43.12\"]`.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "possibleOutboundIpAddresses": {
              "description": "A comma separated list of possible outbound IP addresses as a string. For example 52.23.25.3,52.143.43.12,52.143.43.17. This is a superset of outbound_ip_addresses. For example [\"52.23.25.3\", \"52.143.43.12\",\"52.143.43.17\"].\nA comma separated list of possible outbound IP addresses as a string. For example `52.23.25.3,52.143.43.12,52.143.43.17`. This is a superset of `outbound_ip_addresses`. For example `[\"52.23.25.3\", \"52.143.43.12\",\"52.143.43.17\"]`.",
              "type": "string"
            },
            "publicNetworkAccessEnabled": {
              "description": "Should public network access be enabled for the Function App. Defaults to true.",
              "type": "boolean"
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan in which to run this slot. If not specified the same Service Plan as the Windows Function App will be used.",
              "type": "string"
            },
            "siteConfig": {
              "description": "a site_config block as detailed below.",
              "type": "object",
              "properties": {
                "alwaysOn": {
                  "description": "If this Windows Web App is Always On enabled. Defaults to false.\nIf this Windows Web App is Always On enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "apiDefinitionUrl": {
                  "description": "The URL of the API definition that describes this Windows Function App.\nThe URL of the API definition that describes this Windows Function App.",
                  "type": "string"
                },
                "apiManagementApiId": {
                  "description": "The ID of the API Management API for this Windows Function App.\nThe ID of the API Management API for this Windows Function App.",
                  "type": "string"
                },
                "appCommandLine": {
                  "description": "The program and any arguments used to launch this app via the command line. (Example node myapp.js).\nThe program and any arguments used to launch this app via the command line. (Example `node myapp.js`).",
                  "type": "string"
                },
                "appScaleLimit": {
                  "description": "The number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.\nThe number of workers this function app can scale out to. Only applicable to apps on the Consumption and Premium plan.",
                  "type": "number"
                },
                "appServiceLogs": {
                  "description": "an app_service_logs block as detailed below.",
                  "type": "object",
                  "properties": {
                    "diskQuotaMb": {
                      "description": "The amount of disk space to use for logs. Valid values are between 25 and 100. Defaults to 35.\nThe amount of disk space to use for logs. Valid values are between `25` and `100`.",
                      "type": "number"
                    },
                    "retentionPeriodDays": {
                      "description": "After how many days backups should be deleted. Defaults to 30.\nThe retention period for logs in days. Valid values are between `0` and `99999`. Defaults to `0` (never delete).",
                      "type": "number"
                    }
                  },
                  "additionalProperties": false
                },
                "applicationStack": {
                  "description": "an application_stack block as detailed below.",
                  "type": "object",
                  "properties": {
                    "dotnetVersion": {
                      "description": "The version of .Net. Possible values are v3.0, v4.0, v6.0, v7.0, v8.0 and v9.0. Defaults to v4.0.\nThe version of .Net. Possible values are `v3.0`, `v4.0`, `v6.0`, `v7.0`, `v8.0` and `v9.0`",
                      "type": "string"
                    },
                    "javaVersion": {
                      "description": "The version of Java to use. Possible values are 1.8, 11 and 17 (In-Preview).\nThe version of Java to use. Possible values are `1.8`, `11`, `17`, and `21`",
                      "type": "string"
                    },
                    "nodeVersion": {
                      "description": "The version of Node to use. Possible values are ~12, ~14, ~16, ~18, ~20, and ~22.\nThe version of Node to use. Possible values include `~12`, `~14`, `~16`, `~18`, `~20` and `~22`",
                      "type": "string"
                    },
                    "powershellCoreVersion": {
                      "description": "The PowerShell Core version to use. Possible values are 7, 7.2, and 7.4.\nThe PowerShell Core version to use. Possible values are `7`, `7.2`, and `7.4`",
                      "type": "string"
                    },
                    "useCustomRuntime": {
                      "description": "Does the Function App use a custom Application Stack?\nDoes the Function App use a custom Application Stack?",
                      "type": "boolean"
                    },
                    "useDotnetIsolatedRuntime": {
                      "description": "Should the DotNet process use an isolated runtime. Defaults to false.\nShould the DotNet process use an isolated runtime. Defaults to `false`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "autoSwapSlotName": {
                  "description": "The name of the slot to automatically swap with when this slot is successfully deployed.",
                  "type": "string"
                },
                "cors": {
                  "description": "a cors block as detailed below.",
                  "type": "object",
                  "properties": {
                    "allowedOrigins": {
                      "description": "Specifies a list of origins that should be allowed to make cross-origin calls.\nSpecifies a list of origins that should be allowed to make cross-origin calls.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "supportCredentials": {
                      "description": "Are credentials allowed in CORS requests? Defaults to false.\nAre credentials allowed in CORS requests? Defaults to `false`.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "defaultDocuments": {
                  "description": "Specifies a list of Default Documents for the Windows Web App.\nSpecifies a list of Default Documents for the Windows Web App.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "detailedErrorLoggingEnabled": {
                  "description": "Is detailed error logging enabled\nIs detailed error logging enabled",
                  "type": "boolean"
                },
                "elasticInstanceMinimum": {
                  "description": "The number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.\nThe number of minimum instances for this Windows Function App. Only affects apps on Elastic Premium plans.",
                  "type": "number"
                },
                "ftpsState": {
                  "description": "State of FTP / FTPS service for this function app. Possible values include: AllAllowed, FtpsOnly and Disabled. Defaults to Disabled.\nState of FTP / FTPS service for this function app. Possible values include: `AllAllowed`, `FtpsOnly` and `Disabled`. Defaults to `Disabled`.",
                  "type": "string"
                },
                "healthCheckEvictionTimeInMin": {
                  "description": "The amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Defaults to 0. Only valid in conjunction with health_check_path.\nThe amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Defaults to `10`. Only valid in conjunction with `health_check_path`",
                  "type": "number"
                },
                "healthCheckPath": {
                  "description": "The path to be checked for this function app health.\nThe path to be checked for this function app health.",
                  "type": "string"
                },
                "http2Enabled": {
                  "description": "Specifies if the HTTP2 protocol should be enabled. Defaults to false.\nSpecifies if the http2 protocol should be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "ipRestriction": {
                  "description": "an ip_restriction block as detailed below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                        "type": "string"
                      },
                      "headers": {
                        "description": "a headers block as detailed below.",
                        "type": "object",
                        "properties": {
                          "xAzureFdid": {
                            "description": "Specifies a list of Azure Front Door IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xFdHealthProbe": {
                            "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedFor": {
                            "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedHost": {
                            "description": "Specifies a list of Hosts for which matching should be applied.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ipAddress": {
                        "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                        "type": "string"
                      },
                      "priority": {
                        "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                        "type": "number"
                      },
                      "serviceTag": {
                        "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetId": {
                        "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "ipRestrictionDefaultAction": {
                  "description": "The Default action for traffic that does not match any ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                  "type": "string"
                },
                "loadBalancingMode": {
                  "description": "The Site load balancing mode. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.\nThe Site load balancing mode. Possible values include: `WeightedRoundRobin`, `LeastRequests`, `LeastResponseTime`, `WeightedTotalTraffic`, `RequestHash`, `PerSiteRoundRobin`. Defaults to `LeastRequests` if omitted.",
                  "type": "string"
                },
                "managedPipelineMode": {
                  "description": "The Managed Pipeline mode. Possible values include: Integrated, Classic. Defaults to Integrated.\nThe Managed Pipeline mode. Possible values include: `Integrated`, `Classic`. Defaults to `Integrated`.",
                  "type": "string"
                },
                "minimumTlsVersion": {
                  "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.\nThe configures the minimum version of TLS required for SSL requests. Possible values include: `1.0`, `1.1`, `1.2` and `1.3`. Defaults to `1.2`.",
                  "type": "string"
                },
                "preWarmedInstanceCount": {
                  "description": "The number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.\nThe number of pre-warmed instances for this function app. Only affects apps on an Elastic Premium plan.",
                  "type": "number"
                },
                "remoteDebuggingEnabled": {
                  "description": "Should Remote Debugging be enabled. Defaults to false.\nShould Remote Debugging be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "remoteDebuggingVersion": {
                  "description": "The Remote Debugging Version. Currently only VS2022 is supported.\nThe Remote Debugging Version. Currently only `VS2022` is supported.",
                  "type": "string"
                },
                "runtimeScaleMonitoringEnabled": {
                  "description": "Should Scale Monitoring of the Functions Runtime be enabled?\nShould Functions Runtime Scale Monitoring be enabled.",
                  "type": "boolean"
                },
                "scmIpRestriction": {
                  "description": "a scm_ip_restriction block as detailed below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                        "type": "string"
                      },
                      "description": {
                        "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                        "type": "string"
                      },
                      "headers": {
                        "description": "a headers block as detailed below.",
                        "type": "object",
                        "properties": {
                          "xAzureFdid": {
                            "description": "Specifies a list of Azure Front Door IDs.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xFdHealthProbe": {
                            "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedFor": {
                            "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "xForwardedHost": {
                            "description": "Specifies a list of Hosts for which matching should be applied.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "additionalProperties": false
                      },
                      "ipAddress": {
                        "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                        "type": "string"
                      },
                      "priority": {
                        "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                        "type": "number"
                      },
                      "serviceTag": {
                        "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                        "type": "string"
                      },
                      "virtualNetworkSubnetId": {
                        "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "scmIpRestrictionDefaultAction": {
                  "description": "The Default action for traffic that does not match any scm_ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                  "type": "string"
                },
                "scmMinimumTlsVersion": {
                  "description": "Configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.\nConfigures the minimum version of TLS required for SSL requests to the SCM site Possible values include: `1.0`, `1.1`, `1.2` and `1.3`. Defaults to `1.2`.",
                  "type": "string"
                },
                "scmType": {
                  "description": "The SCM Type in use by the Windows Function App.\nThe SCM Type in use by the Windows Function App.",
                  "type": "string"
                },
                "scmUseMainIpRestriction": {
                  "description": "Should the Windows Function App ip_restriction configuration be used for the SCM also.\nShould the Windows Function App `ip_restriction` configuration be used for the SCM also.",
                  "type": "boolean"
                },
                "use32BitWorker": {
                  "description": "Should the Windows Web App use a 32-bit worker. Defaults to true.\nShould the Windows Function App use a 32-bit worker.",
                  "type": "boolean"
                },
                "vnetRouteAllEnabled": {
                  "description": "Should all outbound traffic to have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.\nShould all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                  "type": "boolean"
                },
                "websocketsEnabled": {
                  "description": "Should Web Sockets be enabled. Defaults to false.\nShould Web Sockets be enabled. Defaults to `false`.",
                  "type": "boolean"
                },
                "windowsFxVersion": {
                  "description": "The Windows FX Version string.\nThe Windows FX Version string.",
                  "type": "string"
                },
                "workerCount": {
                  "description": "The number of Workers for this Windows Function App.\nThe number of Workers for this Windows Function App.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccountName": {
              "description": "The backend storage account name which will be used by this Function App Slot.\nThe backend storage account name which will be used by this Function App Slot.",
              "type": "string"
            },
            "storageKeyVaultSecretId": {
              "description": "The Key Vault Secret ID, optionally including version, that contains the Connection String to connect to the storage account for this Function App Slot.\nThe Key Vault Secret ID, including version, that contains the Connection String to connect to the storage account for this Function App.",
              "type": "string"
            },
            "storageUsesManagedIdentity": {
              "description": "Should the Function App Slot use its Managed Identity to access storage.\nShould the Function App Slot use its Managed Identity to access storage?",
              "type": "boolean"
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Windows Function App Slot.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkBackupRestoreEnabled": {
              "description": "Whether backup and restore operations over the linked virtual network are enabled. Defaults to false.",
              "type": "boolean"
            },
            "virtualNetworkSubnetId": {
              "description": "The subnet id which will be used by this Function App Slot for regional virtual network integration.",
              "type": "string"
            },
            "vnetImagePullEnabled": {
              "description": "Specifies whether traffic for the image pull should be routed over virtual network. Defaults to false.\nIs container image pull over virtual network enabled? Defaults to `false`.",
              "type": "boolean"
            },
            "webdeployPublishBasicAuthenticationEnabled": {
              "description": "Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to true.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
