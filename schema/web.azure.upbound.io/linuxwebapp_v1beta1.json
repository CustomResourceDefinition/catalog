{
  "description": "LinuxWebApp is the Schema for the LinuxWebApps API. Manages a Linux Web App.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LinuxWebAppSpec defines the desired state of LinuxWebApp",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs of App Settings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "authSettings": {
              "description": "A auth_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectory": {
                    "description": "An active_directory block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalLoginParameters": {
                    "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.\nSpecifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "allowedExternalRedirectUrls": {
                    "description": "Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Linux Web App.\nSpecifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultProvider": {
                    "description": "The default authentication provider to use when multiple providers are configured. Possible values include: BuiltInAuthenticationProviderAzureActiveDirectory, BuiltInAuthenticationProviderFacebook, BuiltInAuthenticationProviderGoogle, BuiltInAuthenticationProviderMicrosoftAccount, BuiltInAuthenticationProviderTwitter, BuiltInAuthenticationProviderGithub\nThe default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Should the Authentication / Authorization feature be enabled for the Linux Web App?\nShould the Authentication / Authorization feature be enabled?",
                    "type": "boolean"
                  },
                  "facebook": {
                    "description": "A facebook block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSecretRef": {
                          "description": "The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.\nThe App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "github": {
                    "description": "A github block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "google": {
                    "description": "A google block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "issuer": {
                    "description": "The OpenID Connect Issuer URI that represents the entity that issues access tokens for this Linux Web App.\nThe OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                    "type": "string"
                  },
                  "microsoft": {
                    "description": "A microsoft block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nThe list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "runtimeVersion": {
                    "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.\nThe RuntimeVersion of the Authentication / Authorization feature in use.",
                    "type": "string"
                  },
                  "tokenRefreshExtensionHours": {
                    "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                    "type": "number"
                  },
                  "tokenStoreEnabled": {
                    "description": "Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.\nShould the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "twitter": {
                    "description": "A twitter block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSecretRef": {
                          "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.\nThe OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "unauthenticatedClientAction": {
                    "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.\nThe action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "authSettingsV2": {
              "description": "An auth_settings_v2 block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryV2": {
                    "description": "An active_directory_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedApplications": {
                          "description": "The list of allowed Applications for the Default Authorisation Policy.\nThe list of allowed Applications for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedGroups": {
                          "description": "The list of allowed Group Names for the Default Authorisation Policy.\nThe list of allowed Group Names for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedIdentities": {
                          "description": "The list of allowed Identities for the Default Authorisation Policy.\nThe list of allowed Identities for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretCertificateThumbprint": {
                          "description": "The thumbprint of the certificate used for signing purposes.\nThe thumbprint of the certificate used for signing purposes.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client.",
                          "type": "string"
                        },
                        "jwtAllowedClientApplications": {
                          "description": "A list of Allowed Client Applications in the JWT Claim.\nA list of Allowed Client Applications in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "jwtAllowedGroups": {
                          "description": "A list of Allowed Groups in the JWT Claim.\nA list of Allowed Groups in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "loginParameters": {
                          "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.\nA map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "tenantAuthEndpoint": {
                          "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/\nThe Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                          "type": "string"
                        },
                        "wwwAuthenticationDisabled": {
                          "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false.\nShould the www-authenticate provider should be omitted from the request? Defaults to `false`",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "appleV2": {
                    "description": "An apple_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Apple web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Apple Login.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "authEnabled": {
                    "description": "Should the AuthV2 Settings be enabled. Defaults to false.\nShould the AuthV2 Settings be enabled. Defaults to `false`",
                    "type": "boolean"
                  },
                  "azureStaticWebAppV2": {
                    "description": "An azure_static_web_app_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "configFilePath": {
                    "description": "The path to the App Auth settings.\nThe path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                    "type": "string"
                  },
                  "customOidcV2": {
                    "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with this Custom OIDC.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name of the Custom OIDC Authentication Provider.",
                          "type": "string"
                        },
                        "nameClaimType": {
                          "description": "The name of the claim that contains the users name.\nThe name of the claim that contains the users name.",
                          "type": "string"
                        },
                        "openidConfigurationEndpoint": {
                          "description": "Specifies the endpoint used for OpenID Connect Discovery. For example https://example.com/.well-known/openid-configuration.\nThe endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                          "type": "string"
                        },
                        "scopes": {
                          "description": "The list of the scopes that should be requested while authenticating.\nThe list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "defaultProvider": {
                    "description": "The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.\nThe Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.",
                    "type": "string"
                  },
                  "excludedPaths": {
                    "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.\nThe paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "facebookV2": {
                    "description": "A facebook_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login.",
                          "type": "string"
                        },
                        "graphApiVersion": {
                          "description": "The version of the Facebook API to be used while logging in.\nThe version of the Facebook API to be used while logging in.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "forwardProxyConvention": {
                    "description": "The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.\nThe convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                    "type": "string"
                  },
                  "forwardProxyCustomHostHeaderName": {
                    "description": "The name of the custom header containing the host of the request.\nThe name of the header containing the host of the request.",
                    "type": "string"
                  },
                  "forwardProxyCustomSchemeHeaderName": {
                    "description": "The name of the custom header containing the scheme of the request.\nThe name of the header containing the scheme of the request.",
                    "type": "string"
                  },
                  "githubV2": {
                    "description": "A github_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "googleV2": {
                    "description": "A google_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRouteApiPrefix": {
                    "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.\nThe prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                    "type": "string"
                  },
                  "login": {
                    "description": "A login block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.\nExternal URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpirationConvention": {
                          "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.\nThe method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                          "type": "string"
                        },
                        "cookieExpirationTime": {
                          "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00.\nThe time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                          "type": "string"
                        },
                        "logoutEndpoint": {
                          "description": "The endpoint to which logout requests should be made.\nThe endpoint to which logout requests should be made.",
                          "type": "string"
                        },
                        "nonceExpirationTime": {
                          "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00.\nThe time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                          "type": "string"
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false.\nShould the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "tokenRefreshExtensionTime": {
                          "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                          "type": "number"
                        },
                        "tokenStoreEnabled": {
                          "description": "Should the Token Store configuration Enabled. Defaults to false\nShould the Token Store configuration Enabled. Defaults to `false`",
                          "type": "boolean"
                        },
                        "tokenStorePath": {
                          "description": "The directory path in the App Filesystem in which the tokens will be stored.\nThe directory path in the App Filesystem in which the tokens will be stored.",
                          "type": "string"
                        },
                        "tokenStoreSasSettingName": {
                          "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens.\nThe name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                          "type": "string"
                        },
                        "validateNonce": {
                          "description": "Should the nonce be validated while completing the login flow. Defaults to true.\nShould the nonce be validated while completing the login flow. Defaults to `true`.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "microsoftV2": {
                    "description": "A microsoft_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nThe list of Login scopes that will be requested as part of Microsoft Account authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "requireAuthentication": {
                    "description": "Should the authentication flow be used for all requests.\nShould the authentication flow be used for all requests.",
                    "type": "boolean"
                  },
                  "requireHttps": {
                    "description": "Should HTTPS be required on connections? Defaults to true.\nShould HTTPS be required on connections? Defaults to true.",
                    "type": "boolean"
                  },
                  "runtimeVersion": {
                    "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.\nThe Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                    "type": "string"
                  },
                  "twitterV2": {
                    "description": "A twitter_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "unauthenticatedAction": {
                    "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.\nThe action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backup": {
              "description": "A backup block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Should this backup job be enabled? Defaults to true.\nShould this backup job be enabled?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name which should be used for this Backup.\nThe name which should be used for this Backup.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "A schedule block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "frequencyInterval": {
                          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).\nHow often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                          "type": "number"
                        },
                        "frequencyUnit": {
                          "description": "The unit of time for how often the backup should take place. Possible values include: Day, Hour\nThe unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                          "type": "string"
                        },
                        "keepAtLeastOneBackup": {
                          "description": "Should the service keep at least one backup, regardless of the age of backup? Defaults to false.\nShould the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "retentionPeriodDays": {
                          "description": "After how many days backups should be deleted. Defaults to 30.\nAfter how many days backups should be deleted.",
                          "type": "number"
                        },
                        "startTime": {
                          "description": "When the schedule should start working in RFC-3339 format.\nWhen the schedule should start working in RFC-3339 format.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "storageAccountUrlSecretRef": {
                    "description": "The SAS URL to the container.\nThe SAS URL to the container.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "clientAffinityEnabled": {
              "description": "Should Client Affinity be enabled?",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should Client Certificates be enabled?",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ;\nPaths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The Client Certificate mode. Possible values are Required, Optional, and OptionalInteractiveUser. This property has no effect when client_certificate_enabled is false. Defaults to Required.",
              "type": "string"
            },
            "connectionString": {
              "description": "One or more connection_string blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the Connection String.\nThe name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: MySQL, SQLServer, SQLAzure, Custom, NotificationHub, ServiceBus, EventHub, APIHub, DocDb, RedisCache, and PostgreSQL.\nType of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  },
                  "valueSecretRef": {
                    "description": "The connection string value.\nThe connection string value.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "enabled": {
              "description": "Should the Linux Web App be enabled? Defaults to true.",
              "type": "boolean"
            },
            "ftpPublishBasicAuthenticationEnabled": {
              "description": "Should the default FTP Basic Authentication publishing profile be enabled. Defaults to true.",
              "type": "boolean"
            },
            "httpsOnly": {
              "description": "Should the Linux Web App require HTTPS connections. Defaults to false.",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Managed Identity IDs to be assigned to this Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Web App. Possible values are SystemAssigned, UserAssigned, and SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the Linux Web App should exist. Changing this forces a new Linux Web App to be created.",
              "type": "string"
            },
            "logs": {
              "description": "A logs block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "applicationLogs": {
                    "description": "A application_logs block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "azureBlobStorage": {
                          "description": "A azure_blob_storage_http block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "description": "The level at which to log. Possible values include Error, Warning, Information, Verbose and Off. NOTE: this field is not available for http_logs",
                                "type": "string"
                              },
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "sasUrl": {
                                "description": "SAS url to an Azure blob container with read/write/list/delete permissions.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "fileSystemLevel": {
                          "description": "Log level. Possible values include: Off, Verbose, Information, Warning, and Error.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "detailedErrorMessages": {
                    "description": "Should detailed error messages be enabled?",
                    "type": "boolean"
                  },
                  "failedRequestTracing": {
                    "description": "Should the failed request tracing be enabled?",
                    "type": "boolean"
                  },
                  "httpLogs": {
                    "description": "An http_logs block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "azureBlobStorage": {
                          "description": "A azure_blob_storage_http block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "sasurlSecretRef": {
                                "description": "SAS url to an Azure blob container with read/write/list/delete permissions.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "fileSystem": {
                          "description": "A file_system block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "retentionInMb": {
                                "description": "The maximum size in megabytes that log files can use.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "publicNetworkAccessEnabled": {
              "description": "Should public network access be enabled for the Web App. Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Linux Web App should exist. Changing this forces a new Linux Web App to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan that this Linux App Service will be created in.",
              "type": "string"
            },
            "servicePlanIdRef": {
              "description": "Reference to a ServicePlan in web to populate servicePlanId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "servicePlanIdSelector": {
              "description": "Selector for a ServicePlan in web to populate servicePlanId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "siteConfig": {
              "description": "A site_config block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alwaysOn": {
                    "description": "If this Linux Web App is Always On enabled. Defaults to true.",
                    "type": "boolean"
                  },
                  "apiDefinitionUrl": {
                    "description": "The URL to the API Definition for this Linux Web App.",
                    "type": "string"
                  },
                  "apiManagementApiId": {
                    "description": "The API Management API ID this Linux Web App is associated with.",
                    "type": "string"
                  },
                  "appCommandLine": {
                    "description": "The App command line to launch.",
                    "type": "string"
                  },
                  "applicationStack": {
                    "description": "A application_stack block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dockerImageName": {
                          "description": "The docker image, including tag, to be used. e.g. appsvc/staticsite:latest.",
                          "type": "string"
                        },
                        "dockerRegistryPasswordSecretRef": {
                          "description": "The User Name to use for authentication against the registry to pull the image.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "dockerRegistryUrl": {
                          "description": "The URL of the container registry where the docker_image_name is located. e.g. https://index.docker.io or https://mcr.microsoft.com. This value is required with docker_image_name.",
                          "type": "string"
                        },
                        "dockerRegistryUsername": {
                          "description": "The User Name to use for authentication against the registry to pull the image.",
                          "type": "string"
                        },
                        "dotnetVersion": {
                          "description": "The version of .NET to use. Possible values include 3.1, 5.0, 6.0, 7.0, 8.0 and 9.0.",
                          "type": "string"
                        },
                        "goVersion": {
                          "description": "The version of Go to use. Possible values include 1.18, and 1.19.",
                          "type": "string"
                        },
                        "javaServer": {
                          "description": "The Java server type. Possible values include JAVA, TOMCAT, and JBOSSEAP.",
                          "type": "string"
                        },
                        "javaServerVersion": {
                          "description": "The Version of the java_server to use.",
                          "type": "string"
                        },
                        "javaVersion": {
                          "description": "The Version of Java to use. Possible values include 8, 11, 17, and 21.",
                          "type": "string"
                        },
                        "nodeVersion": {
                          "description": "The version of Node to run. Possible values include 12-lts, 14-lts, 16-lts, 18-lts, 20-lts and 22-lts. This property conflicts with java_version.",
                          "type": "string"
                        },
                        "phpVersion": {
                          "description": "The version of PHP to run. Possible values are 7.4, 8.0, 8.1, 8.2 and 8.3.",
                          "type": "string"
                        },
                        "pythonVersion": {
                          "description": "The version of Python to run. Possible values include 3.13, 3.12, 3.11, 3.10, 3.9, 3.8 and 3.7.",
                          "type": "string"
                        },
                        "rubyVersion": {
                          "description": "The version of Ruby to run. Possible values include 2.6 and 2.7.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "autoHealSetting": {
                    "description": "A auto_heal_setting block as defined above. Required with auto_heal.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "actionType": {
                                "description": "Predefined action to be taken to an Auto Heal trigger. Possible values include: Recycle.",
                                "type": "string"
                              },
                              "minimumProcessExecutionTime": {
                                "description": "The minimum amount of time in hh:mm:ss the Linux Web App must have been running before the defined action will be run in the event of a trigger.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "trigger": {
                          "description": "A trigger block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "requests": {
                                "description": "A requests block as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "slowRequest": {
                                "description": "A slow_request blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "timeTaken": {
                                      "description": "The threshold of time passed to qualify as a Slow Request in hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "slowRequestWithPath": {
                                "description": "One or more slow_request_with_path blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to which this rule status code applies.",
                                      "type": "string"
                                    },
                                    "timeTaken": {
                                      "description": "The threshold of time passed to qualify as a Slow Request in hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "statusCode": {
                                "description": "One or more status_code blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to which this rule status code applies.",
                                      "type": "string"
                                    },
                                    "statusCodeRange": {
                                      "description": "The status code for this rule, accepts single status codes and status code ranges. e.g. 500 or 400-499. Possible values are integers between 101 and 599",
                                      "type": "string"
                                    },
                                    "subStatus": {
                                      "description": "The Request Sub Status of the Status Code.",
                                      "type": "number"
                                    },
                                    "win32StatusCode": {
                                      "description": "The Win32 Status Code of the Request.",
                                      "type": "number"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "containerRegistryManagedIdentityClientId": {
                    "description": "The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.",
                    "type": "string"
                  },
                  "containerRegistryUseManagedIdentity": {
                    "description": "Should connections for Azure Container Registry use Managed Identity.",
                    "type": "boolean"
                  },
                  "cors": {
                    "description": "A cors block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "Specifies a list of origins that should be allowed to make cross-origin calls.\nSpecifies a list of origins that should be allowed to make cross-origin calls.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "supportCredentials": {
                          "description": "Whether CORS requests with credentials are allowed. Defaults to false\nAre credentials allowed in CORS requests? Defaults to `false`.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "defaultDocuments": {
                    "description": "Specifies a list of Default Documents for the Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ftpsState": {
                    "description": "The State of FTP / FTPS service. Possible values include AllAllowed, FtpsOnly, and Disabled. Defaults to Disabled.",
                    "type": "string"
                  },
                  "healthCheckEvictionTimeInMin": {
                    "description": "The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.\nThe amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`",
                    "type": "number"
                  },
                  "healthCheckPath": {
                    "description": "The path to the Health Check.",
                    "type": "string"
                  },
                  "http2Enabled": {
                    "description": "Should the HTTP2 be enabled?",
                    "type": "boolean"
                  },
                  "ipRestriction": {
                    "description": "One or more ip_restriction blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "A headers block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Web App for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetIdRef": {
                          "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "virtualNetworkSubnetIdSelector": {
                          "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ipRestrictionDefaultAction": {
                    "description": "The Default action for traffic that does not match any ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                    "type": "string"
                  },
                  "loadBalancingMode": {
                    "description": "The Site load balancing. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.",
                    "type": "string"
                  },
                  "localMysqlEnabled": {
                    "description": "Use Local MySQL. Defaults to false.",
                    "type": "boolean"
                  },
                  "managedPipelineMode": {
                    "description": "Managed pipeline mode. Possible values include Integrated, and Classic. Defaults to Integrated.",
                    "type": "string"
                  },
                  "minimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.",
                    "type": "string"
                  },
                  "remoteDebuggingEnabled": {
                    "description": "Should Remote Debugging be enabled? Defaults to false.",
                    "type": "boolean"
                  },
                  "remoteDebuggingVersion": {
                    "description": "The Remote Debugging Version. Currently only VS2022 is supported.",
                    "type": "string"
                  },
                  "scmIpRestriction": {
                    "description": "One or more scm_ip_restriction blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "A headers block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Web App for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetIdRef": {
                          "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "virtualNetworkSubnetIdSelector": {
                          "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "scmIpRestrictionDefaultAction": {
                    "description": "The Default action for traffic that does not match any scm_ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                    "type": "string"
                  },
                  "scmMinimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.",
                    "type": "string"
                  },
                  "scmUseMainIpRestriction": {
                    "description": "Should the Linux Web App ip_restriction configuration be used for the SCM also.",
                    "type": "boolean"
                  },
                  "use32BitWorker": {
                    "description": "Should the Linux Web App use a 32-bit worker? Defaults to true.",
                    "type": "boolean"
                  },
                  "vnetRouteAllEnabled": {
                    "description": "Should all outbound traffic have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.\nShould all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "websocketsEnabled": {
                    "description": "Should Web Sockets be enabled? Defaults to false.",
                    "type": "boolean"
                  },
                  "workerCount": {
                    "description": "The number of Workers for this Linux App Service.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "stickySettings": {
              "description": "A sticky_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "appSettingNames": {
                    "description": "A list of app_setting names that the Linux Web App will not swap between Slots when a swap operation is triggered.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "connectionStringNames": {
                    "description": "A list of connection_string names that the Linux Web App will not swap between Slots when a swap operation is triggered.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accessKeySecretRef": {
                    "description": "The Access key for the storage account.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles and AzureBlob",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Linux Web App.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkBackupRestoreEnabled": {
              "description": "Whether backup and restore operations over the linked virtual network are enabled. Defaults to false.",
              "type": "boolean"
            },
            "virtualNetworkSubnetId": {
              "description": "The subnet id which will be used by this Web App for regional virtual network integration.",
              "type": "string"
            },
            "virtualNetworkSubnetIdRef": {
              "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "virtualNetworkSubnetIdSelector": {
              "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "webdeployPublishBasicAuthenticationEnabled": {
              "description": "Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to true.",
              "type": "boolean"
            },
            "zipDeployFile": {
              "description": "The local path and filename of the Zip packaged application to deploy to this Linux Web App.\nThe local path and filename of the Zip packaged application to deploy to this Linux Web App. **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs of App Settings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "authSettings": {
              "description": "A auth_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectory": {
                    "description": "An active_directory block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret for the Client ID. Cannot be used with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalLoginParameters": {
                    "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.\nSpecifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "allowedExternalRedirectUrls": {
                    "description": "Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Linux Web App.\nSpecifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultProvider": {
                    "description": "The default authentication provider to use when multiple providers are configured. Possible values include: BuiltInAuthenticationProviderAzureActiveDirectory, BuiltInAuthenticationProviderFacebook, BuiltInAuthenticationProviderGoogle, BuiltInAuthenticationProviderMicrosoftAccount, BuiltInAuthenticationProviderTwitter, BuiltInAuthenticationProviderGithub\nThe default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Should the Authentication / Authorization feature be enabled for the Linux Web App?\nShould the Authentication / Authorization feature be enabled?",
                    "type": "boolean"
                  },
                  "facebook": {
                    "description": "A facebook block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSecretRef": {
                          "description": "The App Secret of the Facebook app used for Facebook login. Cannot be specified with app_secret_setting_name.\nThe App Secret of the Facebook app used for Facebook Login. Cannot be specified with `app_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "github": {
                    "description": "A github block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe Client Secret of the GitHub app used for GitHub Login. Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "google": {
                    "description": "A google block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe client secret associated with the Google web application.  Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "issuer": {
                    "description": "The OpenID Connect Issuer URI that represents the entity that issues access tokens for this Linux Web App.\nThe OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                    "type": "string"
                  },
                  "microsoft": {
                    "description": "A microsoft block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSecretRef": {
                          "description": "The OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with client_secret_setting_name.\nThe OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nThe list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "runtimeVersion": {
                    "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.\nThe RuntimeVersion of the Authentication / Authorization feature in use.",
                    "type": "string"
                  },
                  "tokenRefreshExtensionHours": {
                    "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                    "type": "number"
                  },
                  "tokenStoreEnabled": {
                    "description": "Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.\nShould the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "twitter": {
                    "description": "A twitter block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSecretRef": {
                          "description": "The OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with consumer_secret_setting_name.\nThe OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret_setting_name`.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "unauthenticatedClientAction": {
                    "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.\nThe action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "authSettingsV2": {
              "description": "An auth_settings_v2 block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryV2": {
                    "description": "An active_directory_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedApplications": {
                          "description": "The list of allowed Applications for the Default Authorisation Policy.\nThe list of allowed Applications for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedGroups": {
                          "description": "The list of allowed Group Names for the Default Authorisation Policy.\nThe list of allowed Group Names for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedIdentities": {
                          "description": "The list of allowed Identities for the Default Authorisation Policy.\nThe list of allowed Identities for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretCertificateThumbprint": {
                          "description": "The thumbprint of the certificate used for signing purposes.\nThe thumbprint of the certificate used for signing purposes.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client.",
                          "type": "string"
                        },
                        "jwtAllowedClientApplications": {
                          "description": "A list of Allowed Client Applications in the JWT Claim.\nA list of Allowed Client Applications in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "jwtAllowedGroups": {
                          "description": "A list of Allowed Groups in the JWT Claim.\nA list of Allowed Groups in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "loginParameters": {
                          "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.\nA map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "tenantAuthEndpoint": {
                          "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/\nThe Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                          "type": "string"
                        },
                        "wwwAuthenticationDisabled": {
                          "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false.\nShould the www-authenticate provider should be omitted from the request? Defaults to `false`",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "appleV2": {
                    "description": "An apple_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Apple web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Apple Login.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "authEnabled": {
                    "description": "Should the AuthV2 Settings be enabled. Defaults to false.\nShould the AuthV2 Settings be enabled. Defaults to `false`",
                    "type": "boolean"
                  },
                  "azureStaticWebAppV2": {
                    "description": "An azure_static_web_app_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "configFilePath": {
                    "description": "The path to the App Auth settings.\nThe path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                    "type": "string"
                  },
                  "customOidcV2": {
                    "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with this Custom OIDC.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name of the Custom OIDC Authentication Provider.",
                          "type": "string"
                        },
                        "nameClaimType": {
                          "description": "The name of the claim that contains the users name.\nThe name of the claim that contains the users name.",
                          "type": "string"
                        },
                        "openidConfigurationEndpoint": {
                          "description": "Specifies the endpoint used for OpenID Connect Discovery. For example https://example.com/.well-known/openid-configuration.\nThe endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                          "type": "string"
                        },
                        "scopes": {
                          "description": "The list of the scopes that should be requested while authenticating.\nThe list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "defaultProvider": {
                    "description": "The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.\nThe Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.",
                    "type": "string"
                  },
                  "excludedPaths": {
                    "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.\nThe paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "facebookV2": {
                    "description": "A facebook_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login.",
                          "type": "string"
                        },
                        "graphApiVersion": {
                          "description": "The version of the Facebook API to be used while logging in.\nThe version of the Facebook API to be used while logging in.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "forwardProxyConvention": {
                    "description": "The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.\nThe convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                    "type": "string"
                  },
                  "forwardProxyCustomHostHeaderName": {
                    "description": "The name of the custom header containing the host of the request.\nThe name of the header containing the host of the request.",
                    "type": "string"
                  },
                  "forwardProxyCustomSchemeHeaderName": {
                    "description": "The name of the custom header containing the scheme of the request.\nThe name of the header containing the scheme of the request.",
                    "type": "string"
                  },
                  "githubV2": {
                    "description": "A github_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "googleV2": {
                    "description": "A google_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRouteApiPrefix": {
                    "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.\nThe prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                    "type": "string"
                  },
                  "login": {
                    "description": "A login block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.\nExternal URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpirationConvention": {
                          "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.\nThe method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                          "type": "string"
                        },
                        "cookieExpirationTime": {
                          "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00.\nThe time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                          "type": "string"
                        },
                        "logoutEndpoint": {
                          "description": "The endpoint to which logout requests should be made.\nThe endpoint to which logout requests should be made.",
                          "type": "string"
                        },
                        "nonceExpirationTime": {
                          "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00.\nThe time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                          "type": "string"
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false.\nShould the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "tokenRefreshExtensionTime": {
                          "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                          "type": "number"
                        },
                        "tokenStoreEnabled": {
                          "description": "Should the Token Store configuration Enabled. Defaults to false\nShould the Token Store configuration Enabled. Defaults to `false`",
                          "type": "boolean"
                        },
                        "tokenStorePath": {
                          "description": "The directory path in the App Filesystem in which the tokens will be stored.\nThe directory path in the App Filesystem in which the tokens will be stored.",
                          "type": "string"
                        },
                        "tokenStoreSasSettingName": {
                          "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens.\nThe name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                          "type": "string"
                        },
                        "validateNonce": {
                          "description": "Should the nonce be validated while completing the login flow. Defaults to true.\nShould the nonce be validated while completing the login flow. Defaults to `true`.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "microsoftV2": {
                    "description": "A microsoft_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nThe list of Login scopes that will be requested as part of Microsoft Account authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "requireAuthentication": {
                    "description": "Should the authentication flow be used for all requests.\nShould the authentication flow be used for all requests.",
                    "type": "boolean"
                  },
                  "requireHttps": {
                    "description": "Should HTTPS be required on connections? Defaults to true.\nShould HTTPS be required on connections? Defaults to true.",
                    "type": "boolean"
                  },
                  "runtimeVersion": {
                    "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.\nThe Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                    "type": "string"
                  },
                  "twitterV2": {
                    "description": "A twitter_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "unauthenticatedAction": {
                    "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.\nThe action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backup": {
              "description": "A backup block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "storageAccountUrlSecretRef"
                ],
                "properties": {
                  "enabled": {
                    "description": "Should this backup job be enabled? Defaults to true.\nShould this backup job be enabled?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name which should be used for this Backup.\nThe name which should be used for this Backup.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "A schedule block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "frequencyInterval": {
                          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).\nHow often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                          "type": "number"
                        },
                        "frequencyUnit": {
                          "description": "The unit of time for how often the backup should take place. Possible values include: Day, Hour\nThe unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                          "type": "string"
                        },
                        "keepAtLeastOneBackup": {
                          "description": "Should the service keep at least one backup, regardless of the age of backup? Defaults to false.\nShould the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "retentionPeriodDays": {
                          "description": "After how many days backups should be deleted. Defaults to 30.\nAfter how many days backups should be deleted.",
                          "type": "number"
                        },
                        "startTime": {
                          "description": "When the schedule should start working in RFC-3339 format.\nWhen the schedule should start working in RFC-3339 format.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "storageAccountUrlSecretRef": {
                    "description": "The SAS URL to the container.\nThe SAS URL to the container.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "clientAffinityEnabled": {
              "description": "Should Client Affinity be enabled?",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should Client Certificates be enabled?",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ;\nPaths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The Client Certificate mode. Possible values are Required, Optional, and OptionalInteractiveUser. This property has no effect when client_certificate_enabled is false. Defaults to Required.",
              "type": "string"
            },
            "connectionString": {
              "description": "One or more connection_string blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "valueSecretRef"
                ],
                "properties": {
                  "name": {
                    "description": "The name of the Connection String.\nThe name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: MySQL, SQLServer, SQLAzure, Custom, NotificationHub, ServiceBus, EventHub, APIHub, DocDb, RedisCache, and PostgreSQL.\nType of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  },
                  "valueSecretRef": {
                    "description": "The connection string value.\nThe connection string value.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "enabled": {
              "description": "Should the Linux Web App be enabled? Defaults to true.",
              "type": "boolean"
            },
            "ftpPublishBasicAuthenticationEnabled": {
              "description": "Should the default FTP Basic Authentication publishing profile be enabled. Defaults to true.",
              "type": "boolean"
            },
            "httpsOnly": {
              "description": "Should the Linux Web App require HTTPS connections. Defaults to false.",
              "type": "boolean"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Managed Identity IDs to be assigned to this Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Web App. Possible values are SystemAssigned, UserAssigned, and SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the Linux Web App should exist. Changing this forces a new Linux Web App to be created.",
              "type": "string"
            },
            "logs": {
              "description": "A logs block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "applicationLogs": {
                    "description": "A application_logs block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "azureBlobStorage": {
                          "description": "A azure_blob_storage_http block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "description": "The level at which to log. Possible values include Error, Warning, Information, Verbose and Off. NOTE: this field is not available for http_logs",
                                "type": "string"
                              },
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "sasUrl": {
                                "description": "SAS url to an Azure blob container with read/write/list/delete permissions.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "fileSystemLevel": {
                          "description": "Log level. Possible values include: Off, Verbose, Information, Warning, and Error.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "detailedErrorMessages": {
                    "description": "Should detailed error messages be enabled?",
                    "type": "boolean"
                  },
                  "failedRequestTracing": {
                    "description": "Should the failed request tracing be enabled?",
                    "type": "boolean"
                  },
                  "httpLogs": {
                    "description": "An http_logs block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "azureBlobStorage": {
                          "description": "A azure_blob_storage_http block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "sasurlSecretRef"
                            ],
                            "properties": {
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "sasurlSecretRef": {
                                "description": "SAS url to an Azure blob container with read/write/list/delete permissions.",
                                "type": "object",
                                "required": [
                                  "key",
                                  "name",
                                  "namespace"
                                ],
                                "properties": {
                                  "key": {
                                    "description": "The key to select.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name of the secret.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace of the secret.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "fileSystem": {
                          "description": "A file_system block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "retentionInMb": {
                                "description": "The maximum size in megabytes that log files can use.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "publicNetworkAccessEnabled": {
              "description": "Should public network access be enabled for the Web App. Defaults to true.",
              "type": "boolean"
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan that this Linux App Service will be created in.",
              "type": "string"
            },
            "servicePlanIdRef": {
              "description": "Reference to a ServicePlan in web to populate servicePlanId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "servicePlanIdSelector": {
              "description": "Selector for a ServicePlan in web to populate servicePlanId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "siteConfig": {
              "description": "A site_config block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alwaysOn": {
                    "description": "If this Linux Web App is Always On enabled. Defaults to true.",
                    "type": "boolean"
                  },
                  "apiDefinitionUrl": {
                    "description": "The URL to the API Definition for this Linux Web App.",
                    "type": "string"
                  },
                  "apiManagementApiId": {
                    "description": "The API Management API ID this Linux Web App is associated with.",
                    "type": "string"
                  },
                  "appCommandLine": {
                    "description": "The App command line to launch.",
                    "type": "string"
                  },
                  "applicationStack": {
                    "description": "A application_stack block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dockerImageName": {
                          "description": "The docker image, including tag, to be used. e.g. appsvc/staticsite:latest.",
                          "type": "string"
                        },
                        "dockerRegistryPasswordSecretRef": {
                          "description": "The User Name to use for authentication against the registry to pull the image.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "dockerRegistryUrl": {
                          "description": "The URL of the container registry where the docker_image_name is located. e.g. https://index.docker.io or https://mcr.microsoft.com. This value is required with docker_image_name.",
                          "type": "string"
                        },
                        "dockerRegistryUsername": {
                          "description": "The User Name to use for authentication against the registry to pull the image.",
                          "type": "string"
                        },
                        "dotnetVersion": {
                          "description": "The version of .NET to use. Possible values include 3.1, 5.0, 6.0, 7.0, 8.0 and 9.0.",
                          "type": "string"
                        },
                        "goVersion": {
                          "description": "The version of Go to use. Possible values include 1.18, and 1.19.",
                          "type": "string"
                        },
                        "javaServer": {
                          "description": "The Java server type. Possible values include JAVA, TOMCAT, and JBOSSEAP.",
                          "type": "string"
                        },
                        "javaServerVersion": {
                          "description": "The Version of the java_server to use.",
                          "type": "string"
                        },
                        "javaVersion": {
                          "description": "The Version of Java to use. Possible values include 8, 11, 17, and 21.",
                          "type": "string"
                        },
                        "nodeVersion": {
                          "description": "The version of Node to run. Possible values include 12-lts, 14-lts, 16-lts, 18-lts, 20-lts and 22-lts. This property conflicts with java_version.",
                          "type": "string"
                        },
                        "phpVersion": {
                          "description": "The version of PHP to run. Possible values are 7.4, 8.0, 8.1, 8.2 and 8.3.",
                          "type": "string"
                        },
                        "pythonVersion": {
                          "description": "The version of Python to run. Possible values include 3.13, 3.12, 3.11, 3.10, 3.9, 3.8 and 3.7.",
                          "type": "string"
                        },
                        "rubyVersion": {
                          "description": "The version of Ruby to run. Possible values include 2.6 and 2.7.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "autoHealSetting": {
                    "description": "A auto_heal_setting block as defined above. Required with auto_heal.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "actionType": {
                                "description": "Predefined action to be taken to an Auto Heal trigger. Possible values include: Recycle.",
                                "type": "string"
                              },
                              "minimumProcessExecutionTime": {
                                "description": "The minimum amount of time in hh:mm:ss the Linux Web App must have been running before the defined action will be run in the event of a trigger.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "trigger": {
                          "description": "A trigger block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "requests": {
                                "description": "A requests block as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "slowRequest": {
                                "description": "A slow_request blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "timeTaken": {
                                      "description": "The threshold of time passed to qualify as a Slow Request in hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "slowRequestWithPath": {
                                "description": "One or more slow_request_with_path blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to which this rule status code applies.",
                                      "type": "string"
                                    },
                                    "timeTaken": {
                                      "description": "The threshold of time passed to qualify as a Slow Request in hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "statusCode": {
                                "description": "One or more status_code blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to which this rule status code applies.",
                                      "type": "string"
                                    },
                                    "statusCodeRange": {
                                      "description": "The status code for this rule, accepts single status codes and status code ranges. e.g. 500 or 400-499. Possible values are integers between 101 and 599",
                                      "type": "string"
                                    },
                                    "subStatus": {
                                      "description": "The Request Sub Status of the Status Code.",
                                      "type": "number"
                                    },
                                    "win32StatusCode": {
                                      "description": "The Win32 Status Code of the Request.",
                                      "type": "number"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "containerRegistryManagedIdentityClientId": {
                    "description": "The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.",
                    "type": "string"
                  },
                  "containerRegistryUseManagedIdentity": {
                    "description": "Should connections for Azure Container Registry use Managed Identity.",
                    "type": "boolean"
                  },
                  "cors": {
                    "description": "A cors block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "Specifies a list of origins that should be allowed to make cross-origin calls.\nSpecifies a list of origins that should be allowed to make cross-origin calls.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "supportCredentials": {
                          "description": "Whether CORS requests with credentials are allowed. Defaults to false\nAre credentials allowed in CORS requests? Defaults to `false`.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "defaultDocuments": {
                    "description": "Specifies a list of Default Documents for the Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "ftpsState": {
                    "description": "The State of FTP / FTPS service. Possible values include AllAllowed, FtpsOnly, and Disabled. Defaults to Disabled.",
                    "type": "string"
                  },
                  "healthCheckEvictionTimeInMin": {
                    "description": "The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.\nThe amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`",
                    "type": "number"
                  },
                  "healthCheckPath": {
                    "description": "The path to the Health Check.",
                    "type": "string"
                  },
                  "http2Enabled": {
                    "description": "Should the HTTP2 be enabled?",
                    "type": "boolean"
                  },
                  "ipRestriction": {
                    "description": "One or more ip_restriction blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "A headers block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Web App for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetIdRef": {
                          "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "virtualNetworkSubnetIdSelector": {
                          "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ipRestrictionDefaultAction": {
                    "description": "The Default action for traffic that does not match any ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                    "type": "string"
                  },
                  "loadBalancingMode": {
                    "description": "The Site load balancing. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.",
                    "type": "string"
                  },
                  "localMysqlEnabled": {
                    "description": "Use Local MySQL. Defaults to false.",
                    "type": "boolean"
                  },
                  "managedPipelineMode": {
                    "description": "Managed pipeline mode. Possible values include Integrated, and Classic. Defaults to Integrated.",
                    "type": "string"
                  },
                  "minimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.",
                    "type": "string"
                  },
                  "remoteDebuggingEnabled": {
                    "description": "Should Remote Debugging be enabled? Defaults to false.",
                    "type": "boolean"
                  },
                  "remoteDebuggingVersion": {
                    "description": "The Remote Debugging Version. Currently only VS2022 is supported.",
                    "type": "string"
                  },
                  "scmIpRestriction": {
                    "description": "One or more scm_ip_restriction blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "A headers block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Web App for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetIdRef": {
                          "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "virtualNetworkSubnetIdSelector": {
                          "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "scmIpRestrictionDefaultAction": {
                    "description": "The Default action for traffic that does not match any scm_ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                    "type": "string"
                  },
                  "scmMinimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.",
                    "type": "string"
                  },
                  "scmUseMainIpRestriction": {
                    "description": "Should the Linux Web App ip_restriction configuration be used for the SCM also.",
                    "type": "boolean"
                  },
                  "use32BitWorker": {
                    "description": "Should the Linux Web App use a 32-bit worker? Defaults to true.",
                    "type": "boolean"
                  },
                  "vnetRouteAllEnabled": {
                    "description": "Should all outbound traffic have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.\nShould all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "websocketsEnabled": {
                    "description": "Should Web Sockets be enabled? Defaults to false.",
                    "type": "boolean"
                  },
                  "workerCount": {
                    "description": "The number of Workers for this Linux App Service.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "stickySettings": {
              "description": "A sticky_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "appSettingNames": {
                    "description": "A list of app_setting names that the Linux Web App will not swap between Slots when a swap operation is triggered.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "connectionStringNames": {
                    "description": "A list of connection_string names that the Linux Web App will not swap between Slots when a swap operation is triggered.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "accessKeySecretRef"
                ],
                "properties": {
                  "accessKeySecretRef": {
                    "description": "The Access key for the storage account.",
                    "type": "object",
                    "required": [
                      "key",
                      "name",
                      "namespace"
                    ],
                    "properties": {
                      "key": {
                        "description": "The key to select.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles and AzureBlob",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Linux Web App.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkBackupRestoreEnabled": {
              "description": "Whether backup and restore operations over the linked virtual network are enabled. Defaults to false.",
              "type": "boolean"
            },
            "virtualNetworkSubnetId": {
              "description": "The subnet id which will be used by this Web App for regional virtual network integration.",
              "type": "string"
            },
            "virtualNetworkSubnetIdRef": {
              "description": "Reference to a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "virtualNetworkSubnetIdSelector": {
              "description": "Selector for a Subnet in network to populate virtualNetworkSubnetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "webdeployPublishBasicAuthenticationEnabled": {
              "description": "Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to true.",
              "type": "boolean"
            },
            "zipDeployFile": {
              "description": "The local path and filename of the Zip packaged application to deploy to this Linux Web App.\nThe local path and filename of the Zip packaged application to deploy to this Linux Web App. **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.siteConfig) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.siteConfig))",
          "message": "spec.forProvider.siteConfig is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LinuxWebAppStatus defines the observed state of LinuxWebApp.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "appSettings": {
              "description": "A map of key-value pairs of App Settings.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "authSettings": {
              "description": "A auth_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectory": {
                    "description": "An active_directory block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client. Cannot be used with `client_secret`.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalLoginParameters": {
                    "description": "Specifies a map of login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.\nSpecifies a map of Login Parameters to send to the OpenID Connect authorization endpoint when a user logs in.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "allowedExternalRedirectUrls": {
                    "description": "Specifies a list of External URLs that can be redirected to as part of logging in or logging out of the Linux Web App.\nSpecifies a list of External URLs that can be redirected to as part of logging in or logging out of the Windows Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultProvider": {
                    "description": "The default authentication provider to use when multiple providers are configured. Possible values include: BuiltInAuthenticationProviderAzureActiveDirectory, BuiltInAuthenticationProviderFacebook, BuiltInAuthenticationProviderGoogle, BuiltInAuthenticationProviderMicrosoftAccount, BuiltInAuthenticationProviderTwitter, BuiltInAuthenticationProviderGithub\nThe default authentication provider to use when multiple providers are configured. Possible values include: `AzureActiveDirectory`, `Facebook`, `Google`, `MicrosoftAccount`, `Twitter`, `Github`.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Should the Authentication / Authorization feature be enabled for the Linux Web App?\nShould the Authentication / Authorization feature be enabled?",
                    "type": "boolean"
                  },
                  "facebook": {
                    "description": "A facebook block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login. Cannot be specified with `app_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "github": {
                    "description": "A github block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "google": {
                    "description": "A google block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of Google Sign-In authentication. If not specified, \"openid\", \"profile\", and \"email\" are used as default scopes.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "issuer": {
                    "description": "The OpenID Connect Issuer URI that represents the entity that issues access tokens for this Linux Web App.\nThe OpenID Connect Issuer URI that represents the entity which issues access tokens.",
                    "type": "string"
                  },
                  "microsoft": {
                    "description": "A microsoft block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication. Cannot be specified with `client_secret`.",
                          "type": "string"
                        },
                        "oauthScopes": {
                          "description": "Specifies a list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, \"wl.basic\" is used as the default scope.\nThe list of OAuth 2.0 scopes that will be requested as part of Microsoft Account authentication. If not specified, `wl.basic` is used as the default scope.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "runtimeVersion": {
                    "description": "The RuntimeVersion of the Authentication / Authorization feature in use for the Linux Web App.\nThe RuntimeVersion of the Authentication / Authorization feature in use.",
                    "type": "string"
                  },
                  "tokenRefreshExtensionHours": {
                    "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                    "type": "number"
                  },
                  "tokenStoreEnabled": {
                    "description": "Should the Linux Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to false.\nShould the Windows Web App durably store platform-specific security tokens that are obtained during login flows? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "twitter": {
                    "description": "A twitter block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in. Cannot be specified with `consumer_secret`.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "unauthenticatedClientAction": {
                    "description": "The action to take when an unauthenticated client attempts to access the app. Possible values include: RedirectToLoginPage, AllowAnonymous.\nThe action to take when an unauthenticated client attempts to access the app. Possible values include: `RedirectToLoginPage`, `AllowAnonymous`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "authSettingsV2": {
              "description": "An auth_settings_v2 block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryV2": {
                    "description": "An active_directory_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedApplications": {
                          "description": "The list of allowed Applications for the Default Authorisation Policy.\nThe list of allowed Applications for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed audience values to consider when validating JWTs issued by Azure Active Directory.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedGroups": {
                          "description": "The list of allowed Group Names for the Default Authorisation Policy.\nThe list of allowed Group Names for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "allowedIdentities": {
                          "description": "The list of allowed Identities for the Default Authorisation Policy.\nThe list of allowed Identities for the Default Authorisation Policy.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Active Directory.",
                          "type": "string"
                        },
                        "clientSecretCertificateThumbprint": {
                          "description": "The thumbprint of the certificate used for signing purposes.\nThe thumbprint of the certificate used for signing purposes.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the client secret of the Client.",
                          "type": "string"
                        },
                        "jwtAllowedClientApplications": {
                          "description": "A list of Allowed Client Applications in the JWT Claim.\nA list of Allowed Client Applications in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "jwtAllowedGroups": {
                          "description": "A list of Allowed Groups in the JWT Claim.\nA list of Allowed Groups in the JWT Claim.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "loginParameters": {
                          "description": "A map of key-value pairs to send to the Authorisation Endpoint when a user logs in.\nA map of key-value pairs to send to the Authorisation Endpoint when a user logs in.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "x-kubernetes-map-type": "granular"
                        },
                        "tenantAuthEndpoint": {
                          "description": "The Azure Tenant Endpoint for the Authenticating Tenant. e.g. https://login.microsoftonline.com/{tenant-guid}/v2.0/\nThe Azure Tenant Endpoint for the Authenticating Tenant. e.g. `https://login.microsoftonline.com/v2.0/{tenant-guid}/`.",
                          "type": "string"
                        },
                        "wwwAuthenticationDisabled": {
                          "description": "Should the www-authenticate provider should be omitted from the request? Defaults to false.\nShould the www-authenticate provider should be omitted from the request? Defaults to `false`",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "appleV2": {
                    "description": "An apple_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Apple web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Apple Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "authEnabled": {
                    "description": "Should the AuthV2 Settings be enabled. Defaults to false.\nShould the AuthV2 Settings be enabled. Defaults to `false`",
                    "type": "boolean"
                  },
                  "azureStaticWebAppV2": {
                    "description": "An azure_static_web_app_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with Azure Static Web App Authentication.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "configFilePath": {
                    "description": "The path to the App Auth settings.\nThe path to the App Auth settings. **Note:** Relative Paths are evaluated from the Site Root directory.",
                    "type": "string"
                  },
                  "customOidcV2": {
                    "description": "Zero or more custom_oidc_v2 blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "authorisationEndpoint": {
                          "description": "The endpoint to make the Authorisation Request as supplied by openid_configuration_endpoint response.\nThe endpoint to make the Authorisation Request.",
                          "type": "string"
                        },
                        "certificationUri": {
                          "description": "The endpoint that provides the keys necessary to validate the token as supplied by openid_configuration_endpoint response.\nThe endpoint that provides the keys necessary to validate the token.",
                          "type": "string"
                        },
                        "clientCredentialMethod": {
                          "description": "The Client Credential Method used.\nThe Client Credential Method used. Currently the only supported value is `ClientSecretPost`.",
                          "type": "string"
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the Client to use to authenticate with this Custom OIDC.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe App Setting name that contains the secret for this Custom OIDC Client.",
                          "type": "string"
                        },
                        "issuerEndpoint": {
                          "description": "The endpoint that issued the Token as supplied by openid_configuration_endpoint response.\nThe endpoint that issued the Token.",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name of the Custom OIDC Authentication Provider.",
                          "type": "string"
                        },
                        "nameClaimType": {
                          "description": "The name of the claim that contains the users name.\nThe name of the claim that contains the users name.",
                          "type": "string"
                        },
                        "openidConfigurationEndpoint": {
                          "description": "Specifies the endpoint used for OpenID Connect Discovery. For example https://example.com/.well-known/openid-configuration.\nThe endpoint that contains all the configuration endpoints for this Custom OIDC provider.",
                          "type": "string"
                        },
                        "scopes": {
                          "description": "The list of the scopes that should be requested while authenticating.\nThe list of the scopes that should be requested while authenticating.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "tokenEndpoint": {
                          "description": "The endpoint used to request a Token as supplied by openid_configuration_endpoint response.\nThe endpoint used to request a Token.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "defaultProvider": {
                    "description": "The Default Authentication Provider to use when the unauthenticated_action is set to RedirectToLoginPage. Possible values include: apple, azureactivedirectory, facebook, github, google, twitter and the name of your custom_oidc_v2 provider.\nThe Default Authentication Provider to use when the `unauthenticated_action` is set to `RedirectToLoginPage`. Possible values include: `apple`, `azureactivedirectory`, `facebook`, `github`, `google`, `twitter` and the `name` of your `custom_oidc_v2` provider.",
                    "type": "string"
                  },
                  "excludedPaths": {
                    "description": "The paths which should be excluded from the unauthenticated_action when it is set to RedirectToLoginPage.\nThe paths which should be excluded from the `unauthenticated_action` when it is set to `RedirectToLoginPage`.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "facebookV2": {
                    "description": "A facebook_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "appId": {
                          "description": "The App ID of the Facebook app used for login.\nThe App ID of the Facebook app used for login.",
                          "type": "string"
                        },
                        "appSecretSettingName": {
                          "description": "The app setting name that contains the app_secret value used for Facebook Login.\nThe app setting name that contains the `app_secret` value used for Facebook Login.",
                          "type": "string"
                        },
                        "graphApiVersion": {
                          "description": "The version of the Facebook API to be used while logging in.\nThe version of the Facebook API to be used while logging in.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of scopes to be requested as part of Facebook Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "forwardProxyConvention": {
                    "description": "The convention used to determine the url of the request made. Possible values include NoProxy, Standard, Custom. Defaults to NoProxy.\nThe convention used to determine the url of the request made. Possible values include `ForwardProxyConventionNoProxy`, `ForwardProxyConventionStandard`, `ForwardProxyConventionCustom`. Defaults to `ForwardProxyConventionNoProxy`",
                    "type": "string"
                  },
                  "forwardProxyCustomHostHeaderName": {
                    "description": "The name of the custom header containing the host of the request.\nThe name of the header containing the host of the request.",
                    "type": "string"
                  },
                  "forwardProxyCustomSchemeHeaderName": {
                    "description": "The name of the custom header containing the scheme of the request.\nThe name of the header containing the scheme of the request.",
                    "type": "string"
                  },
                  "githubV2": {
                    "description": "A github_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe ID of the GitHub app used for login.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for GitHub Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of OAuth 2.0 scopes that will be requested as part of GitHub Login authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "googleV2": {
                    "description": "A google_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OpenID Connect Client ID for the Google web application.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name that contains the `client_secret` value used for Google Login.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nSpecifies a list of Login scopes that will be requested as part of Google Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "httpRouteApiPrefix": {
                    "description": "The prefix that should precede all the authentication and authorisation paths. Defaults to /.auth.\nThe prefix that should precede all the authentication and authorisation paths. Defaults to `/.auth`",
                    "type": "string"
                  },
                  "login": {
                    "description": "A login block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedExternalRedirectUrls": {
                          "description": "External URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends.\nExternal URLs that can be redirected to as part of logging in or logging out of the app. This is an advanced setting typically only needed by Windows Store application backends. **Note:** URLs within the current domain are always implicitly allowed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cookieExpirationConvention": {
                          "description": "The method by which cookies expire. Possible values include: FixedTime, and IdentityProviderDerived. Defaults to FixedTime.\nThe method by which cookies expire. Possible values include: `FixedTime`, and `IdentityProviderDerived`. Defaults to `FixedTime`.",
                          "type": "string"
                        },
                        "cookieExpirationTime": {
                          "description": "The time after the request is made when the session cookie should expire. Defaults to 08:00:00.\nThe time after the request is made when the session cookie should expire. Defaults to `08:00:00`.",
                          "type": "string"
                        },
                        "logoutEndpoint": {
                          "description": "The endpoint to which logout requests should be made.\nThe endpoint to which logout requests should be made.",
                          "type": "string"
                        },
                        "nonceExpirationTime": {
                          "description": "The time after the request is made when the nonce should expire. Defaults to 00:05:00.\nThe time after the request is made when the nonce should expire. Defaults to `00:05:00`.",
                          "type": "string"
                        },
                        "preserveUrlFragmentsForLogins": {
                          "description": "Should the fragments from the request be preserved after the login request is made. Defaults to false.\nShould the fragments from the request be preserved after the login request is made. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "tokenRefreshExtensionTime": {
                          "description": "The number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to 72 hours.\nThe number of hours after session token expiration that a session token can be used to call the token refresh API. Defaults to `72` hours.",
                          "type": "number"
                        },
                        "tokenStoreEnabled": {
                          "description": "Should the Token Store configuration Enabled. Defaults to false\nShould the Token Store configuration Enabled. Defaults to `false`",
                          "type": "boolean"
                        },
                        "tokenStorePath": {
                          "description": "The directory path in the App Filesystem in which the tokens will be stored.\nThe directory path in the App Filesystem in which the tokens will be stored.",
                          "type": "string"
                        },
                        "tokenStoreSasSettingName": {
                          "description": "The name of the app setting which contains the SAS URL of the blob storage containing the tokens.\nThe name of the app setting which contains the SAS URL of the blob storage containing the tokens.",
                          "type": "string"
                        },
                        "validateNonce": {
                          "description": "Should the nonce be validated while completing the login flow. Defaults to true.\nShould the nonce be validated while completing the login flow. Defaults to `true`.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "microsoftV2": {
                    "description": "A microsoft_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedAudiences": {
                          "description": "Specifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.\nSpecifies a list of Allowed Audiences that will be requested as part of Microsoft Sign-In authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "clientId": {
                          "description": "The OAuth 2.0 client ID that was created for the app used for authentication.\nThe OAuth 2.0 client ID that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "clientSecretSettingName": {
                          "description": "The app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.\nThe app setting name containing the OAuth 2.0 client secret that was created for the app used for authentication.",
                          "type": "string"
                        },
                        "loginScopes": {
                          "description": "The list of Login scopes that should be requested as part of Microsoft Account authentication.\nThe list of Login scopes that will be requested as part of Microsoft Account authentication.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "requireAuthentication": {
                    "description": "Should the authentication flow be used for all requests.\nShould the authentication flow be used for all requests.",
                    "type": "boolean"
                  },
                  "requireHttps": {
                    "description": "Should HTTPS be required on connections? Defaults to true.\nShould HTTPS be required on connections? Defaults to true.",
                    "type": "boolean"
                  },
                  "runtimeVersion": {
                    "description": "The Runtime Version of the Authentication and Authorisation feature of this App. Defaults to ~1.\nThe Runtime Version of the Authentication and Authorisation feature of this App. Defaults to `~1`",
                    "type": "string"
                  },
                  "twitterV2": {
                    "description": "A twitter_v2 block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "consumerKey": {
                          "description": "The OAuth 1.0a consumer key of the Twitter application used for sign-in.\nThe OAuth 1.0a consumer key of the Twitter application used for sign-in.",
                          "type": "string"
                        },
                        "consumerSecretSettingName": {
                          "description": "The app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.\nThe app setting name that contains the OAuth 1.0a consumer secret of the Twitter application used for sign-in.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "unauthenticatedAction": {
                    "description": "The action to take for requests made without authentication. Possible values include RedirectToLoginPage, AllowAnonymous, Return401, and Return403. Defaults to RedirectToLoginPage.\nThe action to take for requests made without authentication. Possible values include `RedirectToLoginPage`, `AllowAnonymous`, `Return401`, and `Return403`. Defaults to `RedirectToLoginPage`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backup": {
              "description": "A backup block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Should this backup job be enabled? Defaults to true.\nShould this backup job be enabled?",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "The name which should be used for this Backup.\nThe name which should be used for this Backup.",
                    "type": "string"
                  },
                  "schedule": {
                    "description": "A schedule block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "frequencyInterval": {
                          "description": "How often the backup should be executed (e.g. for weekly backup, this should be set to 7 and frequency_unit should be set to Day).\nHow often the backup should be executed (e.g. for weekly backup, this should be set to `7` and `frequency_unit` should be set to `Day`).",
                          "type": "number"
                        },
                        "frequencyUnit": {
                          "description": "The unit of time for how often the backup should take place. Possible values include: Day, Hour\nThe unit of time for how often the backup should take place. Possible values include: `Day` and `Hour`.",
                          "type": "string"
                        },
                        "keepAtLeastOneBackup": {
                          "description": "Should the service keep at least one backup, regardless of the age of backup? Defaults to false.\nShould the service keep at least one backup, regardless of age of backup. Defaults to `false`.",
                          "type": "boolean"
                        },
                        "lastExecutionTime": {
                          "description": "The time the backup was last attempted.",
                          "type": "string"
                        },
                        "retentionPeriodDays": {
                          "description": "After how many days backups should be deleted. Defaults to 30.\nAfter how many days backups should be deleted.",
                          "type": "number"
                        },
                        "startTime": {
                          "description": "When the schedule should start working in RFC-3339 format.\nWhen the schedule should start working in RFC-3339 format.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "clientAffinityEnabled": {
              "description": "Should Client Affinity be enabled?",
              "type": "boolean"
            },
            "clientCertificateEnabled": {
              "description": "Should Client Certificates be enabled?",
              "type": "boolean"
            },
            "clientCertificateExclusionPaths": {
              "description": "Paths to exclude when using client certificates, separated by ;\nPaths to exclude when using client certificates, separated by ;",
              "type": "string"
            },
            "clientCertificateMode": {
              "description": "The Client Certificate mode. Possible values are Required, Optional, and OptionalInteractiveUser. This property has no effect when client_certificate_enabled is false. Defaults to Required.",
              "type": "string"
            },
            "connectionString": {
              "description": "One or more connection_string blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the Connection String.\nThe name which should be used for this Connection.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of database. Possible values include: MySQL, SQLServer, SQLAzure, Custom, NotificationHub, ServiceBus, EventHub, APIHub, DocDb, RedisCache, and PostgreSQL.\nType of database. Possible values include: `MySQL`, `SQLServer`, `SQLAzure`, `Custom`, `NotificationHub`, `ServiceBus`, `EventHub`, `APIHub`, `DocDb`, `RedisCache`, and `PostgreSQL`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "defaultHostname": {
              "description": "The default hostname of the Linux Web App.",
              "type": "string"
            },
            "enabled": {
              "description": "Should the Linux Web App be enabled? Defaults to true.",
              "type": "boolean"
            },
            "ftpPublishBasicAuthenticationEnabled": {
              "description": "Should the default FTP Basic Authentication publishing profile be enabled. Defaults to true.",
              "type": "boolean"
            },
            "hostingEnvironmentId": {
              "description": "The ID of the App Service Environment used by App Service.",
              "type": "string"
            },
            "httpsOnly": {
              "description": "Should the Linux Web App require HTTPS connections. Defaults to false.",
              "type": "boolean"
            },
            "id": {
              "description": "The ID of the Linux Web App.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Managed Identity IDs to be assigned to this Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "principalId": {
                    "description": "The Principal ID associated with this Managed Service Identity.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The Tenant ID associated with this Managed Service Identity.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Specifies the type of Managed Service Identity that should be configured on this Linux Web App. Possible values are SystemAssigned, UserAssigned, and SystemAssigned, UserAssigned (to enable both).",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "keyVaultReferenceIdentityId": {
              "description": "The User Assigned Identity ID used for accessing KeyVault secrets. The identity must be assigned to the application in the identity block. For more information see - Access vaults with a user-assigned identity.",
              "type": "string"
            },
            "kind": {
              "description": "The Kind value for this Linux Web App.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the Linux Web App should exist. Changing this forces a new Linux Web App to be created.",
              "type": "string"
            },
            "logs": {
              "description": "A logs block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "applicationLogs": {
                    "description": "A application_logs block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "azureBlobStorage": {
                          "description": "A azure_blob_storage_http block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "level": {
                                "description": "The level at which to log. Possible values include Error, Warning, Information, Verbose and Off. NOTE: this field is not available for http_logs",
                                "type": "string"
                              },
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "sasUrl": {
                                "description": "SAS url to an Azure blob container with read/write/list/delete permissions.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "fileSystemLevel": {
                          "description": "Log level. Possible values include: Off, Verbose, Information, Warning, and Error.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "detailedErrorMessages": {
                    "description": "Should detailed error messages be enabled?",
                    "type": "boolean"
                  },
                  "failedRequestTracing": {
                    "description": "Should the failed request tracing be enabled?",
                    "type": "boolean"
                  },
                  "httpLogs": {
                    "description": "An http_logs block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "azureBlobStorage": {
                          "description": "A azure_blob_storage_http block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "fileSystem": {
                          "description": "A file_system block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "retentionInDays": {
                                "description": "The retention period in days. A value of 0 means no retention.",
                                "type": "number"
                              },
                              "retentionInMb": {
                                "description": "The maximum size in megabytes that log files can use.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "outboundIpAddressList": {
              "description": "A list of outbound IP addresses - such as [\"52.23.25.3\", \"52.143.43.12\"]",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "outboundIpAddresses": {
              "description": "A comma separated list of outbound IP addresses - such as 52.23.25.3,52.143.43.12.",
              "type": "string"
            },
            "possibleOutboundIpAddressList": {
              "description": "A list of possible outbound ip address.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "possibleOutboundIpAddresses": {
              "description": "A comma-separated list of outbound IP addresses - such as 52.23.25.3,52.143.43.12,52.143.43.17 - not all of which are necessarily in use. Superset of outbound_ip_addresses.",
              "type": "string"
            },
            "publicNetworkAccessEnabled": {
              "description": "Should public network access be enabled for the Web App. Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Linux Web App should exist. Changing this forces a new Linux Web App to be created.",
              "type": "string"
            },
            "servicePlanId": {
              "description": "The ID of the Service Plan that this Linux App Service will be created in.",
              "type": "string"
            },
            "siteConfig": {
              "description": "A site_config block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "alwaysOn": {
                    "description": "If this Linux Web App is Always On enabled. Defaults to true.",
                    "type": "boolean"
                  },
                  "apiDefinitionUrl": {
                    "description": "The URL to the API Definition for this Linux Web App.",
                    "type": "string"
                  },
                  "apiManagementApiId": {
                    "description": "The API Management API ID this Linux Web App is associated with.",
                    "type": "string"
                  },
                  "appCommandLine": {
                    "description": "The App command line to launch.",
                    "type": "string"
                  },
                  "applicationStack": {
                    "description": "A application_stack block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dockerImageName": {
                          "description": "The docker image, including tag, to be used. e.g. appsvc/staticsite:latest.",
                          "type": "string"
                        },
                        "dockerRegistryUrl": {
                          "description": "The URL of the container registry where the docker_image_name is located. e.g. https://index.docker.io or https://mcr.microsoft.com. This value is required with docker_image_name.",
                          "type": "string"
                        },
                        "dockerRegistryUsername": {
                          "description": "The User Name to use for authentication against the registry to pull the image.",
                          "type": "string"
                        },
                        "dotnetVersion": {
                          "description": "The version of .NET to use. Possible values include 3.1, 5.0, 6.0, 7.0, 8.0 and 9.0.",
                          "type": "string"
                        },
                        "goVersion": {
                          "description": "The version of Go to use. Possible values include 1.18, and 1.19.",
                          "type": "string"
                        },
                        "javaServer": {
                          "description": "The Java server type. Possible values include JAVA, TOMCAT, and JBOSSEAP.",
                          "type": "string"
                        },
                        "javaServerVersion": {
                          "description": "The Version of the java_server to use.",
                          "type": "string"
                        },
                        "javaVersion": {
                          "description": "The Version of Java to use. Possible values include 8, 11, 17, and 21.",
                          "type": "string"
                        },
                        "nodeVersion": {
                          "description": "The version of Node to run. Possible values include 12-lts, 14-lts, 16-lts, 18-lts, 20-lts and 22-lts. This property conflicts with java_version.",
                          "type": "string"
                        },
                        "phpVersion": {
                          "description": "The version of PHP to run. Possible values are 7.4, 8.0, 8.1, 8.2 and 8.3.",
                          "type": "string"
                        },
                        "pythonVersion": {
                          "description": "The version of Python to run. Possible values include 3.13, 3.12, 3.11, 3.10, 3.9, 3.8 and 3.7.",
                          "type": "string"
                        },
                        "rubyVersion": {
                          "description": "The version of Ruby to run. Possible values include 2.6 and 2.7.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "autoHealSetting": {
                    "description": "A auto_heal_setting block as defined above. Required with auto_heal.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "actionType": {
                                "description": "Predefined action to be taken to an Auto Heal trigger. Possible values include: Recycle.",
                                "type": "string"
                              },
                              "minimumProcessExecutionTime": {
                                "description": "The minimum amount of time in hh:mm:ss the Linux Web App must have been running before the defined action will be run in the event of a trigger.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "trigger": {
                          "description": "A trigger block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "requests": {
                                "description": "A requests block as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "slowRequest": {
                                "description": "A slow_request blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "timeTaken": {
                                      "description": "The threshold of time passed to qualify as a Slow Request in hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "slowRequestWithPath": {
                                "description": "One or more slow_request_with_path blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to which this rule status code applies.",
                                      "type": "string"
                                    },
                                    "timeTaken": {
                                      "description": "The threshold of time passed to qualify as a Slow Request in hh:mm:ss.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "statusCode": {
                                "description": "One or more status_code blocks as defined above.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "count": {
                                      "description": "The number of occurrences of the defined status_code in the specified interval on which to trigger this rule.",
                                      "type": "number"
                                    },
                                    "interval": {
                                      "description": "The time interval in the form hh:mm:ss.",
                                      "type": "string"
                                    },
                                    "path": {
                                      "description": "The path to which this rule status code applies.",
                                      "type": "string"
                                    },
                                    "statusCodeRange": {
                                      "description": "The status code for this rule, accepts single status codes and status code ranges. e.g. 500 or 400-499. Possible values are integers between 101 and 599",
                                      "type": "string"
                                    },
                                    "subStatus": {
                                      "description": "The Request Sub Status of the Status Code.",
                                      "type": "number"
                                    },
                                    "win32StatusCode": {
                                      "description": "The Win32 Status Code of the Request.",
                                      "type": "number"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "containerRegistryManagedIdentityClientId": {
                    "description": "The Client ID of the Managed Service Identity to use for connections to the Azure Container Registry.",
                    "type": "string"
                  },
                  "containerRegistryUseManagedIdentity": {
                    "description": "Should connections for Azure Container Registry use Managed Identity.",
                    "type": "boolean"
                  },
                  "cors": {
                    "description": "A cors block as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "allowedOrigins": {
                          "description": "Specifies a list of origins that should be allowed to make cross-origin calls.\nSpecifies a list of origins that should be allowed to make cross-origin calls.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "supportCredentials": {
                          "description": "Whether CORS requests with credentials are allowed. Defaults to false\nAre credentials allowed in CORS requests? Defaults to `false`.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "defaultDocuments": {
                    "description": "Specifies a list of Default Documents for the Linux Web App.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "detailedErrorLoggingEnabled": {
                    "description": "Should the Linux Web App be enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "ftpsState": {
                    "description": "The State of FTP / FTPS service. Possible values include AllAllowed, FtpsOnly, and Disabled. Defaults to Disabled.",
                    "type": "string"
                  },
                  "healthCheckEvictionTimeInMin": {
                    "description": "The amount of time in minutes that a node can be unhealthy before being removed from the load balancer. Possible values are between 2 and 10. Only valid in conjunction with health_check_path.\nThe amount of time in minutes that a node is unhealthy before being removed from the load balancer. Possible values are between `2` and `10`. Only valid in conjunction with `health_check_path`",
                    "type": "number"
                  },
                  "healthCheckPath": {
                    "description": "The path to the Health Check.",
                    "type": "string"
                  },
                  "http2Enabled": {
                    "description": "Should the HTTP2 be enabled?",
                    "type": "boolean"
                  },
                  "ipRestriction": {
                    "description": "One or more ip_restriction blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "A headers block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Web App for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "ipRestrictionDefaultAction": {
                    "description": "The Default action for traffic that does not match any ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                    "type": "string"
                  },
                  "linuxFxVersion": {
                    "type": "string"
                  },
                  "loadBalancingMode": {
                    "description": "The Site load balancing. Possible values include: WeightedRoundRobin, LeastRequests, LeastResponseTime, WeightedTotalTraffic, RequestHash, PerSiteRoundRobin. Defaults to LeastRequests if omitted.",
                    "type": "string"
                  },
                  "localMysqlEnabled": {
                    "description": "Use Local MySQL. Defaults to false.",
                    "type": "boolean"
                  },
                  "managedPipelineMode": {
                    "description": "Managed pipeline mode. Possible values include Integrated, and Classic. Defaults to Integrated.",
                    "type": "string"
                  },
                  "minimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests. Possible values include: 1.0, 1.1, 1.2 and 1.3. Defaults to 1.2.",
                    "type": "string"
                  },
                  "remoteDebuggingEnabled": {
                    "description": "Should Remote Debugging be enabled? Defaults to false.",
                    "type": "boolean"
                  },
                  "remoteDebuggingVersion": {
                    "description": "The Remote Debugging Version. Currently only VS2022 is supported.",
                    "type": "string"
                  },
                  "scmIpRestriction": {
                    "description": "One or more scm_ip_restriction blocks as defined above.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "description": "The action to take. Possible values are Allow or Deny. Defaults to Allow.\nThe action to take. Possible values are `Allow` or `Deny`.",
                          "type": "string"
                        },
                        "description": {
                          "description": "The Description of this IP Restriction.\nThe description of the IP restriction rule.",
                          "type": "string"
                        },
                        "headers": {
                          "description": "A headers block as defined above.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "xAzureFdid": {
                                "description": "Specifies a list of Azure Front Door IDs.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xFdHealthProbe": {
                                "description": "Specifies if a Front Door Health Probe should be expected. The only possible value is 1.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedFor": {
                                "description": "Specifies a list of addresses for which matching should be applied. Omitting this value means allow any.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "xForwardedHost": {
                                "description": "Specifies a list of Hosts for which matching should be applied.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ipAddress": {
                          "description": "The CIDR notation of the IP or IP Range to match. For example: 10.0.0.0/24 or 192.168.10.1/32\nThe CIDR notation of the IP or IP Range to match. For example: `10.0.0.0/24` or `192.168.10.1/32` or `fe80::/64` or `13.107.6.152/31,13.107.128.0/22`",
                          "type": "string"
                        },
                        "name": {
                          "description": "The name which should be used for this Storage Account.\nThe name which should be used for this `ip_restriction`.",
                          "type": "string"
                        },
                        "priority": {
                          "description": "The priority value of this ip_restriction. Defaults to 65000.\nThe priority value of this `ip_restriction`.",
                          "type": "number"
                        },
                        "serviceTag": {
                          "description": "The Service Tag used for this IP Restriction.\nThe Service Tag used for this IP Restriction.",
                          "type": "string"
                        },
                        "virtualNetworkSubnetId": {
                          "description": "The subnet id which will be used by this Web App for regional virtual network integration.\nThe Virtual Network Subnet ID used for this IP Restriction.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "scmIpRestrictionDefaultAction": {
                    "description": "The Default action for traffic that does not match any scm_ip_restriction rule. possible values include Allow and Deny. Defaults to Allow.",
                    "type": "string"
                  },
                  "scmMinimumTlsVersion": {
                    "description": "The configures the minimum version of TLS required for SSL requests to the SCM site Possible values include: 1.0, 1.1, and 1.2. Defaults to 1.2.",
                    "type": "string"
                  },
                  "scmType": {
                    "type": "string"
                  },
                  "scmUseMainIpRestriction": {
                    "description": "Should the Linux Web App ip_restriction configuration be used for the SCM also.",
                    "type": "boolean"
                  },
                  "use32BitWorker": {
                    "description": "Should the Linux Web App use a 32-bit worker? Defaults to true.",
                    "type": "boolean"
                  },
                  "vnetRouteAllEnabled": {
                    "description": "Should all outbound traffic have NAT Gateways, Network Security Groups and User Defined Routes applied? Defaults to false.\nShould all outbound traffic to have Virtual Network Security Groups and User Defined Routes applied? Defaults to `false`.",
                    "type": "boolean"
                  },
                  "websocketsEnabled": {
                    "description": "Should Web Sockets be enabled? Defaults to false.",
                    "type": "boolean"
                  },
                  "workerCount": {
                    "description": "The number of Workers for this Linux App Service.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "stickySettings": {
              "description": "A sticky_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "appSettingNames": {
                    "description": "A list of app_setting names that the Linux Web App will not swap between Slots when a swap operation is triggered.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "connectionStringNames": {
                    "description": "A list of connection_string names that the Linux Web App will not swap between Slots when a swap operation is triggered.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccount": {
              "description": "One or more storage_account blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "accountName": {
                    "description": "The Name of the Storage Account.",
                    "type": "string"
                  },
                  "mountPath": {
                    "description": "The path at which to mount the storage share.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name which should be used for this Storage Account.",
                    "type": "string"
                  },
                  "shareName": {
                    "description": "The Name of the File Share or Container Name for Blob storage.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The Azure Storage Type. Possible values include AzureFiles and AzureBlob",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Linux Web App.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "virtualNetworkBackupRestoreEnabled": {
              "description": "Whether backup and restore operations over the linked virtual network are enabled. Defaults to false.",
              "type": "boolean"
            },
            "virtualNetworkSubnetId": {
              "description": "The subnet id which will be used by this Web App for regional virtual network integration.",
              "type": "string"
            },
            "webdeployPublishBasicAuthenticationEnabled": {
              "description": "Should the default WebDeploy Basic Authentication publishing credentials enabled. Defaults to true.",
              "type": "boolean"
            },
            "zipDeployFile": {
              "description": "The local path and filename of the Zip packaged application to deploy to this Linux Web App.\nThe local path and filename of the Zip packaged application to deploy to this Linux Web App. **Note:** Using this value requires either `WEBSITE_RUN_FROM_PACKAGE=1` or `SCM_DO_BUILD_DURING_DEPLOYMENT=true` to be set on the App in `app_settings`.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
