{
  "description": "FirewallPolicy is the Schema for the FirewallPolicys API. Provides an AWS Network Firewall Policy resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FirewallPolicySpec defines the desired state of FirewallPolicy",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "description": {
              "description": "A friendly description of the firewall policy.",
              "type": "string"
            },
            "encryptionConfiguration": {
              "description": "KMS encryption configuration settings. See Encryption Configuration below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyId": {
                    "description": "The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "firewallPolicy": {
              "description": "A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "policyVariables": {
                    "description": ". Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ruleVariables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ipSet": {
                                "description": "A configuration block that defines a set of IP addresses. See IP Set below for details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "definition": {
                                      "description": "Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata HOME_NET variable.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "set"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "key": {
                                "description": "An alphanumeric string to identify the ip_set. Valid values: HOME_NET",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statefulDefaultActions": {
                    "description": "Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statefulEngineOptions": {
                    "description": "A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "flowTimeouts": {
                          "description": "Amount of time that can pass without any traffic sent through the firewall before the firewall determines that the connection is idle.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tcpIdleTimeoutSeconds": {
                                "description": "Number of seconds that can pass without any TCP traffic sent through the firewall before the firewall determines that the connection is idle. After the idle timeout passes, data packets are dropped, however, the next TCP SYN packet is considered a new flow and is processed by the firewall. Clients or targets can use TCP keepalive packets to reset the idle timeout. Default value: 350.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ruleOrder": {
                          "description": "Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.",
                          "type": "string"
                        },
                        "streamExceptionPolicy": {
                          "description": "Describes how to treat traffic which has broken midstream. Default value: DROP. Valid values: DROP, CONTINUE, REJECT.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statefulRuleGroupReference": {
                    "description": "Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "deepThreatInspection": {
                          "description": "Whether to enable deep threat inspection, which allows AWS to analyze service logs of network traffic processed by these rule groups to identify threat indicators across customers. AWS will use these threat indicators to improve the active threat defense managed rule groups and protect the security of AWS customers and services. This only applies to active threat defense maanaged rule groups.",
                          "type": "string"
                        },
                        "override": {
                          "description": "Configuration block for override values",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "description": "The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "priority": {
                          "description": "An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.",
                          "type": "number"
                        },
                        "resourceArn": {
                          "description": "The Amazon Resource Name (ARN) of the stateless rule group.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statelessCustomAction": {
                    "description": "Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's stateless_default_actions. See Stateless Custom Action below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "actionDefinition": {
                          "description": "A configuration block describing the custom action associated with the action_name. See Action Definition below for details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "publishMetricAction": {
                                "description": "A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "dimension": {
                                      "description": "Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "description": "The string value to use in the custom metric dimension.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "actionName": {
                          "description": "A friendly name of the custom action.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statelessDefaultActions": {
                    "description": "Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.\nIn addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statelessFragmentDefaultActions": {
                    "description": "Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.\nIn addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statelessRuleGroupReference": {
                    "description": "Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "priority": {
                          "description": "An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.",
                          "type": "number"
                        },
                        "resourceArn": {
                          "description": "The Amazon Resource Name (ARN) of the stateless rule group.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "tlsInspectionConfigurationArn": {
                    "description": "The (ARN) of the TLS Inspection policy to attach to the FW Policy.  This must be added at creation of the resource per AWS documentation. \"You can only add a TLS inspection configuration to a new policy, not to an existing policy.\"  This cannot be removed from a FW Policy.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "description": {
              "description": "A friendly description of the firewall policy.",
              "type": "string"
            },
            "encryptionConfiguration": {
              "description": "KMS encryption configuration settings. See Encryption Configuration below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyId": {
                    "description": "The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "firewallPolicy": {
              "description": "A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "policyVariables": {
                    "description": ". Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ruleVariables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ipSet": {
                                "description": "A configuration block that defines a set of IP addresses. See IP Set below for details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "definition": {
                                      "description": "Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata HOME_NET variable.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "set"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "key": {
                                "description": "An alphanumeric string to identify the ip_set. Valid values: HOME_NET",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statefulDefaultActions": {
                    "description": "Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statefulEngineOptions": {
                    "description": "A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "flowTimeouts": {
                          "description": "Amount of time that can pass without any traffic sent through the firewall before the firewall determines that the connection is idle.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tcpIdleTimeoutSeconds": {
                                "description": "Number of seconds that can pass without any TCP traffic sent through the firewall before the firewall determines that the connection is idle. After the idle timeout passes, data packets are dropped, however, the next TCP SYN packet is considered a new flow and is processed by the firewall. Clients or targets can use TCP keepalive packets to reset the idle timeout. Default value: 350.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ruleOrder": {
                          "description": "Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.",
                          "type": "string"
                        },
                        "streamExceptionPolicy": {
                          "description": "Describes how to treat traffic which has broken midstream. Default value: DROP. Valid values: DROP, CONTINUE, REJECT.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statefulRuleGroupReference": {
                    "description": "Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "deepThreatInspection": {
                          "description": "Whether to enable deep threat inspection, which allows AWS to analyze service logs of network traffic processed by these rule groups to identify threat indicators across customers. AWS will use these threat indicators to improve the active threat defense managed rule groups and protect the security of AWS customers and services. This only applies to active threat defense maanaged rule groups.",
                          "type": "string"
                        },
                        "override": {
                          "description": "Configuration block for override values",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "description": "The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "priority": {
                          "description": "An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.",
                          "type": "number"
                        },
                        "resourceArn": {
                          "description": "The Amazon Resource Name (ARN) of the stateless rule group.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statelessCustomAction": {
                    "description": "Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's stateless_default_actions. See Stateless Custom Action below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "actionDefinition": {
                          "description": "A configuration block describing the custom action associated with the action_name. See Action Definition below for details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "publishMetricAction": {
                                "description": "A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "dimension": {
                                      "description": "Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "description": "The string value to use in the custom metric dimension.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "actionName": {
                          "description": "A friendly name of the custom action.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statelessDefaultActions": {
                    "description": "Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.\nIn addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statelessFragmentDefaultActions": {
                    "description": "Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.\nIn addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statelessRuleGroupReference": {
                    "description": "Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "priority": {
                          "description": "An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.",
                          "type": "number"
                        },
                        "resourceArn": {
                          "description": "The Amazon Resource Name (ARN) of the stateless rule group.",
                          "type": "string"
                        },
                        "resourceArnRef": {
                          "description": "Reference to a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "resourceArnSelector": {
                          "description": "Selector for a RuleGroup in networkfirewall to populate resourceArn.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "tlsInspectionConfigurationArn": {
                    "description": "The (ARN) of the TLS Inspection policy to attach to the FW Policy.  This must be added at creation of the resource per AWS documentation. \"You can only add a TLS inspection configuration to a new policy, not to an existing policy.\"  This cannot be removed from a FW Policy.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.firewallPolicy) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.firewallPolicy))",
          "message": "spec.forProvider.firewallPolicy is a required parameter"
        }
      ]
    },
    "status": {
      "description": "FirewallPolicyStatus defines the observed state of FirewallPolicy.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) that identifies the firewall policy.",
              "type": "string"
            },
            "description": {
              "description": "A friendly description of the firewall policy.",
              "type": "string"
            },
            "encryptionConfiguration": {
              "description": "KMS encryption configuration settings. See Encryption Configuration below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "keyId": {
                    "description": "The ID of the customer managed key. You can use any of the key identifiers that KMS supports, unless you're using a key that's managed by another account. If you're using a key managed by another account, then specify the key ARN.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of AWS KMS key to use for encryption of your Network Firewall resources. Valid values are CUSTOMER_KMS and AWS_OWNED_KMS_KEY.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "firewallPolicy": {
              "description": "A configuration block describing the rule groups and policy actions to use in the firewall policy. See Firewall Policy below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "policyVariables": {
                    "description": ". Contains variables that you can use to override default Suricata settings in your firewall policy. See Rule Variables for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ruleVariables": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ipSet": {
                                "description": "A configuration block that defines a set of IP addresses. See IP Set below for details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "definition": {
                                      "description": "Set of IPv4 or IPv6 addresses in CIDR notation to use for the Suricata HOME_NET variable.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "x-kubernetes-list-type": "set"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "key": {
                                "description": "An alphanumeric string to identify the ip_set. Valid values: HOME_NET",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statefulDefaultActions": {
                    "description": "Set of actions to take on a packet if it does not match any stateful rules in the policy. This can only be specified if the policy has a stateful_engine_options block with a rule_order value of STRICT_ORDER. You can specify one of either or neither values of aws:drop_strict or aws:drop_established, as well as any combination of aws:alert_strict and aws:alert_established.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statefulEngineOptions": {
                    "description": "A configuration block that defines options on how the policy handles stateful rules. See Stateful Engine Options below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "flowTimeouts": {
                          "description": "Amount of time that can pass without any traffic sent through the firewall before the firewall determines that the connection is idle.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tcpIdleTimeoutSeconds": {
                                "description": "Number of seconds that can pass without any TCP traffic sent through the firewall before the firewall determines that the connection is idle. After the idle timeout passes, data packets are dropped, however, the next TCP SYN packet is considered a new flow and is processed by the firewall. Clients or targets can use TCP keepalive packets to reset the idle timeout. Default value: 350.",
                                "type": "number"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "ruleOrder": {
                          "description": "Indicates how to manage the order of stateful rule evaluation for the policy. Default value: DEFAULT_ACTION_ORDER. Valid values: DEFAULT_ACTION_ORDER, STRICT_ORDER.",
                          "type": "string"
                        },
                        "streamExceptionPolicy": {
                          "description": "Describes how to treat traffic which has broken midstream. Default value: DROP. Valid values: DROP, CONTINUE, REJECT.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statefulRuleGroupReference": {
                    "description": "Set of configuration blocks containing references to the stateful rule groups that are used in the policy. See Stateful Rule Group Reference below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "deepThreatInspection": {
                          "description": "Whether to enable deep threat inspection, which allows AWS to analyze service logs of network traffic processed by these rule groups to identify threat indicators across customers. AWS will use these threat indicators to improve the active threat defense managed rule groups and protect the security of AWS customers and services. This only applies to active threat defense maanaged rule groups.",
                          "type": "string"
                        },
                        "override": {
                          "description": "Configuration block for override values",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "description": "The action that changes the rule group from DROP to ALERT . This only applies to managed rule groups.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "priority": {
                          "description": "An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.",
                          "type": "number"
                        },
                        "resourceArn": {
                          "description": "The Amazon Resource Name (ARN) of the stateless rule group.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statelessCustomAction": {
                    "description": "Set of configuration blocks describing the custom action definitions that are available for use in the firewall policy's stateless_default_actions. See Stateless Custom Action below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "actionDefinition": {
                          "description": "A configuration block describing the custom action associated with the action_name. See Action Definition below for details.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "publishMetricAction": {
                                "description": "A configuration block describing the stateless inspection criteria that publishes the specified metrics to Amazon CloudWatch for the matching packet. You can pair this custom action with any of the standard stateless rule actions. See Publish Metric Action below for details.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "dimension": {
                                      "description": "Set of configuration blocks describing dimension settings to use for Amazon CloudWatch custom metrics. See Dimension below for more details.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "value": {
                                            "description": "The string value to use in the custom metric dimension.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "actionName": {
                          "description": "A friendly name of the custom action.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "statelessDefaultActions": {
                    "description": "Set of actions to take on a packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.\nIn addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statelessFragmentDefaultActions": {
                    "description": "Set of actions to take on a fragmented packet if it does not match any of the stateless rules in the policy. You must specify one of the standard actions including: aws:drop, aws:pass, or aws:forward_to_sfe.\nIn addition, you can specify custom actions that are compatible with your standard action choice. If you want non-matching packets to be forwarded for stateful inspection, specify aws:forward_to_sfe.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "statelessRuleGroupReference": {
                    "description": "Set of configuration blocks containing references to the stateless rule groups that are used in the policy. See Stateless Rule Group Reference below for details.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "priority": {
                          "description": "An integer setting that indicates the order in which to run the stateless rule groups in a single policy. AWS Network Firewall applies each stateless rule group to a packet starting with the group that has the lowest priority setting.",
                          "type": "number"
                        },
                        "resourceArn": {
                          "description": "The Amazon Resource Name (ARN) of the stateless rule group.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "tlsInspectionConfigurationArn": {
                    "description": "The (ARN) of the TLS Inspection policy to attach to the FW Policy.  This must be added at creation of the resource per AWS documentation. \"You can only add a TLS inspection configuration to a new policy, not to an existing policy.\"  This cannot be removed from a FW Policy.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "The Amazon Resource Name (ARN) that identifies the firewall policy.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "updateToken": {
              "description": "A string token used when updating a firewall policy.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
