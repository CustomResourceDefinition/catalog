{
  "description": "Product is the Schema for the Products API. Manages a Service Catalog Product",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ProductSpec defines the desired state of Product",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "acceptLanguage": {
              "description": "Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.",
              "type": "string"
            },
            "description": {
              "description": "Description of the product.",
              "type": "string"
            },
            "distributor": {
              "description": "Distributor (i.e., vendor) of the product.",
              "type": "string"
            },
            "name": {
              "description": "Name of the product.",
              "type": "string"
            },
            "owner": {
              "description": "Owner of the product.",
              "type": "string"
            },
            "provisioningArtifactParameters": {
              "description": "Configuration block for provisioning artifact (i.e., version) parameters. See provisioning_artifact_parameters Block for details.",
              "type": "object",
              "properties": {
                "description": {
                  "description": "Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.",
                  "type": "string"
                },
                "disableTemplateValidation": {
                  "description": "Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the provisioning artifact (for example, v1, v2beta). No spaces are allowed.",
                  "type": "string"
                },
                "templatePhysicalId": {
                  "description": "Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID].",
                  "type": "string"
                },
                "templateUrl": {
                  "description": "Template source as URL of the CloudFormation template in Amazon S3.",
                  "type": "string"
                },
                "type": {
                  "description": "Type of provisioning artifact. See AWS Docs for valid list of values.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "supportDescription": {
              "description": "Support information about the product.",
              "type": "string"
            },
            "supportEmail": {
              "description": "Contact email for product support.",
              "type": "string"
            },
            "supportUrl": {
              "description": "Contact URL for product support.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "type": {
              "description": "Type of product. See AWS Docs for valid list of values.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "acceptLanguage": {
              "description": "Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.",
              "type": "string"
            },
            "description": {
              "description": "Description of the product.",
              "type": "string"
            },
            "distributor": {
              "description": "Distributor (i.e., vendor) of the product.",
              "type": "string"
            },
            "name": {
              "description": "Name of the product.",
              "type": "string"
            },
            "owner": {
              "description": "Owner of the product.",
              "type": "string"
            },
            "provisioningArtifactParameters": {
              "description": "Configuration block for provisioning artifact (i.e., version) parameters. See provisioning_artifact_parameters Block for details.",
              "type": "object",
              "properties": {
                "description": {
                  "description": "Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.",
                  "type": "string"
                },
                "disableTemplateValidation": {
                  "description": "Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the provisioning artifact (for example, v1, v2beta). No spaces are allowed.",
                  "type": "string"
                },
                "templatePhysicalId": {
                  "description": "Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID].",
                  "type": "string"
                },
                "templateUrl": {
                  "description": "Template source as URL of the CloudFormation template in Amazon S3.",
                  "type": "string"
                },
                "type": {
                  "description": "Type of provisioning artifact. See AWS Docs for valid list of values.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "supportDescription": {
              "description": "Support information about the product.",
              "type": "string"
            },
            "supportEmail": {
              "description": "Contact email for product support.",
              "type": "string"
            },
            "supportUrl": {
              "description": "Contact URL for product support.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "type": {
              "description": "Type of product. See AWS Docs for valid list of values.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.owner) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.owner))",
          "message": "spec.forProvider.owner is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.provisioningArtifactParameters) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.provisioningArtifactParameters))",
          "message": "spec.forProvider.provisioningArtifactParameters is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.type))",
          "message": "spec.forProvider.type is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ProductStatus defines the observed state of Product.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "acceptLanguage": {
              "description": "Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.",
              "type": "string"
            },
            "arn": {
              "description": "ARN of the product.",
              "type": "string"
            },
            "createdTime": {
              "description": "Time when the product was created.",
              "type": "string"
            },
            "description": {
              "description": "Description of the product.",
              "type": "string"
            },
            "distributor": {
              "description": "Distributor (i.e., vendor) of the product.",
              "type": "string"
            },
            "hasDefaultPath": {
              "description": "Whether the product has a default path. If the product does not have a default path, call ListLaunchPaths to disambiguate between paths.  Otherwise, ListLaunchPaths is not required, and the output of ProductViewSummary can be used directly with DescribeProvisioningParameters.",
              "type": "boolean"
            },
            "id": {
              "description": "Product ID. For example, prod-dnigbtea24ste.",
              "type": "string"
            },
            "name": {
              "description": "Name of the product.",
              "type": "string"
            },
            "owner": {
              "description": "Owner of the product.",
              "type": "string"
            },
            "provisioningArtifactParameters": {
              "description": "Configuration block for provisioning artifact (i.e., version) parameters. See provisioning_artifact_parameters Block for details.",
              "type": "object",
              "properties": {
                "description": {
                  "description": "Description of the provisioning artifact (i.e., version), including how it differs from the previous provisioning artifact.",
                  "type": "string"
                },
                "disableTemplateValidation": {
                  "description": "Whether AWS Service Catalog stops validating the specified provisioning artifact template even if it is invalid.",
                  "type": "boolean"
                },
                "name": {
                  "description": "Name of the provisioning artifact (for example, v1, v2beta). No spaces are allowed.",
                  "type": "string"
                },
                "templatePhysicalId": {
                  "description": "Template source as the physical ID of the resource that contains the template. Currently only supports CloudFormation stack ARN. Specify the physical ID as arn:[partition]:cloudformation:[region]:[account ID]:stack/[stack name]/[resource ID].",
                  "type": "string"
                },
                "templateUrl": {
                  "description": "Template source as URL of the CloudFormation template in Amazon S3.",
                  "type": "string"
                },
                "type": {
                  "description": "Type of provisioning artifact. See AWS Docs for valid list of values.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "status": {
              "description": "Status of the product.",
              "type": "string"
            },
            "supportDescription": {
              "description": "Support information about the product.",
              "type": "string"
            },
            "supportEmail": {
              "description": "Contact email for product support.",
              "type": "string"
            },
            "supportUrl": {
              "description": "Contact URL for product support.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "type": {
              "description": "Type of product. See AWS Docs for valid list of values.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
