{
  "description": "Policy defines a Policy for VirtualServer and VirtualServerRoute resources.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PolicySpec is the spec of the Policy resource.\nThe spec includes multiple fields, where each field represents a different policy.\nOnly one policy (field) is allowed.",
      "type": "object",
      "properties": {
        "accessControl": {
          "description": "AccessControl defines an access policy based on the source IP of a request.",
          "type": "object",
          "properties": {
            "allow": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "deny": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "apiKey": {
          "description": "APIKey defines an API Key policy.",
          "type": "object",
          "properties": {
            "clientSecret": {
              "type": "string"
            },
            "suppliedIn": {
              "description": "SuppliedIn defines the locations API Key should be supplied in.",
              "type": "object",
              "properties": {
                "header": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "query": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "basicAuth": {
          "description": "BasicAuth holds HTTP Basic authentication configuration",
          "type": "object",
          "properties": {
            "realm": {
              "type": "string"
            },
            "secret": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "egressMTLS": {
          "description": "EgressMTLS defines an Egress MTLS policy.",
          "type": "object",
          "properties": {
            "ciphers": {
              "type": "string"
            },
            "protocols": {
              "type": "string"
            },
            "serverName": {
              "type": "boolean"
            },
            "sessionReuse": {
              "type": "boolean"
            },
            "sslName": {
              "type": "string"
            },
            "tlsSecret": {
              "type": "string"
            },
            "trustedCertSecret": {
              "type": "string"
            },
            "verifyDepth": {
              "type": "integer"
            },
            "verifyServer": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "ingressClassName": {
          "type": "string"
        },
        "ingressMTLS": {
          "description": "IngressMTLS defines an Ingress MTLS policy.",
          "type": "object",
          "properties": {
            "clientCertSecret": {
              "type": "string"
            },
            "crlFileName": {
              "type": "string"
            },
            "verifyClient": {
              "type": "string"
            },
            "verifyDepth": {
              "type": "integer"
            }
          },
          "additionalProperties": false
        },
        "jwt": {
          "description": "JWTAuth holds JWT authentication configuration.",
          "type": "object",
          "properties": {
            "jwksURI": {
              "type": "string"
            },
            "keyCache": {
              "type": "string"
            },
            "realm": {
              "type": "string"
            },
            "secret": {
              "type": "string"
            },
            "token": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "oidc": {
          "description": "OIDC defines an Open ID Connect policy.",
          "type": "object",
          "properties": {
            "accessTokenEnable": {
              "type": "boolean"
            },
            "authEndpoint": {
              "type": "string"
            },
            "authExtraArgs": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "clientID": {
              "type": "string"
            },
            "clientSecret": {
              "type": "string"
            },
            "endSessionEndpoint": {
              "type": "string"
            },
            "jwksURI": {
              "type": "string"
            },
            "postLogoutRedirectURI": {
              "type": "string"
            },
            "redirectURI": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "tokenEndpoint": {
              "type": "string"
            },
            "zoneSyncLeeway": {
              "type": "integer"
            }
          },
          "additionalProperties": false
        },
        "rateLimit": {
          "description": "RateLimit defines a rate limit policy.",
          "type": "object",
          "properties": {
            "burst": {
              "type": "integer"
            },
            "delay": {
              "type": "integer"
            },
            "dryRun": {
              "type": "boolean"
            },
            "key": {
              "type": "string"
            },
            "logLevel": {
              "type": "string"
            },
            "noDelay": {
              "type": "boolean"
            },
            "rate": {
              "type": "string"
            },
            "rejectCode": {
              "type": "integer"
            },
            "scale": {
              "type": "boolean"
            },
            "zoneSize": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "waf": {
          "description": "WAF defines an WAF policy.",
          "type": "object",
          "properties": {
            "apBundle": {
              "type": "string"
            },
            "apPolicy": {
              "type": "string"
            },
            "enable": {
              "type": "boolean"
            },
            "securityLog": {
              "description": "SecurityLog defines the security log of a WAF policy.",
              "type": "object",
              "properties": {
                "apLogBundle": {
                  "type": "string"
                },
                "apLogConf": {
                  "type": "string"
                },
                "enable": {
                  "type": "boolean"
                },
                "logDest": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "securityLogs": {
              "type": "array",
              "items": {
                "description": "SecurityLog defines the security log of a WAF policy.",
                "type": "object",
                "properties": {
                  "apLogBundle": {
                    "type": "string"
                  },
                  "apLogConf": {
                    "type": "string"
                  },
                  "enable": {
                    "type": "boolean"
                  },
                  "logDest": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PolicyStatus is the status of the policy resource",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
