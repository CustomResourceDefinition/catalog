{
  "description": "AtlasIPAccessList is the Schema for the atlasipaccesslists API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasIPAccessListSpec defines the desired state of AtlasIPAccessList.",
      "type": "object",
      "required": [
        "entries"
      ],
      "properties": {
        "connectionSecret": {
          "description": "Name of the secret containing Atlas API private and public keys",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "entries": {
          "description": "Entries is the list of IP Access to be managed",
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "awsSecurityGroup": {
                "description": "Unique identifier of AWS security group in this access list entry.",
                "type": "string"
              },
              "cidrBlock": {
                "description": "Range of IP addresses in CIDR notation in this access list entry.",
                "type": "string"
              },
              "comment": {
                "description": "Comment associated with this access list entry.",
                "type": "string"
              },
              "deleteAfterDate": {
                "description": "Date and time after which Atlas deletes the temporary access list entry.",
                "type": "string",
                "format": "date-time"
              },
              "ipAddress": {
                "description": "Entry using an IP address in this access list entry.",
                "type": "string"
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "!(has(self.ipAddress) \u0026\u0026 (has(self.cidrBlock) || has(self.awsSecurityGroup))) \u0026\u0026 !(has(self.cidrBlock) \u0026\u0026 has(self.awsSecurityGroup))",
                "message": "Only one of ipAddress, cidrBlock, or awsSecurityGroup may be set."
              }
            ]
          }
        },
        "externalProjectRef": {
          "description": "\"externalProjectRef\" holds the parent Atlas project ID.\nMutually exclusive with the \"projectRef\" field",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "ID is the Atlas project ID",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "\"projectRef\" is a reference to the parent AtlasProject resource.\nMutually exclusive with the \"externalProjectRef\" field",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 !has(self.projectRef)) || (!has(self.externalProjectRef) \u0026\u0026 has(self.projectRef))",
          "message": "must define only one project reference through externalProjectRef or projectRef"
        },
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 has(self.connectionSecret)) || !has(self.externalProjectRef)",
          "message": "must define a local connection secret when referencing an external project"
        }
      ]
    },
    "status": {
      "description": "AtlasIPAccessListStatus is the most recent observed status of the AtlasIPAccessList cluster. Read-only.",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions is the list of statuses showing the current state of the Atlas Custom Resource",
          "type": "array",
          "items": {
            "description": "Condition describes the state of an Atlas Custom Resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of Atlas Custom Resource condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "entries": {
          "description": "Status is the state of the ip access list",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "entry",
              "status"
            ],
            "properties": {
              "entry": {
                "description": "Entry is the ip access Atlas is managing",
                "type": "string"
              },
              "status": {
                "description": "Status is the correspondent state of the entry",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration indicates the generation of the resource specification that the Atlas Operator is aware of.\nThe Atlas Operator updates this field to the 'metadata.generation' as soon as it starts reconciliation of the resource.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
