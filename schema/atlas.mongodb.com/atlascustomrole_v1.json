{
  "description": "AtlasCustomRole is the Schema for the AtlasCustomRole API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasCustomRoleSpec defines the desired state of CustomRole in Atlas",
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "connectionSecret": {
          "description": "Name of the secret containing Atlas API private and public keys",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "externalProjectRef": {
          "description": "\"externalProjectRef\" holds the parent Atlas project ID.\nMutually exclusive with the \"projectRef\" field",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "ID is the Atlas project ID",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "\"projectRef\" is a reference to the parent AtlasProject resource.\nMutually exclusive with the \"externalProjectRef\" field",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "role": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "actions": {
              "description": "List of the individual privilege actions that the role grants.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "name",
                  "resources"
                ],
                "properties": {
                  "name": {
                    "description": "Human-readable label that identifies the privilege action.",
                    "type": "string"
                  },
                  "resources": {
                    "description": "List of resources on which you grant the action.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "cluster": {
                          "description": "Flag that indicates whether to grant the action on the cluster resource. If true, MongoDB Cloud ignores Database and Collection parameters.",
                          "type": "boolean"
                        },
                        "collection": {
                          "description": "Human-readable label that identifies the collection on which you grant the action to one MongoDB user.",
                          "type": "string"
                        },
                        "database": {
                          "description": "Human-readable label that identifies the database on which you grant the action to one MongoDB user.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "inheritedRoles": {
              "description": "List of the built-in roles that this custom role inherits.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "database",
                  "name"
                ],
                "properties": {
                  "database": {
                    "description": "Human-readable label that identifies the database on which someone grants the action to one MongoDB user.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Human-readable label that identifies the role inherited.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "name": {
              "description": "Human-readable label that identifies the role. This name must be unique for this custom role in this project.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 !has(self.projectRef)) || (!has(self.externalProjectRef) \u0026\u0026 has(self.projectRef))",
          "message": "must define only one project reference through externalProjectRef or projectRef"
        },
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 has(self.connectionSecret)) || !has(self.externalProjectRef)",
          "message": "must define a local connection secret when referencing an external project"
        }
      ]
    },
    "status": {
      "description": "AtlasCustomRoleStatus is a status for the AtlasCustomRole Custom resource.\nNot the one included in the AtlasProject",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions is the list of statuses showing the current state of the Atlas Custom Resource",
          "type": "array",
          "items": {
            "description": "Condition describes the state of an Atlas Custom Resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of Atlas Custom Resource condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration indicates the generation of the resource specification that the Atlas Operator is aware of.\nThe Atlas Operator updates this field to the 'metadata.generation' as soon as it starts reconciliation of the resource.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
