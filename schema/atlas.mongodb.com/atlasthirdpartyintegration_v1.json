{
  "description": "AtlasThirdPartyIntegration is the Schema for the atlas 3rd party integrations API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasThirdPartyIntegrationSpec contains the expected configuration for an integration",
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "connectionSecret": {
          "description": "Name of the secret containing Atlas API private and public keys",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "datadog": {
          "description": "Datadog contains the config fields for Datadog's Integration",
          "type": "object",
          "required": [
            "apiKeySecretRef",
            "region"
          ],
          "properties": {
            "apiKeySecretRef": {
              "description": "APIKeySecretRef holds the name of a secret containing the datadog api key",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region is the Datadog region",
              "type": "string"
            },
            "sendCollectionLatencyMetrics": {
              "description": "SendCollectionLatencyMetrics toggles sending collection latency metrics",
              "type": "string",
              "default": "disabled",
              "enum": [
                "enabled",
                "disabled"
              ]
            },
            "sendDatabaseMetrics": {
              "description": "SendDatabaseMetrics toggles sending database metrics,\nincluding database and collection names",
              "type": "string",
              "default": "disabled",
              "enum": [
                "enabled",
                "disabled"
              ]
            }
          },
          "additionalProperties": false
        },
        "externalProjectRef": {
          "description": "\"externalProjectRef\" holds the parent Atlas project ID.\nMutually exclusive with the \"projectRef\" field",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "ID is the Atlas project ID",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "microsoftTeams": {
          "description": "MicrosoftTeams contains the config fields for Microsoft Teams's Integration",
          "type": "object",
          "required": [
            "urlSecretRef"
          ],
          "properties": {
            "urlSecretRef": {
              "description": "URLSecretRef holds the name of a secret containing the microsoft teams secret URL",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "newRelic": {
          "description": "NewRelic contains the config fields for New Relic's Integration",
          "type": "object",
          "required": [
            "credentialsSecretRef"
          ],
          "properties": {
            "credentialsSecretRef": {
              "description": "CredentialsSecretRef holds the name of a secret containing new relic's credentials:\naccount id, license key, read and write tokens",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "opsGenie": {
          "description": "OpsGenie contains the config fields for Ops Genie's Integration",
          "type": "object",
          "required": [
            "apiKeySecretRef",
            "region"
          ],
          "properties": {
            "apiKeySecretRef": {
              "description": "APIKeySecretRef holds the name of a secret containing Ops Genie's API key",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region is the Ops Genie region",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "pagerDuty": {
          "description": "PagerDuty contains the config fields for PagerDuty's Integration",
          "type": "object",
          "required": [
            "region",
            "serviceKeySecretRef"
          ],
          "properties": {
            "region": {
              "description": "Region is the Pager Duty region",
              "type": "string"
            },
            "serviceKeySecretRef": {
              "description": "ServiceKeySecretRef holds the name of a secret containing Pager Duty service key",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "\"projectRef\" is a reference to the parent AtlasProject resource.\nMutually exclusive with the \"externalProjectRef\" field",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "prometheus": {
          "description": "Prometheus contains the config fields for Prometheus's Integration",
          "type": "object",
          "required": [
            "enabled",
            "prometheusCredentialsSecretRef",
            "serviceDiscovery"
          ],
          "properties": {
            "enabled": {
              "description": "Enabled is true when Prometheus integration is enabled",
              "type": "string"
            },
            "prometheusCredentialsSecretRef": {
              "description": "PrometheusCredentialsSecretRef holds the name of a secret containing the Prometheus\nusername \u0026 password",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "serviceDiscovery": {
              "description": "ServiceDiscovery to be used by Prometheus",
              "type": "string",
              "enum": [
                "file",
                "http"
              ]
            }
          },
          "additionalProperties": false
        },
        "slack": {
          "description": "Slack contains the config fields for Slack's Integration",
          "type": "object",
          "required": [
            "apiTokenSecretRef",
            "channelName",
            "teamName"
          ],
          "properties": {
            "apiTokenSecretRef": {
              "description": "APITokenSecretRef holds the name of a secret containing the Slack API token",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "channelName": {
              "description": "ChannelName to be used by Prometheus",
              "type": "string"
            },
            "teamName": {
              "description": "TeamName flags whether or not Prometheus integration is enabled",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "description": "Type of the integration",
          "type": "string",
          "enum": [
            "DATADOG",
            "MICROSOFT_TEAMS",
            "NEW_RELIC",
            "OPS_GENIE",
            "PAGER_DUTY",
            "PROMETHEUS",
            "SLACK",
            "VICTOR_OPS",
            "WEBHOOK"
          ]
        },
        "victorOps": {
          "description": "VictorOps contains the config fields for VictorOps's Integration",
          "type": "object",
          "required": [
            "apiKeySecretRef",
            "routingKey"
          ],
          "properties": {
            "apiKeySecretRef": {
              "description": "APIKeySecretRef is the name of a secret containing Victor Ops API key",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "routingKey": {
              "description": "RoutingKey holds VictorOps routing key",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "webhook": {
          "description": "Webhook contains the config fields for Webhook's Integration",
          "type": "object",
          "required": [
            "urlSecretRef"
          ],
          "properties": {
            "urlSecretRef": {
              "description": "URLSecretRef holds the name of a secret containing Webhook URL and secret",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 !has(self.projectRef)) || (!has(self.externalProjectRef) \u0026\u0026 has(self.projectRef))",
          "message": "must define only one project reference through externalProjectRef or projectRef"
        },
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 has(self.connectionSecret)) || !has(self.externalProjectRef)",
          "message": "must define a local connection secret when referencing an external project"
        },
        {
          "rule": "has(self.type) \u0026\u0026 self.type.size() != 0",
          "message": "must define a type of integration"
        },
        {
          "rule": "!has(self.datadog) || (self.type == 'DATADOG' \u0026\u0026 has(self.datadog))",
          "message": "only DATADOG type may set datadog fields"
        },
        {
          "rule": "!has(self.microsoftTeams) || (self.type == 'MICROSOFT_TEAMS' \u0026\u0026 has(self.microsoftTeams))",
          "message": "only MICROSOFT_TEAMS type may set microsoftTeams fields"
        },
        {
          "rule": "!has(self.newRelic) || (self.type == 'NEW_RELIC' \u0026\u0026 has(self.newRelic))",
          "message": "only NEW_RELIC type may set newRelic fields"
        },
        {
          "rule": "!has(self.opsGenie) || (self.type == 'OPS_GENIE' \u0026\u0026 has(self.opsGenie))",
          "message": "only OPS_GENIE type may set opsGenie fields"
        },
        {
          "rule": "!has(self.prometheus) || (self.type == 'PROMETHEUS' \u0026\u0026 has(self.prometheus))",
          "message": "only PROMETHEUS type may set prometheus fields"
        },
        {
          "rule": "!has(self.pagerDuty) || (self.type == 'PAGER_DUTY' \u0026\u0026 has(self.pagerDuty))",
          "message": "only PAGER_DUTY type may set pagerDuty fields"
        },
        {
          "rule": "!has(self.slack) || (self.type == 'SLACK' \u0026\u0026 has(self.slack))",
          "message": "only SLACK type may set slack fields"
        },
        {
          "rule": "!has(self.victorOps) || (self.type == 'VICTOR_OPS' \u0026\u0026 has(self.victorOps))",
          "message": "only VICTOR_OPS type may set victorOps fields"
        },
        {
          "rule": "!has(self.webhook) || (self.type == 'WEBHOOK' \u0026\u0026 has(self.webhook))",
          "message": "only WEBHOOK type may set webhook fields"
        }
      ]
    },
    "status": {
      "description": "AtlasThirdPartyIntegrationStatus holds the status of an integration",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions holding the status details",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "id": {
          "description": "ID of the third party integration resource in Atlas",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
