{
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "connectionSecret": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "datadog": {
          "type": "object",
          "required": [
            "apiKeySecretRef",
            "region"
          ],
          "properties": {
            "apiKeySecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "type": "string"
            },
            "sendCollectionLatencyMetrics": {
              "type": "string",
              "default": "disabled",
              "enum": [
                "enabled",
                "disabled"
              ]
            },
            "sendDatabaseMetrics": {
              "type": "string",
              "default": "disabled",
              "enum": [
                "enabled",
                "disabled"
              ]
            }
          },
          "additionalProperties": false
        },
        "externalProjectRef": {
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "microsoftTeams": {
          "type": "object",
          "required": [
            "urlSecretRef"
          ],
          "properties": {
            "urlSecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "newRelic": {
          "type": "object",
          "required": [
            "credentialsSecretRef"
          ],
          "properties": {
            "credentialsSecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "opsGenie": {
          "type": "object",
          "required": [
            "apiKeySecretRef",
            "region"
          ],
          "properties": {
            "apiKeySecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "pagerDuty": {
          "type": "object",
          "required": [
            "region",
            "serviceKeySecretRef"
          ],
          "properties": {
            "region": {
              "type": "string"
            },
            "serviceKeySecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "namespace": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "prometheus": {
          "type": "object",
          "required": [
            "enabled",
            "prometheusCredentialsSecretRef",
            "serviceDiscovery"
          ],
          "properties": {
            "enabled": {
              "type": "string"
            },
            "prometheusCredentialsSecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "serviceDiscovery": {
              "type": "string",
              "enum": [
                "file",
                "http"
              ]
            }
          },
          "additionalProperties": false
        },
        "slack": {
          "type": "object",
          "required": [
            "apiTokenSecretRef",
            "channelName",
            "teamName"
          ],
          "properties": {
            "apiTokenSecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "channelName": {
              "type": "string"
            },
            "teamName": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "type": {
          "type": "string",
          "enum": [
            "DATADOG",
            "MICROSOFT_TEAMS",
            "NEW_RELIC",
            "OPS_GENIE",
            "PAGER_DUTY",
            "PROMETHEUS",
            "SLACK",
            "VICTOR_OPS",
            "WEBHOOK"
          ]
        },
        "victorOps": {
          "type": "object",
          "required": [
            "apiKeySecretRef",
            "routingKey"
          ],
          "properties": {
            "apiKeySecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "routingKey": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "webhook": {
          "type": "object",
          "required": [
            "urlSecretRef"
          ],
          "properties": {
            "urlSecretRef": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 !has(self.projectRef)) || (!has(self.externalProjectRef) \u0026\u0026 has(self.projectRef))",
          "message": "must define only one project reference through externalProjectRef or projectRef"
        },
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 has(self.connectionSecret)) || !has(self.externalProjectRef)",
          "message": "must define a local connection secret when referencing an external project"
        },
        {
          "rule": "has(self.type) \u0026\u0026 self.type.size() != 0",
          "message": "must define a type of integration"
        },
        {
          "rule": "!has(self.datadog) || (self.type == 'DATADOG' \u0026\u0026 has(self.datadog))",
          "message": "only DATADOG type may set datadog fields"
        },
        {
          "rule": "!has(self.microsoftTeams) || (self.type == 'MICROSOFT_TEAMS' \u0026\u0026 has(self.microsoftTeams))",
          "message": "only MICROSOFT_TEAMS type may set microsoftTeams fields"
        },
        {
          "rule": "!has(self.newRelic) || (self.type == 'NEW_RELIC' \u0026\u0026 has(self.newRelic))",
          "message": "only NEW_RELIC type may set newRelic fields"
        },
        {
          "rule": "!has(self.opsGenie) || (self.type == 'OPS_GENIE' \u0026\u0026 has(self.opsGenie))",
          "message": "only OPS_GENIE type may set opsGenie fields"
        },
        {
          "rule": "!has(self.prometheus) || (self.type == 'PROMETHEUS' \u0026\u0026 has(self.prometheus))",
          "message": "only PROMETHEUS type may set prometheus fields"
        },
        {
          "rule": "!has(self.pagerDuty) || (self.type == 'PAGER_DUTY' \u0026\u0026 has(self.pagerDuty))",
          "message": "only PAGER_DUTY type may set pagerDuty fields"
        },
        {
          "rule": "!has(self.slack) || (self.type == 'SLACK' \u0026\u0026 has(self.slack))",
          "message": "only SLACK type may set slack fields"
        },
        {
          "rule": "!has(self.victorOps) || (self.type == 'VICTOR_OPS' \u0026\u0026 has(self.victorOps))",
          "message": "only VICTOR_OPS type may set victorOps fields"
        },
        {
          "rule": "!has(self.webhook) || (self.type == 'WEBHOOK' \u0026\u0026 has(self.webhook))",
          "message": "only WEBHOOK type may set webhook fields"
        }
      ]
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
