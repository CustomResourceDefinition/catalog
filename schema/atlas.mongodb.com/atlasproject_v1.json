{
  "description": "AtlasProject is the Schema for the atlasprojects API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasProjectSpec defines the desired state of Project in Atlas",
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "alertConfigurationSyncEnabled": {
          "description": "AlertConfigurationSyncEnabled is a flag that enables/disables Alert Configurations sync for the current Project.\nIf true - project alert configurations will be synced according to AlertConfigurations.\nIf not - alert configurations will not be modified by the operator. They can be managed through API, cli, UI.",
          "type": "boolean"
        },
        "alertConfigurations": {
          "description": "AlertConfiguration is a list of Alert Configurations configured for the current Project.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "enabled": {
                "description": "If omitted, the configuration is disabled.",
                "type": "boolean"
              },
              "eventTypeName": {
                "description": "The type of event that will trigger an alert.",
                "type": "string"
              },
              "matchers": {
                "description": "You can filter using the matchers array only when the EventTypeName specifies an event for a host, replica set, or sharded cluster.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "fieldName": {
                      "description": "Name of the field in the target object to match on.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "The operator to test the fieldâ€™s value.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value to test with the specified operator.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "metricThreshold": {
                "description": "MetricThreshold  causes an alert to be triggered.",
                "type": "object",
                "required": [
                  "threshold"
                ],
                "properties": {
                  "metricName": {
                    "description": "Name of the metric to check.",
                    "type": "string"
                  },
                  "mode": {
                    "description": "This must be set to AVERAGE. Atlas computes the current metric value as an average.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator to apply when checking the current metric value against the threshold value.",
                    "type": "string"
                  },
                  "threshold": {
                    "description": "Threshold value outside which an alert will be triggered.",
                    "type": "string"
                  },
                  "units": {
                    "description": "The units for the threshold value.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "notifications": {
                "description": "Notifications are sending when an alert condition is detected.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "apiTokenRef": {
                      "description": "Secret containing a Slack API token or Bot token. Populated for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name is the name of the Kubernetes Resource",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the Kubernetes Resource",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "channelName": {
                      "description": "Slack channel name. Populated for the SLACK notifications type.",
                      "type": "string"
                    },
                    "datadogAPIKeyRef": {
                      "description": "Secret containing a Datadog API Key. Found in the Datadog dashboard. Populated for the DATADOG notifications type.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name is the name of the Kubernetes Resource",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the Kubernetes Resource",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "datadogRegion": {
                      "description": "Region that indicates which API URL to use",
                      "type": "string"
                    },
                    "delayMin": {
                      "description": "Number of minutes to wait after an alert condition is detected before sending out the first notification.",
                      "type": "integer"
                    },
                    "emailAddress": {
                      "description": "Email address to which alert notifications are sent. Populated for the EMAIL notifications type.",
                      "type": "string"
                    },
                    "emailEnabled": {
                      "description": "Flag indicating if email notifications should be sent. Populated for ORG, GROUP, and USER notifications types.",
                      "type": "boolean"
                    },
                    "flowName": {
                      "description": "Flowdock flow name in lower-case letters.",
                      "type": "string"
                    },
                    "flowdockApiTokenRef": {
                      "description": "The Flowdock personal API token. Populated for the FLOWDOCK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name is the name of the Kubernetes Resource",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the Kubernetes Resource",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "intervalMin": {
                      "description": "Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved.",
                      "type": "integer"
                    },
                    "mobileNumber": {
                      "description": "Mobile number to which alert notifications are sent. Populated for the SMS notifications type.",
                      "type": "string"
                    },
                    "opsGenieApiKeyRef": {
                      "description": "OpsGenie API Key. Populated for the OPS_GENIE notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name is the name of the Kubernetes Resource",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the Kubernetes Resource",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "opsGenieRegion": {
                      "description": "Region that indicates which API URL to use.",
                      "type": "string"
                    },
                    "orgName": {
                      "description": "Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Populated for the FLOWDOCK notifications type.",
                      "type": "string"
                    },
                    "roles": {
                      "description": "The following roles grant privileges within a project.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceKeyRef": {
                      "description": "PagerDuty service key. Populated for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name is the name of the Kubernetes Resource",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the Kubernetes Resource",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "smsEnabled": {
                      "description": "Flag indicating if text message notifications should be sent. Populated for ORG, GROUP, and USER notifications types.",
                      "type": "boolean"
                    },
                    "teamId": {
                      "description": "Unique identifier of a team.",
                      "type": "string"
                    },
                    "teamName": {
                      "description": "Label for the team that receives this notification.",
                      "type": "string"
                    },
                    "typeName": {
                      "description": "Type of alert notification.",
                      "type": "string"
                    },
                    "username": {
                      "description": "Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Populated for the USER notifications type.",
                      "type": "string"
                    },
                    "victorOpsSecretRef": {
                      "description": "Secret containing a VictorOps API key and Routing key. Populated for the VICTOR_OPS notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name is the name of the Kubernetes Resource",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the Kubernetes Resource",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "severityOverride": {
                "description": "SeverityOverride optionally overrides the default severity level for an alert.",
                "type": "string",
                "enum": [
                  "INFO",
                  "WARNING",
                  "ERROR",
                  "CRITICAL"
                ]
              },
              "threshold": {
                "description": "Threshold  causes an alert to be triggered.",
                "type": "object",
                "properties": {
                  "operator": {
                    "description": "Operator to apply when checking the current metric value against the threshold value. it accepts the following values: GREATER_THAN, LESS_THAN",
                    "type": "string"
                  },
                  "threshold": {
                    "description": "Threshold value outside which an alert will be triggered.",
                    "type": "string"
                  },
                  "units": {
                    "description": "The units for the threshold value",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "auditing": {
          "description": "Auditing represents MongoDB Maintenance Windows",
          "type": "object",
          "properties": {
            "auditAuthorizationSuccess": {
              "description": "Indicates whether the auditing system captures successful authentication attempts for audit filters using the \"atype\" : \"authCheck\" auditing event. For more information, see auditAuthorizationSuccess",
              "type": "boolean"
            },
            "auditFilter": {
              "description": "JSON-formatted audit filter used by the project",
              "type": "string"
            },
            "enabled": {
              "description": "Denotes whether or not the project associated with the {GROUP-ID} has database auditing enabled.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "backupCompliancePolicyRef": {
          "description": "BackupCompliancePolicyRef is a reference to the backup compliance CR.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "cloudProviderAccessRoles": {
          "description": "CloudProviderAccessRoles is a list of Cloud Provider Access Roles configured for the current Project.\nDeprecated: This configuration was deprecated in favor of CloudProviderIntegrations",
          "type": "array",
          "items": {
            "description": "CloudProviderAccessRole define an integration to a cloud provider\nDeprecated: This type is deprecated in favor of CloudProviderIntegration",
            "type": "object",
            "required": [
              "providerName"
            ],
            "properties": {
              "iamAssumedRoleArn": {
                "description": "IamAssumedRoleArn is the ARN of the IAM role that is assumed by the Atlas cluster.",
                "type": "string"
              },
              "providerName": {
                "description": "ProviderName is the name of the cloud provider. Currently only AWS is supported.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "cloudProviderIntegrations": {
          "description": "CloudProviderIntegrations is a list of Cloud Provider Integration configured for the current Project.",
          "type": "array",
          "items": {
            "description": "CloudProviderIntegration define an integration to a cloud provider",
            "type": "object",
            "required": [
              "providerName"
            ],
            "properties": {
              "iamAssumedRoleArn": {
                "description": "IamAssumedRoleArn is the ARN of the IAM role that is assumed by the Atlas cluster.",
                "type": "string"
              },
              "providerName": {
                "description": "ProviderName is the name of the cloud provider. Currently only AWS is supported.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "connectionSecretRef": {
          "description": "ConnectionSecret is the name of the Kubernetes Secret which contains the information about the way to connect to\nAtlas (organization ID, API keys). The default Operator connection configuration will be used if not provided.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "customRoles": {
          "description": "The customRoles lets you create, and change custom roles in your cluster. Use custom roles to specify custom sets of actions that the Atlas built-in roles can't describe.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "actions": {
                "description": "List of the individual privilege actions that the role grants.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "resources"
                  ],
                  "properties": {
                    "name": {
                      "description": "Human-readable label that identifies the privilege action.",
                      "type": "string"
                    },
                    "resources": {
                      "description": "List of resources on which you grant the action.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cluster": {
                            "description": "Flag that indicates whether to grant the action on the cluster resource. If true, MongoDB Cloud ignores Database and Collection parameters.",
                            "type": "boolean"
                          },
                          "collection": {
                            "description": "Human-readable label that identifies the collection on which you grant the action to one MongoDB user.",
                            "type": "string"
                          },
                          "database": {
                            "description": "Human-readable label that identifies the database on which you grant the action to one MongoDB user.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "inheritedRoles": {
                "description": "List of the built-in roles that this custom role inherits.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "database",
                    "name"
                  ],
                  "properties": {
                    "database": {
                      "description": "Human-readable label that identifies the database on which someone grants the action to one MongoDB user.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Human-readable label that identifies the role inherited.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "name": {
                "description": "Human-readable label that identifies the role. This name must be unique for this custom role in this project.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "encryptionAtRest": {
          "description": "EncryptionAtRest allows to set encryption for AWS, Azure and GCP providers",
          "type": "object",
          "properties": {
            "awsKms": {
              "description": "AwsKms specifies AWS KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "region": {
                  "type": "string"
                },
                "secretRef": {
                  "description": "A reference to as Secret containing the AccessKeyID, SecretAccessKey, CustomerMasterKeyID and RoleID fields",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name is the name of the Kubernetes Resource",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace is the namespace of the Kubernetes Resource",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "valid": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "azureKeyVault": {
              "description": "AzureKeyVault specifies Azure Key Vault configuration details and whether Encryption at Rest is enabled for an Atlas project.",
              "type": "object",
              "properties": {
                "azureEnvironment": {
                  "type": "string"
                },
                "clientID": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "resourceGroupName": {
                  "type": "string"
                },
                "secretRef": {
                  "description": "A reference to as Secret containing the SubscriptionID, KeyVaultName, KeyIdentifier, Secret fields",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name is the name of the Kubernetes Resource",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace is the namespace of the Kubernetes Resource",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "tenantID": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "googleCloudKms": {
              "description": "GoogleCloudKms specifies GCP KMS configuration details and whether Encryption at Rest is enabled for an Atlas project.",
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "secretRef": {
                  "description": "A reference to as Secret containing the ServiceAccountKey, KeyVersionResourceID fields",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name is the name of the Kubernetes Resource",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace is the namespace of the Kubernetes Resource",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "integrations": {
          "description": "Integrations is a list of MongoDB Atlas integrations for the project",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "accountId": {
                "type": "string"
              },
              "apiKeyRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "apiTokenRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "channelName": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "flowName": {
                "type": "string"
              },
              "licenseKeyRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "microsoftTeamsWebhookUrl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "orgName": {
                "type": "string"
              },
              "passwordRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "readTokenRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "region": {
                "type": "string"
              },
              "routingKeyRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "scheme": {
                "type": "string"
              },
              "secretRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "serviceDiscovery": {
                "type": "string"
              },
              "serviceKeyRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "teamName": {
                "type": "string"
              },
              "type": {
                "description": "Third Party Integration type such as Slack, New Relic, etc",
                "type": "string",
                "enum": [
                  "PAGER_DUTY",
                  "SLACK",
                  "DATADOG",
                  "NEW_RELIC",
                  "OPS_GENIE",
                  "VICTOR_OPS",
                  "FLOWDOCK",
                  "WEBHOOK",
                  "MICROSOFT_TEAMS",
                  "PROMETHEUS"
                ]
              },
              "url": {
                "type": "string"
              },
              "username": {
                "type": "string"
              },
              "writeTokenRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "maintenanceWindow": {
          "description": "MaintenanceWindow allows to specify a preferred time in the week to run maintenance operations. See more\ninformation at https://www.mongodb.com/docs/atlas/reference/api/maintenance-windows/",
          "type": "object",
          "properties": {
            "autoDefer": {
              "description": "Flag indicating whether any scheduled project maintenance should be deferred automatically for one week.",
              "type": "boolean"
            },
            "dayOfWeek": {
              "description": "Day of the week when you would like the maintenance window to start as a 1-based integer.\nSunday 1, Monday 2, Tuesday 3, Wednesday 4, Thursday 5, Friday 6, Saturday 7",
              "type": "integer",
              "maximum": 7,
              "minimum": 1
            },
            "defer": {
              "description": "Flag indicating whether the next scheduled project maintenance should be deferred for one week.\nCannot be specified if startASAP is true",
              "type": "boolean"
            },
            "hourOfDay": {
              "description": "Hour of the day when you would like the maintenance window to start.\nThis parameter uses the 24-hour clock, where midnight is 0, noon is 12.",
              "type": "integer",
              "maximum": 23,
              "minimum": 0
            },
            "startASAP": {
              "description": "Flag indicating whether project maintenance has been directed to start immediately.\nCannot be specified if defer is true",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "Name is the name of the Project that is created in Atlas by the Operator if it doesn't exist yet.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Name cannot be modified after project creation"
            }
          ]
        },
        "networkPeers": {
          "description": "NetworkPeers is a list of Network Peers configured for the current Project.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "accepterRegionName": {
                "description": "AccepterRegionName is the provider region name of user's vpc.",
                "type": "string"
              },
              "atlasCidrBlock": {
                "description": "Atlas CIDR. It needs to be set if ContainerID is not set.",
                "type": "string"
              },
              "awsAccountId": {
                "description": "AccountID of the user's vpc.",
                "type": "string"
              },
              "azureDirectoryId": {
                "description": "AzureDirectoryID is the unique identifier for an Azure AD directory.",
                "type": "string"
              },
              "azureSubscriptionId": {
                "description": "AzureSubscriptionID is the unique identifier of the Azure subscription in which the VNet resides.",
                "type": "string"
              },
              "containerId": {
                "description": "ID of the network peer container. If not set, operator will create a new container with ContainerRegion and AtlasCIDRBlock input.",
                "type": "string"
              },
              "containerRegion": {
                "description": "ContainerRegion is the provider region name of Atlas network peer container. If not set, AccepterRegionName is used.",
                "type": "string"
              },
              "gcpProjectId": {
                "description": "User GCP Project ID. Its applicable only for GCP.",
                "type": "string"
              },
              "networkName": {
                "description": "GCP Network Peer Name. Its applicable only for GCP.",
                "type": "string"
              },
              "providerName": {
                "description": "ProviderName is the name of the provider. If not set, it will be set to \"AWS\".",
                "type": "string"
              },
              "resourceGroupName": {
                "description": "ResourceGroupName is the name of your Azure resource group.",
                "type": "string"
              },
              "routeTableCidrBlock": {
                "description": "User VPC CIDR.",
                "type": "string"
              },
              "vnetName": {
                "description": "VNetName is name of your Azure VNet. Its applicable only for Azure.",
                "type": "string"
              },
              "vpcId": {
                "description": "AWS VPC ID.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "privateEndpoints": {
          "description": "PrivateEndpoints is a list of Private Endpoints configured for the current Project.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "provider",
              "region"
            ],
            "properties": {
              "endpointGroupName": {
                "description": "Unique identifier of the endpoint group. The endpoint group encompasses all of the endpoints that you created in Google Cloud.",
                "type": "string"
              },
              "endpoints": {
                "description": "Collection of individual private endpoints that comprise your endpoint group.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "endpointName": {
                      "description": "Forwarding rule that corresponds to the endpoint you created in Google Cloud.",
                      "type": "string"
                    },
                    "ipAddress": {
                      "description": "Private IP address of the endpoint you created in Google Cloud.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "gcpProjectId": {
                "description": "Unique identifier of the Google Cloud project in which you created your endpoints.",
                "type": "string"
              },
              "id": {
                "description": "Unique identifier of the private endpoint you created in your AWS VPC or Azure Vnet.",
                "type": "string"
              },
              "ip": {
                "description": "Private IP address of the private endpoint network interface you created in your Azure VNet.",
                "type": "string"
              },
              "provider": {
                "description": "Cloud provider for which you want to retrieve a private endpoint service. Atlas accepts AWS or AZURE.",
                "type": "string",
                "enum": [
                  "AWS",
                  "GCP",
                  "AZURE",
                  "TENANT"
                ]
              },
              "region": {
                "description": "Cloud provider region for which you want to create the private endpoint service.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "projectIpAccessList": {
          "description": "ProjectIPAccessList allows to enable the IP Access List for the Project. See more information at\nhttps://docs.atlas.mongodb.com/reference/api/ip-access-list/add-entries-to-access-list/",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "awsSecurityGroup": {
                "description": "Unique identifier of AWS security group in this access list entry.",
                "type": "string"
              },
              "cidrBlock": {
                "description": "Range of IP addresses in CIDR notation in this access list entry.",
                "type": "string"
              },
              "comment": {
                "description": "Comment associated with this access list entry.",
                "type": "string"
              },
              "deleteAfterDate": {
                "description": "Timestamp in ISO 8601 date and time format in UTC after which Atlas deletes the temporary access list entry.",
                "type": "string"
              },
              "ipAddress": {
                "description": "Entry using an IP address in this access list entry.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "regionUsageRestrictions": {
          "description": "RegionUsageRestrictions designate the project's AWS region when using Atlas for Government.\nThis parameter should not be used with commercial Atlas.\nIn Atlas for Government, not setting this field (defaulting to NONE) means the project is restricted to COMMERCIAL_FEDRAMP_REGIONS_ONLY",
          "type": "string",
          "default": "NONE",
          "enum": [
            "NONE",
            "GOV_REGIONS_ONLY",
            "COMMERCIAL_FEDRAMP_REGIONS_ONLY"
          ]
        },
        "settings": {
          "description": "Settings allow to set Project Settings for the project",
          "type": "object",
          "properties": {
            "isCollectDatabaseSpecificsStatisticsEnabled": {
              "type": "boolean"
            },
            "isDataExplorerEnabled": {
              "type": "boolean"
            },
            "isExtendedStorageSizesEnabled": {
              "type": "boolean"
            },
            "isPerformanceAdvisorEnabled": {
              "type": "boolean"
            },
            "isRealtimePerformancePanelEnabled": {
              "type": "boolean"
            },
            "isSchemaAdvisorEnabled": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "teams": {
          "description": "Teams enable you to grant project access roles to multiple users.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "roles",
              "teamRef"
            ],
            "properties": {
              "roles": {
                "description": "Roles the users of the team has over the project",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string",
                  "enum": [
                    "GROUP_OWNER",
                    "GROUP_CLUSTER_MANAGER",
                    "GROUP_DATA_ACCESS_ADMIN",
                    "GROUP_DATA_ACCESS_READ_WRITE",
                    "GROUP_DATA_ACCESS_READ_ONLY",
                    "GROUP_READ_ONLY"
                  ]
                }
              },
              "teamRef": {
                "description": "Reference to the team which will assigned to the project",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "withDefaultAlertsSettings": {
          "description": "Flag that indicates whether to create the new project with the default alert settings enabled. This parameter defaults to true",
          "type": "boolean",
          "default": true
        },
        "x509CertRef": {
          "description": "X509CertRef is the name of the Kubernetes Secret which contains PEM-encoded CA certificate",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "AtlasProjectStatus defines the observed state of AtlasProject",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "alertConfigurations": {
          "description": "AlertConfigurations contains a list of alert configuration statuses",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "acknowledgedUntil": {
                "description": "The date through which the alert has been acknowledged. Will not be present if the alert has never been acknowledged.",
                "type": "string"
              },
              "acknowledgementComment": {
                "description": "The comment left by the user who acknowledged the alert. Will not be present if the alert has never been acknowledged.",
                "type": "string"
              },
              "acknowledgingUsername": {
                "description": "The username of the user who acknowledged the alert. Will not be present if the alert has never been acknowledged.",
                "type": "string"
              },
              "alertConfigId": {
                "description": "ID of the alert configuration that triggered this alert.",
                "type": "string"
              },
              "clusterId": {
                "description": "The ID of the cluster to which this alert applies. Only present for alerts of type BACKUP, REPLICA_SET, and CLUSTER.",
                "type": "string"
              },
              "clusterName": {
                "description": "The name the cluster to which this alert applies. Only present for alerts of type BACKUP, REPLICA_SET, and CLUSTER.",
                "type": "string"
              },
              "created": {
                "description": "Timestamp in ISO 8601 date and time format in UTC when this alert configuration was created.",
                "type": "string"
              },
              "currentValue": {
                "description": "CurrentValue represents current value of the metric that triggered the alert. Only present for alerts of type HOST_METRIC.",
                "type": "object",
                "properties": {
                  "number": {
                    "description": "The value of the metric.",
                    "type": "string"
                  },
                  "units": {
                    "description": "The units for the value. Depends on the type of metric.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "enabled": {
                "description": "If omitted, the configuration is disabled.",
                "type": "boolean"
              },
              "errorMessage": {
                "description": "ErrorMessage is massage if the alert configuration is in an incorrect state.",
                "type": "string"
              },
              "eventTypeName": {
                "description": "The type of event that will trigger an alert.",
                "type": "string"
              },
              "groupId": {
                "description": "Unique identifier of the project that owns this alert configuration.",
                "type": "string"
              },
              "hostId": {
                "description": "ID of the host to which the metric pertains. Only present for alerts of type HOST, HOST_METRIC, and REPLICA_SET.",
                "type": "string"
              },
              "hostnameAndPort": {
                "description": "The hostname and port of each host to which the alert applies. Only present for alerts of type HOST, HOST_METRIC, and REPLICA_SET.",
                "type": "string"
              },
              "id": {
                "description": "Unique identifier.",
                "type": "string"
              },
              "lastNotified": {
                "description": "When the last notification was sent for this alert. Only present if notifications have been sent.",
                "type": "string"
              },
              "matchers": {
                "description": "You can filter using the matchers array only when the EventTypeName specifies an event for a host, replica set, or sharded cluster.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "fieldName": {
                      "description": "Name of the field in the target object to match on.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "The operator to test the fieldâ€™s value.",
                      "type": "string"
                    },
                    "value": {
                      "description": "Value to test with the specified operator.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "metricName": {
                "description": "The name of the measurement whose value went outside the threshold. Only present if eventTypeName is set to OUTSIDE_METRIC_THRESHOLD.",
                "type": "string"
              },
              "metricThreshold": {
                "description": "MetricThreshold  causes an alert to be triggered.",
                "type": "object",
                "required": [
                  "threshold"
                ],
                "properties": {
                  "metricName": {
                    "description": "Name of the metric to check.",
                    "type": "string"
                  },
                  "mode": {
                    "description": "This must be set to AVERAGE. Atlas computes the current metric value as an average.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "Operator to apply when checking the current metric value against the threshold value.",
                    "type": "string"
                  },
                  "threshold": {
                    "description": "Threshold value outside which an alert will be triggered.",
                    "type": "string"
                  },
                  "units": {
                    "description": "The units for the threshold value.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "notifications": {
                "description": "Notifications are sending when an alert condition is detected.",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "apiToken": {
                      "description": "Slack API token or Bot token. Populated for the SLACK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.",
                      "type": "string"
                    },
                    "channelName": {
                      "description": "Slack channel name. Populated for the SLACK notifications type.",
                      "type": "string"
                    },
                    "datadogApiKey": {
                      "description": "Datadog API Key. Found in the Datadog dashboard. Populated for the DATADOG notifications type.",
                      "type": "string"
                    },
                    "datadogRegion": {
                      "description": "Region that indicates which API URL to use",
                      "type": "string"
                    },
                    "delayMin": {
                      "description": "Number of minutes to wait after an alert condition is detected before sending out the first notification.",
                      "type": "integer"
                    },
                    "emailAddress": {
                      "description": "Email address to which alert notifications are sent. Populated for the EMAIL notifications type.",
                      "type": "string"
                    },
                    "emailEnabled": {
                      "description": "Flag indicating if email notifications should be sent. Populated for ORG, GROUP, and USER notifications types.",
                      "type": "boolean"
                    },
                    "flowName": {
                      "description": "Flowdock flow namse in lower-case letters.",
                      "type": "string"
                    },
                    "flowdockApiToken": {
                      "description": "The Flowdock personal API token. Populated for the FLOWDOCK notifications type. If the token later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.",
                      "type": "string"
                    },
                    "intervalMin": {
                      "description": "Number of minutes to wait between successive notifications for unacknowledged alerts that are not resolved.",
                      "type": "integer"
                    },
                    "mobileNumber": {
                      "description": "Mobile number to which alert notifications are sent. Populated for the SMS notifications type.",
                      "type": "string"
                    },
                    "opsGenieApiKey": {
                      "description": "Opsgenie API Key. Populated for the OPS_GENIE notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the token.",
                      "type": "string"
                    },
                    "opsGenieRegion": {
                      "description": "Region that indicates which API URL to use.",
                      "type": "string"
                    },
                    "orgName": {
                      "description": "Flowdock organization name in lower-case letters. This is the name that appears after www.flowdock.com/app/ in the URL string. Populated for the FLOWDOCK notifications type.",
                      "type": "string"
                    },
                    "roles": {
                      "description": "The following roles grant privileges within a project.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "serviceKey": {
                      "description": "PagerDuty service key. Populated for the PAGER_DUTY notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.",
                      "type": "string"
                    },
                    "smsEnabled": {
                      "description": "Flag indicating if text message notifications should be sent. Populated for ORG, GROUP, and USER notifications types.",
                      "type": "boolean"
                    },
                    "teamId": {
                      "description": "Unique identifier of a team.",
                      "type": "string"
                    },
                    "teamName": {
                      "description": "Label for the team that receives this notification.",
                      "type": "string"
                    },
                    "typeName": {
                      "description": "Type of alert notification.",
                      "type": "string"
                    },
                    "username": {
                      "description": "Name of the Atlas user to which to send notifications. Only a user in the project that owns the alert configuration is allowed here. Populated for the USER notifications type.",
                      "type": "string"
                    },
                    "victorOpsApiKey": {
                      "description": "VictorOps API key. Populated for the VICTOR_OPS notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.",
                      "type": "string"
                    },
                    "victorOpsRoutingKey": {
                      "description": "VictorOps routing key. Populated for the VICTOR_OPS notifications type. If the key later becomes invalid, Atlas sends an email to the project owner and eventually removes the key.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "replicaSetName": {
                "description": "Name of the replica set. Only present for alerts of type HOST, HOST_METRIC, BACKUP, and REPLICA_SET.",
                "type": "string"
              },
              "resolved": {
                "description": "When the alert was closed. Only present if the status is CLOSED.",
                "type": "string"
              },
              "severityOverride": {
                "description": "Severity of the alert.",
                "type": "string"
              },
              "sourceTypeName": {
                "description": "For alerts of the type BACKUP, the type of server being backed up.",
                "type": "string"
              },
              "status": {
                "description": "The current state of the alert. Possible values are: TRACKING, OPEN, CLOSED, CANCELED",
                "type": "string"
              },
              "threshold": {
                "description": "Threshold  causes an alert to be triggered.",
                "type": "object",
                "properties": {
                  "operator": {
                    "description": "Operator to apply when checking the current metric value against the threshold value. it accepts the following values: GREATER_THAN, LESS_THAN",
                    "type": "string"
                  },
                  "threshold": {
                    "description": "Threshold value outside which an alert will be triggered.",
                    "type": "string"
                  },
                  "units": {
                    "description": "The units for the threshold value",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "updated": {
                "description": "Timestamp in ISO 8601 date and time format in UTC when this alert configuration was last updated.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "authModes": {
          "description": "AuthModes contains a list of configured authentication modes\n\"SCRAM\" is default authentication method and requires a password for each user\n\"X509\" signifies that self-managed X.509 authentication is configured",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "cloudProviderIntegrations": {
          "description": "CloudProviderIntegrations contains a list of configured cloud provider access roles. AWS support only",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "atlasAssumedRoleExternalId",
              "providerName"
            ],
            "properties": {
              "atlasAWSAccountArn": {
                "type": "string"
              },
              "atlasAssumedRoleExternalId": {
                "type": "string"
              },
              "authorizedDate": {
                "type": "string"
              },
              "createdDate": {
                "type": "string"
              },
              "errorMessage": {
                "type": "string"
              },
              "featureUsages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "featureId": {
                      "type": "string"
                    },
                    "featureType": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "iamAssumedRoleArn": {
                "type": "string"
              },
              "providerName": {
                "type": "string"
              },
              "roleId": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "conditions": {
          "description": "Conditions is the list of statuses showing the current state of the Atlas Custom Resource",
          "type": "array",
          "items": {
            "description": "Condition describes the state of an Atlas Custom Resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of Atlas Custom Resource condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "customRoles": {
          "description": "CustomRoles contains a list of custom roles statuses",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name",
              "status"
            ],
            "properties": {
              "error": {
                "description": "The message when the custom role is in the FAILED status",
                "type": "string"
              },
              "name": {
                "description": "Role name which is unique",
                "type": "string"
              },
              "status": {
                "description": "The status of the given custom role (OK or FAILED)",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "expiredIpAccessList": {
          "description": "The list of IP Access List entries that are expired due to 'deleteAfterDate' being less than the current date.\nNote, that this field is updated by the Atlas Operator only after specification changes",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "awsSecurityGroup": {
                "description": "Unique identifier of AWS security group in this access list entry.",
                "type": "string"
              },
              "cidrBlock": {
                "description": "Range of IP addresses in CIDR notation in this access list entry.",
                "type": "string"
              },
              "comment": {
                "description": "Comment associated with this access list entry.",
                "type": "string"
              },
              "deleteAfterDate": {
                "description": "Timestamp in ISO 8601 date and time format in UTC after which Atlas deletes the temporary access list entry.",
                "type": "string"
              },
              "ipAddress": {
                "description": "Entry using an IP address in this access list entry.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "id": {
          "description": "The ID of the Atlas Project",
          "type": "string"
        },
        "networkPeers": {
          "description": "The list of network peers that are configured for current project",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "id",
              "providerName",
              "region"
            ],
            "properties": {
              "atlasGcpProjectId": {
                "description": "ProjectID of Atlas container. Applicable only for GCP. It's needed to add network peer connection.",
                "type": "string"
              },
              "atlasNetworkName": {
                "description": "Atlas Network Name. Applicable only for GCP. It's needed to add network peer connection.",
                "type": "string"
              },
              "connectionId": {
                "description": "Unique identifier of the network peer connection. Applicable only for AWS.",
                "type": "string"
              },
              "containerId": {
                "description": "ContainerID of Atlas network peer container.",
                "type": "string"
              },
              "errorMessage": {
                "description": "Error state of the network peer. Applicable only for GCP.",
                "type": "string"
              },
              "errorState": {
                "description": "Error state of the network peer. Applicable only for Azure.",
                "type": "string"
              },
              "errorStateName": {
                "description": "Error state of the network peer. Applicable only for AWS.",
                "type": "string"
              },
              "gcpProjectId": {
                "description": "ProjectID of the user's vpc. Applicable only for GCP.",
                "type": "string"
              },
              "id": {
                "description": "Unique identifier for NetworkPeer.",
                "type": "string"
              },
              "providerName": {
                "description": "Cloud provider for which you want to retrieve a network peer.",
                "type": "string"
              },
              "region": {
                "description": "Region for which you want to create the network peer. It isn't needed for GCP",
                "type": "string"
              },
              "status": {
                "description": "Status of the network peer. Applicable only for GCP and Azure.",
                "type": "string"
              },
              "statusName": {
                "description": "Status of the network peer. Applicable only for AWS.",
                "type": "string"
              },
              "vpc": {
                "description": "VPC is general purpose field for storing the name of the VPC.\nVPC is vpcID for AWS, user networkName for GCP, and vnetName for Azure.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration indicates the generation of the resource specification that the Atlas Operator is aware of.\nThe Atlas Operator updates this field to the 'metadata.generation' as soon as it starts reconciliation of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "privateEndpoints": {
          "description": "The list of private endpoints configured for current project",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "provider",
              "region"
            ],
            "properties": {
              "endpoints": {
                "description": "Collection of individual GCP private endpoints that comprise your network endpoint group.",
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "endpointName",
                    "ipAddress",
                    "status"
                  ],
                  "properties": {
                    "endpointName": {
                      "type": "string"
                    },
                    "ipAddress": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "id": {
                "description": "Unique identifier for AWS or AZURE Private Link Connection.",
                "type": "string"
              },
              "interfaceEndpointId": {
                "description": "Unique identifier of the AWS or Azure Private Link Interface Endpoint.",
                "type": "string"
              },
              "provider": {
                "description": "Cloud provider for which you want to retrieve a private endpoint service. Atlas accepts AWS or AZURE.",
                "type": "string"
              },
              "region": {
                "description": "Cloud provider region for which you want to create the private endpoint service.",
                "type": "string"
              },
              "serviceAttachmentNames": {
                "description": "Unique alphanumeric and special character strings that identify the service attachments associated with the GCP Private Service Connect endpoint service.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "serviceName": {
                "description": "Name of the AWS or Azure Private Link Service that Atlas manages.",
                "type": "string"
              },
              "serviceResourceId": {
                "description": "Unique identifier of the Azure Private Link Service (for AWS the same as ID).",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "prometheus": {
          "description": "Prometheus contains the status for Prometheus integration\nincluding the prometheusDiscoveryURL",
          "type": "object",
          "properties": {
            "prometheusDiscoveryURL": {
              "type": "string"
            },
            "scheme": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "teams": {
          "description": "Teams contains a list of teams assignment statuses",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "teamRef"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "teamRef": {
                "description": "ResourceRefNamespaced is a reference to a Kubernetes Resource that allows to configure the namespace",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name is the name of the Kubernetes Resource",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the Kubernetes Resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
