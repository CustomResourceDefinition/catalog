{
  "description": "AtlasDataFederation is the Schema for the Atlas Data Federation API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "name",
        "projectRef"
      ],
      "properties": {
        "cloudProviderConfig": {
          "type": "object",
          "properties": {
            "aws": {
              "type": "object",
              "properties": {
                "roleId": {
                  "type": "string"
                },
                "testS3Bucket": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "dataProcessRegion": {
          "type": "object",
          "properties": {
            "cloudProvider": {
              "type": "string",
              "enum": [
                "AWS"
              ]
            },
            "region": {
              "type": "string",
              "enum": [
                "SYDNEY_AUS",
                "MUMBAI_IND",
                "FRANKFURT_DEU",
                "DUBLIN_IRL",
                "LONDON_GBR",
                "VIRGINIA_USA",
                "OREGON_USA",
                "SAOPAULO_BRA",
                "SINGAPORE_SGP"
              ]
            }
          },
          "additionalProperties": false
        },
        "name": {
          "type": "string"
        },
        "privateEndpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "endpointId": {
                "type": "string"
              },
              "provider": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "projectRef": {
          "description": "Project is a reference to AtlasProject resource the deployment belongs to",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "storage": {
          "type": "object",
          "properties": {
            "databases": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "collections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dataSources": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "allowInsecure": {
                                "type": "boolean"
                              },
                              "collection": {
                                "type": "string"
                              },
                              "collectionRegex": {
                                "type": "string"
                              },
                              "database": {
                                "type": "string"
                              },
                              "databaseRegex": {
                                "type": "string"
                              },
                              "defaultFormat": {
                                "type": "string",
                                "enum": [
                                  ".avro",
                                  ".avro.bz2",
                                  ".avro.gz",
                                  ".bson",
                                  ".bson.bz2",
                                  ".bson.gz",
                                  ".bsonx",
                                  ".csv",
                                  ".csv.bz2",
                                  ".csv.gz",
                                  ".json",
                                  ".json.bz2",
                                  ".json.gz",
                                  ".orc",
                                  ".parquet",
                                  ".tsv",
                                  ".tsv.bz2",
                                  ".tsv.gz"
                                ]
                              },
                              "path": {
                                "type": "string"
                              },
                              "provenanceFieldName": {
                                "type": "string"
                              },
                              "storeName": {
                                "type": "string"
                              },
                              "urls": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "maxWildcardCollections": {
                    "type": "integer"
                  },
                  "name": {
                    "type": "string"
                  },
                  "views": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "pipeline": {
                          "type": "string"
                        },
                        "source": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "stores": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalStorageClasses": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "bucket": {
                    "type": "string"
                  },
                  "delimiter": {
                    "type": "string"
                  },
                  "includeTags": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string"
                  },
                  "prefix": {
                    "type": "string"
                  },
                  "provider": {
                    "type": "string"
                  },
                  "public": {
                    "type": "boolean"
                  },
                  "region": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions is the list of statuses showing the current state of the Atlas Custom Resource",
          "type": "array",
          "items": {
            "description": "Condition describes the state of an Atlas Custom Resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of Atlas Custom Resource condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "mongoDBVersion": {
          "description": "MongoDBVersion is the version of MongoDB the cluster runs, in \u003cmajor version\u003e.\u003cminor version\u003e format.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration indicates the generation of the resource specification that the Atlas Operator is aware of.\nThe Atlas Operator updates this field to the 'metadata.generation' as soon as it starts reconciliation of the resource.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
