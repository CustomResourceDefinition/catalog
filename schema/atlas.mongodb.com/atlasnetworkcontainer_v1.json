{
  "description": "AtlasNetworkContainer is the Schema for the AtlasNetworkContainer API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasNetworkContainerSpec defines the desired state of an AtlasNetworkContainer",
      "type": "object",
      "required": [
        "provider"
      ],
      "properties": {
        "cidrBlock": {
          "description": "Atlas CIDR. It needs to be set if ContainerID is not set.",
          "type": "string"
        },
        "connectionSecret": {
          "description": "Name of the secret containing Atlas API private and public keys",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "externalProjectRef": {
          "description": "\"externalProjectRef\" holds the parent Atlas project ID.\nMutually exclusive with the \"projectRef\" field",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "ID is the Atlas project ID",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "id": {
          "description": "ID is the container identifier for an already existent network container to be managed by the operator.\nThis field can be used in conjunction with cidrBlock to update the cidrBlock of an existing container.\nThis field is immutable.",
          "type": "string"
        },
        "projectRef": {
          "description": "\"projectRef\" is a reference to the parent AtlasProject resource.\nMutually exclusive with the \"externalProjectRef\" field",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "provider": {
          "description": "Provider is the name of the cloud provider hosting the network container",
          "type": "string",
          "enum": [
            "AWS",
            "GCP",
            "AZURE"
          ]
        },
        "region": {
          "description": "ContainerRegion is the provider region name of Atlas network peer container in Atlas region format\nThis is required by AWS and Azure, but not used by GCP.\nThis field is immutable, Atlas does not admit network container changes.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 !has(self.projectRef)) || (!has(self.externalProjectRef) \u0026\u0026 has(self.projectRef))",
          "message": "must define only one project reference through externalProjectRef or projectRef"
        },
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 has(self.connectionSecret)) || !has(self.externalProjectRef)",
          "message": "must define a local connection secret when referencing an external project"
        },
        {
          "rule": "(self.provider == 'GCP' \u0026\u0026 !has(self.region)) || (self.provider != 'GCP')",
          "message": "must not set region for GCP containers"
        },
        {
          "rule": "((self.provider == 'AWS' || self.provider == 'AZURE') \u0026\u0026 has(self.region)) || (self.provider == 'GCP')",
          "message": "must set region for AWS and Azure containers"
        },
        {
          "rule": "(self.id == oldSelf.id) || (!has(self.id) \u0026\u0026 !has(oldSelf.id))",
          "message": "id is immutable"
        },
        {
          "rule": "(self.region == oldSelf.region) || (!has(self.region) \u0026\u0026 !has(oldSelf.region))",
          "message": "region is immutable"
        }
      ]
    },
    "status": {
      "description": "AtlasNetworkContainerStatus is a status for the AtlasNetworkContainer Custom resource.\nNot the one included in the AtlasProject",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions is the list of statuses showing the current state of the Atlas Custom Resource",
          "type": "array",
          "items": {
            "description": "Condition describes the state of an Atlas Custom Resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of Atlas Custom Resource condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "id": {
          "description": "ID record the identifier of the container in Atlas",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration indicates the generation of the resource specification that the Atlas Operator is aware of.\nThe Atlas Operator updates this field to the 'metadata.generation' as soon as it starts reconciliation of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "provisioned": {
          "description": "Provisioned is true when clusters have been deployed to the container before\nthe last reconciliation",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
