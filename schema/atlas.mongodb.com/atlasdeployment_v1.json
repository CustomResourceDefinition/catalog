{
  "description": "AtlasDeployment is the Schema for the atlasdeployments API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AtlasDeploymentSpec defines the desired state of AtlasDeployment\nOnly one of DeploymentSpec, AdvancedDeploymentSpec and ServerlessSpec should be defined",
      "type": "object",
      "properties": {
        "backupRef": {
          "description": "Backup schedule for the AtlasDeployment",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "connectionSecret": {
          "description": "Name of the secret containing Atlas API private and public keys",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the resource being referred to\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "deploymentSpec": {
          "description": "Configuration for the advanced (v1.5) deployment API https://www.mongodb.com/docs/atlas/reference/api/clusters/",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "backupEnabled": {
              "description": "Applicable only for M10+ deployments.\nFlag that indicates if the deployment uses Cloud Backups for backups.",
              "type": "boolean"
            },
            "biConnector": {
              "description": "Configuration of BI Connector for Atlas on this deployment.\nThe MongoDB Connector for Business Intelligence for Atlas (BI Connector) is only available for M10 and larger deployments.",
              "type": "object",
              "properties": {
                "enabled": {
                  "description": "Flag that indicates whether or not BI Connector for Atlas is enabled on the deployment.",
                  "type": "boolean"
                },
                "readPreference": {
                  "description": "Source from which the BI Connector for Atlas reads data. Each BI Connector for Atlas read preference contains a distinct combination of readPreference and readPreferenceTags options.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "clusterType": {
              "description": "Type of the deployment that you want to create.\nThe parameter is required if replicationSpecs are set or if Global Deployments are deployed.",
              "type": "string",
              "enum": [
                "REPLICASET",
                "SHARDED",
                "GEOSHARDED"
              ]
            },
            "configServerManagementMode": {
              "description": "Config Server Management Mode for creating or updating a sharded cluster.",
              "type": "string",
              "enum": [
                "ATLAS_MANAGED",
                "FIXED_TO_DEDICATED"
              ]
            },
            "customZoneMapping": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "location",
                  "zone"
                ],
                "properties": {
                  "location": {
                    "type": "string"
                  },
                  "zone": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "diskSizeGB": {
              "description": "Capacity, in gigabytes, of the host's root volume.\nIncrease this number to add capacity, up to a maximum possible value of 4096 (i.e., 4 TB).\nThis value must be a positive integer.\nThe parameter is required if replicationSpecs are configured.",
              "type": "integer",
              "maximum": 4096,
              "minimum": 0
            },
            "encryptionAtRestProvider": {
              "description": "Cloud service provider that offers Encryption at Rest.",
              "type": "string",
              "enum": [
                "AWS",
                "GCP",
                "AZURE",
                "NONE"
              ]
            },
            "labels": {
              "description": "Collection of key-value pairs that tag and categorize the deployment.\nEach key and value has a maximum length of 255 characters.",
              "type": "array",
              "items": {
                "description": "LabelSpec contains key-value pairs that tag and categorize the Cluster/DBUser",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "value": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "managedNamespaces": {
              "type": "array",
              "items": {
                "description": "ManagedNamespace represents the information about managed namespace configuration.",
                "type": "object",
                "required": [
                  "collection",
                  "db"
                ],
                "properties": {
                  "collection": {
                    "type": "string"
                  },
                  "customShardKey": {
                    "type": "string"
                  },
                  "db": {
                    "type": "string"
                  },
                  "isCustomShardKeyHashed": {
                    "type": "boolean"
                  },
                  "isShardKeyUnique": {
                    "type": "boolean"
                  },
                  "numInitialChunks": {
                    "type": "integer"
                  },
                  "presplitHashedZones": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "mongoDBMajorVersion": {
              "description": "Version of the deployment to deploy.",
              "type": "string"
            },
            "mongoDBVersion": {
              "type": "string"
            },
            "name": {
              "description": "Name of the advanced deployment as it appears in Atlas.\nAfter Atlas creates the deployment, you can't change its name.\nCan only contain ASCII letters, numbers, and hyphens.",
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Name cannot be modified after deployment creation"
                }
              ]
            },
            "paused": {
              "description": "Flag that indicates whether the deployment should be paused.",
              "type": "boolean"
            },
            "pitEnabled": {
              "description": "Flag that indicates the deployment uses continuous cloud backups.",
              "type": "boolean"
            },
            "replicationSpecs": {
              "description": "Configuration for deployment regions.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "numShards": {
                    "description": "Positive integer that specifies the number of shards to deploy in each specified zone.\nIf you set this value to 1 and clusterType is SHARDED, MongoDB Cloud deploys a single-shard sharded cluster.\nDon't create a sharded cluster with a single shard for production environments.\nSingle-shard sharded clusters don't provide the same benefits as multi-shard configurations",
                    "type": "integer"
                  },
                  "regionConfigs": {
                    "description": "Hardware specifications for nodes set for a given region.\nEach regionConfigs object describes the region's priority in elections and the number and type of MongoDB nodes that MongoDB Cloud deploys to the region.\nEach regionConfigs object must have either an analyticsSpecs object, electableSpecs object, or readOnlySpecs object.\nTenant clusters only require electableSpecs. Dedicated clusters can specify any of these specifications, but must have at least one electableSpecs object within a replicationSpec.\nEvery hardware specification must use the same instanceSize.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "analyticsSpecs": {
                          "type": "object",
                          "properties": {
                            "diskIOPS": {
                              "description": "Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "ebsVolumeType": {
                              "description": "Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                              "type": "string",
                              "enum": [
                                "STANDARD",
                                "PROVISIONED"
                              ]
                            },
                            "instanceSize": {
                              "description": "Hardware specification for the instance sizes in this region.\nEach instance size has a default storage and memory capacity.\nThe instance size you select applies to all the data-bearing hosts in your instance size",
                              "type": "string"
                            },
                            "nodeCount": {
                              "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false
                        },
                        "autoScaling": {
                          "description": "AdvancedAutoScalingSpec configures your deployment to automatically scale its storage",
                          "type": "object",
                          "properties": {
                            "compute": {
                              "description": "Collection of settings that configure how a deployment might scale its deployment tier and whether the deployment can scale down.",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "description": "Flag that indicates whether deployment tier auto-scaling is enabled. The default is false.",
                                  "type": "boolean"
                                },
                                "maxInstanceSize": {
                                  "description": "Maximum instance size to which your deployment can automatically scale (such as M40). Atlas requires this parameter if \"autoScaling.compute.enabled\" : true.",
                                  "type": "string"
                                },
                                "minInstanceSize": {
                                  "description": "Minimum instance size to which your deployment can automatically scale (such as M10). Atlas requires this parameter if \"autoScaling.compute.scaleDownEnabled\" : true.",
                                  "type": "string"
                                },
                                "scaleDownEnabled": {
                                  "description": "Flag that indicates whether the deployment tier may scale down. Atlas requires this parameter if \"autoScaling.compute.enabled\" : true.",
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            },
                            "diskGB": {
                              "description": "Flag that indicates whether disk auto-scaling is enabled. The default is true.",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "backingProviderName": {
                          "description": "Cloud service provider on which the host for a multi-tenant deployment is provisioned.\nThis setting only works when \"providerName\" : \"TENANT\" and \"providerSetting.instanceSizeName\" : M2 or M5.\nOtherwise it should be equal to \"providerName\" value",
                          "type": "string",
                          "enum": [
                            "AWS",
                            "GCP",
                            "AZURE"
                          ]
                        },
                        "electableSpecs": {
                          "type": "object",
                          "properties": {
                            "diskIOPS": {
                              "description": "Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "ebsVolumeType": {
                              "description": "Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                              "type": "string",
                              "enum": [
                                "STANDARD",
                                "PROVISIONED"
                              ]
                            },
                            "instanceSize": {
                              "description": "Hardware specification for the instance sizes in this region.\nEach instance size has a default storage and memory capacity.\nThe instance size you select applies to all the data-bearing hosts in your instance size",
                              "type": "string"
                            },
                            "nodeCount": {
                              "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false
                        },
                        "priority": {
                          "description": "Precedence is given to this region when a primary election occurs.\nIf your regionConfigs has only readOnlySpecs, analyticsSpecs, or both, set this value to 0.\nIf you have multiple regionConfigs objects (your cluster is multi-region or multi-cloud), they must have priorities in descending order.\nThe highest priority is 7",
                          "type": "integer"
                        },
                        "providerName": {
                          "type": "string",
                          "enum": [
                            "AWS",
                            "GCP",
                            "AZURE",
                            "TENANT",
                            "SERVERLESS"
                          ]
                        },
                        "readOnlySpecs": {
                          "type": "object",
                          "properties": {
                            "diskIOPS": {
                              "description": "Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "ebsVolumeType": {
                              "description": "Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                              "type": "string",
                              "enum": [
                                "STANDARD",
                                "PROVISIONED"
                              ]
                            },
                            "instanceSize": {
                              "description": "Hardware specification for the instance sizes in this region.\nEach instance size has a default storage and memory capacity.\nThe instance size you select applies to all the data-bearing hosts in your instance size",
                              "type": "string"
                            },
                            "nodeCount": {
                              "description": "Number of nodes of the given type for MongoDB Cloud to deploy to the region.",
                              "type": "integer"
                            }
                          },
                          "additionalProperties": false
                        },
                        "regionName": {
                          "description": "Physical location of your MongoDB deployment.\nThe region you choose can affect network latency for clients accessing your databases.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "zoneName": {
                    "description": "Human-readable label that identifies the zone in a Global Cluster.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "rootCertType": {
              "type": "string"
            },
            "searchIndexes": {
              "description": "A list of atlas search indexes configuration for the current deployment",
              "type": "array",
              "items": {
                "description": "SearchIndex is the CRD to configure part of the Atlas Search Index",
                "type": "object",
                "required": [
                  "DBName",
                  "collectionName",
                  "name",
                  "type"
                ],
                "properties": {
                  "DBName": {
                    "description": "Human-readable label that identifies the database that contains the collection with one or more Atlas Search indexes",
                    "type": "string"
                  },
                  "collectionName": {
                    "description": "Human-readable label that identifies the collection that contains one or more Atlas Search indexes",
                    "type": "string"
                  },
                  "name": {
                    "description": "Human-readable label that identifies this index. Must be unique for a deployment",
                    "type": "string"
                  },
                  "search": {
                    "description": "Atlas search index configuration",
                    "type": "object",
                    "required": [
                      "mappings",
                      "searchConfigurationRef"
                    ],
                    "properties": {
                      "mappings": {
                        "description": "Index specifications for the collection's fields",
                        "type": "object",
                        "properties": {
                          "dynamic": {
                            "description": "Flag that indicates whether the index uses dynamic or static mappings. Required if mapping.fields is omitted.",
                            "type": "boolean"
                          },
                          "fields": {
                            "description": "One or more field specifications for the Atlas Search index. Required if mapping.dynamic is omitted or set to false.",
                            "x-kubernetes-preserve-unknown-fields": true
                          }
                        },
                        "additionalProperties": false
                      },
                      "searchConfigurationRef": {
                        "description": "A reference to the AtlasSearchIndexConfig custom resource",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name is the name of the Kubernetes Resource",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace is the namespace of the Kubernetes Resource",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "synonyms": {
                        "description": "Rule sets that map words to their synonyms in this index",
                        "type": "array",
                        "items": {
                          "description": "Synonym represents \"Synonym\" type of Atlas Search Index",
                          "type": "object",
                          "required": [
                            "analyzer",
                            "name",
                            "source"
                          ],
                          "properties": {
                            "analyzer": {
                              "description": "Specific pre-defined method chosen to apply to the synonyms to be searched",
                              "type": "string",
                              "enum": [
                                "lucene.standard",
                                "lucene.simple",
                                "lucene.whitespace",
                                "lucene.keyword",
                                "lucene.arabic",
                                "lucene.armenian",
                                "lucene.basque",
                                "lucene.bengali",
                                "lucene.brazilian",
                                "lucene.bulgarian",
                                "lucene.catalan",
                                "lucene.chinese",
                                "lucene.cjk",
                                "lucene.czech",
                                "lucene.danish",
                                "lucene.dutch",
                                "lucene.english",
                                "lucene.finnish",
                                "lucene.french",
                                "lucene.galician",
                                "lucene.german",
                                "lucene.greek",
                                "lucene.hindi",
                                "lucene.hungarian",
                                "lucene.indonesian",
                                "lucene.irish",
                                "lucene.italian",
                                "lucene.japanese",
                                "lucene.korean",
                                "lucene.kuromoji",
                                "lucene.latvian",
                                "lucene.lithuanian",
                                "lucene.morfologik",
                                "lucene.nori",
                                "lucene.norwegian",
                                "lucene.persian",
                                "lucene.portuguese",
                                "lucene.romanian",
                                "lucene.russian",
                                "lucene.smartcn",
                                "lucene.sorani",
                                "lucene.spanish",
                                "lucene.swedish",
                                "lucene.thai",
                                "lucene.turkish",
                                "lucene.ukrainian"
                              ]
                            },
                            "name": {
                              "description": "Human-readable label that identifies the synonym definition. Each name must be unique within the same index definition",
                              "type": "string"
                            },
                            "source": {
                              "description": "Data set that stores the mapping one or more words map to one or more synonyms of those words",
                              "type": "object",
                              "required": [
                                "collection"
                              ],
                              "properties": {
                                "collection": {
                                  "description": "Human-readable label that identifies the MongoDB collection that stores words and their applicable synonyms",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  },
                  "type": {
                    "description": "Type of the index",
                    "type": "string",
                    "enum": [
                      "search",
                      "vectorSearch"
                    ]
                  },
                  "vectorSearch": {
                    "description": "Atlas vector search index configuration",
                    "type": "object",
                    "required": [
                      "fields"
                    ],
                    "properties": {
                      "fields": {
                        "description": "Array of JSON objects. See examples https://dochub.mongodb.org/core/avs-vector-type",
                        "x-kubernetes-preserve-unknown-fields": true
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "searchNodes": {
              "description": "Settings for Search Nodes for the cluster. Currently, at most one search node configuration may be defined.",
              "type": "array",
              "maxItems": 1,
              "items": {
                "type": "object",
                "properties": {
                  "instanceSize": {
                    "description": "Hardware specification for the Search Node instance sizes.",
                    "type": "string",
                    "enum": [
                      "S20_HIGHCPU_NVME",
                      "S30_HIGHCPU_NVME",
                      "S40_HIGHCPU_NVME",
                      "S50_HIGHCPU_NVME",
                      "S60_HIGHCPU_NVME",
                      "S70_HIGHCPU_NVME",
                      "S80_HIGHCPU_NVME",
                      "S30_LOWCPU_NVME",
                      "S40_LOWCPU_NVME",
                      "S50_LOWCPU_NVME",
                      "S60_LOWCPU_NVME",
                      "S80_LOWCPU_NVME",
                      "S90_LOWCPU_NVME",
                      "S100_LOWCPU_NVME",
                      "S110_LOWCPU_NVME"
                    ]
                  },
                  "nodeCount": {
                    "description": "Number of Search Nodes in the cluster.",
                    "type": "integer",
                    "maximum": 32,
                    "minimum": 2
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "Key-value pairs for resource tagging.",
              "type": "array",
              "maxItems": 50,
              "items": {
                "description": "TagSpec holds a key-value pair for resource tagging on this deployment.",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9 @_.+`;`-]*$"
                  },
                  "value": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9 @_.+`;`-]*$"
                  }
                },
                "additionalProperties": false
              }
            },
            "terminationProtectionEnabled": {
              "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.",
              "type": "boolean",
              "default": false
            },
            "versionReleaseSystem": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "externalProjectRef": {
          "description": "\"externalProjectRef\" holds the parent Atlas project ID.\nMutually exclusive with the \"projectRef\" field",
          "type": "object",
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "description": "ID is the Atlas project ID",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "flexSpec": {
          "description": "Configuration for the Flex cluster API. https://www.mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Flex-Clusters",
          "type": "object",
          "required": [
            "name",
            "providerSettings"
          ],
          "properties": {
            "name": {
              "description": "Human-readable label that identifies the instance.",
              "type": "string"
            },
            "providerSettings": {
              "description": "Group of cloud provider settings that configure the provisioned MongoDB flex cluster.",
              "type": "object",
              "required": [
                "backingProviderName",
                "regionName"
              ],
              "properties": {
                "backingProviderName": {
                  "description": "Cloud service provider on which MongoDB Atlas provisions the flex cluster.",
                  "type": "string",
                  "enum": [
                    "AWS",
                    "GCP",
                    "AZURE"
                  ],
                  "x-kubernetes-validations": [
                    {
                      "rule": "self == oldSelf",
                      "message": "Backing Provider cannot be modified after cluster creation"
                    }
                  ]
                },
                "regionName": {
                  "description": "Human-readable label that identifies the geographic location of your MongoDB flex cluster.\nThe region you choose can affect network latency for clients accessing your databases.",
                  "type": "string",
                  "x-kubernetes-validations": [
                    {
                      "rule": "self == oldSelf",
                      "message": "Region Name cannot be modified after cluster creation"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "List that contains key-value pairs between 1 to 255 characters in length for tagging and categorizing the instance.",
              "type": "array",
              "maxItems": 50,
              "items": {
                "description": "TagSpec holds a key-value pair for resource tagging on this deployment.",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9 @_.+`;`-]*$"
                  },
                  "value": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9 @_.+`;`-]*$"
                  }
                },
                "additionalProperties": false
              }
            },
            "terminationProtectionEnabled": {
              "description": "Flag that indicates whether termination protection is enabled on the cluster.\nIf set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false
        },
        "processArgs": {
          "description": "ProcessArgs allows to modify Advanced Configuration Options",
          "type": "object",
          "properties": {
            "defaultReadConcern": {
              "type": "string"
            },
            "defaultWriteConcern": {
              "type": "string"
            },
            "failIndexKeyTooLong": {
              "type": "boolean"
            },
            "javascriptEnabled": {
              "type": "boolean"
            },
            "minimumEnabledTlsProtocol": {
              "type": "string"
            },
            "noTableScan": {
              "type": "boolean"
            },
            "oplogMinRetentionHours": {
              "type": "string"
            },
            "oplogSizeMB": {
              "type": "integer",
              "format": "int64"
            },
            "sampleRefreshIntervalBIConnector": {
              "type": "integer",
              "format": "int64"
            },
            "sampleSizeBIConnector": {
              "type": "integer",
              "format": "int64"
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "\"projectRef\" is a reference to the parent AtlasProject resource.\nMutually exclusive with the \"externalProjectRef\" field",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the Kubernetes Resource",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace is the namespace of the Kubernetes Resource",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "serverlessSpec": {
          "description": "Configuration for the serverless deployment API. https://www.mongodb.com/docs/atlas/reference/api/serverless-instances/\nDEPRECATED FIELD: Serverless instances are deprecated. See https://dochub.mongodb.org/core/atlas-flex-migration for details.",
          "type": "object",
          "required": [
            "name",
            "providerSettings"
          ],
          "properties": {
            "backupOptions": {
              "description": "Serverless Backup Options",
              "type": "object",
              "properties": {
                "serverlessContinuousBackupEnabled": {
                  "description": "ServerlessContinuousBackupEnabled",
                  "type": "boolean",
                  "default": true
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Name of the serverless deployment as it appears in Atlas.\nAfter Atlas creates the deployment, you can't change its name.\nCan only contain ASCII letters, numbers, and hyphens.",
              "type": "string",
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*$"
            },
            "privateEndpoints": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "cloudProviderEndpointID": {
                    "description": "CloudProviderEndpointID is the identifier of the cloud provider endpoint.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Serverless PrivateLink Service. Should be unique.",
                    "type": "string"
                  },
                  "privateEndpointIpAddress": {
                    "description": "PrivateEndpointIPAddress is the IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "providerSettings": {
              "description": "Configuration for the provisioned hosts on which MongoDB runs. The available options are specific to the cloud service provider.",
              "type": "object",
              "required": [
                "providerName"
              ],
              "properties": {
                "autoScaling": {
                  "description": "DEPRECATED FIELD. The value of this field doesn't take any effect. Range of instance sizes to which your deployment can scale.",
                  "type": "object",
                  "properties": {
                    "autoIndexingEnabled": {
                      "description": "Deprecated: This flag is not supported anymore.\nFlag that indicates whether autopilot mode for Performance Advisor is enabled.\nThe default is false.",
                      "type": "boolean"
                    },
                    "compute": {
                      "description": "Collection of settings that configure how a deployment might scale its deployment tier and whether the deployment can scale down.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "description": "Flag that indicates whether deployment tier auto-scaling is enabled. The default is false.",
                          "type": "boolean"
                        },
                        "maxInstanceSize": {
                          "description": "Maximum instance size to which your deployment can automatically scale (such as M40). Atlas requires this parameter if \"autoScaling.compute.enabled\" : true.",
                          "type": "string"
                        },
                        "minInstanceSize": {
                          "description": "Minimum instance size to which your deployment can automatically scale (such as M10). Atlas requires this parameter if \"autoScaling.compute.scaleDownEnabled\" : true.",
                          "type": "string"
                        },
                        "scaleDownEnabled": {
                          "description": "Flag that indicates whether the deployment tier may scale down. Atlas requires this parameter if \"autoScaling.compute.enabled\" : true.",
                          "type": "boolean"
                        }
                      },
                      "additionalProperties": false
                    },
                    "diskGBEnabled": {
                      "description": "Flag that indicates whether disk auto-scaling is enabled. The default is true.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "backingProviderName": {
                  "description": "Cloud service provider on which the host for a multi-tenant deployment is provisioned.\nThis setting only works when \"providerSetting.providerName\" : \"TENANT\" and \"providerSetting.instanceSizeName\" : M2 or M5.",
                  "type": "string",
                  "enum": [
                    "AWS",
                    "GCP",
                    "AZURE"
                  ]
                },
                "diskIOPS": {
                  "description": "DEPRECATED FIELD. The value of this field doesn't take any effect. Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                  "type": "integer",
                  "format": "int64"
                },
                "diskTypeName": {
                  "description": "DEPRECATED FIELD. The value of this field doesn't take any effect. Type of disk if you selected Azure as your cloud service provider.",
                  "type": "string"
                },
                "encryptEBSVolume": {
                  "description": "DEPRECATED FIELD. The value of this field doesn't take any effect. Flag that indicates whether the Amazon EBS encryption feature encrypts the host's root volume for both data at rest within the volume and for data moving between the volume and the deployment.",
                  "type": "boolean"
                },
                "instanceSizeName": {
                  "description": "DEPRECATED FIELD. The value of this field doesn't take any effect. Atlas provides different deployment tiers, each with a default storage capacity and RAM size. The deployment you select is used for all the data-bearing hosts in your deployment tier.",
                  "type": "string"
                },
                "providerName": {
                  "description": "Cloud service provider on which Atlas provisions the hosts.",
                  "type": "string",
                  "enum": [
                    "AWS",
                    "GCP",
                    "AZURE",
                    "TENANT",
                    "SERVERLESS"
                  ]
                },
                "regionName": {
                  "description": "Physical location of your MongoDB deployment.\nThe region you choose can affect network latency for clients accessing your databases.",
                  "type": "string"
                },
                "volumeType": {
                  "description": "DEPRECATED FIELD. The value of this field doesn't take any effect. Disk IOPS setting for AWS storage.\nSet only if you selected AWS as your cloud service provider.",
                  "type": "string",
                  "enum": [
                    "STANDARD",
                    "PROVISIONED"
                  ]
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "Key-value pairs for resource tagging.",
              "type": "array",
              "maxItems": 50,
              "items": {
                "description": "TagSpec holds a key-value pair for resource tagging on this deployment.",
                "type": "object",
                "required": [
                  "key",
                  "value"
                ],
                "properties": {
                  "key": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9 @_.+`;`-]*$"
                  },
                  "value": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9][a-zA-Z0-9 @_.+`;`-]*$"
                  }
                },
                "additionalProperties": false
              }
            },
            "terminationProtectionEnabled": {
              "description": "Flag that indicates whether termination protection is enabled on the cluster. If set to true, MongoDB Cloud won't delete the cluster. If set to false, MongoDB Cloud will delete the cluster.",
              "type": "boolean",
              "default": false
            }
          },
          "additionalProperties": false
        },
        "upgradeToDedicated": {
          "description": " upgradeToDedicated, when set to true, triggers the migration from a Flex to a\n Dedicated cluster. The user MUST provide the new dedicated cluster configuration.\n This flag is ignored if the cluster is already dedicated.",
          "type": "boolean"
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 !has(self.projectRef)) || (!has(self.externalProjectRef) \u0026\u0026 has(self.projectRef))",
          "message": "must define only one project reference through externalProjectRef or projectRef"
        },
        {
          "rule": "(has(self.externalProjectRef) \u0026\u0026 has(self.connectionSecret)) || !has(self.externalProjectRef)",
          "message": "must define a local connection secret when referencing an external project"
        }
      ]
    },
    "status": {
      "description": "AtlasDeploymentStatus defines the observed state of AtlasDeployment.",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "description": "Conditions is the list of statuses showing the current state of the Atlas Custom Resource",
          "type": "array",
          "items": {
            "description": "Condition describes the state of an Atlas Custom Resource at a certain point.",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of Atlas Custom Resource condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "connectionStrings": {
          "description": "ConnectionStrings is a set of connection strings that your applications use to connect to this cluster.",
          "type": "object",
          "properties": {
            "private": {
              "description": "Network-peering-endpoint-aware mongodb:// connection strings for each interface VPC endpoint you configured to connect to this cluster.\nAtlas returns this parameter only if you created a network peering connection to this cluster.",
              "type": "string"
            },
            "privateEndpoint": {
              "description": "Private endpoint connection strings.\nEach object describes the connection strings you can use to connect to this cluster through a private endpoint.\nAtlas returns this parameter only if you deployed a private endpoint to all regions to which you deployed this cluster's nodes.",
              "type": "array",
              "items": {
                "description": "PrivateEndpoint connection strings. Each object describes the connection strings\nyou can use to connect to this cluster through a private endpoint.\nAtlas returns this parameter only if you deployed a private endpoint to all regions\nto which you deployed this cluster's nodes.",
                "type": "object",
                "properties": {
                  "connectionString": {
                    "description": "Private-endpoint-aware mongodb:// connection string for this private endpoint.",
                    "type": "string"
                  },
                  "endpoints": {
                    "description": "Private endpoint through which you connect to Atlas when you use connectionStrings.privateEndpoint[n].connectionString or connectionStrings.privateEndpoint[n].srvConnectionString.",
                    "type": "array",
                    "items": {
                      "description": "Endpoint through which you connect to Atlas",
                      "type": "object",
                      "properties": {
                        "endpointId": {
                          "description": "Unique identifier of the private endpoint.",
                          "type": "string"
                        },
                        "ip": {
                          "description": "Private IP address of the private endpoint network interface you created in your Azure VNet.",
                          "type": "string"
                        },
                        "providerName": {
                          "description": "Cloud provider to which you deployed the private endpoint. Atlas returns AWS or AZURE.",
                          "type": "string"
                        },
                        "region": {
                          "description": "Region to which you deployed the private endpoint.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "srvConnectionString": {
                    "description": "Private-endpoint-aware mongodb+srv:// connection string for this private endpoint.",
                    "type": "string"
                  },
                  "srvShardOptimizedConnectionString": {
                    "type": "string"
                  },
                  "type": {
                    "description": "Type of MongoDB process that you connect to with the connection strings\n\nAtlas returns:\n\n• MONGOD for replica sets, or\n\n• MONGOS for sharded clusters",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "privateSrv": {
              "description": "Network-peering-endpoint-aware mongodb+srv:// connection strings for each interface VPC endpoint you configured to connect to this cluster.\nAtlas returns this parameter only if you created a network peering connection to this cluster.\nUse this URI format if your driver supports it. If it doesn't, use connectionStrings.private.",
              "type": "string"
            },
            "standard": {
              "description": "Public mongodb:// connection string for this cluster.",
              "type": "string"
            },
            "standardSrv": {
              "description": "Public mongodb+srv:// connection string for this cluster.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "customZoneMapping": {
          "type": "object",
          "properties": {
            "customZoneMapping": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "zoneMappingErrMessage": {
              "type": "string"
            },
            "zoneMappingState": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managedNamespaces": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "collection",
              "db"
            ],
            "properties": {
              "collection": {
                "type": "string"
              },
              "customShardKey": {
                "type": "string"
              },
              "db": {
                "type": "string"
              },
              "errMessage": {
                "type": "string"
              },
              "isCustomShardKeyHashed": {
                "type": "boolean"
              },
              "isShardKeyUnique": {
                "type": "boolean"
              },
              "numInitialChunks": {
                "type": "integer"
              },
              "presplitHashedZones": {
                "type": "boolean"
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "mongoDBVersion": {
          "description": "MongoDBVersion is the version of MongoDB the cluster runs, in \u003cmajor version\u003e.\u003cminor version\u003e format.",
          "type": "string"
        },
        "mongoURIUpdated": {
          "description": "MongoURIUpdated is a timestamp in ISO 8601 date and time format in UTC when the connection string was last updated.\nThe connection string changes if you update any of the other values.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration indicates the generation of the resource specification that the Atlas Operator is aware of.\nThe Atlas Operator updates this field to the 'metadata.generation' as soon as it starts reconciliation of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "replicaSets": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "type": "string"
              },
              "zoneName": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "searchIndexes": {
          "description": "SearchIndexes contains a list of search indexes statuses configured for a project",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "ID",
              "message",
              "name",
              "status"
            ],
            "properties": {
              "ID": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "serverlessPrivateEndpoints": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "_id": {
                "description": "ID is the identifier of the Serverless PrivateLink Service.",
                "type": "string"
              },
              "cloudProviderEndpointId": {
                "description": "CloudProviderEndpointID is the identifier of the cloud provider endpoint.",
                "type": "string"
              },
              "endpointServiceName": {
                "description": "EndpointServiceName is the name of the PrivateLink endpoint service in AWS. Returns null while the endpoint service is being created.",
                "type": "string"
              },
              "errorMessage": {
                "description": "ErrorMessage is the error message if the Serverless PrivateLink Service failed to create or connect.",
                "type": "string"
              },
              "name": {
                "description": "Name is the name of the Serverless PrivateLink Service. Should be unique.",
                "type": "string"
              },
              "privateEndpointIpAddress": {
                "description": "PrivateEndpointIPAddress is the IPv4 address of the private endpoint in your Azure VNet that someone added to this private endpoint service.",
                "type": "string"
              },
              "privateLinkServiceResourceId": {
                "description": "PrivateLinkServiceResourceID is the root-relative path that identifies the Azure Private Link Service that MongoDB Cloud manages. MongoDB Cloud returns null while it creates the endpoint service.",
                "type": "string"
              },
              "providerName": {
                "description": "ProviderName is human-readable label that identifies the cloud provider. Values include AWS or AZURE.",
                "type": "string"
              },
              "status": {
                "description": "Status of the AWS Serverless PrivateLink connection.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "stateName": {
          "description": "StateName is the current state of the cluster.\nThe possible states are: IDLE, CREATING, UPDATING, DELETING, DELETED, REPAIRING",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
