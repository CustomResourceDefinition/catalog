{
  "description": "Document is the Schema for the Documents API. Provides an SSM Document resource",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DocumentSpec defines the desired state of Document",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "attachmentsSource": {
              "description": "One or more configuration blocks describing attachments sources to a version of a document. See attachments_source block below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "The key of a key-value pair that identifies the location of an attachment to the document. Valid values: SourceUrl, S3FileUrl, AttachmentReference.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the document attachment file.",
                    "type": "string"
                  },
                  "values": {
                    "description": "The value of a key-value pair that identifies the location of an attachment to the document. The argument format is a list of a single string that depends on the type of key you specify - see the API Reference for details.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "content": {
              "description": "The content for the SSM document in JSON or YAML format. The content of the document must not exceed 64KB. This quota also includes the content specified for input parameters at runtime. We recommend storing the contents for your new document in an external JSON or YAML file and referencing the file in a command.",
              "type": "string"
            },
            "documentFormat": {
              "description": "The format of the document. Valid values: JSON, TEXT, YAML.",
              "type": "string"
            },
            "documentType": {
              "description": "The type of the document. For a list of valid values, see the API Reference.",
              "type": "string"
            },
            "permissions": {
              "description": "Additional permissions to attach to the document. See Permissions below for details.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "targetType": {
              "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS resource and property types reference.",
              "type": "string"
            },
            "versionName": {
              "description": "The version of the artifact associated with the document. For example, 12.6. This value is unique across all versions of a document, and can't be changed.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "attachmentsSource": {
              "description": "One or more configuration blocks describing attachments sources to a version of a document. See attachments_source block below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "The key of a key-value pair that identifies the location of an attachment to the document. Valid values: SourceUrl, S3FileUrl, AttachmentReference.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the document attachment file.",
                    "type": "string"
                  },
                  "values": {
                    "description": "The value of a key-value pair that identifies the location of an attachment to the document. The argument format is a list of a single string that depends on the type of key you specify - see the API Reference for details.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "content": {
              "description": "The content for the SSM document in JSON or YAML format. The content of the document must not exceed 64KB. This quota also includes the content specified for input parameters at runtime. We recommend storing the contents for your new document in an external JSON or YAML file and referencing the file in a command.",
              "type": "string"
            },
            "documentFormat": {
              "description": "The format of the document. Valid values: JSON, TEXT, YAML.",
              "type": "string"
            },
            "documentType": {
              "description": "The type of the document. For a list of valid values, see the API Reference.",
              "type": "string"
            },
            "permissions": {
              "description": "Additional permissions to attach to the document. See Permissions below for details.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "targetType": {
              "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS resource and property types reference.",
              "type": "string"
            },
            "versionName": {
              "description": "The version of the artifact associated with the document. For example, 12.6. This value is unique across all versions of a document, and can't be changed.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.content) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.content))",
          "message": "spec.forProvider.content is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.documentType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.documentType))",
          "message": "spec.forProvider.documentType is a required parameter"
        }
      ]
    },
    "status": {
      "description": "DocumentStatus defines the observed state of Document.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) of the document.",
              "type": "string"
            },
            "attachmentsSource": {
              "description": "One or more configuration blocks describing attachments sources to a version of a document. See attachments_source block below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "The key of a key-value pair that identifies the location of an attachment to the document. Valid values: SourceUrl, S3FileUrl, AttachmentReference.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the document attachment file.",
                    "type": "string"
                  },
                  "values": {
                    "description": "The value of a key-value pair that identifies the location of an attachment to the document. The argument format is a list of a single string that depends on the type of key you specify - see the API Reference for details.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "content": {
              "description": "The content for the SSM document in JSON or YAML format. The content of the document must not exceed 64KB. This quota also includes the content specified for input parameters at runtime. We recommend storing the contents for your new document in an external JSON or YAML file and referencing the file in a command.",
              "type": "string"
            },
            "createdDate": {
              "description": "The date the document was created.",
              "type": "string"
            },
            "defaultVersion": {
              "description": "The default version of the document.",
              "type": "string"
            },
            "description": {
              "description": "The description of the document.",
              "type": "string"
            },
            "documentFormat": {
              "description": "The format of the document. Valid values: JSON, TEXT, YAML.",
              "type": "string"
            },
            "documentType": {
              "description": "The type of the document. For a list of valid values, see the API Reference.",
              "type": "string"
            },
            "documentVersion": {
              "description": "The document version.",
              "type": "string"
            },
            "hash": {
              "description": "The Sha256 or Sha1 hash created by the system when the document was created.",
              "type": "string"
            },
            "hashType": {
              "description": "The hash type of the document. Valid values: Sha256, Sha1.",
              "type": "string"
            },
            "id": {
              "description": "The name of the document.",
              "type": "string"
            },
            "latestVersion": {
              "description": "The latest version of the document.",
              "type": "string"
            },
            "owner": {
              "description": "The Amazon Web Services user that created the document.",
              "type": "string"
            },
            "parameter": {
              "description": "One or more configuration blocks describing the parameters for the document. See parameter block below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "defaultValue": {
                    "description": "If specified, the default values for the parameters. Parameters without a default value are required. Parameters with a default value are optional.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description of what the parameter does, how to use it, the default value, and whether or not the parameter is optional.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the parameter.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of parameter. Valid values: String, StringList.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "permissions": {
              "description": "Additional permissions to attach to the document. See Permissions below for details.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "platformTypes": {
              "description": "The list of operating system (OS) platforms compatible with this SSM document. Valid values: Windows, Linux, MacOS.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "schemaVersion": {
              "description": "The schema version of the document.",
              "type": "string"
            },
            "status": {
              "description": "The status of the SSM document. Valid values: Creating, Active, Updating, Deleting, Failed.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "targetType": {
              "description": "The target type which defines the kinds of resources the document can run on. For example, /AWS::EC2::Instance. For a list of valid resource types, see AWS resource and property types reference.",
              "type": "string"
            },
            "versionName": {
              "description": "The version of the artifact associated with the document. For example, 12.6. This value is unique across all versions of a document, and can't be changed.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
