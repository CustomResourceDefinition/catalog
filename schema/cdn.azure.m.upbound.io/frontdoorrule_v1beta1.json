{
  "description": "FrontdoorRule is the Schema for the FrontdoorRules API. Manages a Front Door (standard/premium) Rule.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FrontdoorRuleSpec defines the desired state of FrontdoorRule",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "actions": {
              "description": "An actions block as defined below.",
              "type": "object",
              "properties": {
                "requestHeaderAction": {
                  "description": "A request_header_action block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerAction": {
                        "description": "The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value to append or overwrite.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseHeaderAction": {
                  "description": "A response_header_action block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerAction": {
                        "description": "The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value to append or overwrite.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "routeConfigurationOverrideAction": {
                  "description": "A route_configuration_override_action block as defined below.",
                  "type": "object",
                  "properties": {
                    "cacheBehavior": {
                      "description": "HonorOrigin the Front Door will always honor origin response header directive. If the origin directive is missing, Front Door will cache contents anywhere from 1 to 3 days. OverrideAlways the TTL value returned from your Front Door Origin is overwritten with the value specified in the action. This behavior will only be applied if the response is cacheable. OverrideIfOriginMissing if no TTL value gets returned from your Front Door Origin, the rule sets the TTL to the value specified in the action. This behavior will only be applied if the response is cacheable. Disabled the Front Door will not cache the response contents, irrespective of Front Door Origin response directives. Possible values include HonorOrigin, OverrideAlways, OverrideIfOriginMissing or Disabled.",
                      "type": "string"
                    },
                    "cacheDuration": {
                      "description": "When Cache behavior is set to Override or SetIfMissing, this field specifies the cache duration to use. The maximum duration is 366 days specified in the d.HH:MM:SS format(e.g. 365.23:59:59). If the desired maximum cache duration is less than 1 day then the maximum cache duration should be specified in the HH:MM:SS format(e.g. 23:59:59).",
                      "type": "string"
                    },
                    "cdnFrontdoorOriginGroupId": {
                      "description": "The Front Door Origin Group resource ID that the request should be routed to. This overrides the configuration specified in the Front Door Endpoint route.",
                      "type": "string"
                    },
                    "cdnFrontdoorOriginGroupIdRef": {
                      "description": "Reference to a FrontdoorOriginGroup in cdn to populate cdnFrontdoorOriginGroupId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "cdnFrontdoorOriginGroupIdSelector": {
                      "description": "Selector for a FrontdoorOriginGroup in cdn to populate cdnFrontdoorOriginGroupId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "compressionEnabled": {
                      "description": "Should the Front Door dynamically compress the content? Possible values include true or false.",
                      "type": "boolean"
                    },
                    "forwardingProtocol": {
                      "description": "The forwarding protocol the request will be redirected as. This overrides the configuration specified in the route to be associated with. Possible values include MatchRequest, HttpOnly or HttpsOnly.",
                      "type": "string"
                    },
                    "queryStringCachingBehavior": {
                      "description": "IncludeSpecifiedQueryStrings query strings specified in the query_string_parameters field get included when the cache key gets generated. UseQueryString cache every unique URL, each unique URL will have its own cache key. IgnoreSpecifiedQueryStrings query strings specified in the query_string_parameters field get excluded when the cache key gets generated. IgnoreQueryString query strings aren't considered when the cache key gets generated. Possible values include IgnoreQueryString, UseQueryString, IgnoreSpecifiedQueryStrings or IncludeSpecifiedQueryStrings.",
                      "type": "string"
                    },
                    "queryStringParameters": {
                      "description": "A list of query string parameter names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "urlRedirectAction": {
                  "description": "A url_redirect_action block as defined below. You may not have a url_redirect_action and a url_rewrite_action defined in the same actions block.",
                  "type": "object",
                  "properties": {
                    "destinationFragment": {
                      "description": "The fragment to use in the redirect. The value must be a string between 0 and 1024 characters in length, leave blank to preserve the incoming fragment. Defaults to \"\".",
                      "type": "string"
                    },
                    "destinationHostname": {
                      "description": "The host name you want the request to be redirected to. The value must be a string between 0 and 2048 characters in length, leave blank to preserve the incoming host.",
                      "type": "string"
                    },
                    "destinationPath": {
                      "description": "The path to use in the redirect. The value must be a string and include the leading /, leave blank to preserve the incoming path. Defaults to \"\".",
                      "type": "string"
                    },
                    "queryString": {
                      "description": "The query string used in the redirect URL. The value must be in the \u003ckey\u003e=\u003cvalue\u003e or \u003ckey\u003e={action_server_variable} format and must not include the leading ?, leave blank to preserve the incoming query string. Maximum allowed length for this field is 2048 characters. Defaults to \"\".",
                      "type": "string"
                    },
                    "redirectProtocol": {
                      "description": "The protocol the request will be redirected as. Possible values include MatchRequest, Http or Https. Defaults to MatchRequest.",
                      "type": "string"
                    },
                    "redirectType": {
                      "description": "The response type to return to the requestor. Possible values include Moved, Found , TemporaryRedirect or PermanentRedirect.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "urlRewriteAction": {
                  "description": "A url_rewrite_action block as defined below. You may not have a url_rewrite_action and a url_redirect_action defined in the same actions block.",
                  "type": "object",
                  "properties": {
                    "destination": {
                      "description": "The destination path to use in the rewrite. The destination path overwrites the source pattern.",
                      "type": "string"
                    },
                    "preserveUnmatchedPath": {
                      "description": "Append the remaining path after the source pattern to the new destination path? Possible values true or false. Defaults to false.",
                      "type": "boolean"
                    },
                    "sourcePattern": {
                      "description": "The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash \"/\" as the source pattern value.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "behaviorOnMatch": {
              "description": "If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are Continue and Stop. Defaults to Continue.",
              "type": "string"
            },
            "cdnFrontdoorRuleSetId": {
              "description": "The resource ID of the Front Door Rule Set for this Front Door Rule. Changing this forces a new Front Door Rule to be created.",
              "type": "string"
            },
            "cdnFrontdoorRuleSetIdRef": {
              "description": "Reference to a FrontdoorRuleSet in cdn to populate cdnFrontdoorRuleSetId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cdnFrontdoorRuleSetIdSelector": {
              "description": "Selector for a FrontdoorRuleSet in cdn to populate cdnFrontdoorRuleSetId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "conditions": {
              "description": "A conditions block as defined below.",
              "type": "object",
              "properties": {
                "clientPortCondition": {
                  "description": "A client_port_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "cookiesCondition": {
                  "description": "A cookies_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cookieName": {
                        "description": "A string value representing the name of the cookie.",
                        "type": "string"
                      },
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "hostNameCondition": {
                  "description": "A host_name_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "httpVersionCondition": {
                  "description": "A http_version_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "isDeviceCondition": {
                  "description": "A is_device_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "postArgsCondition": {
                  "description": "A post_args_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "postArgsName": {
                        "description": "A string value representing the name of the POST argument.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "queryStringCondition": {
                  "description": "A query_string_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "remoteAddressCondition": {
                  "description": "A remote_address_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestBodyCondition": {
                  "description": "A request_body_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestHeaderCondition": {
                  "description": "A request_header_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestMethodCondition": {
                  "description": "A request_method_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestSchemeCondition": {
                  "description": "A request_scheme_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestUriCondition": {
                  "description": "A request_uri_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "serverPortCondition": {
                  "description": "A server_port_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "socketAddressCondition": {
                  "description": "A socket_address_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "sslProtocolCondition": {
                  "description": "A ssl_protocol_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlFileExtensionCondition": {
                  "description": "A url_file_extension_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlFilenameCondition": {
                  "description": "A url_filename_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlPathCondition": {
                  "description": "A url_path_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "order": {
              "description": "The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at 1(e.g. 1, 2, 3...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "actions": {
              "description": "An actions block as defined below.",
              "type": "object",
              "properties": {
                "requestHeaderAction": {
                  "description": "A request_header_action block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerAction": {
                        "description": "The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value to append or overwrite.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseHeaderAction": {
                  "description": "A response_header_action block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerAction": {
                        "description": "The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value to append or overwrite.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "routeConfigurationOverrideAction": {
                  "description": "A route_configuration_override_action block as defined below.",
                  "type": "object",
                  "properties": {
                    "cacheBehavior": {
                      "description": "HonorOrigin the Front Door will always honor origin response header directive. If the origin directive is missing, Front Door will cache contents anywhere from 1 to 3 days. OverrideAlways the TTL value returned from your Front Door Origin is overwritten with the value specified in the action. This behavior will only be applied if the response is cacheable. OverrideIfOriginMissing if no TTL value gets returned from your Front Door Origin, the rule sets the TTL to the value specified in the action. This behavior will only be applied if the response is cacheable. Disabled the Front Door will not cache the response contents, irrespective of Front Door Origin response directives. Possible values include HonorOrigin, OverrideAlways, OverrideIfOriginMissing or Disabled.",
                      "type": "string"
                    },
                    "cacheDuration": {
                      "description": "When Cache behavior is set to Override or SetIfMissing, this field specifies the cache duration to use. The maximum duration is 366 days specified in the d.HH:MM:SS format(e.g. 365.23:59:59). If the desired maximum cache duration is less than 1 day then the maximum cache duration should be specified in the HH:MM:SS format(e.g. 23:59:59).",
                      "type": "string"
                    },
                    "cdnFrontdoorOriginGroupId": {
                      "description": "The Front Door Origin Group resource ID that the request should be routed to. This overrides the configuration specified in the Front Door Endpoint route.",
                      "type": "string"
                    },
                    "cdnFrontdoorOriginGroupIdRef": {
                      "description": "Reference to a FrontdoorOriginGroup in cdn to populate cdnFrontdoorOriginGroupId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "cdnFrontdoorOriginGroupIdSelector": {
                      "description": "Selector for a FrontdoorOriginGroup in cdn to populate cdnFrontdoorOriginGroupId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "compressionEnabled": {
                      "description": "Should the Front Door dynamically compress the content? Possible values include true or false.",
                      "type": "boolean"
                    },
                    "forwardingProtocol": {
                      "description": "The forwarding protocol the request will be redirected as. This overrides the configuration specified in the route to be associated with. Possible values include MatchRequest, HttpOnly or HttpsOnly.",
                      "type": "string"
                    },
                    "queryStringCachingBehavior": {
                      "description": "IncludeSpecifiedQueryStrings query strings specified in the query_string_parameters field get included when the cache key gets generated. UseQueryString cache every unique URL, each unique URL will have its own cache key. IgnoreSpecifiedQueryStrings query strings specified in the query_string_parameters field get excluded when the cache key gets generated. IgnoreQueryString query strings aren't considered when the cache key gets generated. Possible values include IgnoreQueryString, UseQueryString, IgnoreSpecifiedQueryStrings or IncludeSpecifiedQueryStrings.",
                      "type": "string"
                    },
                    "queryStringParameters": {
                      "description": "A list of query string parameter names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "urlRedirectAction": {
                  "description": "A url_redirect_action block as defined below. You may not have a url_redirect_action and a url_rewrite_action defined in the same actions block.",
                  "type": "object",
                  "properties": {
                    "destinationFragment": {
                      "description": "The fragment to use in the redirect. The value must be a string between 0 and 1024 characters in length, leave blank to preserve the incoming fragment. Defaults to \"\".",
                      "type": "string"
                    },
                    "destinationHostname": {
                      "description": "The host name you want the request to be redirected to. The value must be a string between 0 and 2048 characters in length, leave blank to preserve the incoming host.",
                      "type": "string"
                    },
                    "destinationPath": {
                      "description": "The path to use in the redirect. The value must be a string and include the leading /, leave blank to preserve the incoming path. Defaults to \"\".",
                      "type": "string"
                    },
                    "queryString": {
                      "description": "The query string used in the redirect URL. The value must be in the \u003ckey\u003e=\u003cvalue\u003e or \u003ckey\u003e={action_server_variable} format and must not include the leading ?, leave blank to preserve the incoming query string. Maximum allowed length for this field is 2048 characters. Defaults to \"\".",
                      "type": "string"
                    },
                    "redirectProtocol": {
                      "description": "The protocol the request will be redirected as. Possible values include MatchRequest, Http or Https. Defaults to MatchRequest.",
                      "type": "string"
                    },
                    "redirectType": {
                      "description": "The response type to return to the requestor. Possible values include Moved, Found , TemporaryRedirect or PermanentRedirect.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "urlRewriteAction": {
                  "description": "A url_rewrite_action block as defined below. You may not have a url_rewrite_action and a url_redirect_action defined in the same actions block.",
                  "type": "object",
                  "properties": {
                    "destination": {
                      "description": "The destination path to use in the rewrite. The destination path overwrites the source pattern.",
                      "type": "string"
                    },
                    "preserveUnmatchedPath": {
                      "description": "Append the remaining path after the source pattern to the new destination path? Possible values true or false. Defaults to false.",
                      "type": "boolean"
                    },
                    "sourcePattern": {
                      "description": "The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash \"/\" as the source pattern value.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "behaviorOnMatch": {
              "description": "If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are Continue and Stop. Defaults to Continue.",
              "type": "string"
            },
            "conditions": {
              "description": "A conditions block as defined below.",
              "type": "object",
              "properties": {
                "clientPortCondition": {
                  "description": "A client_port_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "cookiesCondition": {
                  "description": "A cookies_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cookieName": {
                        "description": "A string value representing the name of the cookie.",
                        "type": "string"
                      },
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "hostNameCondition": {
                  "description": "A host_name_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "httpVersionCondition": {
                  "description": "A http_version_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "isDeviceCondition": {
                  "description": "A is_device_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "postArgsCondition": {
                  "description": "A post_args_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "postArgsName": {
                        "description": "A string value representing the name of the POST argument.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "queryStringCondition": {
                  "description": "A query_string_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "remoteAddressCondition": {
                  "description": "A remote_address_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestBodyCondition": {
                  "description": "A request_body_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestHeaderCondition": {
                  "description": "A request_header_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestMethodCondition": {
                  "description": "A request_method_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestSchemeCondition": {
                  "description": "A request_scheme_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestUriCondition": {
                  "description": "A request_uri_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "serverPortCondition": {
                  "description": "A server_port_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "socketAddressCondition": {
                  "description": "A socket_address_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "sslProtocolCondition": {
                  "description": "A ssl_protocol_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlFileExtensionCondition": {
                  "description": "A url_file_extension_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlFilenameCondition": {
                  "description": "A url_filename_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlPathCondition": {
                  "description": "A url_path_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "order": {
              "description": "The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at 1(e.g. 1, 2, 3...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.actions) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.actions))",
          "message": "spec.forProvider.actions is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.order) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.order))",
          "message": "spec.forProvider.order is a required parameter"
        }
      ]
    },
    "status": {
      "description": "FrontdoorRuleStatus defines the observed state of FrontdoorRule.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "actions": {
              "description": "An actions block as defined below.",
              "type": "object",
              "properties": {
                "requestHeaderAction": {
                  "description": "A request_header_action block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerAction": {
                        "description": "The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value to append or overwrite.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseHeaderAction": {
                  "description": "A response_header_action block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerAction": {
                        "description": "The action to be taken on the specified header_name. Possible values include Append, Overwrite or Delete.",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "value": {
                        "description": "The value to append or overwrite.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "routeConfigurationOverrideAction": {
                  "description": "A route_configuration_override_action block as defined below.",
                  "type": "object",
                  "properties": {
                    "cacheBehavior": {
                      "description": "HonorOrigin the Front Door will always honor origin response header directive. If the origin directive is missing, Front Door will cache contents anywhere from 1 to 3 days. OverrideAlways the TTL value returned from your Front Door Origin is overwritten with the value specified in the action. This behavior will only be applied if the response is cacheable. OverrideIfOriginMissing if no TTL value gets returned from your Front Door Origin, the rule sets the TTL to the value specified in the action. This behavior will only be applied if the response is cacheable. Disabled the Front Door will not cache the response contents, irrespective of Front Door Origin response directives. Possible values include HonorOrigin, OverrideAlways, OverrideIfOriginMissing or Disabled.",
                      "type": "string"
                    },
                    "cacheDuration": {
                      "description": "When Cache behavior is set to Override or SetIfMissing, this field specifies the cache duration to use. The maximum duration is 366 days specified in the d.HH:MM:SS format(e.g. 365.23:59:59). If the desired maximum cache duration is less than 1 day then the maximum cache duration should be specified in the HH:MM:SS format(e.g. 23:59:59).",
                      "type": "string"
                    },
                    "cdnFrontdoorOriginGroupId": {
                      "description": "The Front Door Origin Group resource ID that the request should be routed to. This overrides the configuration specified in the Front Door Endpoint route.",
                      "type": "string"
                    },
                    "compressionEnabled": {
                      "description": "Should the Front Door dynamically compress the content? Possible values include true or false.",
                      "type": "boolean"
                    },
                    "forwardingProtocol": {
                      "description": "The forwarding protocol the request will be redirected as. This overrides the configuration specified in the route to be associated with. Possible values include MatchRequest, HttpOnly or HttpsOnly.",
                      "type": "string"
                    },
                    "queryStringCachingBehavior": {
                      "description": "IncludeSpecifiedQueryStrings query strings specified in the query_string_parameters field get included when the cache key gets generated. UseQueryString cache every unique URL, each unique URL will have its own cache key. IgnoreSpecifiedQueryStrings query strings specified in the query_string_parameters field get excluded when the cache key gets generated. IgnoreQueryString query strings aren't considered when the cache key gets generated. Possible values include IgnoreQueryString, UseQueryString, IgnoreSpecifiedQueryStrings or IncludeSpecifiedQueryStrings.",
                      "type": "string"
                    },
                    "queryStringParameters": {
                      "description": "A list of query string parameter names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "urlRedirectAction": {
                  "description": "A url_redirect_action block as defined below. You may not have a url_redirect_action and a url_rewrite_action defined in the same actions block.",
                  "type": "object",
                  "properties": {
                    "destinationFragment": {
                      "description": "The fragment to use in the redirect. The value must be a string between 0 and 1024 characters in length, leave blank to preserve the incoming fragment. Defaults to \"\".",
                      "type": "string"
                    },
                    "destinationHostname": {
                      "description": "The host name you want the request to be redirected to. The value must be a string between 0 and 2048 characters in length, leave blank to preserve the incoming host.",
                      "type": "string"
                    },
                    "destinationPath": {
                      "description": "The path to use in the redirect. The value must be a string and include the leading /, leave blank to preserve the incoming path. Defaults to \"\".",
                      "type": "string"
                    },
                    "queryString": {
                      "description": "The query string used in the redirect URL. The value must be in the \u003ckey\u003e=\u003cvalue\u003e or \u003ckey\u003e={action_server_variable} format and must not include the leading ?, leave blank to preserve the incoming query string. Maximum allowed length for this field is 2048 characters. Defaults to \"\".",
                      "type": "string"
                    },
                    "redirectProtocol": {
                      "description": "The protocol the request will be redirected as. Possible values include MatchRequest, Http or Https. Defaults to MatchRequest.",
                      "type": "string"
                    },
                    "redirectType": {
                      "description": "The response type to return to the requestor. Possible values include Moved, Found , TemporaryRedirect or PermanentRedirect.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "urlRewriteAction": {
                  "description": "A url_rewrite_action block as defined below. You may not have a url_rewrite_action and a url_redirect_action defined in the same actions block.",
                  "type": "object",
                  "properties": {
                    "destination": {
                      "description": "The destination path to use in the rewrite. The destination path overwrites the source pattern.",
                      "type": "string"
                    },
                    "preserveUnmatchedPath": {
                      "description": "Append the remaining path after the source pattern to the new destination path? Possible values true or false. Defaults to false.",
                      "type": "boolean"
                    },
                    "sourcePattern": {
                      "description": "The source pattern in the URL path to replace. This uses prefix-based matching. For example, to match all URL paths use a forward slash \"/\" as the source pattern value.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "behaviorOnMatch": {
              "description": "If this rule is a match should the rules engine continue processing the remaining rules or stop? Possible values are Continue and Stop. Defaults to Continue.",
              "type": "string"
            },
            "cdnFrontdoorRuleSetId": {
              "description": "The resource ID of the Front Door Rule Set for this Front Door Rule. Changing this forces a new Front Door Rule to be created.",
              "type": "string"
            },
            "cdnFrontdoorRuleSetName": {
              "description": "The name of the Front Door Rule Set containing this Front Door Rule.",
              "type": "string"
            },
            "conditions": {
              "description": "A conditions block as defined below.",
              "type": "object",
              "properties": {
                "clientPortCondition": {
                  "description": "A client_port_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "cookiesCondition": {
                  "description": "A cookies_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cookieName": {
                        "description": "A string value representing the name of the cookie.",
                        "type": "string"
                      },
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "hostNameCondition": {
                  "description": "A host_name_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "httpVersionCondition": {
                  "description": "A http_version_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "isDeviceCondition": {
                  "description": "A is_device_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "postArgsCondition": {
                  "description": "A post_args_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "postArgsName": {
                        "description": "A string value representing the name of the POST argument.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "queryStringCondition": {
                  "description": "A query_string_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "remoteAddressCondition": {
                  "description": "A remote_address_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestBodyCondition": {
                  "description": "A request_body_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestHeaderCondition": {
                  "description": "A request_header_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headerName": {
                        "description": "The name of the header to modify.",
                        "type": "string"
                      },
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestMethodCondition": {
                  "description": "A request_method_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestSchemeCondition": {
                  "description": "A request_scheme_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "requestUriCondition": {
                  "description": "A request_uri_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "serverPortCondition": {
                  "description": "A server_port_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "socketAddressCondition": {
                  "description": "A socket_address_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "sslProtocolCondition": {
                  "description": "A ssl_protocol_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlFileExtensionCondition": {
                  "description": "A url_file_extension_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlFilenameCondition": {
                  "description": "A url_filename_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "urlPathCondition": {
                  "description": "A url_path_condition block as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "matchValues": {
                        "description": "One or more string or integer values(e.g. \"1\") representing the value of the request path to match. Don't include the leading slash (/). If multiple values are specified, they're evaluated using OR logic.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "negateCondition": {
                        "description": "If true operator becomes the opposite of its value. Possible values true or false. Defaults to false. Details can be found in the Condition Operator List below.",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "A Conditional operator. Possible values include Any, Equal, Contains, BeginsWith, EndsWith, LessThan, LessThanOrEqual, GreaterThan, GreaterThanOrEqual, RegEx or Wildcard. Details can be found in the Condition Operator List below.",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "A Conditional operator. Possible values include Lowercase, RemoveNulls, Trim, Uppercase, UrlDecode or UrlEncode. Details can be found in the Condition Transform List below.",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "set"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "The ID of the Front Door Rule.",
              "type": "string"
            },
            "order": {
              "description": "The order in which the rules will be applied for the Front Door Endpoint. The order value should be sequential and begin at 1(e.g. 1, 2, 3...). A Front Door Rule with a lesser order value will be applied before a rule with a greater order value.",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
