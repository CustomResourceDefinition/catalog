{
  "description": "SentinelAutomationRule is the Schema for the SentinelAutomationRules API. Manages a Sentinel Automation Rule.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SentinelAutomationRuleSpec defines the desired state of SentinelAutomationRule",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "actionIncident": {
              "description": "One or more action_incident blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "The classification of the incident, when closing it. Possible values are: BenignPositive_SuspiciousButExpected, FalsePositive_InaccurateData, FalsePositive_IncorrectAlertLogic, TruePositive_SuspiciousActivity and Undetermined.",
                    "type": "string"
                  },
                  "classificationComment": {
                    "description": "The comment why the incident is to be closed.",
                    "type": "string"
                  },
                  "labels": {
                    "description": "Specifies a list of labels to add to the incident.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "order": {
                    "description": "The execution order of this action.",
                    "type": "number"
                  },
                  "ownerId": {
                    "description": "The object ID of the entity this incident is assigned to.",
                    "type": "string"
                  },
                  "severity": {
                    "description": "The severity to add to the incident. Possible values are High, Informational, Low and Medium.",
                    "type": "string"
                  },
                  "status": {
                    "description": "The status to set to the incident. Possible values are: Active, Closed, New.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "actionPlaybook": {
              "description": "One or more action_playbook blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "logicAppId": {
                    "description": "The ID of the Logic App that defines the playbook's logic.",
                    "type": "string"
                  },
                  "order": {
                    "description": "The execution order of this action.",
                    "type": "number"
                  },
                  "tenantId": {
                    "description": "The ID of the Tenant that owns the playbook.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "conditionJson": {
              "description": "A JSON array of one or more condition JSON objects as is defined here.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name which should be used for this Sentinel Automation Rule.",
              "type": "string"
            },
            "enabled": {
              "description": "Whether this Sentinel Automation Rule is enabled? Defaults to true.",
              "type": "boolean"
            },
            "expiration": {
              "description": "The time in RFC3339 format of kind UTC that determines when this Automation Rule should expire and be disabled.",
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "description": "The ID of the Log Analytics Workspace where this Sentinel applies to. Changing this forces a new Sentinel Automation Rule to be created.",
              "type": "string"
            },
            "logAnalyticsWorkspaceIdRef": {
              "description": "Reference to a SentinelLogAnalyticsWorkspaceOnboarding in securityinsights to populate logAnalyticsWorkspaceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "logAnalyticsWorkspaceIdSelector": {
              "description": "Selector for a SentinelLogAnalyticsWorkspaceOnboarding in securityinsights to populate logAnalyticsWorkspaceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "The UUID which should be used for this Sentinel Automation Rule. Changing this forces a new Sentinel Automation Rule to be created.",
              "type": "string"
            },
            "order": {
              "description": "The order of this Sentinel Automation Rule. Possible values varies between 1 and 1000.",
              "type": "number"
            },
            "triggersOn": {
              "description": "Specifies what triggers this automation rule. Possible values are Alerts and Incidents. Defaults to Incidents.",
              "type": "string"
            },
            "triggersWhen": {
              "description": "Specifies when will this automation rule be triggered. Possible values are Created and Updated. Defaults to Created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "actionIncident": {
              "description": "One or more action_incident blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "The classification of the incident, when closing it. Possible values are: BenignPositive_SuspiciousButExpected, FalsePositive_InaccurateData, FalsePositive_IncorrectAlertLogic, TruePositive_SuspiciousActivity and Undetermined.",
                    "type": "string"
                  },
                  "classificationComment": {
                    "description": "The comment why the incident is to be closed.",
                    "type": "string"
                  },
                  "labels": {
                    "description": "Specifies a list of labels to add to the incident.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "order": {
                    "description": "The execution order of this action.",
                    "type": "number"
                  },
                  "ownerId": {
                    "description": "The object ID of the entity this incident is assigned to.",
                    "type": "string"
                  },
                  "severity": {
                    "description": "The severity to add to the incident. Possible values are High, Informational, Low and Medium.",
                    "type": "string"
                  },
                  "status": {
                    "description": "The status to set to the incident. Possible values are: Active, Closed, New.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "actionPlaybook": {
              "description": "One or more action_playbook blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "logicAppId": {
                    "description": "The ID of the Logic App that defines the playbook's logic.",
                    "type": "string"
                  },
                  "order": {
                    "description": "The execution order of this action.",
                    "type": "number"
                  },
                  "tenantId": {
                    "description": "The ID of the Tenant that owns the playbook.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "conditionJson": {
              "description": "A JSON array of one or more condition JSON objects as is defined here.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name which should be used for this Sentinel Automation Rule.",
              "type": "string"
            },
            "enabled": {
              "description": "Whether this Sentinel Automation Rule is enabled? Defaults to true.",
              "type": "boolean"
            },
            "expiration": {
              "description": "The time in RFC3339 format of kind UTC that determines when this Automation Rule should expire and be disabled.",
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "description": "The ID of the Log Analytics Workspace where this Sentinel applies to. Changing this forces a new Sentinel Automation Rule to be created.",
              "type": "string"
            },
            "logAnalyticsWorkspaceIdRef": {
              "description": "Reference to a SentinelLogAnalyticsWorkspaceOnboarding in securityinsights to populate logAnalyticsWorkspaceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "logAnalyticsWorkspaceIdSelector": {
              "description": "Selector for a SentinelLogAnalyticsWorkspaceOnboarding in securityinsights to populate logAnalyticsWorkspaceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "The UUID which should be used for this Sentinel Automation Rule. Changing this forces a new Sentinel Automation Rule to be created.",
              "type": "string"
            },
            "order": {
              "description": "The order of this Sentinel Automation Rule. Possible values varies between 1 and 1000.",
              "type": "number"
            },
            "triggersOn": {
              "description": "Specifies what triggers this automation rule. Possible values are Alerts and Incidents. Defaults to Incidents.",
              "type": "string"
            },
            "triggersWhen": {
              "description": "Specifies when will this automation rule be triggered. Possible values are Created and Updated. Defaults to Created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.displayName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.displayName))",
          "message": "spec.forProvider.displayName is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.order) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.order))",
          "message": "spec.forProvider.order is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SentinelAutomationRuleStatus defines the observed state of SentinelAutomationRule.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "actionIncident": {
              "description": "One or more action_incident blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "classification": {
                    "description": "The classification of the incident, when closing it. Possible values are: BenignPositive_SuspiciousButExpected, FalsePositive_InaccurateData, FalsePositive_IncorrectAlertLogic, TruePositive_SuspiciousActivity and Undetermined.",
                    "type": "string"
                  },
                  "classificationComment": {
                    "description": "The comment why the incident is to be closed.",
                    "type": "string"
                  },
                  "labels": {
                    "description": "Specifies a list of labels to add to the incident.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "order": {
                    "description": "The execution order of this action.",
                    "type": "number"
                  },
                  "ownerId": {
                    "description": "The object ID of the entity this incident is assigned to.",
                    "type": "string"
                  },
                  "severity": {
                    "description": "The severity to add to the incident. Possible values are High, Informational, Low and Medium.",
                    "type": "string"
                  },
                  "status": {
                    "description": "The status to set to the incident. Possible values are: Active, Closed, New.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "actionPlaybook": {
              "description": "One or more action_playbook blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "logicAppId": {
                    "description": "The ID of the Logic App that defines the playbook's logic.",
                    "type": "string"
                  },
                  "order": {
                    "description": "The execution order of this action.",
                    "type": "number"
                  },
                  "tenantId": {
                    "description": "The ID of the Tenant that owns the playbook.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "conditionJson": {
              "description": "A JSON array of one or more condition JSON objects as is defined here.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name which should be used for this Sentinel Automation Rule.",
              "type": "string"
            },
            "enabled": {
              "description": "Whether this Sentinel Automation Rule is enabled? Defaults to true.",
              "type": "boolean"
            },
            "expiration": {
              "description": "The time in RFC3339 format of kind UTC that determines when this Automation Rule should expire and be disabled.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Sentinel Automation Rule.",
              "type": "string"
            },
            "logAnalyticsWorkspaceId": {
              "description": "The ID of the Log Analytics Workspace where this Sentinel applies to. Changing this forces a new Sentinel Automation Rule to be created.",
              "type": "string"
            },
            "name": {
              "description": "The UUID which should be used for this Sentinel Automation Rule. Changing this forces a new Sentinel Automation Rule to be created.",
              "type": "string"
            },
            "order": {
              "description": "The order of this Sentinel Automation Rule. Possible values varies between 1 and 1000.",
              "type": "number"
            },
            "triggersOn": {
              "description": "Specifies what triggers this automation rule. Possible values are Alerts and Incidents. Defaults to Incidents.",
              "type": "string"
            },
            "triggersWhen": {
              "description": "Specifies when will this automation rule be triggered. Possible values are Created and Updated. Defaults to Created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
