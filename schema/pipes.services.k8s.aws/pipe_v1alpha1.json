{
  "description": "Pipe is the Schema for the Pipes API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PipeSpec defines the desired state of Pipe.\n\nAn object that represents a pipe. Amazon EventBridgePipes connect event sources\nto targets and reduces the need for specialized knowledge and integration\ncode.",
      "type": "object",
      "required": [
        "name",
        "roleARN",
        "source",
        "target"
      ],
      "properties": {
        "description": {
          "description": "A description of the pipe.\n\nRegex Pattern: `^.*$`",
          "type": "string"
        },
        "desiredState": {
          "description": "The state the pipe should be in.",
          "type": "string"
        },
        "enrichment": {
          "description": "The ARN of the enrichment resource.\n\nRegex Pattern: `^$|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2,4}((-gov)|(-de)|(-iso([a-z]?)))?-[a-z]+(-\\d{1})?)?:(\\d{12})?:(.+)$`",
          "type": "string"
        },
        "enrichmentParameters": {
          "description": "The parameters required to set up enrichment on your pipe.",
          "type": "object",
          "properties": {
            "httpParameters": {
              "description": "These are custom parameter to be used when the target is an API Gateway REST\nAPIs or EventBridge ApiDestinations. In the latter case, these are merged\nwith any InvocationParameters specified on the Connection, with any values\nfrom the Connection taking precedence.",
              "type": "object",
              "properties": {
                "headerParameters": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "pathParameterValues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "queryStringParameters": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "inputTemplate": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "The name of the pipe.\n\nRegex Pattern: `^[\\.\\-_A-Za-z0-9]+$`",
          "type": "string"
        },
        "roleARN": {
          "description": "The ARN of the role that allows the pipe to send data to the target.\n\nRegex Pattern: `^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z0-9+=,.@\\-_/]+$`",
          "type": "string"
        },
        "source": {
          "description": "The ARN of the source resource.\n\nRegex Pattern: `^smk://(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]):[0-9]{1,5}|arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2,4}((-gov)|(-de)|(-iso([a-z]?)))?-[a-z]+(-\\d{1})?)?:(\\d{12})?:(.+)$`",
          "type": "string"
        },
        "sourceParameters": {
          "description": "The parameters required to set up a source for your pipe.",
          "type": "object",
          "properties": {
            "activeMQBrokerParameters": {
              "description": "The parameters for using an Active MQ broker as a source.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "credentials": {
                  "description": "The Secrets Manager secret that stores your broker credentials.",
                  "type": "object",
                  "properties": {
                    "basicAuth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "maximumBatchingWindowInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "queueName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dynamoDBStreamParameters": {
              "description": "The parameters for using a DynamoDB stream as a source.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "deadLetterConfig": {
                  "description": "A DeadLetterConfig object that contains information about a dead-letter queue\nconfiguration.",
                  "type": "object",
                  "properties": {
                    "arn": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "maximumBatchingWindowInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "maximumRecordAgeInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "maximumRetryAttempts": {
                  "type": "integer",
                  "format": "int64"
                },
                "onPartialBatchItemFailure": {
                  "type": "string"
                },
                "parallelizationFactor": {
                  "type": "integer",
                  "format": "int64"
                },
                "startingPosition": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "filterCriteria": {
              "description": "The collection of event patterns used to filter events.\n\nTo remove a filter, specify a FilterCriteria object with an empty array of\nFilter objects.\n\nFor more information, see Events and Event Patterns (https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)\nin the Amazon EventBridge User Guide.",
              "type": "object",
              "properties": {
                "filters": {
                  "type": "array",
                  "items": {
                    "description": "Filter events using an event pattern. For more information, see Events and\nEvent Patterns (https://docs.aws.amazon.com/eventbridge/latest/userguide/eventbridge-and-event-patterns.html)\nin the Amazon EventBridge User Guide.",
                    "type": "object",
                    "properties": {
                      "pattern": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "kinesisStreamParameters": {
              "description": "The parameters for using a Kinesis stream as a source.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "deadLetterConfig": {
                  "description": "A DeadLetterConfig object that contains information about a dead-letter queue\nconfiguration.",
                  "type": "object",
                  "properties": {
                    "arn": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "maximumBatchingWindowInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "maximumRecordAgeInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "maximumRetryAttempts": {
                  "type": "integer",
                  "format": "int64"
                },
                "onPartialBatchItemFailure": {
                  "type": "string"
                },
                "parallelizationFactor": {
                  "type": "integer",
                  "format": "int64"
                },
                "startingPosition": {
                  "type": "string"
                },
                "startingPositionTimestamp": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            },
            "managedStreamingKafkaParameters": {
              "description": "The parameters for using an MSK stream as a source.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "consumerGroupID": {
                  "type": "string"
                },
                "credentials": {
                  "description": "The Secrets Manager secret that stores your stream credentials.",
                  "type": "object",
                  "properties": {
                    "clientCertificateTLSAuth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    },
                    "saslSCRAM512Auth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "maximumBatchingWindowInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "startingPosition": {
                  "type": "string"
                },
                "topicName": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "rabbitMQBrokerParameters": {
              "description": "The parameters for using a Rabbit MQ broker as a source.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "credentials": {
                  "description": "The Secrets Manager secret that stores your broker credentials.",
                  "type": "object",
                  "properties": {
                    "basicAuth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "maximumBatchingWindowInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "queueName": {
                  "type": "string"
                },
                "virtualHost": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "selfManagedKafkaParameters": {
              "description": "The parameters for using a self-managed Apache Kafka stream as a source.\n\nA self managed cluster refers to any Apache Kafka cluster not hosted by Amazon\nWeb Services. This includes both clusters you manage yourself, as well as\nthose hosted by a third-party provider, such as Confluent Cloud (https://www.confluent.io/),\nCloudKarafka (https://www.cloudkarafka.com/), or Redpanda (https://redpanda.com/).\nFor more information, see Apache Kafka streams as a source (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-kafka.html)\nin the Amazon EventBridge User Guide.",
              "type": "object",
              "properties": {
                "additionalBootstrapServers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "batchSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "consumerGroupID": {
                  "type": "string"
                },
                "credentials": {
                  "description": "The Secrets Manager secret that stores your stream credentials.",
                  "type": "object",
                  "properties": {
                    "basicAuth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    },
                    "clientCertificateTLSAuth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    },
                    "saslSCRAM256Auth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    },
                    "saslSCRAM512Auth": {
                      "description": "// Optional SecretManager ARN which stores the database credentials",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "maximumBatchingWindowInSeconds": {
                  "type": "integer",
                  "format": "int64"
                },
                "serverRootCaCertificate": {
                  "description": "// Optional SecretManager ARN which stores the database credentials",
                  "type": "string"
                },
                "startingPosition": {
                  "type": "string"
                },
                "topicName": {
                  "type": "string"
                },
                "vpc": {
                  "description": "This structure specifies the VPC subnets and security groups for the stream,\nand whether a public IP address is to be used.",
                  "type": "object",
                  "properties": {
                    "securityGroup": {
                      "description": "List of SecurityGroupId.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subnets": {
                      "description": "List of SubnetId.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "sqsQueueParameters": {
              "description": "The parameters for using a Amazon SQS stream as a source.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "type": "integer",
                  "format": "int64"
                },
                "maximumBatchingWindowInSeconds": {
                  "type": "integer",
                  "format": "int64"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "tags": {
          "description": "The list of key-value pairs to associate with the pipe.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "target": {
          "description": "The ARN of the target resource.\n\nRegex Pattern: `^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-]+):([a-z]{2,4}((-gov)|(-de)|(-iso([a-z]?)))?-[a-z]+(-\\d{1})?)?:(\\d{12})?:(.+)$`",
          "type": "string"
        },
        "targetParameters": {
          "description": "The parameters required to set up a target for your pipe.\n\nFor more information about pipe target parameters, including how to use dynamic\npath parameters, see Target parameters (https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-target.html)\nin the Amazon EventBridge User Guide.",
          "type": "object",
          "properties": {
            "batchJobParameters": {
              "description": "The parameters for using an Batch job as a target.",
              "type": "object",
              "properties": {
                "arrayProperties": {
                  "description": "The array properties for the submitted job, such as the size of the array.\nThe array size can be between 2 and 10,000. If you specify array properties\nfor a job, it becomes an array job. This parameter is used only if the target\nis an Batch job.",
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "additionalProperties": false
                },
                "containerOverrides": {
                  "description": "The overrides that are sent to a container.",
                  "type": "object",
                  "properties": {
                    "command": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "environment": {
                      "type": "array",
                      "items": {
                        "description": "The environment variables to send to the container. You can add new environment\nvariables, which are added to the container at launch, or you can override\nthe existing environment variables from the Docker image or the task definition.\n\nEnvironment variables cannot start with \"Batch\". This naming convention is\nreserved for variables that Batch sets.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "instanceType": {
                      "type": "string"
                    },
                    "resourceRequirements": {
                      "type": "array",
                      "items": {
                        "description": "The type and amount of a resource to assign to a container. The supported\nresources include GPU, MEMORY, and VCPU.",
                        "type": "object",
                        "properties": {
                          "type_": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "dependsOn": {
                  "type": "array",
                  "items": {
                    "description": "An object that represents an Batch job dependency.",
                    "type": "object",
                    "properties": {
                      "jobID": {
                        "type": "string"
                      },
                      "type_": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "jobDefinition": {
                  "type": "string"
                },
                "jobName": {
                  "type": "string"
                },
                "parameters": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "retryStrategy": {
                  "description": "The retry strategy that's associated with a job. For more information, see\nAutomated job retries (https://docs.aws.amazon.com/batch/latest/userguide/job_retries.html)\nin the Batch User Guide.",
                  "type": "object",
                  "properties": {
                    "attempts": {
                      "type": "integer",
                      "format": "int64"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cloudWatchLogsParameters": {
              "description": "The parameters for using an CloudWatch Logs log stream as a target.",
              "type": "object",
              "properties": {
                "logStreamName": {
                  "type": "string"
                },
                "timestamp": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "ecsTaskParameters": {
              "description": "The parameters for using an Amazon ECS task as a target.",
              "type": "object",
              "properties": {
                "capacityProviderStrategy": {
                  "type": "array",
                  "items": {
                    "description": "The details of a capacity provider strategy. To learn more, see CapacityProviderStrategyItem\n(https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_CapacityProviderStrategyItem.html)\nin the Amazon ECS API Reference.",
                    "type": "object",
                    "properties": {
                      "base": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "capacityProvider": {
                        "type": "string"
                      },
                      "weight": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "enableECSManagedTags": {
                  "type": "boolean"
                },
                "enableExecuteCommand": {
                  "type": "boolean"
                },
                "group": {
                  "type": "string"
                },
                "launchType": {
                  "type": "string"
                },
                "networkConfiguration": {
                  "description": "This structure specifies the network configuration for an Amazon ECS task.",
                  "type": "object",
                  "properties": {
                    "awsVPCConfiguration": {
                      "description": "This structure specifies the VPC subnets and security groups for the task,\nand whether a public IP address is to be used. This structure is relevant\nonly for ECS tasks that use the awsvpc network mode.",
                      "type": "object",
                      "properties": {
                        "assignPublicIP": {
                          "type": "string"
                        },
                        "securityGroups": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "subnets": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "overrides": {
                  "description": "The overrides that are associated with a task.",
                  "type": "object",
                  "properties": {
                    "containerOverrides": {
                      "type": "array",
                      "items": {
                        "description": "The overrides that are sent to a container. An empty container override can\nbe passed in. An example of an empty container override is {\"containerOverrides\":\n[ ] }. If a non-empty container override is specified, the name parameter\nmust be included.",
                        "type": "object",
                        "properties": {
                          "command": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "cpu": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "environment": {
                            "type": "array",
                            "items": {
                              "description": "The environment variables to send to the container. You can add new environment\nvariables, which are added to the container at launch, or you can override\nthe existing environment variables from the Docker image or the task definition.\nYou must also specify a container name.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "environmentFiles": {
                            "type": "array",
                            "items": {
                              "description": "A list of files containing the environment variables to pass to a container.\nYou can specify up to ten environment files. The file must have a .env file\nextension. Each line in an environment file should contain an environment\nvariable in VARIABLE=VALUE format. Lines beginning with # are treated as\ncomments and are ignored. For more information about the environment variable\nfile syntax, see Declare default environment variables in file (https://docs.docker.com/compose/env-file/).\n\nIf there are environment variables specified using the environment parameter\nin a container definition, they take precedence over the variables contained\nwithin an environment file. If multiple environment files are specified that\ncontain the same variable, they're processed from the top down. We recommend\nthat you use unique variable names. For more information, see Specifying\nenvironment variables (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/taskdef-envfiles.html)\nin the Amazon Elastic Container Service Developer Guide.\n\nThis parameter is only supported for tasks hosted on Fargate using the following\nplatform versions:\n\n   * Linux platform version 1.4.0 or later.\n\n   * Windows platform version 1.0.0 or later.",
                              "type": "object",
                              "properties": {
                                "type_": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "memory": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "memoryReservation": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          },
                          "resourceRequirements": {
                            "type": "array",
                            "items": {
                              "description": "The type and amount of a resource to assign to a container. The supported\nresource types are GPUs and Elastic Inference accelerators. For more information,\nsee Working with GPUs on Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-gpu.html)\nor Working with Amazon Elastic Inference on Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ecs-inference.html)\nin the Amazon Elastic Container Service Developer Guide",
                              "type": "object",
                              "properties": {
                                "type_": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "cpu": {
                      "type": "string"
                    },
                    "ephemeralStorage": {
                      "description": "The amount of ephemeral storage to allocate for the task. This parameter\nis used to expand the total amount of ephemeral storage available, beyond\nthe default amount, for tasks hosted on Fargate. For more information, see\nFargate task storage (https://docs.aws.amazon.com/AmazonECS/latest/userguide/using_data_volumes.html)\nin the Amazon ECS User Guide for Fargate.\n\nThis parameter is only supported for tasks hosted on Fargate using Linux\nplatform version 1.4.0 or later. This parameter is not supported for Windows\ncontainers on Fargate.",
                      "type": "object",
                      "properties": {
                        "sizeInGiB": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    },
                    "executionRoleARN": {
                      "type": "string"
                    },
                    "inferenceAcceleratorOverrides": {
                      "type": "array",
                      "items": {
                        "description": "Details on an Elastic Inference accelerator task override. This parameter\nis used to override the Elastic Inference accelerator specified in the task\ndefinition. For more information, see Working with Amazon Elastic Inference\non Amazon ECS (https://docs.aws.amazon.com/AmazonECS/latest/userguide/ecs-inference.html)\nin the Amazon Elastic Container Service Developer Guide.",
                        "type": "object",
                        "properties": {
                          "deviceName": {
                            "type": "string"
                          },
                          "deviceType": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "memory": {
                      "type": "string"
                    },
                    "taskRoleARN": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "placementConstraints": {
                  "type": "array",
                  "items": {
                    "description": "An object representing a constraint on task placement. To learn more, see\nTask Placement Constraints (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-constraints.html)\nin the Amazon Elastic Container Service Developer Guide.",
                    "type": "object",
                    "properties": {
                      "expression": {
                        "type": "string"
                      },
                      "type_": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "placementStrategy": {
                  "type": "array",
                  "items": {
                    "description": "The task placement strategy for a task or service. To learn more, see Task\nPlacement Strategies (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html)\nin the Amazon Elastic Container Service Service Developer Guide.",
                    "type": "object",
                    "properties": {
                      "field": {
                        "type": "string"
                      },
                      "type_": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "platformVersion": {
                  "type": "string"
                },
                "propagateTags": {
                  "type": "string"
                },
                "referenceID": {
                  "type": "string"
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "description": "A key-value pair associated with an Amazon Web Services resource. In EventBridge,\nrules and event buses support tagging.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "taskCount": {
                  "type": "integer",
                  "format": "int64"
                },
                "taskDefinitionARN": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "eventBridgeEventBusParameters": {
              "description": "The parameters for using an EventBridge event bus as a target.",
              "type": "object",
              "properties": {
                "detailType": {
                  "type": "string"
                },
                "endpointID": {
                  "type": "string"
                },
                "resources": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "source": {
                  "type": "string"
                },
                "time": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "httpParameters": {
              "description": "These are custom parameter to be used when the target is an API Gateway REST\nAPIs or EventBridge ApiDestinations.",
              "type": "object",
              "properties": {
                "headerParameters": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "pathParameterValues": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "queryStringParameters": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "inputTemplate": {
              "type": "string"
            },
            "kinesisStreamParameters": {
              "description": "The parameters for using a Kinesis stream as a target.",
              "type": "object",
              "properties": {
                "partitionKey": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "lambdaFunctionParameters": {
              "description": "The parameters for using a Lambda function as a target.",
              "type": "object",
              "properties": {
                "invocationType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "redshiftDataParameters": {
              "description": "These are custom parameters to be used when the target is a Amazon Redshift\ncluster to invoke the Amazon Redshift Data API BatchExecuteStatement.",
              "type": "object",
              "properties": {
                "database": {
                  "description": "// Redshift Database",
                  "type": "string"
                },
                "dbUser": {
                  "description": "// Database user name",
                  "type": "string"
                },
                "secretManagerARN": {
                  "description": "// For targets, can either specify an ARN or a jsonpath pointing to the ARN.",
                  "type": "string"
                },
                "sqls": {
                  "description": "// A list of SQLs.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "statementName": {
                  "description": "// A name for Redshift DataAPI statement which can be used as filter of//\nListStatement.",
                  "type": "string"
                },
                "withEvent": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "sageMakerPipelineParameters": {
              "description": "The parameters for using a SageMaker pipeline as a target.",
              "type": "object",
              "properties": {
                "pipelineParameterList": {
                  "type": "array",
                  "items": {
                    "description": "Name/Value pair of a parameter to start execution of a SageMaker Model Building\nPipeline.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "value": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "sqsQueueParameters": {
              "description": "The parameters for using a Amazon SQS stream as a target.",
              "type": "object",
              "properties": {
                "messageDeduplicationID": {
                  "type": "string"
                },
                "messageGroupID": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "stepFunctionStateMachineParameters": {
              "description": "The parameters for using a Step Functions state machine as a target.",
              "type": "object",
              "properties": {
                "invocationType": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PipeStatus defines the observed state of Pipe",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "creationTime": {
          "description": "The time the pipe was created.",
          "type": "string",
          "format": "date-time"
        },
        "currentState": {
          "description": "The state the pipe is in.",
          "type": "string"
        },
        "lastModifiedTime": {
          "description": "When the pipe was last updated, in ISO-8601 format (https://www.w3.org/TR/NOTE-datetime)\n(YYYY-MM-DDThh:mm:ss.sTZD).",
          "type": "string",
          "format": "date-time"
        },
        "stateReason": {
          "description": "The reason the pipe is in its current state.\n\nRegex Pattern: `^.*$`",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
