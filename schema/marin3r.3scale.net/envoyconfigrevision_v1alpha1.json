{
  "description": "EnvoyConfigRevision is an internal resource that stores a specific version of an EnvoyConfig\nresource. EnvoyConfigRevisions are automatically created and deleted by the EnvoyConfig\ncontroller and are not intended to be directly used. Use EnvoyConfig objects instead.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "EnvoyConfigRevisionSpec defines the desired state of EnvoyConfigRevision",
      "type": "object",
      "required": [
        "nodeID",
        "version"
      ],
      "properties": {
        "envoyAPI": {
          "description": "EnvoyAPI is the version of envoy's API to use. Defaults to v3.",
          "type": "string",
          "enum": [
            "v3"
          ]
        },
        "envoyResources": {
          "description": "EnvoyResources holds the different types of resources suported by the envoy discovery service",
          "type": "object",
          "properties": {
            "clusters": {
              "description": "Clusters is a list of the envoy Cluster resource type.\nAPI V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/cluster/v3/cluster.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy\nresource",
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource.\nDEPRECATED: this field has no effect and will be removed in an\nupcoming release. The name of the resources for discovery purposes\nis included in the resource itself. Refer to the envoy API reference\nto check how the name is specified for each resource type.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "endpoints": {
              "description": "Endpoints is a list of the envoy ClusterLoadAssignment resource type.\nAPI V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/endpoint/v3/endpoint.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy\nresource",
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource.\nDEPRECATED: this field has no effect and will be removed in an\nupcoming release. The name of the resources for discovery purposes\nis included in the resource itself. Refer to the envoy API reference\nto check how the name is specified for each resource type.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "extensionConfigs": {
              "description": "ExtensionConfigs is a list of the envoy ExtensionConfig resource type\nAPI V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/extension.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy\nresource",
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource.\nDEPRECATED: this field has no effect and will be removed in an\nupcoming release. The name of the resources for discovery purposes\nis included in the resource itself. Refer to the envoy API reference\nto check how the name is specified for each resource type.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "listeners": {
              "description": "Listeners is a list of the envoy Listener resource type.\nAPI V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/listener/v3/listener.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy\nresource",
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource.\nDEPRECATED: this field has no effect and will be removed in an\nupcoming release. The name of the resources for discovery purposes\nis included in the resource itself. Refer to the envoy API reference\nto check how the name is specified for each resource type.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "routes": {
              "description": "Routes is a list of the envoy Route resource type.\nAPI V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/route.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy\nresource",
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource.\nDEPRECATED: this field has no effect and will be removed in an\nupcoming release. The name of the resources for discovery purposes\nis included in the resource itself. Refer to the envoy API reference\nto check how the name is specified for each resource type.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "runtimes": {
              "description": "Runtimes is a list of the envoy Runtime resource type.\nAPI V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/service/runtime/v3/rtds.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy\nresource",
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource.\nDEPRECATED: this field has no effect and will be removed in an\nupcoming release. The name of the resources for discovery purposes\nis included in the resource itself. Refer to the envoy API reference\nto check how the name is specified for each resource type.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "scopedRoutes": {
              "description": "ScopedRoutes is a list of the envoy ScopeRoute resource type.\nAPI V3 reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/route/v3/scoped_route.proto",
              "type": "array",
              "items": {
                "description": "EnvoyResource holds serialized representation of an envoy\nresource",
                "type": "object",
                "required": [
                  "value"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy resource.\nDEPRECATED: this field has no effect and will be removed in an\nupcoming release. The name of the resources for discovery purposes\nis included in the resource itself. Refer to the envoy API reference\nto check how the name is specified for each resource type.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the serialized representation of the envoy resource",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "secrets": {
              "description": "Secrets is a list of references to Kubernetes Secret objects.",
              "type": "array",
              "items": {
                "description": "EnvoySecretResource holds a reference to a k8s Secret from where\nto take a secret from. Only Secrets within the same namespace can\nbe referred.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the envoy tslCerticate secret resource. The certificate will be fetched\nfrom a Kubernetes Secrets of type 'kubernetes.io/tls' with this same name.",
                    "type": "string"
                  },
                  "ref": {
                    "description": "DEPRECATED: this field is deprecated and it's value will be ignored. The 'name' of the\nKubernetes Secret must match the 'name' field.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "name is unique within a namespace to reference a secret resource.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "namespace defines the space within which the secret name must be unique.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "nodeID": {
          "description": "NodeID holds the envoy identifier for the discovery service to know which set\nof resources to send to each of the envoy clients that connect to it.",
          "type": "string"
        },
        "resources": {
          "description": "Resources holds the different types of resources suported by the envoy discovery service",
          "type": "array",
          "items": {
            "description": "Resource holds serialized representation of an envoy\nresource",
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "blueprint": {
                "description": "Blueprint specifies a template to generate a configuration proto. It is currently\nonly supported to generate secret configuration resources from k8s Secrets",
                "type": "string",
                "enum": [
                  "tlsCertificate",
                  "validationContext"
                ]
              },
              "generateFromEndpointSlices": {
                "description": "Specifies a label selector to watch for EndpointSlices that will\nbe used to generate the endpoint resource",
                "type": "object",
                "required": [
                  "clusterName",
                  "selector",
                  "targetPort"
                ],
                "properties": {
                  "clusterName": {
                    "type": "string"
                  },
                  "selector": {
                    "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
                    "type": "object",
                    "properties": {
                      "matchExpressions": {
                        "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                        "type": "array",
                        "items": {
                          "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                          "type": "object",
                          "required": [
                            "key",
                            "operator"
                          ],
                          "properties": {
                            "key": {
                              "description": "key is the label key that the selector applies to.",
                              "type": "string"
                            },
                            "operator": {
                              "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                              "type": "string"
                            },
                            "values": {
                              "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "x-kubernetes-list-type": "atomic"
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-type": "atomic"
                      },
                      "matchLabels": {
                        "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false,
                    "x-kubernetes-map-type": "atomic"
                  },
                  "targetPort": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "generateFromOpaqueSecret": {
                "description": "The name of a Kubernetes Secret of type \"Opaque\". It will generate an\nenvoy \"generic secret\" proto.",
                "type": "object",
                "required": [
                  "alias",
                  "key",
                  "name"
                ],
                "properties": {
                  "alias": {
                    "description": "A unique name to refer to the name:key combination",
                    "type": "string"
                  },
                  "key": {
                    "description": "The key of the secret to select from.  Must be a valid secret key.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the secret in the pod's namespace to select from.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "generateFromTlsSecret": {
                "description": "The name of a Kubernetes Secret of type \"kubernetes.io/tls\"",
                "type": "string"
              },
              "type": {
                "description": "Type is the type url for the protobuf message",
                "type": "string",
                "enum": [
                  "listener",
                  "route",
                  "scopedRoute",
                  "cluster",
                  "endpoint",
                  "secret",
                  "runtime",
                  "extensionConfig"
                ]
              },
              "value": {
                "description": "Value is the protobufer message that configures the resource. The proto\nmust match the envoy configuration API v3 specification for the given resource\ntype (https://www.envoyproxy.io/docs/envoy/latest/api-docs/xds_protocol#resource-types)",
                "type": "object",
                "x-kubernetes-preserve-unknown-fields": true
              }
            },
            "additionalProperties": false
          }
        },
        "serialization": {
          "description": "Serialization specicifies the serialization format used to describe the resources. \"json\" and \"yaml\"\nare supported. \"json\" is used if unset.",
          "type": "string",
          "enum": [
            "json",
            "b64json",
            "yaml"
          ]
        },
        "version": {
          "description": "Version is a hash of the EnvoyResources field",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "EnvoyConfigRevisionStatus defines the observed state of EnvoyConfigRevision",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of an object's state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "lastPublishedAt": {
          "description": "LastPublishedAt indicates the last time this config review transitioned to\npublished",
          "type": "string",
          "format": "date-time"
        },
        "providesVersions": {
          "description": "ProvidesVersions keeps track of the version that this revision\npublishes in the xDS server for each resource type",
          "type": "object",
          "properties": {
            "clusters": {
              "type": "string"
            },
            "endpoints": {
              "type": "string"
            },
            "extensionConfigs": {
              "type": "string"
            },
            "listeners": {
              "type": "string"
            },
            "routes": {
              "type": "string"
            },
            "runtimes": {
              "type": "string"
            },
            "scopedRoutes": {
              "type": "string"
            },
            "secrets": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "published": {
          "description": "Published signals if the EnvoyConfigRevision is the one currently published\nin the xds server cache",
          "type": "boolean"
        },
        "tainted": {
          "description": "Tainted indicates whether the EnvoyConfigRevision is eligible for publishing\nor not",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
