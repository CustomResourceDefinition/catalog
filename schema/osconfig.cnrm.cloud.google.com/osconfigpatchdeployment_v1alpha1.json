{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "instanceFilter",
        "patchDeploymentId",
        "projectRef"
      ],
      "properties": {
        "description": {
          "description": "Immutable. Description of the patch deployment. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "duration": {
          "description": "Immutable. Duration of the patch. After the duration ends, the patch times out.\nA duration in seconds with up to nine fractional digits, terminated by 's'. Example: \"3.5s\".",
          "type": "string"
        },
        "instanceFilter": {
          "description": "Immutable. VM instances to patch.",
          "type": "object",
          "properties": {
            "all": {
              "description": "Immutable. Target all VM instances in the project. If true, no other criteria is permitted.",
              "type": "boolean"
            },
            "groupLabels": {
              "description": "Immutable. Targets VM instances matching ANY of these GroupLabels. This allows targeting of disparate groups of VM instances.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "labels"
                ],
                "properties": {
                  "labels": {
                    "description": "Immutable. Compute Engine instance labels that must be present for a VM instance to be targeted by this filter.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "instanceNamePrefixes": {
              "description": "Immutable. Targets VMs whose name starts with one of these prefixes. Similar to labels, this is another way to group\nVMs when targeting configs, for example prefix=\"prod-\".",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "instances": {
              "description": "Immutable. Targets any of the VM instances specified. Instances are specified by their URI in the 'form zones/{{zone}}/instances/{{instance_name}}',\n'projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}', or\n'https://www.googleapis.com/compute/v1/projects/{{project_id}}/zones/{{zone}}/instances/{{instance_name}}'.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "zones": {
              "description": "Immutable. Targets VM instances in ANY of these zones. Leave empty to target VM instances in any zone.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "oneTimeSchedule": {
          "description": "Immutable. Schedule a one-time execution.",
          "type": "object",
          "required": [
            "executeTime"
          ],
          "properties": {
            "executeTime": {
              "description": "Immutable. The desired patch job execution time. A timestamp in RFC3339 UTC \"Zulu\" format,\naccurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "patchConfig": {
          "description": "Immutable. Patch configuration that is applied.",
          "type": "object",
          "properties": {
            "apt": {
              "description": "Immutable. Apt update settings. Use this setting to override the default apt patch rules.",
              "type": "object",
              "properties": {
                "excludes": {
                  "description": "Immutable. List of packages to exclude from update. These packages will be excluded.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclusivePackages": {
                  "description": "Immutable. An exclusive list of packages to be updated. These are the only packages that will be updated.\nIf these packages are not installed, they will be ignored. This field cannot be specified with\nany other patch configuration fields.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Immutable. By changing the type to DIST, the patching is performed using apt-get dist-upgrade instead. Possible values: [\"DIST\", \"UPGRADE\"].",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "goo": {
              "description": "Immutable. goo update settings. Use this setting to override the default goo patch rules.",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "enabled": {
                  "description": "Immutable. goo update settings. Use this setting to override the default goo patch rules.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "migInstancesAllowed": {
              "description": "Immutable. Allows the patch job to run on Managed instance groups (MIGs).",
              "type": "boolean"
            },
            "postStep": {
              "description": "Immutable. The ExecStep to run after the patch update.",
              "type": "object",
              "properties": {
                "linuxExecStepConfig": {
                  "description": "Immutable. The ExecStepConfig for all Linux VMs targeted by the PatchJob.",
                  "type": "object",
                  "properties": {
                    "allowedSuccessCodes": {
                      "description": "Immutable. Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "gcsObject": {
                      "description": "Immutable. A Cloud Storage object containing the executable.",
                      "type": "object",
                      "required": [
                        "bucket",
                        "generationNumber",
                        "object"
                      ],
                      "properties": {
                        "bucket": {
                          "description": "Immutable. Bucket of the Cloud Storage object.",
                          "type": "string"
                        },
                        "generationNumber": {
                          "description": "Immutable. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                          "type": "string"
                        },
                        "object": {
                          "description": "Immutable. Name of the Cloud Storage object.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "interpreter": {
                      "description": "Immutable. The script interpreter to use to run the script. If no interpreter is specified the script will\nbe executed directly, which will likely only succeed for scripts with shebang lines. Possible values: [\"SHELL\", \"POWERSHELL\"].",
                      "type": "string"
                    },
                    "localPath": {
                      "description": "Immutable. An absolute path to the executable on the VM.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "windowsExecStepConfig": {
                  "description": "Immutable. The ExecStepConfig for all Windows VMs targeted by the PatchJob.",
                  "type": "object",
                  "properties": {
                    "allowedSuccessCodes": {
                      "description": "Immutable. Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "gcsObject": {
                      "description": "Immutable. A Cloud Storage object containing the executable.",
                      "type": "object",
                      "required": [
                        "bucket",
                        "generationNumber",
                        "object"
                      ],
                      "properties": {
                        "bucket": {
                          "description": "Immutable. Bucket of the Cloud Storage object.",
                          "type": "string"
                        },
                        "generationNumber": {
                          "description": "Immutable. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                          "type": "string"
                        },
                        "object": {
                          "description": "Immutable. Name of the Cloud Storage object.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "interpreter": {
                      "description": "Immutable. The script interpreter to use to run the script. If no interpreter is specified the script will\nbe executed directly, which will likely only succeed for scripts with shebang lines. Possible values: [\"SHELL\", \"POWERSHELL\"].",
                      "type": "string"
                    },
                    "localPath": {
                      "description": "Immutable. An absolute path to the executable on the VM.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "preStep": {
              "description": "Immutable. The ExecStep to run before the patch update.",
              "type": "object",
              "properties": {
                "linuxExecStepConfig": {
                  "description": "Immutable. The ExecStepConfig for all Linux VMs targeted by the PatchJob.",
                  "type": "object",
                  "properties": {
                    "allowedSuccessCodes": {
                      "description": "Immutable. Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "gcsObject": {
                      "description": "Immutable. A Cloud Storage object containing the executable.",
                      "type": "object",
                      "required": [
                        "bucket",
                        "generationNumber",
                        "object"
                      ],
                      "properties": {
                        "bucket": {
                          "description": "Immutable. Bucket of the Cloud Storage object.",
                          "type": "string"
                        },
                        "generationNumber": {
                          "description": "Immutable. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                          "type": "string"
                        },
                        "object": {
                          "description": "Immutable. Name of the Cloud Storage object.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "interpreter": {
                      "description": "Immutable. The script interpreter to use to run the script. If no interpreter is specified the script will\nbe executed directly, which will likely only succeed for scripts with shebang lines. Possible values: [\"SHELL\", \"POWERSHELL\"].",
                      "type": "string"
                    },
                    "localPath": {
                      "description": "Immutable. An absolute path to the executable on the VM.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "windowsExecStepConfig": {
                  "description": "Immutable. The ExecStepConfig for all Windows VMs targeted by the PatchJob.",
                  "type": "object",
                  "properties": {
                    "allowedSuccessCodes": {
                      "description": "Immutable. Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "gcsObject": {
                      "description": "Immutable. A Cloud Storage object containing the executable.",
                      "type": "object",
                      "required": [
                        "bucket",
                        "generationNumber",
                        "object"
                      ],
                      "properties": {
                        "bucket": {
                          "description": "Immutable. Bucket of the Cloud Storage object.",
                          "type": "string"
                        },
                        "generationNumber": {
                          "description": "Immutable. Generation number of the Cloud Storage object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
                          "type": "string"
                        },
                        "object": {
                          "description": "Immutable. Name of the Cloud Storage object.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "interpreter": {
                      "description": "Immutable. The script interpreter to use to run the script. If no interpreter is specified the script will\nbe executed directly, which will likely only succeed for scripts with shebang lines. Possible values: [\"SHELL\", \"POWERSHELL\"].",
                      "type": "string"
                    },
                    "localPath": {
                      "description": "Immutable. An absolute path to the executable on the VM.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "rebootConfig": {
              "description": "Immutable. Post-patch reboot settings. Possible values: [\"DEFAULT\", \"ALWAYS\", \"NEVER\"].",
              "type": "string"
            },
            "windowsUpdate": {
              "description": "Immutable. Windows update settings. Use this setting to override the default Windows patch rules.",
              "type": "object",
              "properties": {
                "classifications": {
                  "description": "Immutable. Only apply updates of these windows update classifications. If empty, all updates are applied. Possible values: [\"CRITICAL\", \"SECURITY\", \"DEFINITION\", \"DRIVER\", \"FEATURE_PACK\", \"SERVICE_PACK\", \"TOOL\", \"UPDATE_ROLLUP\", \"UPDATE\"].",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "excludes": {
                  "description": "Immutable. List of KBs to exclude from update.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclusivePatches": {
                  "description": "Immutable. An exclusive list of kbs to be updated. These are the only patches that will be updated.\nThis field must not be used with other patch configurations.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "yum": {
              "description": "Immutable. Yum update settings. Use this setting to override the default yum patch rules.",
              "type": "object",
              "properties": {
                "excludes": {
                  "description": "Immutable. List of packages to exclude from update. These packages will be excluded.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclusivePackages": {
                  "description": "Immutable. An exclusive list of packages to be updated. These are the only packages that will be updated.\nIf these packages are not installed, they will be ignored. This field cannot be specified with\nany other patch configuration fields.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "minimal": {
                  "description": "Immutable. Will cause patch to run yum update-minimal instead.",
                  "type": "boolean"
                },
                "security": {
                  "description": "Immutable. Adds the --security flag to yum update. Not supported on all platforms.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "zypper": {
              "description": "Immutable. zypper update settings. Use this setting to override the default zypper patch rules.",
              "type": "object",
              "properties": {
                "categories": {
                  "description": "Immutable. Install only patches with these categories. Common categories include security, recommended, and feature.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "excludes": {
                  "description": "Immutable. List of packages to exclude from update.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "exclusivePatches": {
                  "description": "Immutable. An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command.\nThis field must not be used with any other patch configuration fields.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "severities": {
                  "description": "Immutable. Install only patches with these severities. Common severities include critical, important, moderate, and low.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "withOptional": {
                  "description": "Immutable. Adds the --with-optional flag to zypper patch.",
                  "type": "boolean"
                },
                "withUpdate": {
                  "description": "Immutable. Adds the --with-update flag, to zypper patch.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "patchDeploymentId": {
          "description": "Immutable. A name for the patch deployment in the project. When creating a name the following rules apply:\n* Must contain only lowercase letters, numbers, and hyphens.\n* Must start with a letter.\n* Must be between 1-63 characters.\n* Must end with a number or a letter.\n* Must be unique within the project.",
          "type": "string"
        },
        "projectRef": {
          "description": "The project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "Allowed value: The `name` field of a `Project` resource.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "recurringSchedule": {
          "description": "Immutable. Schedule recurring executions.",
          "type": "object",
          "required": [
            "timeOfDay",
            "timeZone"
          ],
          "properties": {
            "endTime": {
              "description": "Immutable. The end time at which a recurring patch deployment schedule is no longer active.\nA timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
              "type": "string"
            },
            "lastExecuteTime": {
              "description": "The time the last patch job ran successfully.\nA timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
              "type": "string"
            },
            "monthly": {
              "description": "Immutable. Schedule with monthly executions.",
              "type": "object",
              "properties": {
                "monthDay": {
                  "description": "Immutable. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month.\nMonths without the target day will be skipped. For example, a schedule to run \"every month on the 31st\"\nwill not run in February, April, June, etc.",
                  "type": "integer"
                },
                "weekDayOfMonth": {
                  "description": "Immutable. Week day in a month.",
                  "type": "object",
                  "required": [
                    "dayOfWeek",
                    "weekOrdinal"
                  ],
                  "properties": {
                    "dayOfWeek": {
                      "description": "Immutable. A day of the week. Possible values: [\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\"].",
                      "type": "string"
                    },
                    "weekOrdinal": {
                      "description": "Immutable. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.",
                      "type": "integer"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "nextExecuteTime": {
              "description": "The time the next patch job is scheduled to run.\nA timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
              "type": "string"
            },
            "startTime": {
              "description": "Immutable. The time that the recurring schedule becomes effective. Defaults to createTime of the patch deployment.\nA timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
              "type": "string"
            },
            "timeOfDay": {
              "description": "Immutable. Time of the day to run a recurring deployment.",
              "type": "object",
              "properties": {
                "hours": {
                  "description": "Immutable. Hours of day in 24 hour format. Should be from 0 to 23.\nAn API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
                  "type": "integer"
                },
                "minutes": {
                  "description": "Immutable. Minutes of hour of day. Must be from 0 to 59.",
                  "type": "integer"
                },
                "nanos": {
                  "description": "Immutable. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
                  "type": "integer"
                },
                "seconds": {
                  "description": "Immutable. Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "timeZone": {
              "description": "Immutable. Defines the time zone that timeOfDay is relative to. The rules for daylight saving time are\ndetermined by the chosen time zone.",
              "type": "object",
              "required": [
                "id"
              ],
              "properties": {
                "id": {
                  "description": "Immutable. IANA Time Zone Database time zone, e.g. \"America/New_York\".",
                  "type": "string"
                },
                "version": {
                  "description": "Immutable. IANA Time Zone Database version number, e.g. \"2019a\".",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "weekly": {
              "description": "Immutable. Schedule with weekly executions.",
              "type": "object",
              "required": [
                "dayOfWeek"
              ],
              "properties": {
                "dayOfWeek": {
                  "description": "Immutable. IANA Time Zone Database time zone, e.g. \"America/New_York\". Possible values: [\"MONDAY\", \"TUESDAY\", \"WEDNESDAY\", \"THURSDAY\", \"FRIDAY\", \"SATURDAY\", \"SUNDAY\"].",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.",
          "type": "string"
        },
        "rollout": {
          "description": "Immutable. Rollout strategy of the patch job.",
          "type": "object",
          "required": [
            "disruptionBudget",
            "mode"
          ],
          "properties": {
            "disruptionBudget": {
              "description": "Immutable. The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up.\nDuring patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps.\nA VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget.\nFor zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone.\nFor example, if the disruption budget has a fixed value of 10, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.",
              "type": "object",
              "properties": {
                "fixed": {
                  "description": "Immutable. Specifies a fixed value.",
                  "type": "integer"
                },
                "percentage": {
                  "description": "Immutable. Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "mode": {
              "description": "Immutable. Mode of the patch rollout. Possible values: [\"ZONE_BY_ZONE\", \"CONCURRENT_ZONES\"].",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "createTime": {
          "description": "Time the patch deployment was created. Timestamp is in RFC3339 text format.\nA timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "type": "string"
        },
        "lastExecuteTime": {
          "description": "The last time a patch job was started by this deployment. Timestamp is in RFC3339 text format.\nA timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "type": "string"
        },
        "name": {
          "description": "Unique name for the patch deployment resource in a project.\nThe patch deployment name is in the form: projects/{project_id}/patchDeployments/{patchDeploymentId}.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer"
        },
        "updateTime": {
          "description": "Time the patch deployment was last updated. Timestamp is in RFC3339 text format.\nA timestamp in RFC3339 UTC \"Zulu\" format, accurate to nanoseconds. Example: \"2014-10-02T15:01:23.045123456Z\".",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
