{
  "description": "CPCHealthCheck is the Schema for the CPCHealthChecks API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CPCHealthCheckSpec defines the desired state of CPCHealthCheck",
      "type": "object",
      "required": [
        "k8sClusterRef"
      ],
      "properties": {
        "k8sClusterRef": {
          "description": "k8sClusterRef references to kubernetes clusters where the healthcheck will be performed for.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the referenced CR",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "namespace": {
              "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CPCHealthCheckStatus defines the observed state of CPCHealthCheck",
      "type": "object",
      "properties": {
        "agent": {
          "description": "agent is the status for CPC Agent.",
          "type": "object",
          "properties": {
            "conditions": {
              "description": "conditions specify the latest available observations of the current state.",
              "type": "array",
              "items": {
                "description": "Condition represents the latest available observations of the current state.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "lastTransitionTime": {
                    "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTime": {
                    "description": "lastUpdateTime shows the last time the condition was evaluated.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "description": "message shows a human-readable message with details about the transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "reason shows the reason for the last transition of the condition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                    "type": "string"
                  },
                  "type": {
                    "description": "type shows the condition type.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-map-keys": [
                "type"
              ],
              "x-kubernetes-list-type": "map"
            },
            "health": {
              "description": "health is the health status of CPC Agent.",
              "type": "object",
              "properties": {
                "conditions": {
                  "description": "conditions specify the latest available observations for health check state.",
                  "type": "array",
                  "items": {
                    "description": "Condition represents the latest available observations of the current state.",
                    "type": "object",
                    "required": [
                      "type"
                    ],
                    "properties": {
                      "lastTransitionTime": {
                        "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "lastUpdateTime": {
                        "description": "lastUpdateTime shows the last time the condition was evaluated.",
                        "type": "string",
                        "format": "date-time"
                      },
                      "message": {
                        "description": "message shows a human-readable message with details about the transition.",
                        "type": "string"
                      },
                      "reason": {
                        "description": "reason shows the reason for the last transition of the condition.",
                        "type": "string"
                      },
                      "status": {
                        "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                        "type": "string"
                      },
                      "type": {
                        "description": "type shows the condition type.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "type"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "state": {
                  "type": "string",
                  "minLength": 1,
                  "enum": [
                    "Running",
                    "Down"
                  ]
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "id is the ID of the CPC Agent.",
              "type": "string"
            },
            "kubeConfigInfo": {
              "description": "kubeConfigInfo is the kube config information used by agent running in Remote mode to communicate with Control Plane Kubernetes cluster.",
              "type": "object",
              "properties": {
                "certificateInfo": {
                  "description": "certificateInfo contains status for the agent certificate.",
                  "type": "object",
                  "properties": {
                    "issuer": {
                      "description": "issuer is the issuer of the certificate.",
                      "type": "string"
                    },
                    "sanList": {
                      "description": "sanList is the list of Subject Alternative Names for the certificate.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "subject": {
                      "description": "subject is the name of the person or entity to whom the certificate is being issued. This field can also include the certificate recipient's organization, organization unit, locality, state or province, and country or region.",
                      "type": "string"
                    },
                    "validDuration": {
                      "description": "validDuration is the valid duration for the certificate.",
                      "type": "object",
                      "properties": {
                        "notAfter": {
                          "description": "notAfter means the certificate is not valid after this time.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "notBefore": {
                          "description": "notBefore means the certificate is not valid before this time.",
                          "type": "string",
                          "format": "date-time"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "cluster": {
                  "description": "cluster is the name of the cluster for this context",
                  "type": "string"
                },
                "currentContext": {
                  "description": "currentContext is the current context for the  kube config file",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace is the default namespace to use on unspecified requests",
                  "type": "string"
                },
                "server": {
                  "description": "Server is the address of the kubernetes cluster (https://hostname:port).",
                  "type": "string"
                },
                "user": {
                  "description": "user is the name of the authInfo for this context",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "lastHeartBeatTime": {
              "description": "lastHeartBeatTime shows the last time the health was evaluated.",
              "type": "string",
              "format": "date-time"
            },
            "mode": {
              "description": "mode specifies the mode of CPC Agent.",
              "type": "string",
              "enum": [
                "Local",
                "Remote"
              ]
            },
            "probePolicy": {
              "description": "probePolicy defines the policy for agent probe. If it is not configured, it will use the default values.",
              "type": "object",
              "properties": {
                "failureThreshold": {
                  "description": "failureThreshold is the minimum consecutive failures for the probe to be considered failed. The default value is `3`.",
                  "type": "integer",
                  "format": "int32",
                  "default": 3,
                  "minimum": 3
                },
                "periodInSeconds": {
                  "description": "periodInSeconds specifies how often (in seconds) to perform the agent probe. The default value is 5 seconds",
                  "type": "integer",
                  "format": "int32",
                  "default": 5
                },
                "successThreshold": {
                  "description": "successThreshold is the minimum consecutive successes for the probe to be considered successful after having failed. The default values is `3`.",
                  "type": "integer",
                  "format": "int32",
                  "default": 3,
                  "minimum": 3
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "confluentOperator": {
          "description": "confluentOperator is the status for the confluent operator in the target kubernetes cluster.",
          "type": "object",
          "properties": {
            "conditions": {
              "description": "conditions specify the latest available observations of the current state.",
              "type": "array",
              "items": {
                "description": "Condition represents the latest available observations of the current state.",
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "lastTransitionTime": {
                    "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastUpdateTime": {
                    "description": "lastUpdateTime shows the last time the condition was evaluated.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "description": "message shows a human-readable message with details about the transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "reason shows the reason for the last transition of the condition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                    "type": "string"
                  },
                  "type": {
                    "description": "type shows the condition type.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-list-map-keys": [
                "type"
              ],
              "x-kubernetes-list-type": "map"
            }
          },
          "additionalProperties": false
        },
        "envoyProxy": {
          "description": "envoyProxy is the status for the envoy proxydeployment.",
          "type": "object"
        },
        "spireAgent": {
          "description": "spireAgent is the status for the spire agent deployment.",
          "type": "object"
        },
        "spireServer": {
          "description": "spireServer is the status for the spire server deployment.",
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  }
}
