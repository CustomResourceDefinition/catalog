{
  "description": "CertificateStoreConfig is the Schema for the CertificateStoreConfigs API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CertificateStoreConfigSpec defines the desired state of CertificateStoreConfig",
      "type": "object",
      "required": [
        "sourceType"
      ],
      "properties": {
        "certManager": {
          "description": "certManager configures certManager as the manager and source of certificates.",
          "type": "object"
        },
        "kubernetes": {
          "description": "kubernetes configures kubernetes as the certificate store source.",
          "type": "object",
          "required": [
            "secret",
            "type"
          ],
          "properties": {
            "secret": {
              "description": "secret configures the kubernetes store to use secret.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the referenced CR",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "namespace": {
                  "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "type denotes the type used for kubernetes store.",
              "type": "string",
              "allOf": [
                {
                  "enum": [
                    "secret"
                  ]
                },
                {
                  "enum": [
                    "secret"
                  ]
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "sourceType": {
          "description": "sourceType configures the type of certificate store",
          "type": "string",
          "allOf": [
            {
              "enum": [
                "kubernetes"
              ]
            },
            {
              "enum": [
                "kubernetes"
              ]
            }
          ]
        },
        "spireAgent": {
          "description": "spireAgent configures spireAgent as the manager and source of certificates.",
          "type": "object"
        },
        "vault": {
          "description": "vault configures vault as the certificate store source.",
          "type": "object",
          "required": [
            "autoRoll",
            "mountPath"
          ],
          "properties": {
            "autoRoll": {
              "description": "autoRoll configures if updates to data will trigger clusters that use the data.",
              "type": "boolean"
            },
            "mountPath": {
              "description": "mountPath denotes the path where data is mounted.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CertificateStoreConfigStatus defines the observed state of CertificateStoreConfig",
      "type": "object",
      "properties": {
        "certificateInfo": {
          "description": "certificateInfo specifies the certificate information.",
          "type": "object",
          "properties": {
            "isCA": {
              "description": "isCA specifies whether this certificateStoreConfig has the CA key pair.",
              "type": "boolean"
            },
            "isValid": {
              "description": "isValid specifies whether the certificate in the storeConfig is valid.",
              "type": "boolean"
            },
            "issuer": {
              "description": "issuer is the issuer of the certificate.",
              "type": "string"
            },
            "sanList": {
              "description": "sanList is the list of Subject Alternative Names for the certificate.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "subject": {
              "description": "subject is the name of the person or entity to whom the certificate is being issued. This field can also include the certificate recipient's organization, organization unit, locality, state or province, and country or region.",
              "type": "string"
            },
            "validDuration": {
              "description": "validDuration is the valid duration for the certificate.",
              "type": "object",
              "properties": {
                "notAfter": {
                  "description": "notAfter means the certificate is not valid after this time.",
                  "type": "string",
                  "format": "date-time"
                },
                "notBefore": {
                  "description": "notBefore means the certificate is not valid before this time.",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "kubernetes": {
          "description": "kubernetes reflects the status of the kubernetes source.",
          "type": "object",
          "properties": {
            "name": {
              "description": "name is the namespaced name of the kubernetes store resource.",
              "type": "string"
            },
            "type": {
              "description": "type is the kubernetes store type.",
              "type": "string",
              "enum": [
                "secret"
              ]
            }
          },
          "additionalProperties": false
        },
        "phase": {
          "description": "phase describes the state of the CertificateStoreConfig.",
          "type": "string",
          "default": "Unknown"
        },
        "sourceType": {
          "description": "sourceType reflects the type of certificateStore source",
          "type": "string",
          "enum": [
            "kubernetes"
          ]
        },
        "vault": {
          "description": "vault reflects the status of the vault source.",
          "type": "object",
          "required": [
            "autoRoll",
            "mountPath"
          ],
          "properties": {
            "autoRoll": {
              "description": "autoRoll configures if updates to data will trigger clusters that use the data.",
              "type": "boolean"
            },
            "mountPath": {
              "description": "mountPath denotes the path where data is mounted.",
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
