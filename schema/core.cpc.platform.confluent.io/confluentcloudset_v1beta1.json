{
  "description": "ConfluentCloudSet is the Schema for the ConfluentCloudSets API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ConfluentCloudSetSpec defines the desired state of ConfluentCloudSet",
      "type": "object",
      "required": [
        "clientConfigs",
        "environmentName",
        "region",
        "serviceAccount",
        "type",
        "zones"
      ],
      "properties": {
        "clientConfigs": {
          "description": "clientConfigs configures clients to clusters in confluent cloud.",
          "type": "object",
          "properties": {
            "connector": {
              "description": "connector configures a client for a confluent cloud connector.",
              "type": "object",
              "required": [
                "clusterID",
                "name",
                "url"
              ],
              "properties": {
                "authentication": {
                  "description": "credentialStoreConfigRef configures credentials to connect to the cluster.",
                  "type": "object",
                  "required": [
                    "basic",
                    "type"
                  ],
                  "properties": {
                    "basic": {
                      "description": "Basic specifies basic authentication configuration.",
                      "type": "object",
                      "required": [
                        "blueprint",
                        "providerType"
                      ],
                      "properties": {
                        "blueprint": {
                          "description": "blueprintKey defines the key at the blueprint layer and cannot be overridden by deployments. This key will be used by all the deployments using this blueprint",
                          "type": "object",
                          "required": [
                            "credentialStoreRef"
                          ],
                          "properties": {
                            "credentialStoreRef": {
                              "description": "credentialStoreRef specifies the key in the credential store",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "key defines the name of the key in secret the CredentialStoreConfigRef refers to",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "name defines the name of the CredentialStoreConfigRef",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "providerType": {
                          "description": "providerType defines the provider for the Credential. Valid options are `blueprint`",
                          "type": "string",
                          "allOf": [
                            {
                              "enum": [
                                "deployment",
                                "blueprint"
                              ]
                            },
                            {
                              "enum": [
                                "blueprint"
                              ]
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "type defines the authentication method. Valid options are `basic`.",
                      "type": "string",
                      "enum": [
                        "basic"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "clusterID": {
                  "description": "clusterId is the ID of the cluster.",
                  "type": "string",
                  "minLength": 1
                },
                "name": {
                  "description": "name is the name of the cluster connected to.",
                  "type": "string",
                  "minLength": 1
                },
                "url": {
                  "description": "url is the external endpoint of the cluster.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            },
            "kafka": {
              "description": "kafka configures a client for a confluent cloud kafka cluster.",
              "type": "object",
              "required": [
                "cluster",
                "restAPI"
              ],
              "properties": {
                "cluster": {
                  "description": "cluster configures a client for a confluent cloud kafka cluster",
                  "type": "object",
                  "required": [
                    "bootstrapEndpoint",
                    "clusterID",
                    "name"
                  ],
                  "properties": {
                    "authentication": {
                      "description": "authentication configures the confluent cloud kafka authentication.",
                      "type": "object",
                      "required": [
                        "type"
                      ],
                      "properties": {
                        "plain": {
                          "description": "plain configures plain auth for confluent cloud kafka authentication.",
                          "type": "object",
                          "required": [
                            "blueprint",
                            "providerType"
                          ],
                          "properties": {
                            "blueprint": {
                              "description": "blueprintKey defines the key at the blueprint layer and cannot be overridden by deployments. This key will be used by all the deployments using this blueprint",
                              "type": "object",
                              "required": [
                                "credentialStoreRef"
                              ],
                              "properties": {
                                "credentialStoreRef": {
                                  "description": "credentialStoreRef specifies the key in the credential store",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "key defines the name of the key in secret the CredentialStoreConfigRef refers to",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "name defines the name of the CredentialStoreConfigRef",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "providerType": {
                              "description": "providerType defines the provider for the Credential. Valid options are `blueprint`",
                              "type": "string",
                              "allOf": [
                                {
                                  "enum": [
                                    "deployment",
                                    "blueprint"
                                  ]
                                },
                                {
                                  "enum": [
                                    "blueprint"
                                  ]
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "type defines the type of ccloud kafka authentication.",
                          "type": "string",
                          "minLength": 1,
                          "enum": [
                            "plain"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "bootstrapEndpoint": {
                      "description": "bootstrapEndpointList is a list of endpoints for the kafkacluster.",
                      "type": "string",
                      "minLength": 1
                    },
                    "clusterID": {
                      "description": "clusterId is the ID of the cluster.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name": {
                      "description": "name is the name of the cluster connected to.",
                      "type": "string",
                      "minLength": 1
                    },
                    "tls": {
                      "description": "tls configures the confluent cloud kafka tls.",
                      "type": "object",
                      "required": [
                        "enabled"
                      ],
                      "properties": {
                        "enabled": {
                          "description": "enabled specifies if tls is required.",
                          "type": "boolean",
                          "default": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "restAPI": {
                  "description": "restAPI configures a client for a confluent cloud kafka rest API.",
                  "type": "object",
                  "required": [
                    "url"
                  ],
                  "properties": {
                    "authentication": {
                      "description": "credentialStoreConfigRef configures credentials to connect to the cluster.",
                      "type": "object",
                      "required": [
                        "basic",
                        "type"
                      ],
                      "properties": {
                        "basic": {
                          "description": "Basic specifies basic authentication configuration.",
                          "type": "object",
                          "required": [
                            "blueprint",
                            "providerType"
                          ],
                          "properties": {
                            "blueprint": {
                              "description": "blueprintKey defines the key at the blueprint layer and cannot be overridden by deployments. This key will be used by all the deployments using this blueprint",
                              "type": "object",
                              "required": [
                                "credentialStoreRef"
                              ],
                              "properties": {
                                "credentialStoreRef": {
                                  "description": "credentialStoreRef specifies the key in the credential store",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "key defines the name of the key in secret the CredentialStoreConfigRef refers to",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "name defines the name of the CredentialStoreConfigRef",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "additionalProperties": false
                            },
                            "providerType": {
                              "description": "providerType defines the provider for the Credential. Valid options are `blueprint`",
                              "type": "string",
                              "allOf": [
                                {
                                  "enum": [
                                    "deployment",
                                    "blueprint"
                                  ]
                                },
                                {
                                  "enum": [
                                    "blueprint"
                                  ]
                                }
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "type": {
                          "description": "type defines the authentication method. Valid options are `basic`.",
                          "type": "string",
                          "enum": [
                            "basic"
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "url": {
                      "description": "url is the url of the kafka Rest API endpoint.",
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "ksqlApps": {
              "description": "ksqlApps configures a cloud ksqlApps client.",
              "type": "object",
              "required": [
                "clusterID",
                "name",
                "url"
              ],
              "properties": {
                "authentication": {
                  "description": "credentialStoreConfigRef configures credentials to connect to the cluster.",
                  "type": "object",
                  "required": [
                    "basic",
                    "type"
                  ],
                  "properties": {
                    "basic": {
                      "description": "Basic specifies basic authentication configuration.",
                      "type": "object",
                      "required": [
                        "blueprint",
                        "providerType"
                      ],
                      "properties": {
                        "blueprint": {
                          "description": "blueprintKey defines the key at the blueprint layer and cannot be overridden by deployments. This key will be used by all the deployments using this blueprint",
                          "type": "object",
                          "required": [
                            "credentialStoreRef"
                          ],
                          "properties": {
                            "credentialStoreRef": {
                              "description": "credentialStoreRef specifies the key in the credential store",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "key defines the name of the key in secret the CredentialStoreConfigRef refers to",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "name defines the name of the CredentialStoreConfigRef",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "providerType": {
                          "description": "providerType defines the provider for the Credential. Valid options are `blueprint`",
                          "type": "string",
                          "allOf": [
                            {
                              "enum": [
                                "deployment",
                                "blueprint"
                              ]
                            },
                            {
                              "enum": [
                                "blueprint"
                              ]
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "type defines the authentication method. Valid options are `basic`.",
                      "type": "string",
                      "enum": [
                        "basic"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "clusterID": {
                  "description": "clusterId is the ID of the cluster.",
                  "type": "string",
                  "minLength": 1
                },
                "name": {
                  "description": "name is the name of the cluster connected to.",
                  "type": "string",
                  "minLength": 1
                },
                "url": {
                  "description": "url is the external endpoint of the cluster.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            },
            "schemaRegistry": {
              "description": "schemaRegistry configures a client for a confluent cloud schemaRegistry cluster.",
              "type": "object",
              "required": [
                "clusterID",
                "name",
                "url"
              ],
              "properties": {
                "authentication": {
                  "description": "credentialStoreConfigRef configures credentials to connect to the cluster.",
                  "type": "object",
                  "required": [
                    "basic",
                    "type"
                  ],
                  "properties": {
                    "basic": {
                      "description": "Basic specifies basic authentication configuration.",
                      "type": "object",
                      "required": [
                        "blueprint",
                        "providerType"
                      ],
                      "properties": {
                        "blueprint": {
                          "description": "blueprintKey defines the key at the blueprint layer and cannot be overridden by deployments. This key will be used by all the deployments using this blueprint",
                          "type": "object",
                          "required": [
                            "credentialStoreRef"
                          ],
                          "properties": {
                            "credentialStoreRef": {
                              "description": "credentialStoreRef specifies the key in the credential store",
                              "type": "object",
                              "properties": {
                                "key": {
                                  "description": "key defines the name of the key in secret the CredentialStoreConfigRef refers to",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "name defines the name of the CredentialStoreConfigRef",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "providerType": {
                          "description": "providerType defines the provider for the Credential. Valid options are `blueprint`",
                          "type": "string",
                          "allOf": [
                            {
                              "enum": [
                                "deployment",
                                "blueprint"
                              ]
                            },
                            {
                              "enum": [
                                "blueprint"
                              ]
                            }
                          ]
                        }
                      },
                      "additionalProperties": false
                    },
                    "type": {
                      "description": "type defines the authentication method. Valid options are `basic`.",
                      "type": "string",
                      "enum": [
                        "basic"
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "clusterID": {
                  "description": "clusterId is the ID of the cluster.",
                  "type": "string",
                  "minLength": 1
                },
                "name": {
                  "description": "name is the name of the cluster connected to.",
                  "type": "string",
                  "minLength": 1
                },
                "url": {
                  "description": "url is the external endpoint of the cluster.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "credentialStoreConfigRef": {
          "description": "credentialStoreConfigRef references the CPCredentialConfig CR that manages credentials for connecting to ConfluentCloud.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of the referenced CR",
              "type": "string",
              "maxLength": 63,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            },
            "namespace": {
              "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
              "type": "string",
              "maxLength": 255,
              "minLength": 1,
              "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
            }
          },
          "additionalProperties": false
        },
        "environmentName": {
          "description": "environmentName is the name of the confluentCloud environment.",
          "type": "string",
          "minLength": 1
        },
        "region": {
          "description": "region is where the region of the ConfluentCloud cluster.",
          "type": "string",
          "minLength": 1
        },
        "serviceAccount": {
          "description": "serviceAccount is the service account used to access",
          "type": "object"
        },
        "type": {
          "description": "type configures the type of confluent cloud cluster used.",
          "type": "string",
          "minLength": 1,
          "enum": [
            "basic",
            "standard",
            "dedicated"
          ]
        },
        "zones": {
          "description": "zone describes the zone of a ConfluentCloud cluster.",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "TODO ConfluentCloudZone describes the zone of a ConfluentCloud cluster.",
            "type": "string",
            "minLength": 1,
            "enum": [
              "single"
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ConfluentCloudSetStatus defines the observed state of ConfluentCloudSet",
      "type": "object",
      "properties": {
        "kafkaClientState": {
          "description": "kafkaClientState is whether the client config for confluentCloud kafka is successful.",
          "type": "string"
        },
        "schemaRegistryClientState": {
          "description": "schemaRegistryClientState is whether the client config for confluentCloud schemaRegistry is successful.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
