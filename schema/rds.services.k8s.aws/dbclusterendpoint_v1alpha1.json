{
  "description": "DBClusterEndpoint is the Schema for the DBClusterEndpoints API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DBClusterEndpointSpec defines the desired state of DBClusterEndpoint.\n\nThis data type represents the information you need to connect to an Amazon\nAurora DB cluster. This data type is used as a response element in the following\nactions:\n\n   * CreateDBClusterEndpoint\n\n   * DescribeDBClusterEndpoints\n\n   * ModifyDBClusterEndpoint\n\n   * DeleteDBClusterEndpoint\n\nFor the data structure that represents Amazon RDS DB instance endpoints,\nsee Endpoint.",
      "type": "object",
      "required": [
        "dbClusterEndpointIdentifier"
      ],
      "properties": {
        "dbClusterEndpointIdentifier": {
          "description": "The identifier to use for the new endpoint. This parameter is stored as a\nlowercase string.",
          "type": "string"
        },
        "dbClusterIdentifier": {
          "description": "The DB cluster identifier of the DB cluster associated with the endpoint.\nThis parameter is stored as a lowercase string.",
          "type": "string"
        },
        "dbClusterIdentifierRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api",
          "type": "object",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "endpointType": {
          "description": "The type of the endpoint, one of: READER, WRITER, ANY.",
          "type": "string"
        },
        "excludedMembers": {
          "description": "List of DB instance identifiers that aren't part of the custom endpoint group.\nAll other eligible instances are reachable through the custom endpoint. This\nparameter is relevant only if the list of static members is empty.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "staticMembers": {
          "description": "List of DB instance identifiers that are part of the custom endpoint group.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "description": "The tags to be assigned to the Amazon RDS resource.",
          "type": "array",
          "items": {
            "description": "Metadata assigned to an Amazon RDS resource consisting of a key-value pair.\n\nFor more information, see Tagging Amazon RDS resources (https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Tagging.html)\nin the Amazon RDS User Guide or Tagging Amazon Aurora and Amazon RDS resources\n(https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_Tagging.html)\nin the Amazon Aurora User Guide.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DBClusterEndpointStatus defines the observed state of DBClusterEndpoint",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "dbClusterEndpointResourceIdentifier": {
          "description": "A unique system-generated identifier for an endpoint. It remains the same\nfor the whole life of the endpoint.",
          "type": "string"
        },
        "endpoint": {
          "description": "The DNS address of the endpoint.",
          "type": "string"
        },
        "status": {
          "description": "The current status of the endpoint. One of: creating, available, deleting,\ninactive, modifying. The inactive state applies to an endpoint that can't\nbe used for a certain kind of cluster, such as a writer endpoint for a read-only\nsecondary cluster in a global database.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
