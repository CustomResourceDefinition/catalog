{
  "description": "IAPSettings is the Schema for the IAPSettings API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "IAPSettingsSpec defines the desired state of IAPSettings",
      "type": "object",
      "properties": {
        "accessSettings": {
          "description": "Top level wrapper for all access related setting in IAP",
          "type": "object",
          "properties": {
            "allowedDomainsSettings": {
              "description": "Settings to configure and enable allowed domains.",
              "type": "object",
              "properties": {
                "domains": {
                  "description": "List of trusted domains.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "enable": {
                  "description": "Configuration for customers to opt in for the feature.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "corsSettings": {
              "description": "Configuration to allow cross-origin requests via IAP.",
              "type": "object",
              "properties": {
                "allowHTTPOptions": {
                  "description": "Configuration to allow HTTP OPTIONS calls to skip authorization. If undefined, IAP will not apply any special logic to OPTIONS requests.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "gcipSettings": {
              "description": "GCIP claims and endpoint configurations for 3p identity providers.",
              "type": "object",
              "properties": {
                "loginPageURI": {
                  "description": "Login page URI associated with the GCIP tenants. Typically, all resources within the same project share the same login page, though it could be overridden at the sub resource level.",
                  "type": "string"
                },
                "tenantIDs": {
                  "description": "GCIP tenant ids that are linked to the IAP resource. tenant_ids could be a string beginning with a number character to indicate authenticating with GCIP tenant flow, or in the format of _\u003cProjectNumber\u003e to indicate authenticating with GCIP agent flow. If agent flow is used, tenant_ids should only contain one single element, while for tenant flow, tenant_ids can contain multiple elements.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "oauthSettings": {
              "description": "Settings to configure IAP's OAuth behavior.",
              "type": "object",
              "properties": {
                "loginHint": {
                  "description": "Domain hint to send as hd=? parameter in OAuth request flow. Enables redirect to primary IDP by skipping Google's login screen. https://developers.google.com/identity/protocols/OpenIDConnect#hd-param Note: IAP does not verify that the id token's hd claim matches this value since access behavior is managed by IAM policies.",
                  "type": "string"
                },
                "programmaticClients": {
                  "description": "List of OAuth client IDs allowed to programmatically authenticate with IAP.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "reauthSettings": {
              "description": "Settings to configure reauthentication policies in IAP.",
              "type": "object",
              "properties": {
                "maxAge": {
                  "description": "Reauth session lifetime, how long before a user has to reauthenticate again.",
                  "type": "string"
                },
                "method": {
                  "description": "Reauth method requested.",
                  "type": "string"
                },
                "policyType": {
                  "description": "How IAP determines the effective policy in cases of hierarchial policies. Policies are merged from higher in the hierarchy to lower in the hierarchy.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "appEngineRef": {
          "description": "Project-wide App Engine service settings",
          "type": "object",
          "required": [
            "applicationRef",
            "projectRef"
          ],
          "properties": {
            "applicationRef": {
              "type": "object",
              "properties": {
                "external": {
                  "description": "Format: projects/{projects_id}/iap_web/appengine-{app_id}",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "projectRef": {
              "description": "The Project that this resource belongs to.",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "The `projectID` field of a project, when not managed by Config Connector.",
                  "type": "string"
                },
                "kind": {
                  "description": "The kind of the Project resource; optional but must be `Project` if provided.",
                  "type": "string"
                },
                "name": {
                  "description": "The `name` field of a `Project` resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `namespace` field of a `Project` resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "serviceRef": {
              "description": "Optional. If specified, settings apply to the service",
              "type": "object",
              "properties": {
                "external": {
                  "description": "Format: projects/{projects_id}/iap_web/appengine-{app_id}/service/{service_id}",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "versionRef": {
              "description": "Optional. If specified, settings apply to the version",
              "type": "object",
              "properties": {
                "external": {
                  "description": "Format: projects/{projects_id}/iap_web/appengine-{app_id}/service/{service_id}/version/{version_id}",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "applicationSettings": {
          "description": "Top level wrapper for all application related settings in IAP",
          "type": "object",
          "properties": {
            "accessDeniedPageSettings": {
              "description": "Customization for Access Denied page.",
              "type": "object",
              "properties": {
                "accessDeniedPageURI": {
                  "description": "The URI to be redirected to when access is denied.",
                  "type": "string"
                },
                "generateTroubleshootingURI": {
                  "description": "Whether to generate a troubleshooting URL on access denied events to this application.",
                  "type": "boolean"
                },
                "remediationTokenGenerationEnabled": {
                  "description": "Whether to generate remediation token on access denied events to this application.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "attributePropagationSettings": {
              "description": "Settings to configure attribute propagation.",
              "type": "object",
              "properties": {
                "enable": {
                  "description": "Whether the provided attribute propagation settings should be evaluated on user requests. If set to true, attributes returned from the expression will be propagated in the set output credentials.",
                  "type": "boolean"
                },
                "expression": {
                  "description": "Raw string CEL expression. Must return a list of attributes. A maximum of\n 45 attributes can be selected. Expressions can select different attribute\n types from `attributes`: `attributes.saml_attributes`,\n `attributes.iap_attributes`. The following functions are supported:\n\n  - filter `\u003clist\u003e.filter(\u003citer_var\u003e, \u003cpredicate\u003e)`: Returns a subset of\n  `\u003clist\u003e` where `\u003cpredicate\u003e` is true for every item.\n\n  - in `\u003cvar\u003e in \u003clist\u003e`: Returns true if `\u003clist\u003e` contains `\u003cvar\u003e`.\n\n  - selectByName `\u003clist\u003e.selectByName(\u003cstring\u003e)`: Returns the attribute\n  in\n  `\u003clist\u003e` with the given `\u003cstring\u003e` name, otherwise returns empty.\n\n  - emitAs `\u003cattribute\u003e.emitAs(\u003cstring\u003e)`: Sets the `\u003cattribute\u003e` name\n  field to the given `\u003cstring\u003e` for propagation in selected output\n  credentials.\n\n  - strict `\u003cattribute\u003e.strict()`: Ignores the `x-goog-iap-attr-` prefix\n  for the provided `\u003cattribute\u003e` when propagating with the `HEADER` output\n  credential, such as request headers.\n\n  - append `\u003ctarget_list\u003e.append(\u003cattribute\u003e)` OR\n  `\u003ctarget_list\u003e.append(\u003clist\u003e)`: Appends the provided `\u003cattribute\u003e` or\n  `\u003clist\u003e` to the end of `\u003ctarget_list\u003e`.\n\n Example expression: `attributes.saml_attributes.filter(x, x.name in\n ['test']).append(attributes.iap_attributes.selectByName('exact').emitAs('custom').strict())`",
                  "type": "string"
                },
                "outputCredentials": {
                  "description": "Which output credentials attributes selected by the CEL expression should be propagated in. All attributes will be fully duplicated in each selected output credential.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "additionalProperties": false
            },
            "cookieDomain": {
              "description": "The Domain value to set for cookies generated by IAP. This value is not validated by the API, but will be ignored at runtime if invalid.",
              "type": "string"
            },
            "csmSettings": {
              "description": "Settings to configure IAP's behavior for a service mesh.",
              "type": "object",
              "properties": {
                "rctokenAud": {
                  "description": "Audience claim set in the generated RCToken. This value is not validated by IAP.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "computeServiceRef": {
          "description": "Project-wide Compute service settings",
          "type": "object",
          "required": [
            "projectRef"
          ],
          "properties": {
            "projectRef": {
              "description": "The Project that this resource belongs to.",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "The `projectID` field of a project, when not managed by Config Connector.",
                  "type": "string"
                },
                "kind": {
                  "description": "The kind of the Project resource; optional but must be `Project` if provided.",
                  "type": "string"
                },
                "name": {
                  "description": "The `name` field of a `Project` resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `namespace` field of a `Project` resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Optional. If specified, settings apply to the region",
              "type": "string"
            },
            "serviceRef": {
              "description": "Optional. If specified, settings apply to the service",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "The value of an externally managed ComputeBackendService resource.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of a ComputeBackendService resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The namespace of a ComputeBackendService resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "folderRef": {
          "description": "Folder-level settings",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The 'name' field of a folder, when not managed by Config Connector. This field must be set when 'name' field is not set.",
              "type": "string"
            },
            "name": {
              "description": "The 'name' field of a 'Folder' resource. This field must be set when 'external' field is not set.",
              "type": "string"
            },
            "namespace": {
              "description": "The 'namespace' field of a 'Folder' resource. If unset, the namespace is defaulted to the namespace of the referencer resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "organizationRef": {
          "description": "Organization-level settings",
          "type": "object",
          "required": [
            "external"
          ],
          "properties": {
            "external": {
              "description": "The 'name' field of an organization, when not managed by Config Connector.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "Project-level settings",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "projectWebRef": {
          "description": "Project-wide web service settings",
          "type": "object",
          "required": [
            "projectRef"
          ],
          "properties": {
            "projectRef": {
              "description": "The Project that this resource belongs to.",
              "type": "object",
              "oneOf": [
                {
                  "required": [
                    "name"
                  ],
                  "not": {
                    "required": [
                      "external"
                    ]
                  }
                },
                {
                  "required": [
                    "external"
                  ],
                  "not": {
                    "anyOf": [
                      {
                        "required": [
                          "name"
                        ]
                      },
                      {
                        "required": [
                          "namespace"
                        ]
                      }
                    ]
                  }
                }
              ],
              "properties": {
                "external": {
                  "description": "The `projectID` field of a project, when not managed by Config Connector.",
                  "type": "string"
                },
                "kind": {
                  "description": "The kind of the Project resource; optional but must be `Project` if provided.",
                  "type": "string"
                },
                "name": {
                  "description": "The `name` field of a `Project` resource.",
                  "type": "string"
                },
                "namespace": {
                  "description": "The `namespace` field of a `Project` resource.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "The IAPSettings name.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "(has(self.organizationRef) ? 1 : 0) + (has(self.folderRef) ? 1 : 0) + (has(self.projectRef) ? 1 : 0) + (has(self.projectWebRef) ? 1 : 0) + (has(self.computeServiceRef) ? 1 : 0) + (has(self.appEngineRef) ? 1 : 0) == 1",
          "message": "Exactly one parent field must be set"
        }
      ]
    },
    "status": {
      "description": "IAPSettingsStatus defines the config connector machine state of IAPSettings",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the IAPSettings resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
