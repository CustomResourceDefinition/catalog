{
  "description": "MetricStream is the Schema for the MetricStreams API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MetricStreamSpec defines the desired state of MetricStream.",
      "type": "object",
      "required": [
        "firehoseARN",
        "name",
        "outputFormat",
        "roleARN"
      ],
      "properties": {
        "excludeFilters": {
          "description": "If you specify this parameter, the stream sends metrics from all metric namespaces\nexcept for the namespaces that you specify here.\n\nYou cannot include ExcludeFilters and IncludeFilters in the same operation.",
          "type": "array",
          "items": {
            "description": "This structure contains a metric namespace and optionally, a list of metric\nnames, to either include in a metric stream or exclude from a metric stream.\n\nA metric stream's filters can include up to 1000 total names. This limit\napplies to the sum of namespace names and metric names in the filters. For\nexample, this could include 10 metric namespace filters with 99 metrics each,\nor 20 namespace filters with 49 metrics specified in each filter.",
            "type": "object",
            "properties": {
              "metricNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "namespace": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "firehoseARN": {
          "description": "The ARN of the Amazon Kinesis Data Firehose delivery stream to use for this\nmetric stream. This Amazon Kinesis Data Firehose delivery stream must already\nexist and must be in the same account as the metric stream.",
          "type": "string"
        },
        "includeFilters": {
          "description": "If you specify this parameter, the stream sends only the metrics from the\nmetric namespaces that you specify here.\n\nYou cannot include IncludeFilters and ExcludeFilters in the same operation.",
          "type": "array",
          "items": {
            "description": "This structure contains a metric namespace and optionally, a list of metric\nnames, to either include in a metric stream or exclude from a metric stream.\n\nA metric stream's filters can include up to 1000 total names. This limit\napplies to the sum of namespace names and metric names in the filters. For\nexample, this could include 10 metric namespace filters with 99 metrics each,\nor 20 namespace filters with 49 metrics specified in each filter.",
            "type": "object",
            "properties": {
              "metricNames": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "namespace": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "includeLinkedAccountsMetrics": {
          "description": "If you are creating a metric stream in a monitoring account, specify true\nto include metrics from source accounts in the metric stream.",
          "type": "boolean"
        },
        "name": {
          "description": "If you are creating a new metric stream, this is the name for the new stream.\nThe name must be different than the names of other metric streams in this\naccount and Region.\n\nIf you are updating a metric stream, specify the name of that stream here.\n\nValid characters are A-Z, a-z, 0-9, \"-\" and \"_\".",
          "type": "string"
        },
        "outputFormat": {
          "description": "The output format for the stream. Valid values are json, opentelemetry1.0,\nand opentelemetry0.7. For more information about metric stream output formats,\nsee Metric streams output formats (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch-metric-streams-formats.html).",
          "type": "string"
        },
        "roleARN": {
          "description": "The ARN of an IAM role that this metric stream will use to access Amazon\nKinesis Data Firehose resources. This IAM role must already exist and must\nbe in the same account as the metric stream. This IAM role must include the\nfollowing permissions:\n\n   * firehose:PutRecord\n\n   * firehose:PutRecordBatch",
          "type": "string"
        },
        "statisticsConfigurations": {
          "description": "By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT\nstatistics for each metric that is streamed. You can use this parameter to\nhave the metric stream also send additional statistics in the stream. This\narray can have up to 100 members.\n\nFor each entry in this array, you specify one or more metrics and the list\nof additional statistics to stream for those metrics. The additional statistics\nthat you can stream depend on the stream's OutputFormat. If the OutputFormat\nis json, you can stream any additional statistic that is supported by CloudWatch,\nlisted in CloudWatch statistics definitions (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html).\nIf the OutputFormat is opentelemetry1.0 or opentelemetry0.7, you can stream\npercentile statistics such as p95, p99.9, and so on.",
          "type": "array",
          "items": {
            "description": "By default, a metric stream always sends the MAX, MIN, SUM, and SAMPLECOUNT\nstatistics for each metric that is streamed. This structure contains information\nfor one metric that includes additional statistics in the stream. For more\ninformation about statistics, see CloudWatch, listed in CloudWatch statistics\ndefinitions (https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html.html).",
            "type": "object",
            "properties": {
              "additionalStatistics": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "includeMetrics": {
                "type": "array",
                "items": {
                  "description": "This object contains the information for one metric that is to be streamed\nwith additional statistics.",
                  "type": "object",
                  "properties": {
                    "metricName": {
                      "type": "string"
                    },
                    "namespace": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "tags": {
          "description": "A list of key-value pairs to associate with the metric stream. You can associate\nas many as 50 tags with a metric stream.\n\nTags can help you organize and categorize your resources. You can also use\nthem to scope user permissions by granting a user permission to access or\nchange only resources with certain tag values.\n\nYou can use this parameter only when you are creating a new metric stream.\nIf you are using this operation to update an existing metric stream, any\ntags you specify in this parameter are ignored. To change the tags of an\nexisting metric stream, use TagResource (https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_TagResource.html)\nor UntagResource (https://docs.aws.amazon.com/AmazonCloudWatch/latest/APIReference/API_UntagResource.html).",
          "type": "array",
          "items": {
            "description": "A key-value pair associated with a CloudWatch resource.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "MetricStreamStatus defines the observed state of MetricStream",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
