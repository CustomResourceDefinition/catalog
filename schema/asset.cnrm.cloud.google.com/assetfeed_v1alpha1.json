{
  "description": "AssetFeed is the Schema for the AssetFeed API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AssetFeedSpec defines the desired state of AssetFeed",
      "type": "object",
      "required": [
        "feedOutputConfig"
      ],
      "properties": {
        "assetNames": {
          "description": "A list of the full names of the assets to receive updates. You must specify either or both of asset_names and asset_types. Only asset updates matching specified asset_names or asset_types are exported to the feed. Example: `//compute.googleapis.com/projects/my_project_123/zones/zone1/instances/instance1`. For a list of the full names for supported asset types, see [Resource name format](/asset-inventory/docs/resource-name-format).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "assetTypes": {
          "description": "A list of types of the assets to receive updates. You must specify either\n or both of asset_names and asset_types. Only asset updates matching\n specified asset_names or asset_types are exported to the feed.\n Example: `\"compute.googleapis.com/Disk\"`\n\n For a list of all supported asset types, see\n [Supported asset types](/asset-inventory/docs/supported-asset-types).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "A condition which determines whether an asset update should be published.\n If specified, an asset will be returned only when the expression evaluates\n to true.\n When set, `expression` field in the `Expr` must be a valid [CEL expression]\n (https://github.com/google/cel-spec) on a TemporalAsset with name\n `temporal_asset`. Example: a Feed with expression (\"temporal_asset.deleted\n == true\") will only publish Asset deletions. Other fields of `Expr` are\n optional.\n\n See our [user\n guide](https://cloud.google.com/asset-inventory/docs/monitoring-asset-changes-with-condition)\n for detailed instructions.",
          "type": "object",
          "properties": {
            "description": {
              "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
              "type": "string"
            },
            "expression": {
              "description": "Textual representation of an expression in Common Expression Language syntax.",
              "type": "string"
            },
            "location": {
              "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
              "type": "string"
            },
            "title": {
              "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "contentType": {
          "description": "Asset content type. If not specified, no content but the asset name and type will be returned.",
          "type": "string"
        },
        "feedOutputConfig": {
          "description": "Required. Feed output configuration defining where the asset updates are published to.",
          "type": "object",
          "properties": {
            "pubsubDestination": {
              "description": "Destination on Pub/Sub.",
              "type": "object",
              "properties": {
                "topicRef": {
                  "description": "The name of the Pub/Sub topic to publish to. Example: `projects/PROJECT_ID/topics/TOPIC_ID`.",
                  "type": "object",
                  "oneOf": [
                    {
                      "required": [
                        "name"
                      ],
                      "not": {
                        "required": [
                          "external"
                        ]
                      }
                    },
                    {
                      "required": [
                        "external"
                      ],
                      "not": {
                        "anyOf": [
                          {
                            "required": [
                              "name"
                            ]
                          },
                          {
                            "required": [
                              "namespace"
                            ]
                          }
                        ]
                      }
                    }
                  ],
                  "properties": {
                    "external": {
                      "description": "A reference to an externally managed PubSubTopic resource. Should be in the format \"projects/{{projectID}}/topics/{{topicID}}\".",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of a PubSubTopic resource.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "The namespace of a PubSubTopic resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "folderRef": {
          "description": "FolderRef represents the Folder that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The 'name' field of a folder, when not managed by Config Connector. This field must be set when 'name' field is not set.",
              "type": "string"
            },
            "name": {
              "description": "The 'name' field of a 'Folder' resource. This field must be set when 'external' field is not set.",
              "type": "string"
            },
            "namespace": {
              "description": "The 'namespace' field of a 'Folder' resource. If unset, the namespace is defaulted to the namespace of the referencer resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "organizationRef": {
          "description": "OrganizationRef represents the Organization that this resource belongs to.",
          "type": "object",
          "required": [
            "external"
          ],
          "properties": {
            "external": {
              "description": "The 'name' field of an organization, when not managed by Config Connector.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "relationshipTypes": {
          "description": "A list of relationship types to output, for example: `INSTANCE_TO_INSTANCEGROUP`. This field should only be specified if content_type=RELATIONSHIP. * If specified: it outputs specified relationship updates on the [asset_names] or the [asset_types]. It returns an error if any of the [relationship_types] doesn't belong to the supported relationship types of the [asset_names] or [asset_types], or any of the [asset_names] or the [asset_types] doesn't belong to the source types of the [relationship_types]. * Otherwise: it outputs the supported relationships of the types of [asset_names] and [asset_types] or returns an error if any of the [asset_names] or the [asset_types] has no replationship support. See [Introduction to Cloud Asset Inventory](https://cloud.google.com/asset-inventory/docs/overview) for all supported asset types and relationship types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceID": {
          "description": "The AssetFeed name. If not given, the metadata.name will be used.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "AssetFeedStatus defines the config connector machine state of AssetFeed",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the AssetFeed resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
