{
  "description": "DatabaseCluster is the Schema for the databaseclusters API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DatabaseClusterSpec defines the desired state of DatabaseCluster.",
      "type": "object",
      "required": [
        "engine"
      ],
      "properties": {
        "allowUnsafeConfiguration": {
          "description": "AllowUnsafeConfiguration field used to ensure that the user can create configurations unfit for production use.\n\nDeprecated: AllowUnsafeConfiguration will not be supported in the future releases.",
          "type": "boolean"
        },
        "backup": {
          "description": "Backup is the backup specification",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Enabled is a flag to enable backups\nDeprecated. Please use db.spec.backup.schedules[].enabled to control each schedule separately and db.spec.backup.pitr.enabled to control PITR.",
              "type": "boolean"
            },
            "pitr": {
              "description": "PITR is the configuration of the point in time recovery",
              "type": "object",
              "required": [
                "enabled"
              ],
              "properties": {
                "backupStorageName": {
                  "description": "BackupStorageName is the name of the BackupStorage where the PITR is enabled\nThe BackupStorage must be created in the same namespace as the DatabaseCluster.",
                  "type": "string"
                },
                "enabled": {
                  "description": "Enabled is a flag to enable PITR",
                  "type": "boolean"
                },
                "uploadIntervalSec": {
                  "description": "UploadIntervalSec number of seconds between the binlogs uploads",
                  "type": "integer"
                }
              },
              "additionalProperties": false
            },
            "schedules": {
              "description": "Schedules is a list of backup schedules",
              "type": "array",
              "items": {
                "description": "BackupSchedule is the backup schedule configuration.",
                "type": "object",
                "required": [
                  "backupStorageName",
                  "enabled",
                  "name",
                  "schedule"
                ],
                "properties": {
                  "backupStorageName": {
                    "description": "BackupStorageName is the name of the BackupStorage CR that defines the\nstorage location.\nThe BackupStorage must be created in the same namespace as the DatabaseCluster.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "Enabled is a flag to enable the schedule",
                    "type": "boolean"
                  },
                  "name": {
                    "description": "Name is the name of the schedule",
                    "type": "string"
                  },
                  "retentionCopies": {
                    "description": "RetentionCopies is the number of backup copies to retain",
                    "type": "integer",
                    "format": "int32"
                  },
                  "schedule": {
                    "description": "Schedule is the cron schedule",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "dataSource": {
          "description": "DataSource defines a data source for bootstraping a new cluster",
          "type": "object",
          "properties": {
            "backupSource": {
              "description": "BackupSource is the backup source to restore from",
              "type": "object",
              "required": [
                "backupStorageName",
                "path"
              ],
              "properties": {
                "backupStorageName": {
                  "description": "BackupStorageName is the name of the BackupStorage used for backups.\nThe BackupStorage must be created in the same namespace as the DatabaseCluster.",
                  "type": "string"
                },
                "path": {
                  "description": "Path is the path to the backup file/directory.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dataImport": {
              "description": "DataImport allows importing data from an external backup source.",
              "type": "object",
              "required": [
                "dataImporterName",
                "source"
              ],
              "properties": {
                "config": {
                  "description": "Config defines the configuration for the data import job.\nThese options are specific to the DataImporter being used and must conform to\nthe schema defined in the DataImporter's .spec.config.openAPIV3Schema.",
                  "type": "object",
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "dataImporterName": {
                  "description": "DataImporterName is the data importer to use for the import.",
                  "type": "string"
                },
                "source": {
                  "description": "Source is the source of the data to import.",
                  "type": "object",
                  "required": [
                    "path"
                  ],
                  "properties": {
                    "path": {
                      "description": "Path is the path to the directory to import the data from.\nThis may be a path to a file or a directory, depending on the data importer.\nOnly absolute file paths are allowed. Leading and trailing '/' are optional.",
                      "type": "string",
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.matches('^/?([^/]+(/[^/]+)*)/?$')",
                          "message": "path must be an absolute file or directory path"
                        }
                      ]
                    },
                    "s3": {
                      "description": "S3 contains the S3 information for the data import.",
                      "type": "object",
                      "required": [
                        "bucket",
                        "credentialsSecretName",
                        "endpointURL",
                        "region"
                      ],
                      "properties": {
                        "accessKeyId": {
                          "description": "AccessKeyID allows specifying the S3 access key ID inline.\nIt is provided as a write-only input field for convenience.\nWhen this field is set, a webhook writes this value in the Secret specified by `credentialsSecretName`\nand empties this field.\nThis field is not stored in the API.",
                          "type": "string"
                        },
                        "bucket": {
                          "description": "Bucket is the name of the S3 bucket.",
                          "type": "string"
                        },
                        "credentialsSecretName": {
                          "description": "CredentialsSecreName is the reference to the secret containing the S3 credentials.\nThe Secret must contain the keys `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.",
                          "type": "string"
                        },
                        "endpointURL": {
                          "description": "EndpointURL is an endpoint URL of backup storage.",
                          "type": "string",
                          "x-kubernetes-validations": [
                            {
                              "rule": "isURL(self)",
                              "message": "endpointURL must be a valid URL"
                            }
                          ]
                        },
                        "forcePathStyle": {
                          "description": "ForcePathStyle is set to use path-style URLs.\nIf unspecified, the default value is false.",
                          "type": "boolean",
                          "default": false
                        },
                        "region": {
                          "description": "Region is the region of the S3 bucket.",
                          "type": "string"
                        },
                        "secretAccessKey": {
                          "description": "SecretAccessKey allows specifying the S3 secret access key inline.\nIt is provided as a write-only input field for convenience.\nWhen this field is set, a webhook writes this value in the Secret specified by `credentialsSecretName`\nand empties this field.\nThis field is not stored in the API.",
                          "type": "string"
                        },
                        "verifyTLS": {
                          "description": "VerifyTLS is set to ensure TLS/SSL verification.\nIf unspecified, the default value is true.",
                          "type": "boolean",
                          "default": true
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false,
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": ".spec.dataSource.dataImport is immutable"
                }
              ]
            },
            "dbClusterBackupName": {
              "description": "DBClusterBackupName is the name of the DB cluster backup to restore from",
              "type": "string"
            },
            "pitr": {
              "description": "PITR is the point-in-time recovery configuration",
              "type": "object",
              "properties": {
                "date": {
                  "description": "Date is the UTC date to recover to. The accepted format: \"2006-01-02T15:04:05Z\".",
                  "type": "string"
                },
                "type": {
                  "description": "Type is the type of recovery.",
                  "type": "string",
                  "default": "date",
                  "enum": [
                    "date",
                    "latest"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "engine": {
          "description": "Engine is the database engine specification",
          "type": "object",
          "required": [
            "storage",
            "type"
          ],
          "properties": {
            "config": {
              "description": "Config is the engine configuration",
              "type": "string"
            },
            "crVersion": {
              "description": "CRVersion is the desired version of the CR to use with the\nunderlying operator.\nIf unspecified, everest-operator will use the same version as the operator.\n\nNOTE: Updating this property post installation may lead to a restart of the cluster.",
              "type": "string"
            },
            "replicas": {
              "description": "Replicas is the number of engine replicas",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "resources": {
              "description": "Resources are the resource limits for each engine replica.\nIf not set, resource limits are not imposed",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "CPU is the CPU resource requirements",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "memory": {
                  "description": "Memory is the memory resource requirements",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "additionalProperties": false
            },
            "storage": {
              "description": "Storage is the engine storage configuration",
              "type": "object",
              "required": [
                "size"
              ],
              "properties": {
                "class": {
                  "description": "Class is the storage class to use for the persistent volume claim",
                  "type": "string"
                },
                "size": {
                  "description": "Size is the size of the persistent volume claim",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "Type is the engine type",
              "type": "string",
              "enum": [
                "pxc",
                "postgresql",
                "psmdb"
              ]
            },
            "userSecretsName": {
              "description": "UserSecretsName is the name of the secret containing the user secrets",
              "type": "string"
            },
            "version": {
              "description": "Version is the engine version",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "monitoring": {
          "description": "Monitoring is the monitoring configuration",
          "type": "object",
          "properties": {
            "monitoringConfigName": {
              "description": "MonitoringConfigName is the name of a monitoringConfig CR.\nThe MonitoringConfig must be created in the same namespace as the DatabaseCluster.",
              "type": "string"
            },
            "resources": {
              "description": "Resources defines resource limitations for the monitoring.",
              "type": "object",
              "properties": {
                "claims": {
                  "description": "Claims lists the names of resources, defined in spec.resourceClaims,\nthat are used by this container.\n\nThis is an alpha field and requires enabling the\nDynamicResourceAllocation feature gate.\n\nThis field is immutable. It can only be set for containers.",
                  "type": "array",
                  "items": {
                    "description": "ResourceClaim references one entry in PodSpec.ResourceClaims.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name must match the name of one entry in pod.spec.resourceClaims of\nthe Pod where this field is used. It makes that resource available\ninside a container.",
                        "type": "string"
                      },
                      "request": {
                        "description": "Request is the name chosen for a request in the referenced claim.\nIf empty, everything from the claim is made available, otherwise\nonly the result of this request.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "name"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "limits": {
                  "description": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object",
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                },
                "requests": {
                  "description": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/",
                  "type": "object",
                  "additionalProperties": {
                    "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                    "anyOf": [
                      {
                        "type": "integer"
                      },
                      {
                        "type": "string"
                      }
                    ],
                    "x-kubernetes-int-or-string": true
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "paused": {
          "description": "Paused is a flag to stop the cluster",
          "type": "boolean"
        },
        "podSchedulingPolicyName": {
          "description": "PodSchedulingPolicyName is the name of the PodSchedulingPolicy CR that defines rules for DB cluster pods allocation across the cluster.",
          "type": "string"
        },
        "proxy": {
          "description": "Proxy is the proxy specification. If not set, an appropriate\nproxy specification will be applied for the given engine. A\ncommon use case for setting this field is to control the\nexternal access to the database cluster.",
          "type": "object",
          "properties": {
            "config": {
              "description": "Config is the proxy configuration",
              "type": "string"
            },
            "expose": {
              "description": "Expose is the proxy expose configuration",
              "type": "object",
              "properties": {
                "ipSourceRanges": {
                  "description": "IPSourceRanges is the list of IP source ranges (CIDR notation)\nto allow access from. If not set, there is no limitations",
                  "type": "array",
                  "items": {
                    "description": "IPSourceRange represents IP addresses in CIDR notation or without a netmask.",
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the expose type, can be internal or external",
                  "type": "string",
                  "default": "internal",
                  "enum": [
                    "internal",
                    "external"
                  ]
                }
              },
              "additionalProperties": false
            },
            "replicas": {
              "description": "Replicas is the number of proxy replicas",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            },
            "resources": {
              "description": "Resources are the resource limits for each proxy replica.\nIf not set, resource limits are not imposed",
              "type": "object",
              "properties": {
                "cpu": {
                  "description": "CPU is the CPU resource requirements",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                },
                "memory": {
                  "description": "Memory is the memory resource requirements",
                  "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ],
                  "x-kubernetes-int-or-string": true
                }
              },
              "additionalProperties": false
            },
            "type": {
              "description": "Type is the proxy type",
              "type": "string",
              "enum": [
                "mongos",
                "haproxy",
                "proxysql",
                "pgbouncer"
              ]
            }
          },
          "additionalProperties": false
        },
        "sharding": {
          "description": "Sharding is the sharding configuration. PSMDB-only",
          "type": "object",
          "required": [
            "configServer",
            "enabled",
            "shards"
          ],
          "properties": {
            "configServer": {
              "description": "ConfigServer represents the sharding configuration server settings",
              "type": "object",
              "required": [
                "replicas"
              ],
              "properties": {
                "replicas": {
                  "description": "Replicas is the amount of configServers",
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1
                }
              },
              "additionalProperties": false
            },
            "enabled": {
              "description": "Enabled defines if the sharding is enabled",
              "type": "boolean"
            },
            "shards": {
              "description": "Shards defines the number of shards",
              "type": "integer",
              "format": "int32",
              "minimum": 1
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DatabaseClusterStatus defines the observed state of DatabaseCluster.",
      "type": "object",
      "properties": {
        "activeStorage": {
          "description": "ActiveStorage is the storage used in cluster (psmdb only)",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions contains the observed conditions of the DatabaseCluster.",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "crVersion": {
          "description": "CRVersion is the observed version of the CR used with the underlying operator.",
          "type": "string"
        },
        "dataImportJobName": {
          "description": "DataImportJobName refers to the DataImportJob that is used to import data into the cluster.\nThis is set only when .spec.dataSource.dataImport is set.",
          "type": "string"
        },
        "details": {
          "description": "Details provides full status of the upstream cluster as a plain text.",
          "type": "string"
        },
        "hostname": {
          "description": "Hostname is the hostname where the cluster can be reached",
          "type": "string"
        },
        "message": {
          "description": "Message is extra information about the cluster",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the most recent generation observed for this DatabaseCluster.",
          "type": "integer",
          "format": "int64"
        },
        "port": {
          "description": "Port is the port where the cluster can be reached",
          "type": "integer",
          "format": "int32"
        },
        "ready": {
          "description": "Ready is the number of ready pods",
          "type": "integer",
          "format": "int32"
        },
        "recommendedCRVersion": {
          "description": "RecommendedCRVersion is the recommended version of the CR to use.\nIf set, the CR needs to be updated to this version before upgrading the operator.\nIf unset, the CR is already at the recommended version.",
          "type": "string"
        },
        "size": {
          "description": "Size is the total number of pods",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Status is the status of the cluster",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
