{
  "description": "DiscoveryEngineEngine is the Schema for the DiscoveryEngineEngine API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DiscoveryEngineEngineSpec defines the desired state of DiscoveryEngineEngine",
      "type": "object",
      "required": [
        "collection",
        "displayName",
        "location",
        "projectRef",
        "solutionType"
      ],
      "properties": {
        "chatEngineConfig": {
          "description": "Configurations for the Chat Engine. Only applicable if solution_type is SOLUTION_TYPE_CHAT.",
          "type": "object",
          "properties": {
            "agentCreationConfig": {
              "description": "The configurationt generate the Dialogflow agent that is associated to\n this Engine.\n\n Note that these configurations are one-time consumed by\n and passed to Dialogflow service. It means they cannot be retrieved using\n [EngineService.GetEngine][google.cloud.discoveryengine.v1.EngineService.GetEngine]\n or\n [EngineService.ListEngines][google.cloud.discoveryengine.v1.EngineService.ListEngines]\n API after engine creation.",
              "type": "object",
              "properties": {
                "business": {
                  "description": "Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.",
                  "type": "string"
                },
                "defaultLanguageCode": {
                  "description": "Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.",
                  "type": "string"
                },
                "location": {
                  "description": "Agent location for Agent creation, supported values: global/us/eu. If not provided, us Engine will create Agent using us-central-1 by default; eu Engine will create Agent using eu-west-1 by default.",
                  "type": "string"
                },
                "timeZone": {
                  "description": "Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "dialogflowAgentToLink": {
              "description": "The resource name of an exist Dialogflow agent to link to this Chat\n Engine. Customers can either provide `agent_creation_config` to create\n agent or provide an agent name that links the agent with the Chat engine.\n\n Format: `projects/\u003cProject ID\u003e/locations/\u003cLocation ID\u003e/agents/\u003cAgent\n ID\u003e`.\n\n Note that the `dialogflow_agent_to_link` are one-time consumed by and\n passed to Dialogflow service. It means they cannot be retrieved using\n [EngineService.GetEngine][google.cloud.discoveryengine.v1.EngineService.GetEngine]\n or\n [EngineService.ListEngines][google.cloud.discoveryengine.v1.EngineService.ListEngines]\n API after engine creation. Use\n [ChatEngineMetadata.dialogflow_agent][google.cloud.discoveryengine.v1.Engine.ChatEngineMetadata.dialogflow_agent]\n for actual agent association after Engine is created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "collection": {
          "description": "Immutable. The collection for the Engine.",
          "type": "string"
        },
        "commonConfig": {
          "description": "Common config spec that specifies the metadata of the engine.",
          "type": "object",
          "properties": {
            "companyName": {
              "description": "The name of the company, business or entity that is associated with the engine. Setting this may help improve LLM related features.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "dataStoreRefs": {
          "description": "The data stores associated with this engine. For SOLUTION_TYPE_SEARCH and SOLUTION_TYPE_RECOMMENDATION type of engines, they can only associate with at most one data store. If solution_type is SOLUTION_TYPE_CHAT, multiple DataStores in the same Collection can be associated here. Note that when used in CreateEngineRequest, one DataStore must be provided as the system will use it for necessary initializations.",
          "type": "array",
          "items": {
            "description": "DiscoveryEngineDataStoreRef defines the resource reference to DiscoveryEngineDataStore, which \"External\" field holds the GCP identifier for the KRM object.",
            "type": "object",
            "oneOf": [
              {
                "required": [
                  "name"
                ],
                "not": {
                  "required": [
                    "external"
                  ]
                }
              },
              {
                "required": [
                  "external"
                ],
                "not": {
                  "anyOf": [
                    {
                      "required": [
                        "name"
                      ]
                    },
                    {
                      "required": [
                        "namespace"
                      ]
                    }
                  ]
                }
              }
            ],
            "properties": {
              "external": {
                "description": "A reference to an externally managed DiscoveryEngineDataStore resource. Should be in the format \"projects/{{projectID}}/locations/{{location}}/datastores/{{datastoreID}}\".",
                "type": "string"
              },
              "name": {
                "description": "The name of a DiscoveryEngineDataStore resource.",
                "type": "string"
              },
              "namespace": {
                "description": "The namespace of a DiscoveryEngineDataStore resource.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "disableAnalytics": {
          "description": "Optional. Whether to disable analytics for searches performed on this engine.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Required. The display name of the engine. Should be human readable. UTF-8 encoded string with limit of 1024 characters.",
          "type": "string"
        },
        "industryVertical": {
          "description": "The industry vertical that the engine registers. The restriction of the Engine industry vertical is based on DataStore: If unspecified, default to `GENERIC`. Vertical on Engine has to match vertical of the DataStore linked to the engine.",
          "type": "string"
        },
        "location": {
          "description": "Immutable. Location of the resource.",
          "type": "string"
        },
        "projectRef": {
          "description": "Immutable. The Project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "The `projectID` field of a project, when not managed by Config Connector.",
              "type": "string"
            },
            "kind": {
              "description": "The kind of the Project resource; optional but must be `Project` if provided.",
              "type": "string"
            },
            "name": {
              "description": "The `name` field of a `Project` resource.",
              "type": "string"
            },
            "namespace": {
              "description": "The `namespace` field of a `Project` resource.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "Immutable. The DiscoveryEngineChatEngine name. If not given, the metadata.name will be used.",
          "type": "string"
        },
        "searchEngineConfig": {
          "description": "Configurations for the Search Engine. Only applicable if solution_type is SOLUTION_TYPE_SEARCH.",
          "type": "object",
          "properties": {
            "searchAddOns": {
              "description": "The add-on that this search engine enables.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "searchTier": {
              "description": "The search feature tier of this engine.\n\n Different tiers might have different\n pricing. To learn more, check the pricing documentation.\n\n Defaults to\n [SearchTier.SEARCH_TIER_STANDARD][google.cloud.discoveryengine.v1.SearchTier.SEARCH_TIER_STANDARD]\n if not specified.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "solutionType": {
          "description": "Required. The solutions of the engine.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "DiscoveryEngineEngineStatus defines the config connector machine state of DiscoveryEngineEngine",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of the object's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "externalRef": {
          "description": "A unique specifier for the DiscoveryEngineEngine resource in GCP.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer",
          "format": "int64"
        },
        "observedState": {
          "description": "ObservedState is the state of the resource as most recently observed in GCP.",
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  }
}
