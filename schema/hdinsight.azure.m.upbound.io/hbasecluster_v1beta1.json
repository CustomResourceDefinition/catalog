{
  "description": "HBaseCluster is the Schema for the HBaseClusters API. Manages a HDInsight HBase Cluster.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "HBaseClusterSpec defines the desired state of HBaseCluster",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "clusterVersion": {
              "description": "Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "componentVersion": {
              "description": "A component_version block as defined below.",
              "type": "object",
              "properties": {
                "hbase": {
                  "description": "The version of HBase which should be used for this HDInsight HBase Cluster. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "computeIsolation": {
              "description": "A compute_isolation block as defined below.",
              "type": "object",
              "properties": {
                "computeIsolationEnabled": {
                  "description": "This field indicates whether enable compute isolation or not. Possible values are true or false.",
                  "type": "boolean"
                },
                "hostSku": {
                  "description": "The name of the host SKU.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "diskEncryption": {
              "description": "One or more disk_encryption block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "encryptionAlgorithm": {
                    "description": "This is an algorithm identifier for encryption. Possible values are RSA1_5, RSA-OAEP, RSA-OAEP-256.",
                    "type": "string"
                  },
                  "encryptionAtHostEnabled": {
                    "description": "This is indicator to show whether resource disk encryption is enabled.",
                    "type": "boolean"
                  },
                  "keyVaultKeyId": {
                    "description": "The ID of the key vault key.",
                    "type": "string"
                  },
                  "keyVaultManagedIdentityId": {
                    "description": "This is the resource ID of Managed Identity used to access the key vault.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "extension": {
              "description": "An extension block as defined below.",
              "type": "object",
              "properties": {
                "logAnalyticsWorkspaceId": {
                  "description": "The workspace ID of the log analytics extension.",
                  "type": "string"
                },
                "primaryKeySecretRef": {
                  "description": "The workspace key of the log analytics extension.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "gateway": {
              "description": "A gateway block as defined below.",
              "type": "object",
              "properties": {
                "passwordSecretRef": {
                  "description": "The password used for the Ambari Portal.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "username": {
                  "description": "The username used for the Ambari Portal. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "metastores": {
              "description": "A metastores block as defined below.",
              "type": "object",
              "properties": {
                "ambari": {
                  "description": "An ambari block as defined below.",
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "hive": {
                  "description": "A hive block as defined below.",
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "oozie": {
                  "description": "An oozie block as defined below.",
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "monitor": {
              "description": "A monitor block as defined below.",
              "type": "object",
              "properties": {
                "logAnalyticsWorkspaceId": {
                  "description": "The Operations Management Suite (OMS) workspace ID.",
                  "type": "string"
                },
                "primaryKeySecretRef": {
                  "description": "The Operations Management Suite (OMS) workspace key.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "network": {
              "description": "A network block as defined below.",
              "type": "object",
              "properties": {
                "connectionDirection": {
                  "description": "The direction of the resource provider connection. Possible values include Inbound or Outbound. Defaults to Inbound. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "privateLinkEnabled": {
                  "description": "Is the private link enabled? Possible values include true or false. Defaults to false. Changing this forces a new resource to be created.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "privateLinkConfiguration": {
              "description": "A private_link_configuration block as defined below.",
              "type": "object",
              "properties": {
                "groupId": {
                  "description": "The ID of the private link service group.",
                  "type": "string"
                },
                "ipConfiguration": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the script action.",
                      "type": "string"
                    },
                    "primary": {
                      "description": "Indicates whether this IP configuration is primary.",
                      "type": "boolean"
                    },
                    "privateIpAddress": {
                      "description": "The private IP address of the IP configuration.",
                      "type": "string"
                    },
                    "privateIpAllocationMethod": {
                      "description": "The private IP allocation method. The only possible value now is Dynamic.",
                      "type": "string"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "name": {
                  "description": "The name of the private link configuration.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "roles": {
              "description": "A roles block as defined below.",
              "type": "object",
              "properties": {
                "headNode": {
                  "description": "A head_node block as defined above.",
                  "type": "object",
                  "properties": {
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "workerNode": {
                  "description": "A worker_node block as defined below.",
                  "type": "object",
                  "properties": {
                    "autoscale": {
                      "description": "A autoscale block as defined below.",
                      "type": "object",
                      "properties": {
                        "recurrence": {
                          "description": "A recurrence block as defined below.",
                          "type": "object",
                          "properties": {
                            "schedule": {
                              "description": "A list of schedule blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "days": {
                                    "description": "The days of the week to perform autoscale. Possible values are Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "targetInstanceCount": {
                                    "description": "The number of instances which should be run for the Worker Nodes.",
                                    "type": "number"
                                  },
                                  "time": {
                                    "description": "The time of day to perform the autoscale in 24hour format.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "timezone": {
                              "description": "The time zone for the autoscale schedule times.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "targetInstanceCount": {
                      "description": "The number of instances which should be run for the Worker Nodes.",
                      "type": "number"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "zookeeperNode": {
                  "description": "A zookeeper_node block as defined below.",
                  "type": "object",
                  "properties": {
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "securityProfile": {
              "description": "A security_profile block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "aaddsResourceId": {
                  "description": "The resource ID of the Azure Active Directory Domain Service. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "clusterUsersGroupDns": {
                  "description": "A list of the distinguished names for the cluster user groups. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "domainName": {
                  "description": "The name of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "domainUserPasswordSecretRef": {
                  "description": "The user password of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "domainUsername": {
                  "description": "The username of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "ldapsUrls": {
                  "description": "A list of the LDAPS URLs to communicate with the Azure Active Directory. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "msiResourceId": {
                  "description": "The User Assigned Identity for the HDInsight Cluster. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "storageAccount": {
              "description": "One or more storage_account block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isDefault": {
                    "description": "Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "storageAccountKeySecretRef": {
                    "description": "The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "storageContainerId": {
                    "description": "The ID of the Storage Container. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "storageContainerIdRef": {
                    "description": "Reference to a Container in storage to populate storageContainerId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "storageContainerIdSelector": {
                    "description": "Selector for a Container in storage to populate storageContainerId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "namespace": {
                        "description": "Namespace for the selector",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "storageResourceId": {
                    "description": "The ID of the Storage Account. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccountGen2": {
              "description": "A storage_account_gen2 block as defined below.",
              "type": "object",
              "properties": {
                "filesystemId": {
                  "description": "The ID of the Gen2 Filesystem. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "isDefault": {
                  "description": "Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.",
                  "type": "boolean"
                },
                "managedIdentityResourceId": {
                  "description": "The ID of Managed Identity to use for accessing the Gen2 filesystem. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "storageResourceId": {
                  "description": "The ID of the Storage Account. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A map of Tags which should be assigned to this HDInsight HBase Cluster.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tier": {
              "description": "Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are Standard or Premium. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tlsMinVersion": {
              "description": "The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "clusterVersion": {
              "description": "Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "componentVersion": {
              "description": "A component_version block as defined below.",
              "type": "object",
              "properties": {
                "hbase": {
                  "description": "The version of HBase which should be used for this HDInsight HBase Cluster. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "computeIsolation": {
              "description": "A compute_isolation block as defined below.",
              "type": "object",
              "properties": {
                "computeIsolationEnabled": {
                  "description": "This field indicates whether enable compute isolation or not. Possible values are true or false.",
                  "type": "boolean"
                },
                "hostSku": {
                  "description": "The name of the host SKU.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "diskEncryption": {
              "description": "One or more disk_encryption block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "encryptionAlgorithm": {
                    "description": "This is an algorithm identifier for encryption. Possible values are RSA1_5, RSA-OAEP, RSA-OAEP-256.",
                    "type": "string"
                  },
                  "encryptionAtHostEnabled": {
                    "description": "This is indicator to show whether resource disk encryption is enabled.",
                    "type": "boolean"
                  },
                  "keyVaultKeyId": {
                    "description": "The ID of the key vault key.",
                    "type": "string"
                  },
                  "keyVaultManagedIdentityId": {
                    "description": "This is the resource ID of Managed Identity used to access the key vault.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "extension": {
              "description": "An extension block as defined below.",
              "type": "object",
              "required": [
                "primaryKeySecretRef"
              ],
              "properties": {
                "logAnalyticsWorkspaceId": {
                  "description": "The workspace ID of the log analytics extension.",
                  "type": "string"
                },
                "primaryKeySecretRef": {
                  "description": "The workspace key of the log analytics extension.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "gateway": {
              "description": "A gateway block as defined below.",
              "type": "object",
              "required": [
                "passwordSecretRef"
              ],
              "properties": {
                "passwordSecretRef": {
                  "description": "The password used for the Ambari Portal.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "username": {
                  "description": "The username used for the Ambari Portal. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "metastores": {
              "description": "A metastores block as defined below.",
              "type": "object",
              "properties": {
                "ambari": {
                  "description": "An ambari block as defined below.",
                  "type": "object",
                  "required": [
                    "passwordSecretRef"
                  ],
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "hive": {
                  "description": "A hive block as defined below.",
                  "type": "object",
                  "required": [
                    "passwordSecretRef"
                  ],
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "oozie": {
                  "description": "An oozie block as defined below.",
                  "type": "object",
                  "required": [
                    "passwordSecretRef"
                  ],
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "monitor": {
              "description": "A monitor block as defined below.",
              "type": "object",
              "required": [
                "primaryKeySecretRef"
              ],
              "properties": {
                "logAnalyticsWorkspaceId": {
                  "description": "The Operations Management Suite (OMS) workspace ID.",
                  "type": "string"
                },
                "primaryKeySecretRef": {
                  "description": "The Operations Management Suite (OMS) workspace key.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "network": {
              "description": "A network block as defined below.",
              "type": "object",
              "properties": {
                "connectionDirection": {
                  "description": "The direction of the resource provider connection. Possible values include Inbound or Outbound. Defaults to Inbound. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "privateLinkEnabled": {
                  "description": "Is the private link enabled? Possible values include true or false. Defaults to false. Changing this forces a new resource to be created.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "privateLinkConfiguration": {
              "description": "A private_link_configuration block as defined below.",
              "type": "object",
              "properties": {
                "groupId": {
                  "description": "The ID of the private link service group.",
                  "type": "string"
                },
                "ipConfiguration": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the script action.",
                      "type": "string"
                    },
                    "primary": {
                      "description": "Indicates whether this IP configuration is primary.",
                      "type": "boolean"
                    },
                    "privateIpAddress": {
                      "description": "The private IP address of the IP configuration.",
                      "type": "string"
                    },
                    "privateIpAllocationMethod": {
                      "description": "The private IP allocation method. The only possible value now is Dynamic.",
                      "type": "string"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "name": {
                  "description": "The name of the private link configuration.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "roles": {
              "description": "A roles block as defined below.",
              "type": "object",
              "properties": {
                "headNode": {
                  "description": "A head_node block as defined above.",
                  "type": "object",
                  "properties": {
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "workerNode": {
                  "description": "A worker_node block as defined below.",
                  "type": "object",
                  "properties": {
                    "autoscale": {
                      "description": "A autoscale block as defined below.",
                      "type": "object",
                      "properties": {
                        "recurrence": {
                          "description": "A recurrence block as defined below.",
                          "type": "object",
                          "properties": {
                            "schedule": {
                              "description": "A list of schedule blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "days": {
                                    "description": "The days of the week to perform autoscale. Possible values are Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "targetInstanceCount": {
                                    "description": "The number of instances which should be run for the Worker Nodes.",
                                    "type": "number"
                                  },
                                  "time": {
                                    "description": "The time of day to perform the autoscale in 24hour format.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "timezone": {
                              "description": "The time zone for the autoscale schedule times.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "targetInstanceCount": {
                      "description": "The number of instances which should be run for the Worker Nodes.",
                      "type": "number"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "zookeeperNode": {
                  "description": "A zookeeper_node block as defined below.",
                  "type": "object",
                  "properties": {
                    "passwordSecretRef": {
                      "description": "The Password associated with the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "object",
                      "required": [
                        "key",
                        "name"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the secret.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "subnetIdRef": {
                      "description": "Reference to a Subnet in network to populate subnetId.",
                      "type": "object",
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "name": {
                          "description": "Name of the referenced object.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace of the referenced object",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for referencing.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "subnetIdSelector": {
                      "description": "Selector for a Subnet in network to populate subnetId.",
                      "type": "object",
                      "properties": {
                        "matchControllerRef": {
                          "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                          "type": "boolean"
                        },
                        "matchLabels": {
                          "description": "MatchLabels ensures an object with matching labels is selected.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "namespace": {
                          "description": "Namespace for the selector",
                          "type": "string"
                        },
                        "policy": {
                          "description": "Policies for selection.",
                          "type": "object",
                          "properties": {
                            "resolution": {
                              "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                              "type": "string",
                              "default": "Required",
                              "enum": [
                                "Required",
                                "Optional"
                              ]
                            },
                            "resolve": {
                              "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                              "type": "string",
                              "enum": [
                                "Always",
                                "IfNotPresent"
                              ]
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "securityProfile": {
              "description": "A security_profile block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "required": [
                "domainUserPasswordSecretRef"
              ],
              "properties": {
                "aaddsResourceId": {
                  "description": "The resource ID of the Azure Active Directory Domain Service. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "clusterUsersGroupDns": {
                  "description": "A list of the distinguished names for the cluster user groups. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "domainName": {
                  "description": "The name of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "domainUserPasswordSecretRef": {
                  "description": "The user password of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "domainUsername": {
                  "description": "The username of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "ldapsUrls": {
                  "description": "A list of the LDAPS URLs to communicate with the Azure Active Directory. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "msiResourceId": {
                  "description": "The User Assigned Identity for the HDInsight Cluster. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "storageAccount": {
              "description": "One or more storage_account block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "storageAccountKeySecretRef"
                ],
                "properties": {
                  "isDefault": {
                    "description": "Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "storageAccountKeySecretRef": {
                    "description": "The Access Key which should be used to connect to the Storage Account. Changing this forces a new resource to be created.",
                    "type": "object",
                    "required": [
                      "key",
                      "name"
                    ],
                    "properties": {
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "description": "Name of the secret.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "storageContainerId": {
                    "description": "The ID of the Storage Container. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "storageContainerIdRef": {
                    "description": "Reference to a Container in storage to populate storageContainerId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace of the referenced object",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "storageContainerIdSelector": {
                    "description": "Selector for a Container in storage to populate storageContainerId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "namespace": {
                        "description": "Namespace for the selector",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "storageResourceId": {
                    "description": "The ID of the Storage Account. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccountGen2": {
              "description": "A storage_account_gen2 block as defined below.",
              "type": "object",
              "properties": {
                "filesystemId": {
                  "description": "The ID of the Gen2 Filesystem. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "isDefault": {
                  "description": "Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.",
                  "type": "boolean"
                },
                "managedIdentityResourceId": {
                  "description": "The ID of Managed Identity to use for accessing the Gen2 filesystem. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "storageResourceId": {
                  "description": "The ID of the Storage Account. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A map of Tags which should be assigned to this HDInsight HBase Cluster.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tier": {
              "description": "Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are Standard or Premium. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tlsMinVersion": {
              "description": "The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.clusterVersion) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.clusterVersion))",
          "message": "spec.forProvider.clusterVersion is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.componentVersion) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.componentVersion))",
          "message": "spec.forProvider.componentVersion is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.gateway) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.gateway))",
          "message": "spec.forProvider.gateway is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.roles) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.roles))",
          "message": "spec.forProvider.roles is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tier) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.tier))",
          "message": "spec.forProvider.tier is a required parameter"
        }
      ]
    },
    "status": {
      "description": "HBaseClusterStatus defines the observed state of HBaseCluster.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "clusterVersion": {
              "description": "Specifies the Version of HDInsights which should be used for this Cluster. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "componentVersion": {
              "description": "A component_version block as defined below.",
              "type": "object",
              "properties": {
                "hbase": {
                  "description": "The version of HBase which should be used for this HDInsight HBase Cluster. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "computeIsolation": {
              "description": "A compute_isolation block as defined below.",
              "type": "object",
              "properties": {
                "computeIsolationEnabled": {
                  "description": "This field indicates whether enable compute isolation or not. Possible values are true or false.",
                  "type": "boolean"
                },
                "hostSku": {
                  "description": "The name of the host SKU.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "diskEncryption": {
              "description": "One or more disk_encryption block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "encryptionAlgorithm": {
                    "description": "This is an algorithm identifier for encryption. Possible values are RSA1_5, RSA-OAEP, RSA-OAEP-256.",
                    "type": "string"
                  },
                  "encryptionAtHostEnabled": {
                    "description": "This is indicator to show whether resource disk encryption is enabled.",
                    "type": "boolean"
                  },
                  "keyVaultKeyId": {
                    "description": "The ID of the key vault key.",
                    "type": "string"
                  },
                  "keyVaultManagedIdentityId": {
                    "description": "This is the resource ID of Managed Identity used to access the key vault.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "extension": {
              "description": "An extension block as defined below.",
              "type": "object",
              "properties": {
                "logAnalyticsWorkspaceId": {
                  "description": "The workspace ID of the log analytics extension.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "gateway": {
              "description": "A gateway block as defined below.",
              "type": "object",
              "properties": {
                "username": {
                  "description": "The username used for the Ambari Portal. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "httpsEndpoint": {
              "description": "The HTTPS Connectivity Endpoint for this HDInsight HBase Cluster.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the HDInsight HBase Cluster.",
              "type": "string"
            },
            "location": {
              "description": "Specifies the Azure Region which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "metastores": {
              "description": "A metastores block as defined below.",
              "type": "object",
              "properties": {
                "ambari": {
                  "description": "An ambari block as defined below.",
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "hive": {
                  "description": "A hive block as defined below.",
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "oozie": {
                  "description": "An oozie block as defined below.",
                  "type": "object",
                  "properties": {
                    "databaseName": {
                      "description": "The external Oozie metastore's existing SQL database. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "server": {
                      "description": "The fully-qualified domain name (FQDN) of the SQL server to use for the external Oozie metastore. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "monitor": {
              "description": "A monitor block as defined below.",
              "type": "object",
              "properties": {
                "logAnalyticsWorkspaceId": {
                  "description": "The Operations Management Suite (OMS) workspace ID.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "network": {
              "description": "A network block as defined below.",
              "type": "object",
              "properties": {
                "connectionDirection": {
                  "description": "The direction of the resource provider connection. Possible values include Inbound or Outbound. Defaults to Inbound. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "privateLinkEnabled": {
                  "description": "Is the private link enabled? Possible values include true or false. Defaults to false. Changing this forces a new resource to be created.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "privateLinkConfiguration": {
              "description": "A private_link_configuration block as defined below.",
              "type": "object",
              "properties": {
                "groupId": {
                  "description": "The ID of the private link service group.",
                  "type": "string"
                },
                "ipConfiguration": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the script action.",
                      "type": "string"
                    },
                    "primary": {
                      "description": "Indicates whether this IP configuration is primary.",
                      "type": "boolean"
                    },
                    "privateIpAddress": {
                      "description": "The private IP address of the IP configuration.",
                      "type": "string"
                    },
                    "privateIpAllocationMethod": {
                      "description": "The private IP allocation method. The only possible value now is Dynamic.",
                      "type": "string"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "name": {
                  "description": "The name of the private link configuration.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "Specifies the name of the Resource Group in which this HDInsight HBase Cluster should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "roles": {
              "description": "A roles block as defined below.",
              "type": "object",
              "properties": {
                "headNode": {
                  "description": "A head_node block as defined above.",
                  "type": "object",
                  "properties": {
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "workerNode": {
                  "description": "A worker_node block as defined below.",
                  "type": "object",
                  "properties": {
                    "autoscale": {
                      "description": "A autoscale block as defined below.",
                      "type": "object",
                      "properties": {
                        "recurrence": {
                          "description": "A recurrence block as defined below.",
                          "type": "object",
                          "properties": {
                            "schedule": {
                              "description": "A list of schedule blocks as defined below.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "days": {
                                    "description": "The days of the week to perform autoscale. Possible values are Monday, Tuesday, Wednesday, Thursday, Friday, Saturday and Sunday.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "targetInstanceCount": {
                                    "description": "The number of instances which should be run for the Worker Nodes.",
                                    "type": "number"
                                  },
                                  "time": {
                                    "description": "The time of day to perform the autoscale in 24hour format.",
                                    "type": "string"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "timezone": {
                              "description": "The time zone for the autoscale schedule times.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "targetInstanceCount": {
                      "description": "The number of instances which should be run for the Worker Nodes.",
                      "type": "number"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "zookeeperNode": {
                  "description": "A zookeeper_node block as defined below.",
                  "type": "object",
                  "properties": {
                    "scriptActions": {
                      "description": "The script action which will run on the cluster. One or more script_actions blocks as defined above. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the script action.",
                            "type": "string"
                          },
                          "parameters": {
                            "description": "The parameters for the script provided.",
                            "type": "string"
                          },
                          "uri": {
                            "description": "The URI to the script.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "sshKeys": {
                      "description": "A list of SSH Keys which should be used for the local administrator on the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "set"
                    },
                    "subnetId": {
                      "description": "The ID of the Subnet within the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "username": {
                      "description": "The Username of the local administrator for the Zookeeper Nodes. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "virtualNetworkId": {
                      "description": "The ID of the Virtual Network where the Zookeeper Nodes should be provisioned within. Changing this forces a new resource to be created.",
                      "type": "string"
                    },
                    "vmSize": {
                      "description": "The Size of the Virtual Machine which should be used as the Zookeeper Nodes. Possible values are ExtraSmall, Small, Medium, Large, ExtraLarge, A5, A6, A7, A8, A9, A10, A11, Standard_A1_V2, Standard_A2_V2, Standard_A2m_V2, Standard_A3, Standard_A4_V2, Standard_A4m_V2, Standard_A8_V2, Standard_A8m_V2, Standard_D1, Standard_D2, Standard_D3, Standard_D4, Standard_D11, Standard_D12, Standard_D13, Standard_D14, Standard_D1_V2, Standard_D2_V2, Standard_D3_V2, Standard_D4_V2, Standard_D5_V2, Standard_D11_V2, Standard_D12_V2, Standard_D13_V2, Standard_D14_V2, Standard_DS1_V2, Standard_DS2_V2, Standard_DS3_V2, Standard_DS4_V2, Standard_DS5_V2, Standard_DS11_V2, Standard_DS12_V2, Standard_DS13_V2, Standard_DS14_V2, Standard_E2_V3, Standard_E4_V3, Standard_E8_V3, Standard_E16_V3, Standard_E20_V3, Standard_E32_V3, Standard_E64_V3, Standard_E64i_V3, Standard_E2s_V3, Standard_E4s_V3, Standard_E8s_V3, Standard_E16s_V3, Standard_E20s_V3, Standard_E32s_V3, Standard_E64s_V3, Standard_E64is_V3, Standard_D2a_V4, Standard_D4a_V4, Standard_D8a_V4, Standard_D16a_V4, Standard_D32a_V4, Standard_D48a_V4, Standard_D64a_V4, Standard_D96a_V4, Standard_E2a_V4, Standard_E4a_V4, Standard_E8a_V4, Standard_E16a_V4, Standard_E20a_V4, Standard_E32a_V4, Standard_E48a_V4, Standard_E64a_V4, Standard_E96a_V4, Standard_D2ads_V5, Standard_D4ads_V5, Standard_D8ads_V5, Standard_D16ads_V5, Standard_D32ads_V5, Standard_D48ads_V5, Standard_D64ads_V5, Standard_D96ads_V5, Standard_E2ads_V5, Standard_E4ads_V5, Standard_E8ads_V5, Standard_E16ads_V5, Standard_E20ads_V5, Standard_E32ads_V5, Standard_E48ads_V5, Standard_E64ads_V5, Standard_E96ads_V5, Standard_G1, Standard_G2, Standard_G3, Standard_G4, Standard_G5, Standard_F2s_V2, Standard_F4s_V2, Standard_F8s_V2, Standard_F16s_V2, Standard_F32s_V2, Standard_F64s_V2, Standard_F72s_V2, Standard_GS1, Standard_GS2, Standard_GS3, Standard_GS4, Standard_GS5 and Standard_NC24. Changing this forces a new resource to be created.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "securityProfile": {
              "description": "A security_profile block as defined below. Changing this forces a new resource to be created.",
              "type": "object",
              "properties": {
                "aaddsResourceId": {
                  "description": "The resource ID of the Azure Active Directory Domain Service. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "clusterUsersGroupDns": {
                  "description": "A list of the distinguished names for the cluster user groups. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "domainName": {
                  "description": "The name of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "domainUsername": {
                  "description": "The username of the Azure Active Directory Domain. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "ldapsUrls": {
                  "description": "A list of the LDAPS URLs to communicate with the Azure Active Directory. Changing this forces a new resource to be created.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "msiResourceId": {
                  "description": "The User Assigned Identity for the HDInsight Cluster. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "sshEndpoint": {
              "description": "The SSH Connectivity Endpoint for this HDInsight HBase Cluster.",
              "type": "string"
            },
            "storageAccount": {
              "description": "One or more storage_account block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isDefault": {
                    "description": "Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "storageContainerId": {
                    "description": "The ID of the Storage Container. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "storageResourceId": {
                    "description": "The ID of the Storage Account. Changing this forces a new resource to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "storageAccountGen2": {
              "description": "A storage_account_gen2 block as defined below.",
              "type": "object",
              "properties": {
                "filesystemId": {
                  "description": "The ID of the Gen2 Filesystem. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "isDefault": {
                  "description": "Is this the Default Storage Account for the HDInsight Hadoop Cluster? Changing this forces a new resource to be created.",
                  "type": "boolean"
                },
                "managedIdentityResourceId": {
                  "description": "The ID of Managed Identity to use for accessing the Gen2 filesystem. Changing this forces a new resource to be created.",
                  "type": "string"
                },
                "storageResourceId": {
                  "description": "The ID of the Storage Account. Changing this forces a new resource to be created.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A map of Tags which should be assigned to this HDInsight HBase Cluster.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tier": {
              "description": "Specifies the Tier which should be used for this HDInsight HBase Cluster. Possible values are Standard or Premium. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tlsMinVersion": {
              "description": "The minimal supported TLS version. Possible values are 1.0, 1.1 or 1.2. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
