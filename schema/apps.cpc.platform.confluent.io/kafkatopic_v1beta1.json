{
  "description": "KafkaTopic is the Schema for the kafkatopics API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KafkaTopicSpec defines the desired state of KafkaTopic",
      "type": "object",
      "required": [
        "kafkaClusterRefs"
      ],
      "properties": {
        "kafkaClusterRefs": {
          "description": "kafkaClusterRefs reference the list of Kafka clusters to create a topic.",
          "type": "array",
          "items": {
            "description": "ObjectRef specifies a reference another Confluent Platform CR",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name is the name of the referenced CR",
                "type": "string",
                "maxLength": 63,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
              },
              "namespace": {
                "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                "type": "string",
                "maxLength": 255,
                "minLength": 1,
                "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
              }
            },
            "additionalProperties": false
          }
        },
        "name": {
          "description": "name specifies the topic name. If not configured, the KafkaTopic CR name is used as the topic name.",
          "type": "string",
          "maxLength": 63,
          "minLength": 1,
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "parameters": {
          "description": "Parameter defines all the topic parameters",
          "type": "object",
          "required": [
            "partitions",
            "replicationFactor"
          ],
          "properties": {
            "configs": {
              "description": "configs is a map of string key and value pairs that are used to pass the configuration settings for the topic. More info: https://docs.confluent.io/current/installation/configuration/topic-configs.html.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "partitions": {
              "description": "partitionCount specifies the number of partitions for the topic.",
              "type": "integer",
              "format": "int32"
            },
            "replicationFactor": {
              "description": "replicationFactor specifies the replication factor for the topic.",
              "type": "integer",
              "format": "int32"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "KafkaTopicStatus defines the observed state of KafkaTopic",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "conditions specify the latest available observations of the current state.",
          "type": "array",
          "items": {
            "description": "Condition represents the latest available observations of the current state.",
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "lastUpdateTime": {
                "description": "lastUpdateTime shows the last time the condition was evaluated.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message shows a human-readable message with details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "reason shows the reason for the last transition of the condition.",
                "type": "string"
              },
              "status": {
                "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                "type": "string"
              },
              "type": {
                "description": "type shows the condition type.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "kafkaClusterInfo": {
          "description": "kafkaClusterInfo provides information about kafka cluster.",
          "type": "array",
          "items": {
            "description": "KafkaClusterTopicInfo provides information about the cluster stats",
            "type": "object",
            "properties": {
              "conditions": {
                "description": "conditions specify the latest available observations of the current state.",
                "type": "array",
                "items": {
                  "description": "Condition represents the latest available observations of the current state.",
                  "type": "object",
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "lastTransitionTime": {
                      "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastUpdateTime": {
                      "description": "lastUpdateTime shows the last time the condition was evaluated.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "message": {
                      "description": "message shows a human-readable message with details about the transition.",
                      "type": "string"
                    },
                    "reason": {
                      "description": "reason shows the reason for the last transition of the condition.",
                      "type": "string"
                    },
                    "status": {
                      "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                      "type": "string"
                    },
                    "type": {
                      "description": "type shows the condition type.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "kafkaClusterID": {
                "description": "kafkaClusterID is the id of the Kafka cluster.",
                "type": "string"
              },
              "provisionToKafkaCluster": {
                "description": "provisionToKafkaCluster is the Kafka cluster the rolebinding belongs to. The format is: `\u003cKafka namespace\u003e/\u003cKafka name\u003e`.",
                "type": "string"
              },
              "topicState": {
                "description": "topicState is the state of the topic - Created, Provisioning, Failed",
                "type": "string",
                "default": "Unknown"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this app.",
          "type": "integer",
          "format": "int64"
        },
        "partition": {
          "description": "partition is the partition count of the topic.",
          "type": "integer",
          "format": "int32"
        },
        "phase": {
          "description": "phase describes the state of the Application resource.",
          "type": "string",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Bound"
          ]
        },
        "replicationFactor": {
          "description": "replicas is the replication factor of the topic.",
          "type": "integer",
          "format": "int32"
        },
        "state": {
          "description": "state is the state of the application",
          "type": "string",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Created",
            "Provisioning",
            "Failed",
            "DeleteRequested",
            "Error"
          ]
        },
        "topic": {
          "description": "topic is the name of the topic",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
