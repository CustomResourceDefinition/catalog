{
  "description": "ClusterLink is the Schema for the clusterlinks API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClusterLinkSpec defines the desired state of ClusterLink",
      "type": "object",
      "required": [
        "destination",
        "source"
      ],
      "properties": {
        "aclFilters": {
          "description": "aclFilters specify the list of ACLs to be migrated from the source cluster to the destination cluster.",
          "type": "array",
          "items": {
            "description": "AclFilter defines the configuration for the ACLs filter. This follows the same pattern as defined in the cluster linking documentation. More info: https://docs.confluent.io/platform/current/multi-dc-deployments/cluster-linking/security.html#cluster-link-acls-migrate",
            "type": "object",
            "required": [
              "accessFilter",
              "resourceFilter"
            ],
            "properties": {
              "accessFilter": {
                "description": "AclSyncAccessFilter defines the access filter for ACLs.",
                "type": "object",
                "required": [
                  "operation",
                  "permissionType"
                ],
                "properties": {
                  "host": {
                    "description": "host is the host for which operations can be coming from. The default value is `*` that matches all hosts.",
                    "type": "string"
                  },
                  "operation": {
                    "description": "operation specifies the operation type of the filter. It can be `ANY` or operations based on resource type defined in the following Confluent documentation: https://docs.confluent.io/platform/current/kafka/authorization.html#acl-operations",
                    "type": "string"
                  },
                  "permissionType": {
                    "description": "permissionType is the permission type of the filter. Valid options are `any`, `allow`, and `deny`.",
                    "type": "string",
                    "enum": [
                      "any",
                      "allow",
                      "deny"
                    ]
                  },
                  "principal": {
                    "description": "principal is the name of the principal. The default value is `*`.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "resourceFilter": {
                "description": "AclSyncResourceFilter specifies the resource filter for ACLs.",
                "type": "object",
                "required": [
                  "patternType",
                  "resourceType"
                ],
                "properties": {
                  "name": {
                    "description": "name is the name of the resource associated with this filter. The default value is `*`.",
                    "type": "string"
                  },
                  "patternType": {
                    "description": "patternType is the pattern of the resource. Valid options are `prefixed`, `literal`, `any`, and `match`.",
                    "type": "string",
                    "enum": [
                      "prefixed",
                      "literal",
                      "any",
                      "match"
                    ]
                  },
                  "resourceType": {
                    "description": "resourceType is the type of the filter. Valid options are `any`, `cluster`, `group`, `topic`, `transactionId`, and `delegationToken`.",
                    "type": "string",
                    "enum": [
                      "any",
                      "cluster",
                      "group",
                      "topic",
                      "transcationId",
                      "delegationToken"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "configs": {
          "description": "configs is a map of string key and value pairs. It specifies additional configurations for the cluster link. More info: https://docs.confluent.io/platform/current/multi-dc-deployments/cluster-linking/configs.html",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-kubernetes-map-type": "granular"
        },
        "consumerGroupFilters": {
          "description": "consumerGroupFilters specify a list of consumer groups to be migrated from the source cluster to the destination cluster.",
          "type": "array",
          "items": {
            "description": "ClusterLinkOptionsFilter defines the scheme for a filter",
            "type": "object",
            "required": [
              "filterType",
              "name",
              "patternType"
            ],
            "properties": {
              "filterType": {
                "description": "filterType specifies the filter type. Valid options are `INCLUDE` and `EXCLUDE`.",
                "type": "string",
                "enum": [
                  "INCLUDE",
                  "EXCLUDE"
                ]
              },
              "name": {
                "description": "name is the resource name associated with this filter.",
                "type": "string"
              },
              "patternType": {
                "description": "patternType is the pattern of the resource. Valid options are `PREFIXED` and `LITERAL`.",
                "type": "string",
                "enum": [
                  "PREFIXED",
                  "LITERAL"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "destination": {
          "description": "destination specifies the destination Kafka cluster",
          "type": "object",
          "required": [
            "kafkaClusterRef"
          ],
          "properties": {
            "certificateStoreConfigRef": {
              "description": "certificateStoreConfigRef specifies the reference to CertificateStoreConfig. For source KafkaCluster, certificate will be used by destination Kafka Cluster For destination KafkaCluster, certificate is used by source Kafka cluster. Only configure if you need to connect kafka cluster not managed by Confluent or requires custom certificates.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the referenced CR",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "namespace": {
                  "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                }
              },
              "additionalProperties": false
            },
            "kafkaClusterRef": {
              "description": "kafkaClusterRef references to Kafka cluster.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the referenced CR",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "namespace": {
                  "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "mirrors": {
          "description": "MirrorTopicConfig allow configuring  list of mirror topics and their configurations",
          "type": "object",
          "properties": {
            "options": {
              "description": "options specify configuration options for mirror topics.",
              "type": "object",
              "properties": {
                "autoCreateTopics": {
                  "description": "autoCreateTopics specifies configurations for the cluster link to automatically create mirror topics on the destination cluster for topics that exist on the source cluster based on defined filters. More info: https://docs.confluent.io/platform/current/multi-dc-deployments/cluster-linking/mirror-topics-cp.html#auto-create-mirror-topics",
                  "type": "object",
                  "properties": {
                    "enabled": {
                      "description": "enabled specifies whether to auto-create mirror topics based on topics on the source cluster. When set to “true”, mirror topics will be auto-created. Setting this option to “false” disables mirror topic creation and clears any existing filters.",
                      "type": "boolean"
                    },
                    "topicFilters": {
                      "description": "topicFilter contains an array of filters to apply to indicate which topics should be mirrored.",
                      "type": "array",
                      "items": {
                        "description": "ClusterLinkOptionsFilter defines the scheme for a filter",
                        "type": "object",
                        "required": [
                          "filterType",
                          "name",
                          "patternType"
                        ],
                        "properties": {
                          "filterType": {
                            "description": "filterType specifies the filter type. Valid options are `INCLUDE` and `EXCLUDE`.",
                            "type": "string",
                            "enum": [
                              "INCLUDE",
                              "EXCLUDE"
                            ]
                          },
                          "name": {
                            "description": "name is the resource name associated with this filter.",
                            "type": "string"
                          },
                          "patternType": {
                            "description": "patternType is the pattern of the resource. Valid options are `PREFIXED` and `LITERAL`.",
                            "type": "string",
                            "enum": [
                              "PREFIXED",
                              "LITERAL"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "prefix": {
                  "description": "prefix specifies prefix for the mirror topics of the cluster link. If configured, the valid mirror topic name should be defined with `\u003cprefix\u003e\u003csourceTopicName\u003e` format which mirrors the topic name of the format `\u003csourceTopicName\u003e` from source cluster. When auto-create is enabled and the prefix is configured then the topics created on the destination will automatically contain the prefix. Otherwise, `spec.mirrorTopic.name` should be defined with `\u003cprefix\u003e\u003csourceTopicName\u003e` format.",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-zA-Z0-9\\._\\-]*$"
                }
              },
              "additionalProperties": false
            },
            "topics": {
              "description": "topics specify the mirror topics under this cluster link.",
              "type": "array",
              "items": {
                "description": "MirrorTopic defines the mirror topic configuration.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "configs": {
                    "description": "configs is a map of string key and value pairs. It specifies any additional configuration or configuration overrides for the mirror topic.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "x-kubernetes-map-type": "granular"
                  },
                  "name": {
                    "description": "name is the mirror topic name. If the sourceTopicName is not configured, we assume that the sourceTopicName is the same as mirrorTopicName, so a topic with the exact same name must exist on the source cluster and no topic with this name should exist on the destination cluster. When `spec.mirrorTopicOptions.prefix: \u003cprefix\u003e` is configured for the cluster link, the name has to be of the format `\u003cprefix\u003e\u003csourceTopicName\u003e`.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9\\._\\-]*$"
                  },
                  "replicationFactor": {
                    "description": "replicationFactor specifies the replication factor for the mirror topic on the destination cluster. If this is not configured, mirror topic will inherit the broker `default.replication.factor` configuration.",
                    "type": "integer",
                    "format": "int32"
                  },
                  "sourceTopicName": {
                    "description": "sourceTopicName is topic name on the source cluster that will be mirrored to the destination cluster. When `spec.mirrorTopicOptions.prefix: \u003cprefix\u003e` is not configured, you should not configure this field. If it is configured, a topic with the exact same name must exist on the source cluster.",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9\\._\\-]*$"
                  },
                  "state": {
                    "description": "state specifies the desired state for this mirror topic. Valid options are `ACTIVE`, `FAILOVER`, `PAUSE`, and `PROMOTE`. The default value is `ACTIVE`.",
                    "type": "string",
                    "enum": [
                      "PAUSE",
                      "PROMOTE",
                      "FAILOVER",
                      "ACTIVE"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "Name of the object.",
          "type": "string",
          "maxLength": 63,
          "minLength": 1,
          "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
        },
        "source": {
          "description": "source specifies the source Kafka cluster",
          "type": "object",
          "required": [
            "kafkaClusterRef"
          ],
          "properties": {
            "certificateStoreConfigRef": {
              "description": "certificateStoreConfigRef specifies the reference to CertificateStoreConfig. For source KafkaCluster, certificate will be used by destination Kafka Cluster For destination KafkaCluster, certificate is used by source Kafka cluster. Only configure if you need to connect kafka cluster not managed by Confluent or requires custom certificates.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the referenced CR",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "namespace": {
                  "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                }
              },
              "additionalProperties": false
            },
            "kafkaClusterRef": {
              "description": "kafkaClusterRef references to Kafka cluster.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name is the name of the referenced CR",
                  "type": "string",
                  "maxLength": 63,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                },
                "namespace": {
                  "description": "Namespace of the CR. Defaults to the current namespace of the CR making the reference",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?$"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "sourceInitiatedLink": {
          "description": "SourceInitiatedLinkConfig defines configs for source initiated cluster links.",
          "type": "object",
          "required": [
            "linkMode"
          ],
          "properties": {
            "linkMode": {
              "description": "linkMode specifies if this source initiated cluster link is in Source or Destination mode.",
              "type": "string",
              "enum": [
                "Source",
                "Destination"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ClusterLinkStatus defines the observed state of ClusterLink",
      "type": "object",
      "properties": {
        "clusterLinkID": {
          "description": "clusterLinkID is the id of the cluster link.",
          "type": "string"
        },
        "clusterLinkName": {
          "description": "clusterLinkName is the name of the cluster link.",
          "type": "string"
        },
        "conditions": {
          "description": "conditions specify the latest available observations of the current state.",
          "type": "array",
          "items": {
            "description": "Condition represents the latest available observations of the current state.",
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime shows the last time the condition was transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "lastUpdateTime": {
                "description": "lastUpdateTime shows the last time the condition was evaluated.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message shows a human-readable message with details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "reason shows the reason for the last transition of the condition.",
                "type": "string"
              },
              "status": {
                "description": "status shows the status of the condition, one of `True`, `False`, or `Unknown`.",
                "type": "string"
              },
              "type": {
                "description": "type shows the condition type.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "destinationKafkaClusterID": {
          "description": "destinationKafkaClusterID is the ID of the destination Kafka cluster.",
          "type": "string"
        },
        "mirrorTopics": {
          "description": "mirrorTopics is a map of mirror topic name to its status",
          "type": "object",
          "additionalProperties": {
            "description": "MirrorTopicStatus specifies the status reported for each mirror topic as part of the cluster link status.",
            "type": "object",
            "properties": {
              "observedGeneration": {
                "description": "observedGeneration is the most recent generation observed for this Confluent component.",
                "type": "integer",
                "format": "int64"
              },
              "replicationFactor": {
                "description": "replicationFactor specifies the replication factor for the mirror topic on the destination cluster.",
                "type": "integer",
                "format": "int32"
              },
              "sourceTopicName": {
                "description": "sourceTopicName is the name of the topic being mirrored on the source cluster.",
                "type": "string"
              },
              "status": {
                "description": "status is the status of the mirror topic. It can be `ACTIVE`, `FAILED`, `PAUSED`, `STOPPED`, and `PENDING_STOPPED`.",
                "type": "string"
              }
            }
          },
          "x-kubernetes-map-type": "granular"
        },
        "numMirrorTopics": {
          "description": "numMirrorTopics is the number of mirror topics for the cluster link.",
          "type": "integer"
        },
        "observedGeneration": {
          "description": "observedGeneration is the most recent generation observed for this app.",
          "type": "integer",
          "format": "int64"
        },
        "phase": {
          "description": "phase describes the state of the Application resource.",
          "type": "string",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Bound"
          ]
        },
        "provisionToKafkaCluster": {
          "description": "provisionToKafkaCluster is the Kafka cluster this cluster link belongs to. The format is: `\u003cKafka namespace\u003e/\u003cKafka name\u003e`",
          "type": "string"
        },
        "sourceKafkaClusterID": {
          "description": "sourceKafkaClusterID is the ID of the source Kafka cluster.",
          "type": "string"
        },
        "state": {
          "description": "state is the state of the application",
          "type": "string",
          "default": "Unknown",
          "enum": [
            "Unknown",
            "Created",
            "Provisioning",
            "Failed",
            "DeleteRequested",
            "Error"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
