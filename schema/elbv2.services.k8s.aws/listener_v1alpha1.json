{
  "description": "Listener is the Schema for the Listeners API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ListenerSpec defines the desired state of Listener.\n\nInformation about a listener.",
      "type": "object",
      "required": [
        "defaultActions"
      ],
      "properties": {
        "alpnPolicy": {
          "description": "[TLS listeners] The name of the Application-Layer Protocol Negotiation (ALPN)\npolicy. You can specify one policy name. The following are the possible values:\n\n   * HTTP1Only\n\n   * HTTP2Only\n\n   * HTTP2Optional\n\n   * HTTP2Preferred\n\n   * None\n\nFor more information, see ALPN policies (https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#alpn-policies)\nin the Network Load Balancers Guide.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "certificates": {
          "description": "[HTTPS and TLS listeners] The default certificate for the listener. You must\nprovide exactly one certificate. Set CertificateArn to the certificate ARN\nbut do not set IsDefault.",
          "type": "array",
          "items": {
            "description": "Information about an SSL server certificate.",
            "type": "object",
            "properties": {
              "certificateARN": {
                "type": "string"
              },
              "isDefault": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "defaultActions": {
          "description": "The actions for the default rule.",
          "type": "array",
          "items": {
            "description": "Information about an action.\n\nEach rule must include exactly one of the following types of actions: forward,\nfixed-response, or redirect, and it must be the last action to be performed.",
            "type": "object",
            "properties": {
              "authenticateCognitoConfig": {
                "description": "Request parameters to use when integrating with Amazon Cognito to authenticate\nusers.",
                "type": "object",
                "properties": {
                  "authenticationRequestExtraParams": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "onUnauthenticatedRequest": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "sessionCookieName": {
                    "type": "string"
                  },
                  "sessionTimeout": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "userPoolARN": {
                    "type": "string"
                  },
                  "userPoolClientID": {
                    "type": "string"
                  },
                  "userPoolDomain": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "authenticateOIDCConfig": {
                "description": "Request parameters when using an identity provider (IdP) that is compliant\nwith OpenID Connect (OIDC) to authenticate users.",
                "type": "object",
                "properties": {
                  "authenticationRequestExtraParams": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "authorizationEndpoint": {
                    "type": "string"
                  },
                  "clientID": {
                    "type": "string"
                  },
                  "clientSecret": {
                    "type": "string"
                  },
                  "issuer": {
                    "type": "string"
                  },
                  "onUnauthenticatedRequest": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  },
                  "sessionCookieName": {
                    "type": "string"
                  },
                  "sessionTimeout": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "tokenEndpoint": {
                    "type": "string"
                  },
                  "useExistingClientSecret": {
                    "type": "boolean"
                  },
                  "userInfoEndpoint": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "fixedResponseConfig": {
                "description": "Information about an action that returns a custom HTTP response.",
                "type": "object",
                "properties": {
                  "contentType": {
                    "type": "string"
                  },
                  "messageBody": {
                    "type": "string"
                  },
                  "statusCode": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "forwardConfig": {
                "description": "Information about a forward action.",
                "type": "object",
                "properties": {
                  "targetGroupStickinessConfig": {
                    "description": "Information about the target group stickiness for a rule.",
                    "type": "object",
                    "properties": {
                      "durationSeconds": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "enabled": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  },
                  "targetGroups": {
                    "type": "array",
                    "items": {
                      "description": "Information about how traffic will be distributed between multiple target\ngroups in a forward rule.",
                      "type": "object",
                      "properties": {
                        "targetGroupARN": {
                          "type": "string"
                        },
                        "targetGroupRef": {
                          "description": "Reference field for TargetGroupARN",
                          "type": "object",
                          "properties": {
                            "from": {
                              "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "weight": {
                          "type": "integer",
                          "format": "int64"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              },
              "order": {
                "type": "integer",
                "format": "int64"
              },
              "redirectConfig": {
                "description": "Information about a redirect action.\n\nA URI consists of the following components: protocol://hostname:port/path?query.\nYou must modify at least one of the following components to avoid a redirect\nloop: protocol, hostname, port, or path. Any components that you do not modify\nretain their original values.\n\nYou can reuse URI components using the following reserved keywords:\n\n   * #{protocol}\n\n   * #{host}\n\n   * #{port}\n\n   * #{path} (the leading \"/\" is removed)\n\n   * #{query}\n\nFor example, you can change the path to \"/new/#{path}\", the hostname to \"example.#{host}\",\nor the query to \"#{query}\u0026value=xyz\".",
                "type": "object",
                "properties": {
                  "host": {
                    "type": "string"
                  },
                  "path": {
                    "type": "string"
                  },
                  "port": {
                    "type": "string"
                  },
                  "protocol": {
                    "type": "string"
                  },
                  "query": {
                    "type": "string"
                  },
                  "statusCode": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              },
              "targetGroupARN": {
                "type": "string"
              },
              "targetGroupRef": {
                "description": "Reference field for TargetGroupARN",
                "type": "object",
                "properties": {
                  "from": {
                    "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "namespace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "loadBalancerARN": {
          "description": "The Amazon Resource Name (ARN) of the load balancer.",
          "type": "string"
        },
        "loadBalancerRef": {
          "description": "AWSResourceReferenceWrapper provides a wrapper around *AWSResourceReference\ntype to provide more user friendly syntax for references using 'from' field\nEx:\nAPIIDRef:\n\n\tfrom:\n\t  name: my-api",
          "type": "object",
          "properties": {
            "from": {
              "description": "AWSResourceReference provides all the values necessary to reference another\nk8s resource for finding the identifier(Id/ARN/Name)",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "namespace": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "mutualAuthentication": {
          "description": "The mutual authentication configuration information.",
          "type": "object",
          "properties": {
            "ignoreClientCertificateExpiry": {
              "type": "boolean"
            },
            "mode": {
              "type": "string"
            },
            "trustStoreARN": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "port": {
          "description": "The port on which the load balancer is listening. You can't specify a port\nfor a Gateway Load Balancer.",
          "type": "integer",
          "format": "int64"
        },
        "protocol": {
          "description": "The protocol for connections from clients to the load balancer. For Application\nLoad Balancers, the supported protocols are HTTP and HTTPS. For Network Load\nBalancers, the supported protocols are TCP, TLS, UDP, and TCP_UDP. You can’t\nspecify the UDP or TCP_UDP protocol if dual-stack mode is enabled. You can't\nspecify a protocol for a Gateway Load Balancer.",
          "type": "string"
        },
        "sslPolicy": {
          "description": "[HTTPS and TLS listeners] The security policy that defines which protocols\nand ciphers are supported.\n\nFor more information, see Security policies (https://docs.aws.amazon.com/elasticloadbalancing/latest/application/create-https-listener.html#describe-ssl-policies)\nin the Application Load Balancers Guide and Security policies (https://docs.aws.amazon.com/elasticloadbalancing/latest/network/create-tls-listener.html#describe-ssl-policies)\nin the Network Load Balancers Guide.",
          "type": "string"
        },
        "tags": {
          "description": "The tags to assign to the listener.",
          "type": "array",
          "items": {
            "description": "Information about a tag.",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ListenerStatus defines the observed state of Listener",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
