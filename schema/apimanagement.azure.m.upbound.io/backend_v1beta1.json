{
  "description": "Backend is the Schema for the Backends API. Manages a backend within an API Management Service.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BackendSpec defines the desired state of Backend",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "apiManagementName": {
              "description": "The Name of the API Management Service where this backend should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "apiManagementNameRef": {
              "description": "Reference to a Management in apimanagement to populate apiManagementName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "apiManagementNameSelector": {
              "description": "Selector for a Management in apimanagement to populate apiManagementName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "credentials": {
              "description": "A credentials block as documented below.",
              "type": "object",
              "properties": {
                "authorization": {
                  "description": "An authorization block as defined below.",
                  "type": "object",
                  "properties": {
                    "parameter": {
                      "description": "The authentication Parameter value.",
                      "type": "string"
                    },
                    "scheme": {
                      "description": "The authentication Scheme name.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "certificate": {
                  "description": "A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "header": {
                  "description": "A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "query": {
                  "description": "A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "The description of the backend.",
              "type": "string"
            },
            "protocol": {
              "description": "The protocol used by the backend host. Possible values are http or soap.",
              "type": "string"
            },
            "proxy": {
              "description": "A proxy block as documented below.",
              "type": "object",
              "properties": {
                "passwordSecretRef": {
                  "description": "The password to connect to the proxy server.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "url": {
                  "description": "The URL of the proxy server.",
                  "type": "string"
                },
                "username": {
                  "description": "The username to connect to the proxy server.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceId": {
              "description": "The management URI of the backend host in an external system. This URI can be the ARM Resource ID of Logic Apps, Function Apps or API Apps, or the management endpoint of a Service Fabric cluster.",
              "type": "string"
            },
            "serviceFabricCluster": {
              "description": "A service_fabric_cluster block as documented below.",
              "type": "object",
              "properties": {
                "clientCertificateId": {
                  "description": "The client certificate resource id for the management endpoint.",
                  "type": "string"
                },
                "clientCertificateThumbprint": {
                  "description": "The client certificate thumbprint for the management endpoint.",
                  "type": "string"
                },
                "managementEndpoints": {
                  "description": "A list of cluster management endpoints.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "maxPartitionResolutionRetries": {
                  "description": "The maximum number of retries when attempting resolve the partition.",
                  "type": "number"
                },
                "serverCertificateThumbprints": {
                  "description": "A list of thumbprints of the server certificates of the Service Fabric cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "serverX509Name": {
                  "description": "One or more server_x509_name blocks as documented below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issuerCertificateThumbprint": {
                        "description": "The thumbprint for the issuer of the certificate.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The common name of the certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "title": {
              "description": "The title of the backend.",
              "type": "string"
            },
            "tls": {
              "description": "A tls block as documented below.",
              "type": "object",
              "properties": {
                "validateCertificateChain": {
                  "description": "Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.",
                  "type": "boolean"
                },
                "validateCertificateName": {
                  "description": "Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "url": {
              "description": "The backend host URL should be specified in the format \"https://backend.com/api\", avoiding trailing slashes (/) to minimize misconfiguration risks. Azure API Management instance will append the backend resource name to this URL. This URL typically serves as the base-url in the set-backend-service policy, enabling seamless transitions from frontend to backend.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "credentials": {
              "description": "A credentials block as documented below.",
              "type": "object",
              "properties": {
                "authorization": {
                  "description": "An authorization block as defined below.",
                  "type": "object",
                  "properties": {
                    "parameter": {
                      "description": "The authentication Parameter value.",
                      "type": "string"
                    },
                    "scheme": {
                      "description": "The authentication Scheme name.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "certificate": {
                  "description": "A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "header": {
                  "description": "A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "query": {
                  "description": "A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "The description of the backend.",
              "type": "string"
            },
            "protocol": {
              "description": "The protocol used by the backend host. Possible values are http or soap.",
              "type": "string"
            },
            "proxy": {
              "description": "A proxy block as documented below.",
              "type": "object",
              "properties": {
                "passwordSecretRef": {
                  "description": "The password to connect to the proxy server.",
                  "type": "object",
                  "required": [
                    "key",
                    "name"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "description": "Name of the secret.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "url": {
                  "description": "The URL of the proxy server.",
                  "type": "string"
                },
                "username": {
                  "description": "The username to connect to the proxy server.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "resourceId": {
              "description": "The management URI of the backend host in an external system. This URI can be the ARM Resource ID of Logic Apps, Function Apps or API Apps, or the management endpoint of a Service Fabric cluster.",
              "type": "string"
            },
            "serviceFabricCluster": {
              "description": "A service_fabric_cluster block as documented below.",
              "type": "object",
              "properties": {
                "clientCertificateId": {
                  "description": "The client certificate resource id for the management endpoint.",
                  "type": "string"
                },
                "clientCertificateThumbprint": {
                  "description": "The client certificate thumbprint for the management endpoint.",
                  "type": "string"
                },
                "managementEndpoints": {
                  "description": "A list of cluster management endpoints.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "maxPartitionResolutionRetries": {
                  "description": "The maximum number of retries when attempting resolve the partition.",
                  "type": "number"
                },
                "serverCertificateThumbprints": {
                  "description": "A list of thumbprints of the server certificates of the Service Fabric cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "serverX509Name": {
                  "description": "One or more server_x509_name blocks as documented below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issuerCertificateThumbprint": {
                        "description": "The thumbprint for the issuer of the certificate.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The common name of the certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "title": {
              "description": "The title of the backend.",
              "type": "string"
            },
            "tls": {
              "description": "A tls block as documented below.",
              "type": "object",
              "properties": {
                "validateCertificateChain": {
                  "description": "Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.",
                  "type": "boolean"
                },
                "validateCertificateName": {
                  "description": "Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "url": {
              "description": "The backend host URL should be specified in the format \"https://backend.com/api\", avoiding trailing slashes (/) to minimize misconfiguration risks. Azure API Management instance will append the backend resource name to this URL. This URL typically serves as the base-url in the set-backend-service policy, enabling seamless transitions from frontend to backend.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.protocol))",
          "message": "spec.forProvider.protocol is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.url) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.url))",
          "message": "spec.forProvider.url is a required parameter"
        }
      ]
    },
    "status": {
      "description": "BackendStatus defines the observed state of Backend.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "apiManagementName": {
              "description": "The Name of the API Management Service where this backend should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "credentials": {
              "description": "A credentials block as documented below.",
              "type": "object",
              "properties": {
                "authorization": {
                  "description": "An authorization block as defined below.",
                  "type": "object",
                  "properties": {
                    "parameter": {
                      "description": "The authentication Parameter value.",
                      "type": "string"
                    },
                    "scheme": {
                      "description": "The authentication Scheme name.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "certificate": {
                  "description": "A list of client certificate thumbprints to present to the backend host. The certificates must exist within the API Management Service.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "header": {
                  "description": "A mapping of header parameters to pass to the backend host. The keys are the header names and the values are a comma separated string of header values. This is converted to a list before being passed to the API.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                },
                "query": {
                  "description": "A mapping of query parameters to pass to the backend host. The keys are the query names and the values are a comma separated string of query values. This is converted to a list before being passed to the API.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-kubernetes-map-type": "granular"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "The description of the backend.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the API Management API.",
              "type": "string"
            },
            "protocol": {
              "description": "The protocol used by the backend host. Possible values are http or soap.",
              "type": "string"
            },
            "proxy": {
              "description": "A proxy block as documented below.",
              "type": "object",
              "properties": {
                "url": {
                  "description": "The URL of the proxy server.",
                  "type": "string"
                },
                "username": {
                  "description": "The username to connect to the proxy server.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceId": {
              "description": "The management URI of the backend host in an external system. This URI can be the ARM Resource ID of Logic Apps, Function Apps or API Apps, or the management endpoint of a Service Fabric cluster.",
              "type": "string"
            },
            "serviceFabricCluster": {
              "description": "A service_fabric_cluster block as documented below.",
              "type": "object",
              "properties": {
                "clientCertificateId": {
                  "description": "The client certificate resource id for the management endpoint.",
                  "type": "string"
                },
                "clientCertificateThumbprint": {
                  "description": "The client certificate thumbprint for the management endpoint.",
                  "type": "string"
                },
                "managementEndpoints": {
                  "description": "A list of cluster management endpoints.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "maxPartitionResolutionRetries": {
                  "description": "The maximum number of retries when attempting resolve the partition.",
                  "type": "number"
                },
                "serverCertificateThumbprints": {
                  "description": "A list of thumbprints of the server certificates of the Service Fabric cluster.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "serverX509Name": {
                  "description": "One or more server_x509_name blocks as documented below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "issuerCertificateThumbprint": {
                        "description": "The thumbprint for the issuer of the certificate.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The common name of the certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "title": {
              "description": "The title of the backend.",
              "type": "string"
            },
            "tls": {
              "description": "A tls block as documented below.",
              "type": "object",
              "properties": {
                "validateCertificateChain": {
                  "description": "Flag indicating whether SSL certificate chain validation should be done when using self-signed certificates for the backend host.",
                  "type": "boolean"
                },
                "validateCertificateName": {
                  "description": "Flag indicating whether SSL certificate name validation should be done when using self-signed certificates for the backend host.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "url": {
              "description": "The backend host URL should be specified in the format \"https://backend.com/api\", avoiding trailing slashes (/) to minimize misconfiguration risks. Azure API Management instance will append the backend resource name to this URL. This URL typically serves as the base-url in the set-backend-service policy, enabling seamless transitions from frontend to backend.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
