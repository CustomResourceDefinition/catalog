{
  "description": "API is the Schema for the APIs API. Manages an API within an API Management Service.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "APISpec defines the desired state of API",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "revision"
          ],
          "properties": {
            "apiManagementName": {
              "description": "The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "apiManagementNameRef": {
              "description": "Reference to a Management in apimanagement to populate apiManagementName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "apiManagementNameSelector": {
              "description": "Selector for a Management in apimanagement to populate apiManagementName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "apiType": {
              "description": "Type of API. Possible values are graphql, http, soap, and websocket. Defaults to http.",
              "type": "string"
            },
            "contact": {
              "description": "A contact block as documented below.",
              "type": "object",
              "properties": {
                "email": {
                  "description": "The email address of the contact person/organization.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the contact person/organization.",
                  "type": "string"
                },
                "url": {
                  "description": "Absolute URL of the contact information.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "A description of the API Management API, which may include HTML formatting tags.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name of the API.",
              "type": "string"
            },
            "import": {
              "description": "A import block as documented below.",
              "type": "object",
              "properties": {
                "contentFormat": {
                  "description": "The format of the content from which the API Definition should be imported. Possible values are: openapi, openapi+json, openapi+json-link, openapi-link, swagger-json, swagger-link-json, wadl-link-json, wadl-xml, wsdl and wsdl-link.",
                  "type": "string"
                },
                "contentValue": {
                  "description": "The Content from which the API Definition should be imported. When a content_format of *-link-* is specified this must be a URL, otherwise this must be defined inline. The URL must be accessible and return a valid document; otherwise, deployment may fail.",
                  "type": "string"
                },
                "wsdlSelector": {
                  "description": "A wsdl_selector block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when content_format is wsdl or wsdl-link.",
                  "type": "object",
                  "properties": {
                    "endpointName": {
                      "description": "The name of endpoint (port) to import from WSDL.",
                      "type": "string"
                    },
                    "serviceName": {
                      "description": "The name of service to import from WSDL.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "license": {
              "description": "A license block as documented below.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the license .",
                  "type": "string"
                },
                "url": {
                  "description": "Absolute URL of the license.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "oauth2Authorization": {
              "description": "An oauth2_authorization block as documented below.",
              "type": "object",
              "properties": {
                "authorizationServerName": {
                  "description": "OAuth authorization server identifier. The name of an OAuth2 Authorization Server.",
                  "type": "string"
                },
                "scope": {
                  "description": "Operations scope.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "openidAuthentication": {
              "description": "An openid_authentication block as documented below.",
              "type": "object",
              "properties": {
                "bearerTokenSendingMethods": {
                  "description": "How to send token to the server. A list of zero or more methods. Valid values are authorizationHeader and query.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "openidProviderName": {
                  "description": "OpenID Connect provider identifier. The name of an OpenID Connect Provider.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "path": {
              "description": "The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.",
              "type": "string"
            },
            "protocols": {
              "description": "A list of protocols the operations in this API can be invoked. Possible values are http, https, ws, and wss.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "resourceGroupName": {
              "description": "The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "revision": {
              "description": "The Revision which used for this API. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "revisionDescription": {
              "description": "The description of the API Revision of the API Management API.",
              "type": "string"
            },
            "serviceUrl": {
              "description": "Absolute URL of the backend service implementing this API.",
              "type": "string"
            },
            "sourceApiId": {
              "description": "The API id of the source API, which could be in format azurerm_api_management_api.example.id or in format azurerm_api_management_api.example.id;rev=1",
              "type": "string"
            },
            "subscriptionKeyParameterNames": {
              "description": "A subscription_key_parameter_names block as documented below.",
              "type": "object",
              "properties": {
                "header": {
                  "description": "The name of the HTTP Header which should be used for the Subscription Key.",
                  "type": "string"
                },
                "query": {
                  "description": "The name of the QueryString parameter which should be used for the Subscription Key.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "subscriptionRequired": {
              "description": "Should this API require a subscription key? Defaults to true.",
              "type": "boolean"
            },
            "termsOfServiceUrl": {
              "description": "Absolute URL of the Terms of Service for the API.",
              "type": "string"
            },
            "version": {
              "description": "The Version number of this API, if this API is versioned.",
              "type": "string"
            },
            "versionDescription": {
              "description": "The description of the API Version of the API Management API.",
              "type": "string"
            },
            "versionSetId": {
              "description": "The ID of the Version Set which this API is associated with.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "apiType": {
              "description": "Type of API. Possible values are graphql, http, soap, and websocket. Defaults to http.",
              "type": "string"
            },
            "contact": {
              "description": "A contact block as documented below.",
              "type": "object",
              "properties": {
                "email": {
                  "description": "The email address of the contact person/organization.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the contact person/organization.",
                  "type": "string"
                },
                "url": {
                  "description": "Absolute URL of the contact information.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "A description of the API Management API, which may include HTML formatting tags.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name of the API.",
              "type": "string"
            },
            "import": {
              "description": "A import block as documented below.",
              "type": "object",
              "properties": {
                "contentFormat": {
                  "description": "The format of the content from which the API Definition should be imported. Possible values are: openapi, openapi+json, openapi+json-link, openapi-link, swagger-json, swagger-link-json, wadl-link-json, wadl-xml, wsdl and wsdl-link.",
                  "type": "string"
                },
                "contentValue": {
                  "description": "The Content from which the API Definition should be imported. When a content_format of *-link-* is specified this must be a URL, otherwise this must be defined inline. The URL must be accessible and return a valid document; otherwise, deployment may fail.",
                  "type": "string"
                },
                "wsdlSelector": {
                  "description": "A wsdl_selector block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when content_format is wsdl or wsdl-link.",
                  "type": "object",
                  "properties": {
                    "endpointName": {
                      "description": "The name of endpoint (port) to import from WSDL.",
                      "type": "string"
                    },
                    "serviceName": {
                      "description": "The name of service to import from WSDL.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "license": {
              "description": "A license block as documented below.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the license .",
                  "type": "string"
                },
                "url": {
                  "description": "Absolute URL of the license.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "oauth2Authorization": {
              "description": "An oauth2_authorization block as documented below.",
              "type": "object",
              "properties": {
                "authorizationServerName": {
                  "description": "OAuth authorization server identifier. The name of an OAuth2 Authorization Server.",
                  "type": "string"
                },
                "scope": {
                  "description": "Operations scope.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "openidAuthentication": {
              "description": "An openid_authentication block as documented below.",
              "type": "object",
              "properties": {
                "bearerTokenSendingMethods": {
                  "description": "How to send token to the server. A list of zero or more methods. Valid values are authorizationHeader and query.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "openidProviderName": {
                  "description": "OpenID Connect provider identifier. The name of an OpenID Connect Provider.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "path": {
              "description": "The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.",
              "type": "string"
            },
            "protocols": {
              "description": "A list of protocols the operations in this API can be invoked. Possible values are http, https, ws, and wss.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "revisionDescription": {
              "description": "The description of the API Revision of the API Management API.",
              "type": "string"
            },
            "serviceUrl": {
              "description": "Absolute URL of the backend service implementing this API.",
              "type": "string"
            },
            "sourceApiId": {
              "description": "The API id of the source API, which could be in format azurerm_api_management_api.example.id or in format azurerm_api_management_api.example.id;rev=1",
              "type": "string"
            },
            "subscriptionKeyParameterNames": {
              "description": "A subscription_key_parameter_names block as documented below.",
              "type": "object",
              "properties": {
                "header": {
                  "description": "The name of the HTTP Header which should be used for the Subscription Key.",
                  "type": "string"
                },
                "query": {
                  "description": "The name of the QueryString parameter which should be used for the Subscription Key.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "subscriptionRequired": {
              "description": "Should this API require a subscription key? Defaults to true.",
              "type": "boolean"
            },
            "termsOfServiceUrl": {
              "description": "Absolute URL of the Terms of Service for the API.",
              "type": "string"
            },
            "version": {
              "description": "The Version number of this API, if this API is versioned.",
              "type": "string"
            },
            "versionDescription": {
              "description": "The description of the API Version of the API Management API.",
              "type": "string"
            },
            "versionSetId": {
              "description": "The ID of the Version Set which this API is associated with.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "APIStatus defines the observed state of API.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "apiManagementName": {
              "description": "The Name of the API Management Service where this API should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "apiType": {
              "description": "Type of API. Possible values are graphql, http, soap, and websocket. Defaults to http.",
              "type": "string"
            },
            "contact": {
              "description": "A contact block as documented below.",
              "type": "object",
              "properties": {
                "email": {
                  "description": "The email address of the contact person/organization.",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the contact person/organization.",
                  "type": "string"
                },
                "url": {
                  "description": "Absolute URL of the contact information.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "A description of the API Management API, which may include HTML formatting tags.",
              "type": "string"
            },
            "displayName": {
              "description": "The display name of the API.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the API Management API.",
              "type": "string"
            },
            "import": {
              "description": "A import block as documented below.",
              "type": "object",
              "properties": {
                "contentFormat": {
                  "description": "The format of the content from which the API Definition should be imported. Possible values are: openapi, openapi+json, openapi+json-link, openapi-link, swagger-json, swagger-link-json, wadl-link-json, wadl-xml, wsdl and wsdl-link.",
                  "type": "string"
                },
                "contentValue": {
                  "description": "The Content from which the API Definition should be imported. When a content_format of *-link-* is specified this must be a URL, otherwise this must be defined inline. The URL must be accessible and return a valid document; otherwise, deployment may fail.",
                  "type": "string"
                },
                "wsdlSelector": {
                  "description": "A wsdl_selector block as defined below, which allows you to limit the import of a WSDL to only a subset of the document. This can only be specified when content_format is wsdl or wsdl-link.",
                  "type": "object",
                  "properties": {
                    "endpointName": {
                      "description": "The name of endpoint (port) to import from WSDL.",
                      "type": "string"
                    },
                    "serviceName": {
                      "description": "The name of service to import from WSDL.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "isCurrent": {
              "description": "Is this the current API Revision?",
              "type": "boolean"
            },
            "isOnline": {
              "description": "Is this API Revision online/accessible via the Gateway?",
              "type": "boolean"
            },
            "license": {
              "description": "A license block as documented below.",
              "type": "object",
              "properties": {
                "name": {
                  "description": "The name of the license .",
                  "type": "string"
                },
                "url": {
                  "description": "Absolute URL of the license.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "oauth2Authorization": {
              "description": "An oauth2_authorization block as documented below.",
              "type": "object",
              "properties": {
                "authorizationServerName": {
                  "description": "OAuth authorization server identifier. The name of an OAuth2 Authorization Server.",
                  "type": "string"
                },
                "scope": {
                  "description": "Operations scope.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "openidAuthentication": {
              "description": "An openid_authentication block as documented below.",
              "type": "object",
              "properties": {
                "bearerTokenSendingMethods": {
                  "description": "How to send token to the server. A list of zero or more methods. Valid values are authorizationHeader and query.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "openidProviderName": {
                  "description": "OpenID Connect provider identifier. The name of an OpenID Connect Provider.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "path": {
              "description": "The Path for this API Management API, which is a relative URL which uniquely identifies this API and all of its resource paths within the API Management Service.",
              "type": "string"
            },
            "protocols": {
              "description": "A list of protocols the operations in this API can be invoked. Possible values are http, https, ws, and wss.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "resourceGroupName": {
              "description": "The Name of the Resource Group where the API Management API exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "revision": {
              "description": "The Revision which used for this API. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "revisionDescription": {
              "description": "The description of the API Revision of the API Management API.",
              "type": "string"
            },
            "serviceUrl": {
              "description": "Absolute URL of the backend service implementing this API.",
              "type": "string"
            },
            "sourceApiId": {
              "description": "The API id of the source API, which could be in format azurerm_api_management_api.example.id or in format azurerm_api_management_api.example.id;rev=1",
              "type": "string"
            },
            "subscriptionKeyParameterNames": {
              "description": "A subscription_key_parameter_names block as documented below.",
              "type": "object",
              "properties": {
                "header": {
                  "description": "The name of the HTTP Header which should be used for the Subscription Key.",
                  "type": "string"
                },
                "query": {
                  "description": "The name of the QueryString parameter which should be used for the Subscription Key.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "subscriptionRequired": {
              "description": "Should this API require a subscription key? Defaults to true.",
              "type": "boolean"
            },
            "termsOfServiceUrl": {
              "description": "Absolute URL of the Terms of Service for the API.",
              "type": "string"
            },
            "version": {
              "description": "The Version number of this API, if this API is versioned.",
              "type": "string"
            },
            "versionDescription": {
              "description": "The description of the API Version of the API Management API.",
              "type": "string"
            },
            "versionSetId": {
              "description": "The ID of the Version Set which this API is associated with.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
