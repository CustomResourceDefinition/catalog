{
  "description": "ManagedDisk is the Schema for the ManagedDisks API. Manages a Managed Disk.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ManagedDiskSpec defines the desired state of ManagedDisk",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "createOption": {
              "description": "The method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include: * Import - Import a VHD file in to the managed disk (VHD specified with source_uri). * ImportSecure - Securely import a VHD file in to the managed disk (VHD specified with source_uri). * Empty - Create an empty managed disk. * Copy - Copy an existing managed disk or snapshot (specified with source_resource_id). * FromImage - Copy a Platform Image (specified with image_reference_id) * Restore - Set by Azure Backup or Site Recovery on a restored disk (specified with source_resource_id). * Upload - Upload a VHD disk with the help of SAS URL (to be used with upload_size_bytes).",
              "type": "string"
            },
            "diskAccessId": {
              "description": "The ID of the disk access resource for using private endpoints on disks.",
              "type": "string"
            },
            "diskEncryptionSetId": {
              "description": "The ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with secure_vm_disk_encryption_set_id.",
              "type": "string"
            },
            "diskIopsReadOnly": {
              "description": "The number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.",
              "type": "number"
            },
            "diskIopsReadWrite": {
              "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.",
              "type": "number"
            },
            "diskMbpsReadOnly": {
              "description": "The bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.",
              "type": "number"
            },
            "diskMbpsReadWrite": {
              "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.",
              "type": "number"
            },
            "diskSizeGb": {
              "description": "Specifies the size of the managed disk to create in gigabytes. If create_option is Copy or FromImage, then the value must be equal to or greater than the source's size. The size can only be increased.",
              "type": "number"
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.",
              "type": "string"
            },
            "encryptionSettings": {
              "description": "A encryption_settings block as defined below.",
              "type": "object",
              "properties": {
                "diskEncryptionKey": {
                  "description": "A disk_encryption_key block as defined above.",
                  "type": "object",
                  "properties": {
                    "secretUrl": {
                      "description": "The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.",
                      "type": "string"
                    },
                    "sourceVaultId": {
                      "description": "The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "keyEncryptionKey": {
                  "description": "A key_encryption_key block as defined below.",
                  "type": "object",
                  "properties": {
                    "keyUrl": {
                      "description": "The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.",
                      "type": "string"
                    },
                    "sourceVaultId": {
                      "description": "The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "galleryImageReferenceId": {
              "description": "ID of a Gallery Image Version to copy when create_option is FromImage. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "hyperVGeneration": {
              "description": "The HyperV Generation of the Disk when the source of an Import or Copy operation targets a source that contains an operating system. Possible values are V1 and V2. For ImportSecure it must be set to V2. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "imageReferenceId": {
              "description": "ID of an existing platform/marketplace disk image to copy when create_option is FromImage. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "location": {
              "description": "Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logicalSectorSize": {
              "description": "Logical Sector Size. Possible values are: 512 and 4096. Defaults to 4096. Changing this forces a new resource to be created.",
              "type": "number"
            },
            "maxShares": {
              "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.",
              "type": "number"
            },
            "networkAccessPolicy": {
              "description": "Policy for accessing the disk via network. Allowed values are AllowAll, AllowPrivate, and DenyAll.",
              "type": "string"
            },
            "onDemandBurstingEnabled": {
              "description": "Specifies if On-Demand Bursting is enabled for the Managed Disk.",
              "type": "boolean"
            },
            "optimizedFrequentAttachEnabled": {
              "description": "Specifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to false.",
              "type": "boolean"
            },
            "osType": {
              "description": "Specify a value when the source of an Import, ImportSecure or Copy operation targets a source that contains an operating system. Valid values are Linux or Windows.",
              "type": "string"
            },
            "performancePlusEnabled": {
              "description": "Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether it is allowed to access the disk via public network. Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Managed Disk should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "secureVmDiskEncryptionSetId": {
              "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "securityType": {
              "description": "Security Type of the Managed Disk when it is used for a Confidential VM. Possible values are ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey, ConfidentialVM_DiskEncryptedWithPlatformKey and ConfidentialVM_DiskEncryptedWithCustomerKey. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sourceResourceId": {
              "description": "The ID of an existing Managed Disk or Snapshot to copy when create_option is Copy or the recovery point to restore when create_option is Restore. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sourceResourceIdRef": {
              "description": "Reference to a ManagedDisk in compute to populate sourceResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "sourceResourceIdSelector": {
              "description": "Selector for a ManagedDisk in compute to populate sourceResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "sourceUri": {
              "description": "URI to a valid VHD file to be used when create_option is Import or ImportSecure. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageAccountId": {
              "description": "The ID of the Storage Account where the source_uri is located. Required when create_option is set to Import or ImportSecure. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageAccountType": {
              "description": "The type of storage to use for the managed disk. Possible values are Standard_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS, StandardSSD_LRS or UltraSSD_LRS.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tier": {
              "description": "The disk performance tier to use. Possible values are documented here. This feature is currently supported only for premium SSDs.",
              "type": "string"
            },
            "trustedLaunchEnabled": {
              "description": "Specifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "uploadSizeBytes": {
              "description": "Specifies the size of the managed disk to create in bytes. Required when create_option is Upload. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with ls -l or wc -c. More information can be found at Copy a managed disk. Changing this forces a new resource to be created.",
              "type": "number"
            },
            "zone": {
              "description": "Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "createOption": {
              "description": "The method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include: * Import - Import a VHD file in to the managed disk (VHD specified with source_uri). * ImportSecure - Securely import a VHD file in to the managed disk (VHD specified with source_uri). * Empty - Create an empty managed disk. * Copy - Copy an existing managed disk or snapshot (specified with source_resource_id). * FromImage - Copy a Platform Image (specified with image_reference_id) * Restore - Set by Azure Backup or Site Recovery on a restored disk (specified with source_resource_id). * Upload - Upload a VHD disk with the help of SAS URL (to be used with upload_size_bytes).",
              "type": "string"
            },
            "diskAccessId": {
              "description": "The ID of the disk access resource for using private endpoints on disks.",
              "type": "string"
            },
            "diskEncryptionSetId": {
              "description": "The ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with secure_vm_disk_encryption_set_id.",
              "type": "string"
            },
            "diskIopsReadOnly": {
              "description": "The number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.",
              "type": "number"
            },
            "diskIopsReadWrite": {
              "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.",
              "type": "number"
            },
            "diskMbpsReadOnly": {
              "description": "The bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.",
              "type": "number"
            },
            "diskMbpsReadWrite": {
              "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.",
              "type": "number"
            },
            "diskSizeGb": {
              "description": "Specifies the size of the managed disk to create in gigabytes. If create_option is Copy or FromImage, then the value must be equal to or greater than the source's size. The size can only be increased.",
              "type": "number"
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.",
              "type": "string"
            },
            "encryptionSettings": {
              "description": "A encryption_settings block as defined below.",
              "type": "object",
              "properties": {
                "diskEncryptionKey": {
                  "description": "A disk_encryption_key block as defined above.",
                  "type": "object",
                  "properties": {
                    "secretUrl": {
                      "description": "The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.",
                      "type": "string"
                    },
                    "sourceVaultId": {
                      "description": "The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "keyEncryptionKey": {
                  "description": "A key_encryption_key block as defined below.",
                  "type": "object",
                  "properties": {
                    "keyUrl": {
                      "description": "The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.",
                      "type": "string"
                    },
                    "sourceVaultId": {
                      "description": "The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "galleryImageReferenceId": {
              "description": "ID of a Gallery Image Version to copy when create_option is FromImage. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "hyperVGeneration": {
              "description": "The HyperV Generation of the Disk when the source of an Import or Copy operation targets a source that contains an operating system. Possible values are V1 and V2. For ImportSecure it must be set to V2. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "imageReferenceId": {
              "description": "ID of an existing platform/marketplace disk image to copy when create_option is FromImage. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "location": {
              "description": "Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logicalSectorSize": {
              "description": "Logical Sector Size. Possible values are: 512 and 4096. Defaults to 4096. Changing this forces a new resource to be created.",
              "type": "number"
            },
            "maxShares": {
              "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.",
              "type": "number"
            },
            "networkAccessPolicy": {
              "description": "Policy for accessing the disk via network. Allowed values are AllowAll, AllowPrivate, and DenyAll.",
              "type": "string"
            },
            "onDemandBurstingEnabled": {
              "description": "Specifies if On-Demand Bursting is enabled for the Managed Disk.",
              "type": "boolean"
            },
            "optimizedFrequentAttachEnabled": {
              "description": "Specifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to false.",
              "type": "boolean"
            },
            "osType": {
              "description": "Specify a value when the source of an Import, ImportSecure or Copy operation targets a source that contains an operating system. Valid values are Linux or Windows.",
              "type": "string"
            },
            "performancePlusEnabled": {
              "description": "Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether it is allowed to access the disk via public network. Defaults to true.",
              "type": "boolean"
            },
            "secureVmDiskEncryptionSetId": {
              "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "securityType": {
              "description": "Security Type of the Managed Disk when it is used for a Confidential VM. Possible values are ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey, ConfidentialVM_DiskEncryptedWithPlatformKey and ConfidentialVM_DiskEncryptedWithCustomerKey. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sourceResourceId": {
              "description": "The ID of an existing Managed Disk or Snapshot to copy when create_option is Copy or the recovery point to restore when create_option is Restore. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sourceResourceIdRef": {
              "description": "Reference to a ManagedDisk in compute to populate sourceResourceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "sourceResourceIdSelector": {
              "description": "Selector for a ManagedDisk in compute to populate sourceResourceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "sourceUri": {
              "description": "URI to a valid VHD file to be used when create_option is Import or ImportSecure. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageAccountId": {
              "description": "The ID of the Storage Account where the source_uri is located. Required when create_option is set to Import or ImportSecure. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageAccountType": {
              "description": "The type of storage to use for the managed disk. Possible values are Standard_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS, StandardSSD_LRS or UltraSSD_LRS.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tier": {
              "description": "The disk performance tier to use. Possible values are documented here. This feature is currently supported only for premium SSDs.",
              "type": "string"
            },
            "trustedLaunchEnabled": {
              "description": "Specifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "uploadSizeBytes": {
              "description": "Specifies the size of the managed disk to create in bytes. Required when create_option is Upload. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with ls -l or wc -c. More information can be found at Copy a managed disk. Changing this forces a new resource to be created.",
              "type": "number"
            },
            "zone": {
              "description": "Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.createOption) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.createOption))",
          "message": "spec.forProvider.createOption is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.storageAccountType) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.storageAccountType))",
          "message": "spec.forProvider.storageAccountType is a required parameter"
        }
      ]
    },
    "status": {
      "description": "ManagedDiskStatus defines the observed state of ManagedDisk.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "createOption": {
              "description": "The method to use when creating the managed disk. Changing this forces a new resource to be created. Possible values include: * Import - Import a VHD file in to the managed disk (VHD specified with source_uri). * ImportSecure - Securely import a VHD file in to the managed disk (VHD specified with source_uri). * Empty - Create an empty managed disk. * Copy - Copy an existing managed disk or snapshot (specified with source_resource_id). * FromImage - Copy a Platform Image (specified with image_reference_id) * Restore - Set by Azure Backup or Site Recovery on a restored disk (specified with source_resource_id). * Upload - Upload a VHD disk with the help of SAS URL (to be used with upload_size_bytes).",
              "type": "string"
            },
            "diskAccessId": {
              "description": "The ID of the disk access resource for using private endpoints on disks.",
              "type": "string"
            },
            "diskEncryptionSetId": {
              "description": "The ID of a Disk Encryption Set which should be used to encrypt this Managed Disk. Conflicts with secure_vm_disk_encryption_set_id.",
              "type": "string"
            },
            "diskIopsReadOnly": {
              "description": "The number of IOPS allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. One operation can transfer between 4k and 256k bytes.",
              "type": "number"
            },
            "diskIopsReadWrite": {
              "description": "The number of IOPS allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. One operation can transfer between 4k and 256k bytes.",
              "type": "number"
            },
            "diskMbpsReadOnly": {
              "description": "The bandwidth allowed across all VMs mounting the shared disk as read-only; only settable for UltraSSD disks and PremiumV2 disks with shared disk enabled. MBps means millions of bytes per second.",
              "type": "number"
            },
            "diskMbpsReadWrite": {
              "description": "The bandwidth allowed for this disk; only settable for UltraSSD disks and PremiumV2 disks. MBps means millions of bytes per second.",
              "type": "number"
            },
            "diskSizeGb": {
              "description": "Specifies the size of the managed disk to create in gigabytes. If create_option is Copy or FromImage, then the value must be equal to or greater than the source's size. The size can only be increased.",
              "type": "number"
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Managed Disk should exist. Changing this forces a new Managed Disk to be created.",
              "type": "string"
            },
            "encryptionSettings": {
              "description": "A encryption_settings block as defined below.",
              "type": "object",
              "properties": {
                "diskEncryptionKey": {
                  "description": "A disk_encryption_key block as defined above.",
                  "type": "object",
                  "properties": {
                    "secretUrl": {
                      "description": "The URL to the Key Vault Secret used as the Disk Encryption Key. This can be found as id on the azurerm_key_vault_secret resource.",
                      "type": "string"
                    },
                    "sourceVaultId": {
                      "description": "The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "keyEncryptionKey": {
                  "description": "A key_encryption_key block as defined below.",
                  "type": "object",
                  "properties": {
                    "keyUrl": {
                      "description": "The URL to the Key Vault Key used as the Key Encryption Key. This can be found as id on the azurerm_key_vault_key resource.",
                      "type": "string"
                    },
                    "sourceVaultId": {
                      "description": "The ID of the source Key Vault. This can be found as id on the azurerm_key_vault resource.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "galleryImageReferenceId": {
              "description": "ID of a Gallery Image Version to copy when create_option is FromImage. This field cannot be specified if image_reference_id is specified. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "hyperVGeneration": {
              "description": "The HyperV Generation of the Disk when the source of an Import or Copy operation targets a source that contains an operating system. Possible values are V1 and V2. For ImportSecure it must be set to V2. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Managed Disk.",
              "type": "string"
            },
            "imageReferenceId": {
              "description": "ID of an existing platform/marketplace disk image to copy when create_option is FromImage. This field cannot be specified if gallery_image_reference_id is specified. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "location": {
              "description": "Specified the supported Azure location where the resource exists. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "logicalSectorSize": {
              "description": "Logical Sector Size. Possible values are: 512 and 4096. Defaults to 4096. Changing this forces a new resource to be created.",
              "type": "number"
            },
            "maxShares": {
              "description": "The maximum number of VMs that can attach to the disk at the same time. Value greater than one indicates a disk that can be mounted on multiple VMs at the same time.",
              "type": "number"
            },
            "networkAccessPolicy": {
              "description": "Policy for accessing the disk via network. Allowed values are AllowAll, AllowPrivate, and DenyAll.",
              "type": "string"
            },
            "onDemandBurstingEnabled": {
              "description": "Specifies if On-Demand Bursting is enabled for the Managed Disk.",
              "type": "boolean"
            },
            "optimizedFrequentAttachEnabled": {
              "description": "Specifies whether this Managed Disk should be optimized for frequent disk attachments (where a disk is attached/detached more than 5 times in a day). Defaults to false.",
              "type": "boolean"
            },
            "osType": {
              "description": "Specify a value when the source of an Import, ImportSecure or Copy operation targets a source that contains an operating system. Valid values are Linux or Windows.",
              "type": "string"
            },
            "performancePlusEnabled": {
              "description": "Specifies whether Performance Plus is enabled for this Managed Disk. Defaults to false. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether it is allowed to access the disk via public network. Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Managed Disk should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "secureVmDiskEncryptionSetId": {
              "description": "The ID of the Disk Encryption Set which should be used to Encrypt this OS Disk when the Virtual Machine is a Confidential VM. Conflicts with disk_encryption_set_id. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "securityType": {
              "description": "Security Type of the Managed Disk when it is used for a Confidential VM. Possible values are ConfidentialVM_VMGuestStateOnlyEncryptedWithPlatformKey, ConfidentialVM_DiskEncryptedWithPlatformKey and ConfidentialVM_DiskEncryptedWithCustomerKey. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sourceResourceId": {
              "description": "The ID of an existing Managed Disk or Snapshot to copy when create_option is Copy or the recovery point to restore when create_option is Restore. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "sourceUri": {
              "description": "URI to a valid VHD file to be used when create_option is Import or ImportSecure. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageAccountId": {
              "description": "The ID of the Storage Account where the source_uri is located. Required when create_option is set to Import or ImportSecure. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "storageAccountType": {
              "description": "The type of storage to use for the managed disk. Possible values are Standard_LRS, StandardSSD_ZRS, Premium_LRS, PremiumV2_LRS, Premium_ZRS, StandardSSD_LRS or UltraSSD_LRS.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tier": {
              "description": "The disk performance tier to use. Possible values are documented here. This feature is currently supported only for premium SSDs.",
              "type": "string"
            },
            "trustedLaunchEnabled": {
              "description": "Specifies if Trusted Launch is enabled for the Managed Disk. Changing this forces a new resource to be created.",
              "type": "boolean"
            },
            "uploadSizeBytes": {
              "description": "Specifies the size of the managed disk to create in bytes. Required when create_option is Upload. The value must be equal to the source disk to be copied in bytes. Source disk size could be calculated with ls -l or wc -c. More information can be found at Copy a managed disk. Changing this forces a new resource to be created.",
              "type": "number"
            },
            "zone": {
              "description": "Specifies the Availability Zone in which this Managed Disk should be located. Changing this property forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
