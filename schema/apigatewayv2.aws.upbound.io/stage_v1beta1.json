{
  "description": "Stage is the Schema for the Stages API. Manages an Amazon API Gateway Version 2 stage.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "StageSpec defines the desired state of Stage",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "accessLogSettings": {
              "description": "Settings for logging access in this stage.\nUse the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "destinationArn": {
                    "description": "ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.",
                    "type": "string"
                  },
                  "format": {
                    "description": "Single line format of the access logs of data. Refer to log settings for HTTP or Websocket.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "apiId": {
              "description": "API identifier.",
              "type": "string"
            },
            "apiIdRef": {
              "description": "Reference to a API in apigatewayv2 to populate apiId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "apiIdSelector": {
              "description": "Selector for a API in apigatewayv2 to populate apiId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "autoDeploy": {
              "description": "Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.",
              "type": "boolean"
            },
            "clientCertificateId": {
              "description": "Identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.\nSupported only for WebSocket APIs.",
              "type": "string"
            },
            "defaultRouteSettings": {
              "description": "Default route settings for the stage.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTraceEnabled": {
                    "description": "Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.\nDefaults to false. Supported only for WebSocket APIs.",
                    "type": "boolean"
                  },
                  "detailedMetricsEnabled": {
                    "description": "Whether detailed metrics are enabled for the default route. Defaults to false.",
                    "type": "boolean"
                  },
                  "loggingLevel": {
                    "description": "Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.\nValid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.",
                    "type": "string"
                  },
                  "throttlingBurstLimit": {
                    "description": "Throttling burst limit for the default route.",
                    "type": "number"
                  },
                  "throttlingRateLimit": {
                    "description": "Throttling rate limit for the default route.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "deploymentId": {
              "description": "Deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.",
              "type": "string"
            },
            "deploymentIdRef": {
              "description": "Reference to a Deployment in apigatewayv2 to populate deploymentId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "deploymentIdSelector": {
              "description": "Selector for a Deployment in apigatewayv2 to populate deploymentId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Description for the stage. Must be less than or equal to 1024 characters in length.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "routeSettings": {
              "description": "Route settings for the stage.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTraceEnabled": {
                    "description": "Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.\nDefaults to false. Supported only for WebSocket APIs.",
                    "type": "boolean"
                  },
                  "detailedMetricsEnabled": {
                    "description": "Whether detailed metrics are enabled for the route. Defaults to false.",
                    "type": "boolean"
                  },
                  "loggingLevel": {
                    "description": "Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.\nValid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.",
                    "type": "string"
                  },
                  "routeKey": {
                    "description": "Route key.",
                    "type": "string"
                  },
                  "throttlingBurstLimit": {
                    "description": "Throttling burst limit for the route.",
                    "type": "number"
                  },
                  "throttlingRateLimit": {
                    "description": "Throttling rate limit for the route.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "stageVariables": {
              "description": "Map that defines the stage variables for the stage.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "accessLogSettings": {
              "description": "Settings for logging access in this stage.\nUse the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "destinationArn": {
                    "description": "ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.",
                    "type": "string"
                  },
                  "format": {
                    "description": "Single line format of the access logs of data. Refer to log settings for HTTP or Websocket.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "apiId": {
              "description": "API identifier.",
              "type": "string"
            },
            "apiIdRef": {
              "description": "Reference to a API in apigatewayv2 to populate apiId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "apiIdSelector": {
              "description": "Selector for a API in apigatewayv2 to populate apiId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "autoDeploy": {
              "description": "Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.",
              "type": "boolean"
            },
            "clientCertificateId": {
              "description": "Identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.\nSupported only for WebSocket APIs.",
              "type": "string"
            },
            "defaultRouteSettings": {
              "description": "Default route settings for the stage.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTraceEnabled": {
                    "description": "Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.\nDefaults to false. Supported only for WebSocket APIs.",
                    "type": "boolean"
                  },
                  "detailedMetricsEnabled": {
                    "description": "Whether detailed metrics are enabled for the default route. Defaults to false.",
                    "type": "boolean"
                  },
                  "loggingLevel": {
                    "description": "Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.\nValid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.",
                    "type": "string"
                  },
                  "throttlingBurstLimit": {
                    "description": "Throttling burst limit for the default route.",
                    "type": "number"
                  },
                  "throttlingRateLimit": {
                    "description": "Throttling rate limit for the default route.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "deploymentId": {
              "description": "Deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.",
              "type": "string"
            },
            "deploymentIdRef": {
              "description": "Reference to a Deployment in apigatewayv2 to populate deploymentId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "deploymentIdSelector": {
              "description": "Selector for a Deployment in apigatewayv2 to populate deploymentId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Description for the stage. Must be less than or equal to 1024 characters in length.",
              "type": "string"
            },
            "routeSettings": {
              "description": "Route settings for the stage.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTraceEnabled": {
                    "description": "Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.\nDefaults to false. Supported only for WebSocket APIs.",
                    "type": "boolean"
                  },
                  "detailedMetricsEnabled": {
                    "description": "Whether detailed metrics are enabled for the route. Defaults to false.",
                    "type": "boolean"
                  },
                  "loggingLevel": {
                    "description": "Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.\nValid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.",
                    "type": "string"
                  },
                  "routeKey": {
                    "description": "Route key.",
                    "type": "string"
                  },
                  "throttlingBurstLimit": {
                    "description": "Throttling burst limit for the route.",
                    "type": "number"
                  },
                  "throttlingRateLimit": {
                    "description": "Throttling rate limit for the route.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "stageVariables": {
              "description": "Map that defines the stage variables for the stage.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "StageStatus defines the observed state of Stage.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accessLogSettings": {
              "description": "Settings for logging access in this stage.\nUse the aws_api_gateway_account resource to configure permissions for CloudWatch Logging.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "destinationArn": {
                    "description": "ARN of the CloudWatch Logs log group to receive access logs. Any trailing :* is trimmed from the ARN.",
                    "type": "string"
                  },
                  "format": {
                    "description": "Single line format of the access logs of data. Refer to log settings for HTTP or Websocket.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "apiId": {
              "description": "API identifier.",
              "type": "string"
            },
            "arn": {
              "description": "ARN of the stage.",
              "type": "string"
            },
            "autoDeploy": {
              "description": "Whether updates to an API automatically trigger a new deployment. Defaults to false. Applicable for HTTP APIs.",
              "type": "boolean"
            },
            "clientCertificateId": {
              "description": "Identifier of a client certificate for the stage. Use the aws_api_gateway_client_certificate resource to configure a client certificate.\nSupported only for WebSocket APIs.",
              "type": "string"
            },
            "defaultRouteSettings": {
              "description": "Default route settings for the stage.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTraceEnabled": {
                    "description": "Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.\nDefaults to false. Supported only for WebSocket APIs.",
                    "type": "boolean"
                  },
                  "detailedMetricsEnabled": {
                    "description": "Whether detailed metrics are enabled for the default route. Defaults to false.",
                    "type": "boolean"
                  },
                  "loggingLevel": {
                    "description": "Logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.\nValid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.",
                    "type": "string"
                  },
                  "throttlingBurstLimit": {
                    "description": "Throttling burst limit for the default route.",
                    "type": "number"
                  },
                  "throttlingRateLimit": {
                    "description": "Throttling rate limit for the default route.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "deploymentId": {
              "description": "Deployment identifier of the stage. Use the aws_apigatewayv2_deployment resource to configure a deployment.",
              "type": "string"
            },
            "description": {
              "description": "Description for the stage. Must be less than or equal to 1024 characters in length.",
              "type": "string"
            },
            "executionArn": {
              "description": "ARN prefix to be used in an aws_lambda_permission's source_arn attribute.\nFor WebSocket APIs this attribute can additionally be used in an aws_iam_policy to authorize access to the @connections API.\nSee the Amazon API Gateway Developer Guide for details.",
              "type": "string"
            },
            "id": {
              "description": "Stage identifier.",
              "type": "string"
            },
            "invokeUrl": {
              "description": "URL to invoke the API pointing to the stage,\ne.g., wss://z4675bid1j.execute-api.eu-west-2.amazonaws.com/example-stage, or https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "routeSettings": {
              "description": "Route settings for the stage.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataTraceEnabled": {
                    "description": "Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.\nDefaults to false. Supported only for WebSocket APIs.",
                    "type": "boolean"
                  },
                  "detailedMetricsEnabled": {
                    "description": "Whether detailed metrics are enabled for the route. Defaults to false.",
                    "type": "boolean"
                  },
                  "loggingLevel": {
                    "description": "Logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.\nValid values: ERROR, INFO, OFF. Defaults to OFF. Supported only for WebSocket APIs.",
                    "type": "string"
                  },
                  "routeKey": {
                    "description": "Route key.",
                    "type": "string"
                  },
                  "throttlingBurstLimit": {
                    "description": "Throttling burst limit for the route.",
                    "type": "number"
                  },
                  "throttlingRateLimit": {
                    "description": "Throttling rate limit for the route.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "stageVariables": {
              "description": "Map that defines the stage variables for the stage.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
