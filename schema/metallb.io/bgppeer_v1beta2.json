{
  "description": "BGPPeer is the Schema for the peers API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BGPPeerSpec defines the desired state of Peer.",
      "type": "object",
      "required": [
        "myASN"
      ],
      "properties": {
        "bfdProfile": {
          "description": "The name of the BFD Profile to be used for the BFD session associated to the BGP session. If not set, the BFD session won't be set up.",
          "type": "string"
        },
        "connectTime": {
          "description": "Requested BGP connect time, controls how long BGP waits between connection attempts to a neighbor.",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "rule": "duration(self).getSeconds() \u003e= 1 \u0026\u0026 duration(self).getSeconds() \u003c= 65535",
              "message": "connect time should be between 1 seconds to 65535"
            },
            {
              "rule": "duration(self).getMilliseconds() % 1000 == 0",
              "message": "connect time should contain a whole number of seconds"
            }
          ]
        },
        "disableMP": {
          "description": "To set if we want to disable MP BGP that will separate IPv4 and IPv6 route exchanges into distinct BGP sessions.\nDeprecated: DisableMP is deprecated in favor of dualStackAddressFamily.",
          "type": "boolean",
          "default": false
        },
        "dualStackAddressFamily": {
          "description": "To set if we want to enable the neighbor not only for the ipfamily related to its session,\nbut also the other one. This allows to advertise/receive IPv4 prefixes over IPv6 sessions and vice versa.",
          "type": "boolean",
          "default": false
        },
        "dynamicASN": {
          "description": "DynamicASN detects the AS number to use for the remote end of the session\nwithout explicitly setting it via the ASN field. Limited to:\ninternal - if the neighbor's ASN is different than MyASN connection is denied.\nexternal - if the neighbor's ASN is the same as MyASN the connection is denied.\nASN and DynamicASN are mutually exclusive and one of them must be specified.",
          "type": "string",
          "enum": [
            "internal",
            "external"
          ]
        },
        "ebgpMultiHop": {
          "description": "To set if the BGPPeer is multi-hops away. Needed for FRR mode only.",
          "type": "boolean"
        },
        "enableGracefulRestart": {
          "description": "EnableGracefulRestart allows BGP peer to continue to forward data packets\nalong known routes while the routing protocol information is being\nrestored. This field is immutable because it requires restart of the BGP\nsession. Supported for FRR mode only.",
          "type": "boolean",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "EnableGracefulRestart cannot be changed after creation"
            }
          ]
        },
        "holdTime": {
          "description": "Requested BGP hold time, per RFC4271.",
          "type": "string"
        },
        "interface": {
          "description": "Interface is the node interface over which the unnumbered BGP peering will\nbe established. No API validation takes place as that string value\nrepresents an interface name on the host and if user provides an invalid\nvalue, only the actual BGP session will not be established.\nAddress and Interface are mutually exclusive and one of them must be specified.",
          "type": "string"
        },
        "keepaliveTime": {
          "description": "Requested BGP keepalive time, per RFC4271.",
          "type": "string"
        },
        "myASN": {
          "description": "AS number to use for the local end of the session.",
          "type": "integer",
          "format": "int32",
          "maximum": 4294967295,
          "minimum": 0
        },
        "nodeSelectors": {
          "description": "Only connect to this peer on nodes that match one of these\nselectors.",
          "type": "array",
          "items": {
            "description": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.",
            "type": "object",
            "properties": {
              "matchExpressions": {
                "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                "type": "array",
                "items": {
                  "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                  "type": "object",
                  "required": [
                    "key",
                    "operator"
                  ],
                  "properties": {
                    "key": {
                      "description": "key is the label key that the selector applies to.",
                      "type": "string"
                    },
                    "operator": {
                      "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                      "type": "string"
                    },
                    "values": {
                      "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "x-kubernetes-list-type": "atomic"
                    }
                  },
                  "additionalProperties": false
                },
                "x-kubernetes-list-type": "atomic"
              },
              "matchLabels": {
                "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            },
            "additionalProperties": false,
            "x-kubernetes-map-type": "atomic"
          }
        },
        "password": {
          "description": "Authentication password for routers enforcing TCP MD5 authenticated sessions",
          "type": "string"
        },
        "passwordSecret": {
          "description": "passwordSecret is name of the authentication secret for BGP Peer.\nthe secret must be of type \"kubernetes.io/basic-auth\", and created in the\nsame namespace as the MetalLB deployment. The password is stored in the\nsecret as the key \"password\".",
          "type": "object",
          "properties": {
            "name": {
              "description": "name is unique within a namespace to reference a secret resource.",
              "type": "string"
            },
            "namespace": {
              "description": "namespace defines the space within which the secret name must be unique.",
              "type": "string"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        },
        "peerASN": {
          "description": "AS number to expect from the remote end of the session.\nASN and DynamicASN are mutually exclusive and one of them must be specified.",
          "type": "integer",
          "format": "int32",
          "maximum": 4294967295,
          "minimum": 0
        },
        "peerAddress": {
          "description": "Address to dial when establishing the session.",
          "type": "string"
        },
        "peerPort": {
          "description": "Port to dial when establishing the session.",
          "type": "integer",
          "default": 179,
          "maximum": 16384,
          "minimum": 1
        },
        "routerID": {
          "description": "BGP router ID to advertise to the peer",
          "type": "string"
        },
        "sourceAddress": {
          "description": "Source address to use when establishing the session.",
          "type": "string"
        },
        "vrf": {
          "description": "To set if we want to peer with the BGPPeer using an interface belonging to\na host vrf",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "BGPPeerStatus defines the observed state of Peer.",
      "type": "object"
    }
  }
}
