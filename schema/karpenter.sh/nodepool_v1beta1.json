{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "template"
      ],
      "properties": {
        "disruption": {
          "type": "object",
          "default": {
            "consolidationPolicy": "WhenUnderutilized",
            "expireAfter": "720h"
          },
          "properties": {
            "budgets": {
              "type": "array",
              "default": [
                {
                  "nodes": "10%"
                }
              ],
              "maxItems": 50,
              "items": {
                "type": "object",
                "required": [
                  "nodes"
                ],
                "properties": {
                  "duration": {
                    "type": "string",
                    "pattern": "^((([0-9]+(h|m))|([0-9]+h[0-9]+m))(0s)?)$"
                  },
                  "nodes": {
                    "type": "string",
                    "default": "10%",
                    "pattern": "^((100|[0-9]{1,2})%|[0-9]+)$"
                  },
                  "schedule": {
                    "type": "string",
                    "pattern": "^(@(annually|yearly|monthly|weekly|daily|midnight|hourly))|((.+)\\s(.+)\\s(.+)\\s(.+)\\s(.+))$"
                  }
                },
                "additionalProperties": false
              },
              "x-kubernetes-validations": [
                {
                  "rule": "self.all(x, has(x.schedule) == has(x.duration))",
                  "message": "'schedule' must be set with 'duration'"
                }
              ]
            },
            "consolidateAfter": {
              "type": "string",
              "pattern": "^(([0-9]+(s|m|h))+)|(Never)$"
            },
            "consolidationPolicy": {
              "type": "string",
              "default": "WhenUnderutilized",
              "enum": [
                "WhenEmpty",
                "WhenUnderutilized"
              ]
            },
            "expireAfter": {
              "type": "string",
              "default": "720h",
              "pattern": "^(([0-9]+(s|m|h))+)|(Never)$"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-validations": [
            {
              "rule": "has(self.consolidateAfter) ? self.consolidationPolicy != 'WhenUnderutilized' || self.consolidateAfter == 'Never' : true",
              "message": "consolidateAfter cannot be combined with consolidationPolicy=WhenUnderutilized"
            },
            {
              "rule": "self.consolidationPolicy == 'WhenEmpty' ? has(self.consolidateAfter) : true",
              "message": "consolidateAfter must be specified with consolidationPolicy=WhenEmpty"
            }
          ]
        },
        "limits": {
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          }
        },
        "template": {
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "metadata": {
              "type": "object",
              "properties": {
                "annotations": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "type": "object",
                  "maxProperties": 100,
                  "additionalProperties": {
                    "type": "string",
                    "maxLength": 63,
                    "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$"
                  },
                  "x-kubernetes-validations": [
                    {
                      "rule": "self.all(x, x in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\",  \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || x.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || x.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !x.find(\"^([^/]+)\").endsWith(\"kubernetes.io\"))",
                      "message": "label domain \"kubernetes.io\" is restricted"
                    },
                    {
                      "rule": "self.all(x, x.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !x.find(\"^([^/]+)\").endsWith(\"k8s.io\"))",
                      "message": "label domain \"k8s.io\" is restricted"
                    },
                    {
                      "rule": "self.all(x, x in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.sh\"))",
                      "message": "label domain \"karpenter.sh\" is restricted"
                    },
                    {
                      "rule": "self.all(x, x != \"karpenter.sh/nodepool\")",
                      "message": "label \"karpenter.sh/nodepool\" is restricted"
                    },
                    {
                      "rule": "self.all(x, x != \"kubernetes.io/hostname\")",
                      "message": "label \"kubernetes.io/hostname\" is restricted"
                    },
                    {
                      "rule": "self.all(x, x in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-cpu-manufacturer\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-ebs-bandwidth\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !x.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\"))",
                      "message": "label domain \"karpenter.k8s.aws\" is restricted"
                    }
                  ]
                }
              },
              "additionalProperties": false
            },
            "spec": {
              "type": "object",
              "required": [
                "nodeClassRef",
                "requirements"
              ],
              "properties": {
                "kubelet": {
                  "type": "object",
                  "properties": {
                    "clusterDNS": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "cpuCFSQuota": {
                      "type": "boolean"
                    },
                    "evictionHard": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "pattern": "^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$"
                      },
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])",
                          "message": "valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']"
                        }
                      ]
                    },
                    "evictionMaxPodGracePeriod": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "evictionSoft": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "pattern": "^((\\d{1,2}(\\.\\d{1,2})?|100(\\.0{1,2})?)%||(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?)$"
                      },
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])",
                          "message": "valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']"
                        }
                      ]
                    },
                    "evictionSoftGracePeriod": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])",
                          "message": "valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']"
                        }
                      ]
                    },
                    "imageGCHighThresholdPercent": {
                      "type": "integer",
                      "format": "int32",
                      "maximum": 100,
                      "minimum": 0
                    },
                    "imageGCLowThresholdPercent": {
                      "type": "integer",
                      "format": "int32",
                      "maximum": 100,
                      "minimum": 0
                    },
                    "kubeReserved": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      },
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')",
                          "message": "valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']"
                        },
                        {
                          "rule": "self.all(x, !self[x].startsWith('-'))",
                          "message": "kubeReserved value cannot be a negative resource quantity"
                        }
                      ]
                    },
                    "maxPods": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    },
                    "podsPerCore": {
                      "type": "integer",
                      "format": "int32",
                      "minimum": 0
                    },
                    "systemReserved": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string",
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$"
                      },
                      "x-kubernetes-validations": [
                        {
                          "rule": "self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage' || x=='pid')",
                          "message": "valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']"
                        },
                        {
                          "rule": "self.all(x, !self[x].startsWith('-'))",
                          "message": "systemReserved value cannot be a negative resource quantity"
                        }
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "x-kubernetes-validations": [
                    {
                      "rule": "has(self.imageGCHighThresholdPercent) \u0026\u0026 has(self.imageGCLowThresholdPercent) ?  self.imageGCHighThresholdPercent \u003e self.imageGCLowThresholdPercent  : true",
                      "message": "imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent"
                    },
                    {
                      "rule": "has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true",
                      "message": "evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod"
                    },
                    {
                      "rule": "has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e, (e in self.evictionSoft)):true",
                      "message": "evictionSoftGracePeriod OwnerKey does not have a matching evictionSoft"
                    }
                  ]
                },
                "nodeClassRef": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "apiVersion": {
                      "type": "string"
                    },
                    "kind": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "requirements": {
                  "type": "array",
                  "maxItems": 100,
                  "items": {
                    "type": "object",
                    "required": [
                      "key",
                      "operator"
                    ],
                    "properties": {
                      "key": {
                        "type": "string",
                        "maxLength": 316,
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$",
                        "x-kubernetes-validations": [
                          {
                            "rule": "self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")",
                            "message": "label domain \"kubernetes.io\" is restricted"
                          },
                          {
                            "rule": "self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")",
                            "message": "label domain \"k8s.io\" is restricted"
                          },
                          {
                            "rule": "self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")",
                            "message": "label domain \"karpenter.sh\" is restricted"
                          },
                          {
                            "rule": "self != \"karpenter.sh/nodepool\"",
                            "message": "label \"karpenter.sh/nodepool\" is restricted"
                          },
                          {
                            "rule": "self != \"kubernetes.io/hostname\"",
                            "message": "label \"kubernetes.io/hostname\" is restricted"
                          },
                          {
                            "rule": "self in [\"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\",\"karpenter.k8s.aws/instance-cpu-manufacturer\",\"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-ebs-bandwidth\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")",
                            "message": "label domain \"karpenter.k8s.aws\" is restricted"
                          }
                        ]
                      },
                      "minValues": {
                        "type": "integer",
                        "maximum": 50,
                        "minimum": 1
                      },
                      "operator": {
                        "type": "string",
                        "enum": [
                          "In",
                          "NotIn",
                          "Exists",
                          "DoesNotExist",
                          "Gt",
                          "Lt"
                        ]
                      },
                      "values": {
                        "type": "array",
                        "maxLength": 63,
                        "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$",
                        "items": {
                          "type": "string"
                        },
                        "x-kubernetes-list-type": "atomic"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-validations": [
                    {
                      "rule": "self.all(x, x.operator == 'In' ? x.values.size() != 0 : true)",
                      "message": "requirements with operator 'In' must have a value defined"
                    },
                    {
                      "rule": "self.all(x, (x.operator == 'Gt' || x.operator == 'Lt') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)",
                      "message": "requirements operator 'Gt' or 'Lt' must have a single positive integer value"
                    },
                    {
                      "rule": "self.all(x, (x.operator == 'In' \u0026\u0026 has(x.minValues)) ? x.values.size() \u003e= x.minValues : true)",
                      "message": "requirements with 'minValues' must have at least that many values specified in the 'values' field"
                    }
                  ]
                },
                "resources": {
                  "type": "object",
                  "maxProperties": 0,
                  "properties": {
                    "requests": {
                      "type": "object",
                      "additionalProperties": {
                        "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                        "anyOf": [
                          {
                            "type": "integer"
                          },
                          {
                            "type": "string"
                          }
                        ],
                        "x-kubernetes-int-or-string": true
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "startupTaints": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "effect",
                      "key"
                    ],
                    "properties": {
                      "effect": {
                        "type": "string",
                        "enum": [
                          "NoSchedule",
                          "PreferNoSchedule",
                          "NoExecute"
                        ]
                      },
                      "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
                      },
                      "timeAdded": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "value": {
                        "type": "string",
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "taints": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "effect",
                      "key"
                    ],
                    "properties": {
                      "effect": {
                        "type": "string",
                        "enum": [
                          "NoSchedule",
                          "PreferNoSchedule",
                          "NoExecute"
                        ]
                      },
                      "key": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
                      },
                      "timeAdded": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "value": {
                        "type": "string",
                        "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "weight": {
          "type": "integer",
          "format": "int32",
          "maximum": 100,
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          }
        }
      },
      "additionalProperties": false
    }
  }
}
