{
  "description": "NodeClaim is the Schema for the NodeClaims API",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "NodeClaimSpec describes the desired state of the NodeClaim",
      "type": "object",
      "required": [
        "nodeClassRef",
        "requirements"
      ],
      "properties": {
        "expireAfter": {
          "description": "ExpireAfter is the duration the controller will wait\nbefore terminating a node, measured from when the node is created. This\nis useful to implement features like eventually consistent node upgrade,\nmemory leak protection, and disruption testing.",
          "type": "string",
          "default": "720h",
          "pattern": "^(([0-9]+(s|m|h))+|Never)$"
        },
        "nodeClassRef": {
          "description": "NodeClassRef is a reference to an object that defines provider specific configuration",
          "type": "object",
          "required": [
            "group",
            "kind",
            "name"
          ],
          "properties": {
            "group": {
              "description": "API version of the referent",
              "type": "string",
              "pattern": "^[^/]*$",
              "x-kubernetes-validations": [
                {
                  "rule": "self != ''",
                  "message": "group may not be empty"
                }
              ]
            },
            "kind": {
              "description": "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\"",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "self != ''",
                  "message": "kind may not be empty"
                }
              ]
            },
            "name": {
              "description": "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "self != ''",
                  "message": "name may not be empty"
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "requirements": {
          "description": "Requirements are layered with GetLabels and applied to every node.",
          "type": "array",
          "maxItems": 100,
          "items": {
            "description": "A node selector requirement with min values is a selector that contains values, a key, an operator that relates the key and values\nand minValues that represent the requirement to have at least that many values.",
            "type": "object",
            "required": [
              "key",
              "operator"
            ],
            "properties": {
              "key": {
                "description": "The label key that the selector applies to.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$",
                "x-kubernetes-validations": [
                  {
                    "rule": "self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")",
                    "message": "label domain \"kubernetes.io\" is restricted"
                  },
                  {
                    "rule": "self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")",
                    "message": "label domain \"k8s.io\" is restricted"
                  },
                  {
                    "rule": "self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")",
                    "message": "label domain \"karpenter.sh\" is restricted"
                  },
                  {
                    "rule": "self != \"kubernetes.io/hostname\"",
                    "message": "label \"kubernetes.io/hostname\" is restricted"
                  },
                  {
                    "rule": "self in [\"karpenter.k8s.aws/capacity-reservation-type\", \"karpenter.k8s.aws/capacity-reservation-id\", \"karpenter.k8s.aws/ec2nodeclass\", \"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\", \"karpenter.k8s.aws/instance-cpu-manufacturer\", \"karpenter.k8s.aws/instance-cpu-sustained-clock-speed-mhz\", \"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-ebs-bandwidth\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\", \"karpenter.k8s.aws/instance-capability-flex\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")",
                    "message": "label domain \"karpenter.k8s.aws\" is restricted"
                  }
                ]
              },
              "minValues": {
                "description": "This field is ALPHA and can be dropped or replaced at any time\nMinValues is the minimum number of unique values required to define the flexibility of the specific requirement.",
                "type": "integer",
                "maximum": 50,
                "minimum": 1
              },
              "operator": {
                "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                "type": "string",
                "enum": [
                  "In",
                  "NotIn",
                  "Exists",
                  "DoesNotExist",
                  "Gt",
                  "Lt"
                ]
              },
              "values": {
                "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                "type": "array",
                "maxLength": 63,
                "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(x, x.operator == 'In' ? x.values.size() != 0 : true)",
              "message": "requirements with operator 'In' must have a value defined"
            },
            {
              "rule": "self.all(x, (x.operator == 'Gt' || x.operator == 'Lt') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)",
              "message": "requirements operator 'Gt' or 'Lt' must have a single positive integer value"
            },
            {
              "rule": "self.all(x, (x.operator == 'In' \u0026\u0026 has(x.minValues)) ? x.values.size() \u003e= x.minValues : true)",
              "message": "requirements with 'minValues' must have at least that many values specified in the 'values' field"
            }
          ]
        },
        "resources": {
          "description": "Resources models the resource requirements for the NodeClaim to launch",
          "type": "object",
          "properties": {
            "requests": {
              "description": "Requests describes the minimum required resources for the NodeClaim to launch",
              "type": "object",
              "additionalProperties": {
                "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "string"
                  }
                ],
                "x-kubernetes-int-or-string": true
              }
            }
          },
          "additionalProperties": false
        },
        "startupTaints": {
          "description": "StartupTaints are taints that are applied to nodes upon startup which are expected to be removed automatically\nwithin a short period of time, typically by a DaemonSet that tolerates the taint. These are commonly used by\ndaemonsets to allow initialization and enforce startup ordering.  StartupTaints are ignored for provisioning\npurposes in that pods are not required to tolerate a StartupTaint in order to have nodes provisioned for them.",
          "type": "array",
          "items": {
            "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
            "type": "object",
            "required": [
              "effect",
              "key"
            ],
            "properties": {
              "effect": {
                "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string",
                "enum": [
                  "NoSchedule",
                  "PreferNoSchedule",
                  "NoExecute"
                ]
              },
              "key": {
                "description": "Required. The taint key to be applied to a node.",
                "type": "string",
                "minLength": 1,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
              },
              "timeAdded": {
                "description": "TimeAdded represents the time at which the taint was added.",
                "type": "string",
                "format": "date-time"
              },
              "value": {
                "description": "The taint value corresponding to the taint key.",
                "type": "string",
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
              }
            },
            "additionalProperties": false
          }
        },
        "taints": {
          "description": "Taints will be applied to the NodeClaim's node.",
          "type": "array",
          "items": {
            "description": "The node this Taint is attached to has the \"effect\" on\nany pod that does not tolerate the Taint.",
            "type": "object",
            "required": [
              "effect",
              "key"
            ],
            "properties": {
              "effect": {
                "description": "Required. The effect of the taint on pods\nthat do not tolerate the taint.\nValid effects are NoSchedule, PreferNoSchedule and NoExecute.",
                "type": "string",
                "enum": [
                  "NoSchedule",
                  "PreferNoSchedule",
                  "NoExecute"
                ]
              },
              "key": {
                "description": "Required. The taint key to be applied to a node.",
                "type": "string",
                "minLength": 1,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
              },
              "timeAdded": {
                "description": "TimeAdded represents the time at which the taint was added.",
                "type": "string",
                "format": "date-time"
              },
              "value": {
                "description": "The taint value corresponding to the taint key.",
                "type": "string",
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$"
              }
            },
            "additionalProperties": false
          }
        },
        "terminationGracePeriod": {
          "description": "TerminationGracePeriod is the maximum duration the controller will wait before forcefully deleting the pods on a node, measured from when deletion is first initiated.\n\nWarning: this feature takes precedence over a Pod's terminationGracePeriodSeconds value, and bypasses any blocked PDBs or the karpenter.sh/do-not-disrupt annotation.\n\nThis field is intended to be used by cluster administrators to enforce that nodes can be cycled within a given time period.\nWhen set, drifted nodes will begin draining even if there are pods blocking eviction. Draining will respect PDBs and the do-not-disrupt annotation until the TGP is reached.\n\nKarpenter will preemptively delete pods so their terminationGracePeriodSeconds align with the node's terminationGracePeriod.\nIf a pod would be terminated without being granted its full terminationGracePeriodSeconds prior to the node timeout,\nthat pod will be deleted at T = node timeout - pod terminationGracePeriodSeconds.\n\nThe feature can also be used to allow maximum time limits for long-running jobs which can delay node termination with preStop hooks.\nIf left undefined, the controller will wait indefinitely for pods to be drained.",
          "type": "string",
          "pattern": "^([0-9]+(s|m|h))+$"
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "self == oldSelf",
          "message": "spec is immutable"
        }
      ]
    },
    "status": {
      "description": "NodeClaimStatus defines the observed state of NodeClaim",
      "type": "object",
      "properties": {
        "allocatable": {
          "description": "Allocatable is the estimated allocatable capacity of the node",
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          }
        },
        "capacity": {
          "description": "Capacity is the estimated full capacity of the node",
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          }
        },
        "conditions": {
          "description": "Conditions contains signals for health and readiness",
          "type": "array",
          "items": {
            "description": "Condition aliases the upstream type and adds additional helper methods",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "pattern": "^([A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?|)$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "imageID": {
          "description": "ImageID is an identifier for the image that runs on the node",
          "type": "string"
        },
        "lastPodEventTime": {
          "description": "LastPodEventTime is updated with the last time a pod was scheduled\nor removed from the node. A pod going terminal or terminating\nis also considered as removed.",
          "type": "string",
          "format": "date-time"
        },
        "nodeName": {
          "description": "NodeName is the name of the corresponding node object",
          "type": "string"
        },
        "providerID": {
          "description": "ProviderID of the corresponding node object",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
