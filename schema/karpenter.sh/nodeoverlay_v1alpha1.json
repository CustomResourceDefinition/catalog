{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "requirements"
      ],
      "properties": {
        "capacity": {
          "description": "Capacity adds extended resources only, and does not replace any existing resources.\nThese extended resources are appended to the node's existing resource list.\nNote: This field does not modify or override standard resources like cpu, memory, ephemeral-storage, or pods.",
          "type": "object",
          "additionalProperties": {
            "pattern": "^(\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\\+|-)?(([0-9]+(\\.[0-9]*)?)|(\\.[0-9]+))))?$",
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "x-kubernetes-int-or-string": true
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(x, !(x in ['cpu', 'memory', 'ephemeral-storage', 'pods']))",
              "message": "invalid resource restricted"
            }
          ]
        },
        "price": {
          "description": "Price specifies amount for an instance types that match the specified labels. Users can override prices using a signed float representing the price override",
          "type": "string",
          "pattern": "^\\d+(\\.\\d+)?$"
        },
        "priceAdjustment": {
          "description": "PriceAdjustment specifies the price change for matching instance types. Accepts either:\n- A fixed price modifier (e.g., -0.5, 1.2)\n- A percentage modifier (e.g., +10% for increase, -15% for decrees)",
          "type": "string",
          "pattern": "^(([+-]{1}(\\d*\\.?\\d+))|(\\+{1}\\d*\\.?\\d+%)|(^(-\\d{1,2}(\\.\\d+)?%)$)|(-100%))$"
        },
        "requirements": {
          "description": "Requirements constrain when this NodeOverlay is applied during scheduling simulations.\nThese requirements can match:\n- Well-known labels (e.g., node.kubernetes.io/instance-type, karpenter.sh/nodepool)\n- Custom labels from NodePool's spec.template.labels",
          "type": "array",
          "maxItems": 100,
          "items": {
            "description": "A node selector requirement is a selector that contains values, a key, and an operator\nthat relates the key and values.",
            "type": "object",
            "required": [
              "key",
              "operator"
            ],
            "properties": {
              "key": {
                "description": "The label key that the selector applies to.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*(\\/))?([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$",
                "x-kubernetes-validations": [
                  {
                    "rule": "self in [\"beta.kubernetes.io/instance-type\", \"failure-domain.beta.kubernetes.io/region\", \"beta.kubernetes.io/os\", \"beta.kubernetes.io/arch\", \"failure-domain.beta.kubernetes.io/zone\", \"topology.kubernetes.io/zone\", \"topology.kubernetes.io/region\", \"node.kubernetes.io/instance-type\", \"kubernetes.io/arch\", \"kubernetes.io/os\", \"node.kubernetes.io/windows-build\"] || self.find(\"^([^/]+)\").endsWith(\"node.kubernetes.io\") || self.find(\"^([^/]+)\").endsWith(\"node-restriction.kubernetes.io\") || !self.find(\"^([^/]+)\").endsWith(\"kubernetes.io\")",
                    "message": "label domain \"kubernetes.io\" is restricted"
                  },
                  {
                    "rule": "self.find(\"^([^/]+)\").endsWith(\"kops.k8s.io\") || !self.find(\"^([^/]+)\").endsWith(\"k8s.io\")",
                    "message": "label domain \"k8s.io\" is restricted"
                  },
                  {
                    "rule": "self in [\"karpenter.sh/capacity-type\", \"karpenter.sh/nodepool\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.sh\")",
                    "message": "label domain \"karpenter.sh\" is restricted"
                  },
                  {
                    "rule": "self != \"kubernetes.io/hostname\"",
                    "message": "label \"kubernetes.io/hostname\" is restricted"
                  },
                  {
                    "rule": "self in [\"karpenter.k8s.aws/ec2nodeclass\", \"karpenter.k8s.aws/instance-encryption-in-transit-supported\", \"karpenter.k8s.aws/instance-category\", \"karpenter.k8s.aws/instance-hypervisor\", \"karpenter.k8s.aws/instance-family\", \"karpenter.k8s.aws/instance-generation\", \"karpenter.k8s.aws/instance-local-nvme\", \"karpenter.k8s.aws/instance-size\", \"karpenter.k8s.aws/instance-cpu\", \"karpenter.k8s.aws/instance-cpu-manufacturer\", \"karpenter.k8s.aws/instance-cpu-sustained-clock-speed-mhz\", \"karpenter.k8s.aws/instance-memory\", \"karpenter.k8s.aws/instance-ebs-bandwidth\", \"karpenter.k8s.aws/instance-network-bandwidth\", \"karpenter.k8s.aws/instance-gpu-name\", \"karpenter.k8s.aws/instance-gpu-manufacturer\", \"karpenter.k8s.aws/instance-gpu-count\", \"karpenter.k8s.aws/instance-gpu-memory\", \"karpenter.k8s.aws/instance-accelerator-name\", \"karpenter.k8s.aws/instance-accelerator-manufacturer\", \"karpenter.k8s.aws/instance-accelerator-count\", \"karpenter.k8s.aws/instance-capability-flex\"] || !self.find(\"^([^/]+)\").endsWith(\"karpenter.k8s.aws\")",
                    "message": "label domain \"karpenter.k8s.aws\" is restricted"
                  }
                ]
              },
              "operator": {
                "description": "Represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.",
                "type": "string",
                "enum": [
                  "In",
                  "NotIn",
                  "Exists",
                  "DoesNotExist",
                  "Gt",
                  "Lt"
                ]
              },
              "values": {
                "description": "An array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. If the operator is Gt or Lt, the values\narray must have a single element, which will be interpreted as an integer.\nThis array is replaced during a strategic merge patch.",
                "type": "array",
                "maxLength": 63,
                "pattern": "^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$",
                "items": {
                  "type": "string"
                },
                "x-kubernetes-list-type": "atomic"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self.all(x, x.operator == 'NotIn' ? x.values.size() != 0 : true)",
              "message": "requirements with operator 'NotIn' must have a value defined"
            },
            {
              "rule": "self.all(x, x.operator == 'In' ? x.values.size() != 0 : true)",
              "message": "requirements with operator 'In' must have a value defined"
            },
            {
              "rule": "self.all(x, (x.operator == 'Gt' || x.operator == 'Lt') ? (x.values.size() == 1 \u0026\u0026 int(x.values[0]) \u003e= 0) : true)",
              "message": "requirements operator 'Gt' or 'Lt' must have a single positive integer value"
            }
          ]
        },
        "weight": {
          "description": "Weight defines the priority of this NodeOverlay when overriding node attributes.\nNodeOverlays with higher numerical weights take precedence over those with lower weights.\nIf no weight is specified, the NodeOverlay is treated as having a weight of 0.\nWhen multiple NodeOverlays have identical weights, they are merged in alphabetical order.",
          "type": "integer",
          "format": "int32",
          "maximum": 10000,
          "minimum": 1
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!has(self.price) || !has(self.priceAdjustment)",
          "message": "cannot set both 'price' and 'priceAdjustment'"
        }
      ]
    },
    "status": {
      "description": "NodeOverlayStatus defines the observed state of NodeOverlay",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions contains signals for health and readiness",
          "type": "array",
          "items": {
            "description": "Condition aliases the upstream type and adds additional helper methods",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    }
  }
}
