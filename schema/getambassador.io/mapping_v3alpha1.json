{
  "description": "Mapping is the Schema for the mappings API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "MappingSpec defines the desired state of Mapping",
      "type": "object",
      "required": [
        "prefix",
        "service"
      ],
      "properties": {
        "add_linkerd_headers": {
          "type": "boolean"
        },
        "add_request_headers": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "append": {
                "type": "boolean"
              },
              "v2Representation": {
                "type": "string",
                "enum": [
                  "",
                  "string",
                  "null"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "add_response_headers": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "append": {
                "type": "boolean"
              },
              "v2Representation": {
                "type": "string",
                "enum": [
                  "",
                  "string",
                  "null"
                ]
              },
              "value": {
                "type": "string"
              }
            }
          }
        },
        "allow_upgrade": {
          "description": "A case-insensitive list of the non-HTTP protocols to allow \"upgrading\" to from HTTP via the \"Connection: upgrade\" mechanism[1].  After the upgrade, Ambassador does not interpret the traffic, and behaves similarly to how it does for TCPMappings. \n [1]: https://tools.ietf.org/html/rfc7230#section-6.7 \n For example, if your upstream service supports WebSockets, you would write \n allow_upgrade: - websocket \n Or if your upstream service supports upgrading from HTTP to SPDY (as the Kubernetes apiserver does for `kubectl exec` functionality), you would write \n allow_upgrade: - spdy/3.1",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ambassador_id": {
          "description": "AmbassadorID declares which Ambassador instances should pay attention to this resource. If no value is provided, the default is: \n ambassador_id: - \"default\"",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auth_context_extensions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "auto_host_rewrite": {
          "type": "boolean"
        },
        "bypass_auth": {
          "type": "boolean"
        },
        "bypass_error_response_overrides": {
          "description": "If true, bypasses any `error_response_overrides` set on the Ambassador module.",
          "type": "boolean"
        },
        "case_sensitive": {
          "type": "boolean"
        },
        "circuit_breakers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "max_connections": {
                "type": "integer"
              },
              "max_pending_requests": {
                "type": "integer"
              },
              "max_requests": {
                "type": "integer"
              },
              "max_retries": {
                "type": "integer"
              },
              "priority": {
                "type": "string",
                "enum": [
                  "default",
                  "high"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "cluster_idle_timeout_ms": {
          "type": "integer"
        },
        "cluster_max_connection_lifetime_ms": {
          "type": "integer"
        },
        "cluster_tag": {
          "type": "string"
        },
        "connect_timeout_ms": {
          "type": "integer"
        },
        "cors": {
          "type": "object",
          "properties": {
            "credentials": {
              "type": "boolean"
            },
            "exposed_headers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "headers": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "max_age": {
              "type": "string"
            },
            "methods": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "origins": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "v2CommaSeparatedOrigins": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "dns_type": {
          "type": "string"
        },
        "docs": {
          "description": "DocsInfo provides some extra information about the docs for the Mapping. Docs is used by both the agent and the DevPortal.",
          "type": "object",
          "properties": {
            "display_name": {
              "type": "string"
            },
            "ignored": {
              "type": "boolean"
            },
            "path": {
              "type": "string"
            },
            "timeout_ms": {
              "type": "integer"
            },
            "url": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "enable_ipv4": {
          "type": "boolean"
        },
        "enable_ipv6": {
          "type": "boolean"
        },
        "envoy_override": {
          "type": "object",
          "x-kubernetes-preserve-unknown-fields": true
        },
        "error_response_overrides": {
          "description": "Error response overrides for this Mapping. Replaces all of the `error_response_overrides` set on the Ambassador module, if any.",
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "A response rewrite for an HTTP error response",
            "type": "object",
            "required": [
              "body",
              "on_status_code"
            ],
            "properties": {
              "body": {
                "description": "The new response body",
                "type": "object",
                "properties": {
                  "content_type": {
                    "description": "The content type to set on the error response body when using text_format or text_format_source. Defaults to 'text/plain'.",
                    "type": "string"
                  },
                  "json_format": {
                    "description": "A JSON response with content-type: application/json. The values can contain format text like in text_format.",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  },
                  "text_format": {
                    "description": "A format string representing a text response body. Content-Type can be set using the `content_type` field below.",
                    "type": "string"
                  },
                  "text_format_source": {
                    "description": "A format string sourced from a file on the Ambassador container. Useful for larger response bodies that should not be placed inline in configuration.",
                    "type": "object",
                    "properties": {
                      "filename": {
                        "description": "The name of a file on the Ambassador pod that contains a format text string.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "on_status_code": {
                "description": "The status code to match on -- not a pointer because it's required.",
                "type": "integer",
                "maximum": 599,
                "minimum": 400
              }
            },
            "additionalProperties": false
          }
        },
        "grpc": {
          "type": "boolean"
        },
        "headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "health_checks": {
          "type": "array",
          "minItems": 1,
          "items": {
            "description": "HealthCheck specifies settings for performing active health checking on upstreams",
            "type": "object",
            "required": [
              "health_check"
            ],
            "properties": {
              "health_check": {
                "description": "Configuration for where the healthcheck request should be made to",
                "type": "object",
                "maxProperties": 1,
                "minProperties": 1,
                "properties": {
                  "grpc": {
                    "description": "HealthCheck for gRPC upstreams. Only one of grpc_health_check or http_health_check may be specified",
                    "type": "object",
                    "required": [
                      "upstream_name"
                    ],
                    "properties": {
                      "authority": {
                        "description": "The value of the :authority header in the gRPC health check request. If left empty the upstream name will be used.",
                        "type": "string"
                      },
                      "upstream_name": {
                        "description": "The upstream name parameter which will be sent to gRPC service in the health check message",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "http": {
                    "description": "HealthCheck for HTTP upstreams. Only one of http_health_check or grpc_health_check may be specified",
                    "type": "object",
                    "required": [
                      "path"
                    ],
                    "properties": {
                      "add_request_headers": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object",
                          "properties": {
                            "append": {
                              "type": "boolean"
                            },
                            "v2Representation": {
                              "type": "string",
                              "enum": [
                                "",
                                "string",
                                "null"
                              ]
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "expected_statuses": {
                        "type": "array",
                        "items": {
                          "description": "A range of response statuses from Start to End inclusive",
                          "type": "object",
                          "required": [
                            "max",
                            "min"
                          ],
                          "properties": {
                            "max": {
                              "description": "End of the statuses to include. Must be between 100 and 599 (inclusive)",
                              "type": "integer",
                              "maximum": 599,
                              "minimum": 100
                            },
                            "min": {
                              "description": "Start of the statuses to include. Must be between 100 and 599 (inclusive)",
                              "type": "integer",
                              "maximum": 599,
                              "minimum": 100
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "hostname": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string"
                      },
                      "remove_request_headers": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "healthy_threshold": {
                "description": "Number of expected responses for the upstream to be considered healthy. Defaults to 1.",
                "type": "integer"
              },
              "interval": {
                "description": "Interval between health checks. Defaults to every 5 seconds.",
                "type": "string"
              },
              "timeout": {
                "description": "Timeout for connecting to the health checking endpoint. Defaults to 3 seconds.",
                "type": "string"
              },
              "unhealthy_threshold": {
                "description": "Number of non-expected responses for the upstream to be considered unhealthy. A single 503 will mark the upstream as unhealthy regardless of the threshold. Defaults to 2.",
                "type": "integer"
              }
            },
            "additionalProperties": false
          }
        },
        "host": {
          "description": "Exact match for the hostname of a request if HostRegex is false; regex match for the hostname if HostRegex is true. \n Host specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Host will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used. \n DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead.",
          "type": "string"
        },
        "host_redirect": {
          "type": "boolean"
        },
        "host_regex": {
          "description": "DEPRECATED: Host is either an exact match or a regex, depending on HostRegex. Use HostName instead.",
          "type": "boolean"
        },
        "host_rewrite": {
          "type": "string"
        },
        "hostname": {
          "description": "Hostname is a DNS glob specifying the hosts to which this Mapping applies. \n Hostname specifies both a match for the ':authority' header of a request, as well as a match criterion for Host CRDs: a Mapping that specifies Hostname will not associate with a Host that doesn't have a matching Hostname. \n If both Host and Hostname are set, an error is logged, Host is ignored, and Hostname is used.",
          "type": "string"
        },
        "idle_timeout_ms": {
          "type": "integer"
        },
        "keepalive": {
          "type": "object",
          "properties": {
            "idle_time": {
              "type": "integer"
            },
            "interval": {
              "type": "integer"
            },
            "probes": {
              "type": "integer"
            }
          },
          "additionalProperties": false
        },
        "labels": {
          "description": "A DomainMap is the overall Mapping.spec.Labels type. It maps domains (kind of like namespaces for Mapping labels) to arrays of label groups.",
          "type": "object",
          "additionalProperties": {
            "description": "A MappingLabelGroupsArray is an array of MappingLabelGroups. I know, complex.",
            "type": "array",
            "items": {
              "description": "A MappingLabelGroup is a single element of a MappingLabelGroupsArray: a second map, where the key is a human-readable name that identifies the group.",
              "type": "object",
              "maxProperties": 1,
              "minProperties": 1,
              "additionalProperties": {
                "description": "A MappingLabelsArray is the value in the MappingLabelGroup: an array of label specifiers.",
                "type": "array",
                "items": {
                  "description": "A MappingLabelSpecifier (finally!) defines a single label. \n This mimics envoy/config/route/v3/route_components.proto:RateLimit:Action:action_specifier.",
                  "type": "object",
                  "maxProperties": 1,
                  "minProperties": 1,
                  "properties": {
                    "destination_cluster": {
                      "description": "Sets the label \"destination_cluster=«Envoy destination cluster name»\".",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "enum": [
                            "destination_cluster"
                          ]
                        }
                      }
                    },
                    "generic_key": {
                      "description": "Sets the label \"«key»=«value»\" (where by default «key» is \"generic_key\").",
                      "type": "object",
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "description": "The default is \"generic_key\".",
                          "type": "string"
                        },
                        "v2Shorthand": {
                          "type": "boolean"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    "remote_address": {
                      "description": "Sets the label \"remote_address=«IP address of the client»\".",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "enum": [
                            "remote_address"
                          ]
                        }
                      }
                    },
                    "request_headers": {
                      "description": "If the «header_name» header is set, then set the label \"«key»=«Value of the «header_name» header»\"; otherwise skip applying this label group.",
                      "type": "object",
                      "required": [
                        "header_name",
                        "key"
                      ],
                      "properties": {
                        "header_name": {
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "omit_if_not_present": {
                          "type": "boolean"
                        }
                      }
                    },
                    "source_cluster": {
                      "description": "Sets the label \"source_cluster=«Envoy source cluster name»\".",
                      "type": "object",
                      "required": [
                        "key"
                      ],
                      "properties": {
                        "key": {
                          "type": "string",
                          "enum": [
                            "source_cluster"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "load_balancer": {
          "type": "object",
          "required": [
            "policy"
          ],
          "properties": {
            "cookie": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "ttl": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "header": {
              "type": "string"
            },
            "policy": {
              "type": "string",
              "enum": [
                "round_robin",
                "ring_hash",
                "maglev",
                "least_request"
              ]
            },
            "source_ip": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "method": {
          "type": "string"
        },
        "method_regex": {
          "type": "boolean"
        },
        "modules": {
          "type": "array",
          "items": {
            "type": "object",
            "x-kubernetes-preserve-unknown-fields": true
          }
        },
        "outlier_detection": {
          "type": "string"
        },
        "path_redirect": {
          "description": "Path replacement to use when generating an HTTP redirect. Used with `host_redirect`.",
          "type": "string"
        },
        "precedence": {
          "type": "integer"
        },
        "prefix": {
          "type": "string"
        },
        "prefix_exact": {
          "type": "boolean"
        },
        "prefix_redirect": {
          "description": "Prefix rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
          "type": "string"
        },
        "prefix_regex": {
          "type": "boolean"
        },
        "priority": {
          "type": "string"
        },
        "query_parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "redirect_response_code": {
          "description": "The response code to use when generating an HTTP redirect. Defaults to 301. Used with `host_redirect`.",
          "type": "integer",
          "enum": [
            301,
            302,
            303,
            307,
            308
          ]
        },
        "regex_headers": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "regex_query_parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "regex_redirect": {
          "description": "Prefix regex rewrite to use when generating an HTTP redirect. Used with `host_redirect`.",
          "type": "object",
          "properties": {
            "pattern": {
              "type": "string"
            },
            "substitution": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "regex_rewrite": {
          "type": "object",
          "properties": {
            "pattern": {
              "type": "string"
            },
            "substitution": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "remove_request_headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "remove_response_headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resolver": {
          "type": "string"
        },
        "respect_dns_ttl": {
          "type": "boolean"
        },
        "retry_policy": {
          "type": "object",
          "properties": {
            "num_retries": {
              "type": "integer"
            },
            "per_try_timeout": {
              "type": "string"
            },
            "retry_on": {
              "type": "string",
              "enum": [
                "5xx",
                "gateway-error",
                "connect-failure",
                "retriable-4xx",
                "refused-stream",
                "retriable-status-codes"
              ]
            }
          },
          "additionalProperties": false
        },
        "rewrite": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "shadow": {
          "type": "boolean"
        },
        "stats_name": {
          "type": "string"
        },
        "timeout_ms": {
          "description": "The timeout for requests that use this Mapping. Overrides `cluster_request_timeout_ms` set on the Ambassador Module, if it exists.",
          "type": "integer"
        },
        "tls": {
          "type": "string"
        },
        "use_websocket": {
          "description": "use_websocket is deprecated, and is equivlaent to setting `allow_upgrade: [\"websocket\"]`",
          "type": "boolean"
        },
        "v2BoolHeaders": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "v2BoolQueryParameters": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "v2ExplicitTLS": {
          "description": "V2ExplicitTLS controls some vanity/stylistic elements when converting from v3alpha1 to v2.  The values in an V2ExplicitTLS should not in any way affect the runtime operation of Emissary; except that it may affect internal names in the Envoy config, which may in turn affect stats names.  But it should not affect any end-user observable behavior.",
          "type": "object",
          "properties": {
            "serviceScheme": {
              "description": "ServiceScheme specifies how to spell and capitalize the scheme-part of the service URL. \n Acceptable values are \"http://\" (case-insensitive), \"https://\" (case-insensitive), or \"\".  The value is used if it agrees with whether or not this resource enables TLS origination, or if something else in the resource overrides the scheme.",
              "type": "string",
              "pattern": "^([hH][tT][tT][pP][sS]?://)?$"
            },
            "tls": {
              "description": "TLS controls whether and how to represent the \"tls\" field when its value could be implied by the \"service\" field.  In v2, there were a lot of different ways to spell an \"empty\" value, and this field specifies which way to spell it (and will therefore only be used if the value will indeed be empty). \n | Value        | Representation                        | Meaning of representation          | |--------------+---------------------------------------+------------------------------------| | \"\"           | omit the field                        | defer to service (no TLSContext)   | | \"null\"       | store an explicit \"null\" in the field | defer to service (no TLSContext)   | | \"string\"     | store an empty string in the field    | defer to service (no TLSContext)   | | \"bool:false\" | store a Boolean \"false\" in the field  | defer to service (no TLSContext)   | | \"bool:true\"  | store a Boolean \"true\" in the field   | originate TLS (no TLSContext)      | \n If the meaning of the representation contradicts anything else (if a TLSContext is to be used, or in the case of \"bool:true\" if TLS is not to be originated), then this field is ignored.",
              "type": "string",
              "enum": [
                "",
                "null",
                "bool:true",
                "bool:false",
                "string"
              ]
            }
          },
          "additionalProperties": false
        },
        "weight": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "MappingStatus defines the observed state of Mapping",
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "state": {
          "type": "string",
          "enum": [
            "",
            "Inactive",
            "Running"
          ]
        }
      },
      "additionalProperties": false
    }
  }
}
