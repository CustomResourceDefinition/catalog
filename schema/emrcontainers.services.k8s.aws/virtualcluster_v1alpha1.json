{
  "description": "VirtualCluster is the Schema for the VirtualClusters API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VirtualClusterSpec defines the desired state of VirtualCluster.\n\nThis entity describes a virtual cluster. A virtual cluster is a Kubernetes\nnamespace that Amazon EMR is registered with. Amazon EMR uses virtual clusters\nto run jobs and host endpoints. Multiple virtual clusters can be backed by\nthe same physical cluster. However, each virtual cluster maps to one namespace\non an Amazon EKS cluster. Virtual clusters do not create any active resources\nthat contribute to your bill or that require lifecycle management outside\nthe service.",
      "type": "object",
      "required": [
        "containerProvider",
        "name"
      ],
      "properties": {
        "containerProvider": {
          "description": "The container provider of the virtual cluster.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "info": {
              "description": "The information about the container used for a job run or a managed endpoint.",
              "type": "object",
              "properties": {
                "eksInfo": {
                  "description": "The information about the Amazon EKS cluster.",
                  "type": "object",
                  "properties": {
                    "namespace": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "type_": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "name": {
          "description": "The specified name of the virtual cluster.\n\nRegex Pattern: `^[\\.\\-_/#A-Za-z0-9]+$`",
          "type": "string"
        },
        "tags": {
          "description": "The tags assigned to the virtual cluster.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "VirtualClusterStatus defines the observed state of VirtualCluster",
      "type": "object",
      "properties": {
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "id": {
          "description": "This output contains the virtual cluster ID.\n\nRegex Pattern: `^[0-9a-z]+$`",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
