{
  "type": "object",
  "properties": {
    "spec": {
      "type": "object",
      "properties": {
        "account": {
          "description": "Name of the account to which the Stream belongs.",
          "type": "string",
          "pattern": "^[^.*\u003e]*$"
        },
        "allowDirect": {
          "description": "When true, allow higher performance, direct access to get individual messages.",
          "type": "boolean",
          "default": false
        },
        "allowMsgTtl": {
          "description": "When true, allows header initiated per-message TTLs. If disabled, then the `NATS-TTL` header will be ignored.",
          "type": "boolean",
          "default": false
        },
        "allowRollup": {
          "description": "When true, allows the use of the Nats-Rollup header to replace all contents of a stream, or subject in a stream, with a single new message.",
          "type": "boolean",
          "default": false
        },
        "compression": {
          "description": "Stream specific compression.",
          "type": "string",
          "default": "",
          "enum": [
            "s2",
            "none",
            ""
          ]
        },
        "consumerLimits": {
          "type": "object",
          "properties": {
            "inactiveThreshold": {
              "description": "The duration of inactivity after which a consumer is considered inactive.",
              "type": "string"
            },
            "maxAckPending": {
              "description": "Maximum number of outstanding unacknowledged messages.",
              "type": "integer"
            }
          },
          "additionalProperties": false
        },
        "creds": {
          "description": "NATS user credentials for connecting to servers. Please make sure your controller has mounted the creds on this path.",
          "type": "string",
          "default": ""
        },
        "denyDelete": {
          "description": "When true, restricts the ability to delete messages from a stream via the API. Cannot be changed once set to true.",
          "type": "boolean",
          "default": false
        },
        "denyPurge": {
          "description": "When true, restricts the ability to purge a stream via the API. Cannot be changed once set to true.",
          "type": "boolean",
          "default": false
        },
        "description": {
          "description": "The description of the stream.",
          "type": "string"
        },
        "discard": {
          "description": "When a Stream reach it's limits either old messages are deleted or new ones are denied.",
          "type": "string",
          "default": "old",
          "enum": [
            "old",
            "new"
          ]
        },
        "discardPerSubject": {
          "description": "Applies discard policy on a per-subject basis. Requires discard policy 'new' and 'maxMsgs' to be set.",
          "type": "boolean",
          "default": false
        },
        "duplicateWindow": {
          "description": "The duration window to track duplicate messages for.",
          "type": "string"
        },
        "firstSequence": {
          "description": "Sequence number from which the Stream will start.",
          "type": "number",
          "default": 0
        },
        "jsDomain": {
          "description": "The JetStream domain to use for the stream.",
          "type": "string"
        },
        "maxAge": {
          "description": "Maximum age of any message in the stream, expressed in Go's time.Duration format. Empty for unlimited.",
          "type": "string",
          "default": ""
        },
        "maxBytes": {
          "description": "How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxConsumers": {
          "description": "How many Consumers can be defined for a given Stream. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxMsgSize": {
          "description": "The largest message that will be accepted by the Stream. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxMsgs": {
          "description": "How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxMsgsPerSubject": {
          "description": "The maximum number of messages per subject.",
          "type": "integer",
          "default": 0
        },
        "metadata": {
          "description": "Additional Stream metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "mirror": {
          "description": "A stream mirror.",
          "type": "object",
          "properties": {
            "externalApiPrefix": {
              "type": "string"
            },
            "externalDeliverPrefix": {
              "type": "string"
            },
            "filterSubject": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "optStartSeq": {
              "type": "integer"
            },
            "optStartTime": {
              "description": "Time format must be RFC3339.",
              "type": "string"
            },
            "subjectTransforms": {
              "description": "List of subject transforms for this mirror.",
              "type": "array",
              "items": {
                "description": "A subject transform pair.",
                "type": "object",
                "properties": {
                  "dest": {
                    "description": "Destination subject.",
                    "type": "string"
                  },
                  "source": {
                    "description": "Source subject.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "mirrorDirect": {
          "description": "When true, enables direct access to messages from the origin stream.",
          "type": "boolean",
          "default": false
        },
        "name": {
          "description": "A unique name for the Stream.",
          "type": "string",
          "minLength": 1,
          "pattern": "^[^.*\u003e]*$"
        },
        "nkey": {
          "description": "NATS user NKey for connecting to servers.",
          "type": "string",
          "default": ""
        },
        "noAck": {
          "description": "Disables acknowledging messages that are received by the Stream.",
          "type": "boolean",
          "default": false
        },
        "placement": {
          "description": "A stream's placement.",
          "type": "object",
          "properties": {
            "cluster": {
              "type": "string"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "preventDelete": {
          "description": "When true, the managed Stream will not be deleted when the resource is deleted.",
          "type": "boolean",
          "default": false
        },
        "preventUpdate": {
          "description": "When true, the managed Stream will not be updated when the resource is updated.",
          "type": "boolean",
          "default": false
        },
        "replicas": {
          "description": "How many replicas to keep for each message.",
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "republish": {
          "description": "Republish configuration of the stream.",
          "type": "object",
          "properties": {
            "destination": {
              "description": "Messages will be additionally published to this subject.",
              "type": "string"
            },
            "source": {
              "description": "Messages will be published from this subject to the destination subject.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "retention": {
          "description": "How messages are retained in the Stream, once this is exceeded old messages are removed.",
          "type": "string",
          "default": "limits",
          "enum": [
            "limits",
            "interest",
            "workqueue"
          ]
        },
        "sealed": {
          "description": "Seal an existing stream so no new messages may be added.",
          "type": "boolean",
          "default": false
        },
        "servers": {
          "description": "A list of servers for creating stream.",
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          }
        },
        "sources": {
          "description": "A stream's sources.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "externalApiPrefix": {
                "type": "string"
              },
              "externalDeliverPrefix": {
                "type": "string"
              },
              "filterSubject": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "optStartSeq": {
                "type": "integer"
              },
              "optStartTime": {
                "description": "Time format must be RFC3339.",
                "type": "string"
              },
              "subjectTransforms": {
                "description": "List of subject transforms for this mirror.",
                "type": "array",
                "items": {
                  "description": "A subject transform pair.",
                  "type": "object",
                  "properties": {
                    "dest": {
                      "description": "Destination subject.",
                      "type": "string"
                    },
                    "source": {
                      "description": "Source subject.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              }
            },
            "additionalProperties": false
          }
        },
        "storage": {
          "description": "The storage backend to use for the Stream.",
          "type": "string",
          "default": "memory",
          "enum": [
            "file",
            "memory"
          ]
        },
        "subjectDeleteMarkerTtl": {
          "description": "Enables and sets a duration for adding server markers for delete, purge and max age limits.",
          "type": "string",
          "default": ""
        },
        "subjectTransform": {
          "description": "SubjectTransform is for applying a subject transform (to matching messages) when a new message is received.",
          "type": "object",
          "properties": {
            "dest": {
              "description": "Destination subject to transform into.",
              "type": "string"
            },
            "source": {
              "description": "Source subject.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "subjects": {
          "description": "A list of subjects to consume, supports wildcards.",
          "type": "array",
          "minLength": 1,
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "tls": {
          "description": "A client's TLS certs and keys.",
          "type": "object",
          "properties": {
            "clientCert": {
              "description": "A client's cert filepath. Should be mounted.",
              "type": "string"
            },
            "clientKey": {
              "description": "A client's key filepath. Should be mounted.",
              "type": "string"
            },
            "rootCas": {
              "description": "A list of filepaths to CAs. Should be mounted.",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "tlsFirst": {
          "description": "When true, the KV Store will initiate TLS before server INFO.",
          "type": "boolean",
          "default": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    }
  }
}
