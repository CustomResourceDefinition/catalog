{
  "type": "object",
  "properties": {
    "spec": {
      "type": "object",
      "properties": {
        "discard": {
          "description": "When a Stream reach it's limits either old messages are deleted or new ones are denied.",
          "type": "string",
          "default": "old",
          "enum": [
            "old",
            "new"
          ]
        },
        "duplicateWindow": {
          "description": "The duration window to track duplicate messages for.",
          "type": "string"
        },
        "maxAge": {
          "description": "Maximum age of any message in the stream, expressed in Go's time.Duration format. Empty for unlimited.",
          "type": "string",
          "default": ""
        },
        "maxBytes": {
          "description": "How big the Stream may be, when the combined stream size exceeds this old messages are removed. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxConsumers": {
          "description": "How many Consumers can be defined for a given Stream. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxMsgSize": {
          "description": "The largest message that will be accepted by the Stream. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxMsgs": {
          "description": "How many messages may be in a Stream, oldest messages will be removed if the Stream exceeds this size. -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "maxStreams": {
          "description": "The maximum number of Streams this Template can create, -1 for unlimited.",
          "type": "integer",
          "default": -1,
          "minimum": -1
        },
        "name": {
          "description": "A unique name for the Stream Template.",
          "type": "string",
          "minLength": 1,
          "pattern": "^[^.*\u003e]*$"
        },
        "noAck": {
          "description": "Disables acknowledging messages that are received by the Stream.",
          "type": "boolean",
          "default": false
        },
        "replicas": {
          "description": "How many replicas to keep for each message.",
          "type": "integer",
          "default": 1,
          "minimum": 1
        },
        "retention": {
          "description": "How messages are retained in the Stream, once this is exceeded old messages are removed.",
          "type": "string",
          "default": "limits",
          "enum": [
            "limits",
            "interest",
            "workqueue"
          ]
        },
        "storage": {
          "description": "The storage backend to use for the Stream.",
          "type": "string",
          "default": "memory",
          "enum": [
            "file",
            "memory"
          ]
        },
        "subjects": {
          "description": "A list of subjects to consume, supports wildcards.",
          "type": "array",
          "minLength": 1,
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "reason": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    }
  }
}
