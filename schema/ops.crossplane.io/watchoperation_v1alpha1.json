{
  "description": "A WatchOperation creates Operations when watched resources change.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "WatchOperationSpec specifies the desired state of a WatchOperation.",
      "type": "object",
      "required": [
        "operationTemplate",
        "watch"
      ],
      "properties": {
        "concurrencyPolicy": {
          "description": "ConcurrencyPolicy specifies how to treat concurrent executions of an\noperation.",
          "type": "string",
          "default": "Allow",
          "enum": [
            "Allow",
            "Forbid",
            "Replace"
          ]
        },
        "failedHistoryLimit": {
          "description": "FailedHistoryLimit is the number of failed Operations to retain.",
          "type": "integer",
          "format": "int32",
          "default": 1
        },
        "operationTemplate": {
          "description": "OperationTemplate is the template for the Operation to be created.",
          "type": "object",
          "required": [
            "spec"
          ],
          "properties": {
            "metadata": {
              "description": "Standard object metadata.",
              "type": "object"
            },
            "spec": {
              "description": "Spec is the specification of the Operation to be created.",
              "type": "object",
              "required": [
                "mode",
                "pipeline"
              ],
              "properties": {
                "mode": {
                  "description": "Mode controls what type or \"mode\" of operation will be used.\n\n\"Pipeline\" indicates that an Operation specifies a pipeline of\nfunctions, each of which is responsible for implementing its logic.",
                  "type": "string",
                  "default": "Pipeline",
                  "enum": [
                    "Pipeline"
                  ]
                },
                "pipeline": {
                  "description": "Pipeline is a list of operation function steps that will be used when\nthis operation runs.",
                  "type": "array",
                  "maxItems": 99,
                  "minItems": 1,
                  "items": {
                    "description": "A PipelineStep in an operation function pipeline.",
                    "type": "object",
                    "required": [
                      "functionRef",
                      "step"
                    ],
                    "properties": {
                      "credentials": {
                        "description": "Credentials are optional credentials that the operation function needs.",
                        "type": "array",
                        "items": {
                          "description": "FunctionCredentials are optional credentials that a function\nneeds to run.",
                          "type": "object",
                          "required": [
                            "name",
                            "source"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of this set of credentials.",
                              "type": "string"
                            },
                            "secretRef": {
                              "description": "A SecretRef is a reference to a secret containing credentials that should\nbe supplied to the function.",
                              "type": "object",
                              "required": [
                                "name",
                                "namespace"
                              ],
                              "properties": {
                                "name": {
                                  "description": "Name of the secret.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace of the secret.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            },
                            "source": {
                              "description": "Source of the function credentials.",
                              "type": "string",
                              "enum": [
                                "None",
                                "Secret"
                              ]
                            }
                          },
                          "additionalProperties": false
                        },
                        "x-kubernetes-list-map-keys": [
                          "name"
                        ],
                        "x-kubernetes-list-type": "map"
                      },
                      "functionRef": {
                        "description": "FunctionRef is a reference to the function this step should\nexecute.",
                        "type": "object",
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "name": {
                            "description": "Name of the referenced function.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "input": {
                        "description": "Input is an optional, arbitrary Kubernetes resource (i.e. a resource\nwith an apiVersion and kind) that will be passed to the unction as\nthe 'input' of its RunFunctionRequest.",
                        "type": "object",
                        "x-kubernetes-preserve-unknown-fields": true,
                        "x-kubernetes-embedded-resource": true
                      },
                      "requirements": {
                        "description": "Requirements are resource requirements that will be satisfied before\nthis pipeline step is called for the first time. This allows\npre-populating required resources without requiring a function to\nrequest them first.",
                        "type": "object",
                        "properties": {
                          "requiredResources": {
                            "description": "RequiredResources that will be fetched before this pipeline step\nis called for the first time.",
                            "type": "array",
                            "items": {
                              "description": "RequiredResourceSelector selects resources that should be fetched before\na pipeline step runs.",
                              "type": "object",
                              "required": [
                                "apiVersion",
                                "kind",
                                "requirementName"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "description": "APIVersion of resources to select.",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Kind of resources to select.",
                                  "type": "string"
                                },
                                "matchLabels": {
                                  "description": "MatchLabels matches resources by label selector. Only one of Name or\nMatchLabels may be specified.",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "name": {
                                  "description": "Name matches a single resource by name. Only one of Name or\nMatchLabels may be specified.",
                                  "type": "string"
                                },
                                "namespace": {
                                  "description": "Namespace to search for resources. Optional for cluster-scoped resources.",
                                  "type": "string"
                                },
                                "requirementName": {
                                  "description": "RequirementName uniquely identifies this group of resources.\nThis name will be used as the key in RunFunctionRequest.required_resources.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false,
                              "x-kubernetes-validations": [
                                {
                                  "rule": "(has(self.name) \u0026\u0026 !has(self.matchLabels)) || (!has(self.name) \u0026\u0026 has(self.matchLabels))",
                                  "message": "Either name or matchLabels must be specified, but not both"
                                }
                              ]
                            },
                            "x-kubernetes-list-map-keys": [
                              "requirementName"
                            ],
                            "x-kubernetes-list-type": "map"
                          }
                        },
                        "additionalProperties": false
                      },
                      "step": {
                        "description": "Step name. Must be unique within its Pipeline.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "x-kubernetes-list-map-keys": [
                    "step"
                  ],
                  "x-kubernetes-list-type": "map"
                },
                "retryLimit": {
                  "description": "RetryLimit configures how many times the operation may fail. When the\nfailure limit is exceeded, the operation will not be retried.",
                  "type": "integer",
                  "format": "int64"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "successfulHistoryLimit": {
          "description": "SuccessfulHistoryLimit is the number of successful Operations to retain.",
          "type": "integer",
          "format": "int32",
          "default": 3
        },
        "watch": {
          "description": "Watch specifies the resource to watch.",
          "type": "object",
          "required": [
            "apiVersion",
            "kind"
          ],
          "properties": {
            "apiVersion": {
              "description": "APIVersion of the resource to watch.",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "apiVersion is immutable"
                }
              ]
            },
            "kind": {
              "description": "Kind of the resource to watch.",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "kind is immutable"
                }
              ]
            },
            "matchLabels": {
              "description": "MatchLabels selects resources by label. If empty, all resources of the\nspecified kind are watched.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "namespace": {
              "description": "Namespace selects resources in a specific namespace. If empty, all\nnamespaces are watched. Only applicable for namespaced resources.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "WatchOperationStatus represents the observed state of a WatchOperation.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "lastScheduleTime": {
          "description": "LastScheduleTime is the last time the WatchOperation created an\nOperation.",
          "type": "string",
          "format": "date-time"
        },
        "lastSuccessfulTime": {
          "description": "LastSuccessfulTime is the last time the WatchOperation successfully\ncompleted an Operation.",
          "type": "string",
          "format": "date-time"
        },
        "runningOperationRefs": {
          "description": "RunningOperationRefs is a list of currently running Operations.",
          "type": "array",
          "items": {
            "description": "A RunningOperationRef is a reference to a running operation.",
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "Name of the active operation.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "watchingResources": {
          "description": "WatchingResources is the number of resources this WatchOperation is\ncurrently watching.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
