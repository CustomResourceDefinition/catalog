{
  "description": "VSphereDatacenterConfig is the Schema for the VSphereDatacenterConfigs API.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VSphereDatacenterConfigSpec defines the desired state of VSphereDatacenterConfig.",
      "type": "object",
      "required": [
        "datacenter",
        "insecure",
        "network",
        "server",
        "thumbprint"
      ],
      "properties": {
        "datacenter": {
          "type": "string"
        },
        "failureDomains": {
          "type": "array",
          "items": {
            "description": "FailureDomain defines the list of failure domains to spread the VMs across.",
            "type": "object",
            "required": [
              "computeCluster",
              "datastore",
              "folder",
              "name",
              "network",
              "resourcePool"
            ],
            "properties": {
              "computeCluster": {
                "description": "ComputeCluster is the name or inventory path of the computecluster in which the VM is created/located",
                "type": "string"
              },
              "datastore": {
                "description": "Datastore is the name or inventory path of the datastore in which the VM is created/located",
                "type": "string"
              },
              "folder": {
                "description": "Folder is the name or inventory path of the folder in which the the VM is created/located",
                "type": "string"
              },
              "name": {
                "description": "Name is used as a unique identifier for each failure domain.",
                "type": "string"
              },
              "network": {
                "description": "Network is the name or inventory path of the network which will be added to the VM",
                "type": "string"
              },
              "resourcePool": {
                "description": "ResourcePool is the name or inventory path of the resource pool in which the VM is created/located",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "insecure": {
          "type": "boolean"
        },
        "network": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "thumbprint": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "VSphereDatacenterConfigStatus defines the observed state of VSphereDatacenterConfig.",
      "type": "object",
      "properties": {
        "failureMessage": {
          "description": "FailureMessage indicates that there is a fatal problem reconciling the\nstate, and will be set to a descriptive error message.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest generation observed by the controller.",
          "type": "integer",
          "format": "int64"
        },
        "specValid": {
          "description": "SpecValid is set to true if vspheredatacenterconfig is validated.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
