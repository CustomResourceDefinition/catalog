{
  "description": "AutoscalingGroup is the Schema for the AutoscalingGroups API. Provides an Auto Scaling Group resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AutoscalingGroupSpec defines the desired state of AutoscalingGroup",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "availabilityZoneDistribution": {
              "description": "The instance capacity distribution across Availability Zones. See Availability Zone Distribution below for more details.",
              "type": "object",
              "properties": {
                "capacityDistributionStrategy": {
                  "description": "The strategy to use for distributing capacity across the Availability Zones. Valid values are balanced-only and balanced-best-effort. Default is balanced-best-effort.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "availabilityZones": {
              "description": "A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the vpc_zone_identifier attribute, or for attaching a network interface when an existing network interface ID is specified in a launch template. Conflicts with vpc_zone_identifier.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "capacityRebalance": {
              "description": "Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.",
              "type": "boolean"
            },
            "capacityReservationSpecification": {
              "description": "Demand Capacity Reservations. See Capacity Reservation Specification below for more details.",
              "type": "object",
              "properties": {
                "capacityReservationPreference": {
                  "description": "Capacity Reservation preference helps you use Capacity Reservations efficiently by prioritizing reserved capacity in a Capacity Reservation before using On-Demand capacity. Valid values are default, capacity-reservations-only, capacity-reservations-first and none. Default is default.",
                  "type": "string"
                },
                "capacityReservationTarget": {
                  "description": "Describes a target Capacity Reservation or Capacity Reservation resource group.",
                  "type": "object",
                  "properties": {
                    "capacityReservationIds": {
                      "description": "List of On-Demand Capacity Reservation Ids. Conflicts with capacity_reservation_resource_group_arns.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "capacityReservationResourceGroupArns": {
                      "description": "List of On-Demand Capacity Reservation Resource Group Arns. Conflicts with capacity_reservation_ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "context": {
              "description": "Reserved.",
              "type": "string"
            },
            "defaultCooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.",
              "type": "number"
            },
            "defaultInstanceWarmup": {
              "description": "Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)",
              "type": "number"
            },
            "desiredCapacity": {
              "description": "Number of Amazon EC2 instances that\nshould be running in the group. (See also Waiting for\nCapacity below.)",
              "type": "number"
            },
            "desiredCapacityType": {
              "description": "The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: \"units\", \"vcpu\", \"memory-mib\".",
              "type": "string"
            },
            "enabledMetrics": {
              "description": "List of metrics to collect. The allowed values are defined by the underlying AWS API.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "forceDelete": {
              "description": "Allows deleting the Auto Scaling Group without waiting\nfor all instances in the pool to terminate. You can force an Auto Scaling Group to delete\neven if it's in the process of scaling a resource. This bypasses that\nbehavior and potentially leaves resources dangling.",
              "type": "boolean"
            },
            "forceDeleteWarmPool": {
              "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate.",
              "type": "boolean"
            },
            "healthCheckGracePeriod": {
              "description": "Time (in seconds) after instance comes into service before checking health.",
              "type": "number"
            },
            "healthCheckType": {
              "description": "\"EC2\" or \"ELB\". Controls how health checking is done.",
              "type": "string"
            },
            "ignoreFailedScalingActivities": {
              "description": "Whether to ignore failed Auto Scaling scaling activities while waiting for capacity. The default is false -- failed scaling activities cause errors to be returned.",
              "type": "boolean"
            },
            "initialLifecycleHook": {
              "description": "One or more\nLifecycle Hooks\nto attach to the Auto Scaling Group before instances are launched. The\nsyntax is exactly the same as the separate\naws_autoscaling_lifecycle_hook\nresource, without the autoscaling_group_name attribute. Please note that this will only work when creating\na new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "defaultResult": {
                    "type": "string"
                  },
                  "heartbeatTimeout": {
                    "type": "number"
                  },
                  "lifecycleTransition": {
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the Auto Scaling Group. Conflicts with name_prefix.",
                    "type": "string"
                  },
                  "notificationMetadata": {
                    "type": "string"
                  },
                  "notificationTargetArn": {
                    "description": "ARN for this Auto Scaling Group",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "ARN for this Auto Scaling Group",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "instanceMaintenancePolicy": {
              "description": "If this block is configured, add a instance maintenance policy to the specified Auto Scaling group. Defined below.",
              "type": "object",
              "properties": {
                "maxHealthyPercentage": {
                  "description": "Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.",
                  "type": "number"
                },
                "minHealthyPercentage": {
                  "description": "Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "instanceRefresh": {
              "description": "If this block is configured, start an\nInstance Refresh\nwhen this Auto Scaling Group is updated. Defined below.",
              "type": "object",
              "properties": {
                "preferences": {
                  "description": "Override default parameters for Instance Refresh.",
                  "type": "object",
                  "properties": {
                    "alarmSpecification": {
                      "description": "Alarm Specification for Instance Refresh.",
                      "type": "object",
                      "properties": {
                        "alarms": {
                          "description": "List of Cloudwatch alarms. If any of these alarms goes into ALARM state, Instance Refresh is failed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "autoRollback": {
                      "description": "Automatically rollback if instance refresh fails. Defaults to false. This option may only be set to true when specifying a launch_template or mixed_instances_policy.",
                      "type": "boolean"
                    },
                    "checkpointDelay": {
                      "description": "Number of seconds to wait after a checkpoint. Defaults to 3600.",
                      "type": "string"
                    },
                    "checkpointPercentages": {
                      "description": "List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "instanceWarmup": {
                      "description": "Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.",
                      "type": "string"
                    },
                    "maxHealthyPercentage": {
                      "description": "Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.",
                      "type": "number"
                    },
                    "minHealthyPercentage": {
                      "description": "Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.",
                      "type": "number"
                    },
                    "scaleInProtectedInstances": {
                      "description": "Behavior when encountering instances protected from scale in are found. Available behaviors are Refresh, Ignore, and Wait. Default is Ignore.",
                      "type": "string"
                    },
                    "skipMatching": {
                      "description": "Replace instances that already have your desired configuration. Defaults to false.",
                      "type": "boolean"
                    },
                    "standbyInstances": {
                      "description": "Behavior when encountering instances in the Standby state in are found. Available behaviors are Terminate, Ignore, and Wait. Default is Ignore.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "strategy": {
                  "description": "Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.",
                  "type": "string"
                },
                "triggers": {
                  "description": "Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "launchConfiguration": {
              "description": "Name of the launch configuration to use.",
              "type": "string"
            },
            "launchConfigurationRef": {
              "description": "Reference to a LaunchConfiguration in autoscaling to populate launchConfiguration.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "launchConfigurationSelector": {
              "description": "Selector for a LaunchConfiguration in autoscaling to populate launchConfiguration.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "launchTemplate": {
              "description": "Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID of the launch template. Conflicts with name.",
                  "type": "string"
                },
                "idRef": {
                  "description": "Reference to a LaunchTemplate in ec2 to populate id.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "idSelector": {
                  "description": "Selector for a LaunchTemplate in ec2 to populate id.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "name": {
                  "description": "Name of the launch template. Conflicts with id.",
                  "type": "string"
                },
                "version": {
                  "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "maxInstanceLifetime": {
              "description": "Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.",
              "type": "number"
            },
            "maxSize": {
              "description": "Maximum size of the Auto Scaling Group.",
              "type": "number"
            },
            "metricsGranularity": {
              "description": "Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.",
              "type": "string"
            },
            "minElbCapacity": {
              "description": "Updates will not wait on ELB instance number changes.\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "minSize": {
              "description": "Minimum size of the Auto Scaling Group.\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "mixedInstancesPolicy": {
              "description": "Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.",
              "type": "object",
              "properties": {
                "instancesDistribution": {
                  "description": "Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.",
                  "type": "object",
                  "properties": {
                    "onDemandAllocationStrategy": {
                      "description": "Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.",
                      "type": "string"
                    },
                    "onDemandBaseCapacity": {
                      "description": "Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.",
                      "type": "number"
                    },
                    "onDemandPercentageAboveBaseCapacity": {
                      "description": "Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.",
                      "type": "number"
                    },
                    "spotAllocationStrategy": {
                      "description": "How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.",
                      "type": "string"
                    },
                    "spotInstancePools": {
                      "description": "Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.",
                      "type": "number"
                    },
                    "spotMaxPrice": {
                      "description": "Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "launchTemplate": {
                  "description": "Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.",
                  "type": "object",
                  "properties": {
                    "launchTemplateSpecification": {
                      "description": "Nested argument defines the Launch Template. Defined below.",
                      "type": "object",
                      "properties": {
                        "launchTemplateId": {
                          "description": "ID of the launch template. Conflicts with launch_template_name.",
                          "type": "string"
                        },
                        "launchTemplateIdRef": {
                          "description": "Reference to a LaunchTemplate in ec2 to populate launchTemplateId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "launchTemplateIdSelector": {
                          "description": "Selector for a LaunchTemplate in ec2 to populate launchTemplateId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "launchTemplateName": {
                          "description": "Name of the launch template. Conflicts with launch_template_id.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "override": {
                      "description": "List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "instanceRequirements": {
                            "description": "Override the instance type in the Launch Template with instance types that satisfy the requirements.",
                            "type": "object",
                            "properties": {
                              "acceleratorCount": {
                                "description": "Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "acceleratorManufacturers": {
                                "description": "List of accelerator manufacturer names. Default is any manufacturer.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "acceleratorNames": {
                                "description": "List of accelerator names. Default is any acclerator.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "acceleratorTotalMemoryMib": {
                                "description": "Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "acceleratorTypes": {
                                "description": "List of accelerator types. Default is any accelerator type.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "allowedInstanceTypes": {
                                "description": "List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "bareMetal": {
                                "description": "Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.",
                                "type": "string"
                              },
                              "baselineEbsBandwidthMbps": {
                                "description": "Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "burstablePerformance": {
                                "description": "Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.",
                                "type": "string"
                              },
                              "cpuManufacturers": {
                                "description": "List of CPU manufacturer names. Default is any manufacturer.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "excludedInstanceTypes": {
                                "description": "List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "instanceGenerations": {
                                "description": "List of instance generation names. Default is any generation.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "localStorage": {
                                "description": "Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.",
                                "type": "string"
                              },
                              "localStorageTypes": {
                                "description": "List of local storage type names. Default any storage type.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "maxSpotPriceAsPercentageOfOptimalOnDemandPrice": {
                                "description": "The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price",
                                "type": "number"
                              },
                              "memoryGibPerVcpu": {
                                "description": "Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "memoryMib": {
                                "description": "Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "networkBandwidthGbps": {
                                "description": "Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "networkInterfaceCount": {
                                "description": "Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "onDemandMaxPricePercentageOverLowestPrice": {
                                "description": "Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.",
                                "type": "number"
                              },
                              "requireHibernateSupport": {
                                "description": "Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.",
                                "type": "boolean"
                              },
                              "spotMaxPricePercentageOverLowestPrice": {
                                "description": "Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price",
                                "type": "number"
                              },
                              "totalLocalStorageGb": {
                                "description": "Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "vcpuCount": {
                                "description": "Block describing the minimum and maximum number of vCPUs. Default is no maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "instanceType": {
                            "description": "Override the instance type in the Launch Template.",
                            "type": "string"
                          },
                          "launchTemplateSpecification": {
                            "description": "Nested argument defines the Launch Template. Defined below.",
                            "type": "object",
                            "properties": {
                              "launchTemplateId": {
                                "description": "ID of the launch template. Conflicts with launch_template_name.",
                                "type": "string"
                              },
                              "launchTemplateIdRef": {
                                "description": "Reference to a LaunchTemplate in ec2 to populate launchTemplateId.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "launchTemplateIdSelector": {
                                "description": "Selector for a LaunchTemplate in ec2 to populate launchTemplateId.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "launchTemplateName": {
                                "description": "Name of the launch template. Conflicts with launch_template_id.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "weightedCapacity": {
                            "description": "Number of capacity units, which gives the instance type a proportional weight to other instance types.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "placementGroup": {
              "description": "Name of the placement group into which you'll launch your instances, if any.",
              "type": "string"
            },
            "placementGroupRef": {
              "description": "Reference to a PlacementGroup in ec2 to populate placementGroup.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "placementGroupSelector": {
              "description": "Selector for a PlacementGroup in ec2 to populate placementGroup.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "protectFromScaleIn": {
              "description": "Whether newly launched instances\nare automatically protected from termination by Amazon EC2 Auto Scaling when\nscaling in. For more information about preventing instances from terminating\non scale in, see Using instance scale-in protection\nin the Amazon EC2 Auto Scaling User Guide.",
              "type": "boolean"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "serviceLinkedRoleArn": {
              "description": "ARN of the service-linked role that the ASG will use to call other AWS services",
              "type": "string"
            },
            "serviceLinkedRoleArnRef": {
              "description": "Reference to a Role in iam to populate serviceLinkedRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceLinkedRoleArnSelector": {
              "description": "Selector for a Role in iam to populate serviceLinkedRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "suspendedProcesses": {
              "description": "List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.\nNote that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tag": {
              "description": "Configuration block(s) containing resource tags. See Tag below for more details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Key",
                    "type": "string"
                  },
                  "propagateAtLaunch": {
                    "description": "Enables propagation of the tag to\nAmazon EC2 instances launched via this ASG",
                    "type": "boolean"
                  },
                  "value": {
                    "description": "Value",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "terminationPolicies": {
              "description": "List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trafficSource": {
              "description": "Attaches one or more traffic sources to the specified Auto Scaling group.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "description": "Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Provides additional context for the value of Identifier.\nThe following lists the valid values:\nelb if identifier is the name of a Classic Load Balancer.\nelbv2 if identifier is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.\nvpc-lattice if identifier is the ARN of a VPC Lattice target group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "vpcZoneIdentifier": {
              "description": "List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "vpcZoneIdentifierRefs": {
              "description": "References to Subnet in ec2 to populate vpcZoneIdentifier.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "vpcZoneIdentifierSelector": {
              "description": "Selector for a list of Subnet in ec2 to populate vpcZoneIdentifier.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "waitForCapacityTimeout": {
              "description": "(See also Waiting\nfor Capacity below.",
              "type": "string"
            },
            "waitForElbCapacity": {
              "description": "(Takes\nprecedence over min_elb_capacity behavior.)\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "warmPool": {
              "description": "If this block is configured, add a Warm Pool\nto the specified Auto Scaling group. Defined below",
              "type": "object",
              "properties": {
                "instanceReusePolicy": {
                  "description": "Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.",
                  "type": "object",
                  "properties": {
                    "reuseOnScaleIn": {
                      "description": "Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "maxGroupPreparedCapacity": {
                  "description": "Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.",
                  "type": "number"
                },
                "minSize": {
                  "description": "Minimum size of the Auto Scaling Group.\n(See also Waiting for Capacity below.)",
                  "type": "number"
                },
                "poolState": {
                  "description": "Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "availabilityZoneDistribution": {
              "description": "The instance capacity distribution across Availability Zones. See Availability Zone Distribution below for more details.",
              "type": "object",
              "properties": {
                "capacityDistributionStrategy": {
                  "description": "The strategy to use for distributing capacity across the Availability Zones. Valid values are balanced-only and balanced-best-effort. Default is balanced-best-effort.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "availabilityZones": {
              "description": "A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the vpc_zone_identifier attribute, or for attaching a network interface when an existing network interface ID is specified in a launch template. Conflicts with vpc_zone_identifier.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "capacityRebalance": {
              "description": "Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.",
              "type": "boolean"
            },
            "capacityReservationSpecification": {
              "description": "Demand Capacity Reservations. See Capacity Reservation Specification below for more details.",
              "type": "object",
              "properties": {
                "capacityReservationPreference": {
                  "description": "Capacity Reservation preference helps you use Capacity Reservations efficiently by prioritizing reserved capacity in a Capacity Reservation before using On-Demand capacity. Valid values are default, capacity-reservations-only, capacity-reservations-first and none. Default is default.",
                  "type": "string"
                },
                "capacityReservationTarget": {
                  "description": "Describes a target Capacity Reservation or Capacity Reservation resource group.",
                  "type": "object",
                  "properties": {
                    "capacityReservationIds": {
                      "description": "List of On-Demand Capacity Reservation Ids. Conflicts with capacity_reservation_resource_group_arns.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "capacityReservationResourceGroupArns": {
                      "description": "List of On-Demand Capacity Reservation Resource Group Arns. Conflicts with capacity_reservation_ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "context": {
              "description": "Reserved.",
              "type": "string"
            },
            "defaultCooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.",
              "type": "number"
            },
            "defaultInstanceWarmup": {
              "description": "Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)",
              "type": "number"
            },
            "desiredCapacity": {
              "description": "Number of Amazon EC2 instances that\nshould be running in the group. (See also Waiting for\nCapacity below.)",
              "type": "number"
            },
            "desiredCapacityType": {
              "description": "The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: \"units\", \"vcpu\", \"memory-mib\".",
              "type": "string"
            },
            "enabledMetrics": {
              "description": "List of metrics to collect. The allowed values are defined by the underlying AWS API.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "forceDelete": {
              "description": "Allows deleting the Auto Scaling Group without waiting\nfor all instances in the pool to terminate. You can force an Auto Scaling Group to delete\neven if it's in the process of scaling a resource. This bypasses that\nbehavior and potentially leaves resources dangling.",
              "type": "boolean"
            },
            "forceDeleteWarmPool": {
              "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate.",
              "type": "boolean"
            },
            "healthCheckGracePeriod": {
              "description": "Time (in seconds) after instance comes into service before checking health.",
              "type": "number"
            },
            "healthCheckType": {
              "description": "\"EC2\" or \"ELB\". Controls how health checking is done.",
              "type": "string"
            },
            "ignoreFailedScalingActivities": {
              "description": "Whether to ignore failed Auto Scaling scaling activities while waiting for capacity. The default is false -- failed scaling activities cause errors to be returned.",
              "type": "boolean"
            },
            "initialLifecycleHook": {
              "description": "One or more\nLifecycle Hooks\nto attach to the Auto Scaling Group before instances are launched. The\nsyntax is exactly the same as the separate\naws_autoscaling_lifecycle_hook\nresource, without the autoscaling_group_name attribute. Please note that this will only work when creating\na new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "defaultResult": {
                    "type": "string"
                  },
                  "heartbeatTimeout": {
                    "type": "number"
                  },
                  "lifecycleTransition": {
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the Auto Scaling Group. Conflicts with name_prefix.",
                    "type": "string"
                  },
                  "notificationMetadata": {
                    "type": "string"
                  },
                  "notificationTargetArn": {
                    "description": "ARN for this Auto Scaling Group",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "ARN for this Auto Scaling Group",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "instanceMaintenancePolicy": {
              "description": "If this block is configured, add a instance maintenance policy to the specified Auto Scaling group. Defined below.",
              "type": "object",
              "properties": {
                "maxHealthyPercentage": {
                  "description": "Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.",
                  "type": "number"
                },
                "minHealthyPercentage": {
                  "description": "Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "instanceRefresh": {
              "description": "If this block is configured, start an\nInstance Refresh\nwhen this Auto Scaling Group is updated. Defined below.",
              "type": "object",
              "properties": {
                "preferences": {
                  "description": "Override default parameters for Instance Refresh.",
                  "type": "object",
                  "properties": {
                    "alarmSpecification": {
                      "description": "Alarm Specification for Instance Refresh.",
                      "type": "object",
                      "properties": {
                        "alarms": {
                          "description": "List of Cloudwatch alarms. If any of these alarms goes into ALARM state, Instance Refresh is failed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "autoRollback": {
                      "description": "Automatically rollback if instance refresh fails. Defaults to false. This option may only be set to true when specifying a launch_template or mixed_instances_policy.",
                      "type": "boolean"
                    },
                    "checkpointDelay": {
                      "description": "Number of seconds to wait after a checkpoint. Defaults to 3600.",
                      "type": "string"
                    },
                    "checkpointPercentages": {
                      "description": "List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "instanceWarmup": {
                      "description": "Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.",
                      "type": "string"
                    },
                    "maxHealthyPercentage": {
                      "description": "Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.",
                      "type": "number"
                    },
                    "minHealthyPercentage": {
                      "description": "Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.",
                      "type": "number"
                    },
                    "scaleInProtectedInstances": {
                      "description": "Behavior when encountering instances protected from scale in are found. Available behaviors are Refresh, Ignore, and Wait. Default is Ignore.",
                      "type": "string"
                    },
                    "skipMatching": {
                      "description": "Replace instances that already have your desired configuration. Defaults to false.",
                      "type": "boolean"
                    },
                    "standbyInstances": {
                      "description": "Behavior when encountering instances in the Standby state in are found. Available behaviors are Terminate, Ignore, and Wait. Default is Ignore.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "strategy": {
                  "description": "Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.",
                  "type": "string"
                },
                "triggers": {
                  "description": "Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "launchConfiguration": {
              "description": "Name of the launch configuration to use.",
              "type": "string"
            },
            "launchConfigurationRef": {
              "description": "Reference to a LaunchConfiguration in autoscaling to populate launchConfiguration.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "launchConfigurationSelector": {
              "description": "Selector for a LaunchConfiguration in autoscaling to populate launchConfiguration.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "launchTemplate": {
              "description": "Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID of the launch template. Conflicts with name.",
                  "type": "string"
                },
                "idRef": {
                  "description": "Reference to a LaunchTemplate in ec2 to populate id.",
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "description": "Name of the referenced object.",
                      "type": "string"
                    },
                    "policy": {
                      "description": "Policies for referencing.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "idSelector": {
                  "description": "Selector for a LaunchTemplate in ec2 to populate id.",
                  "type": "object",
                  "properties": {
                    "matchControllerRef": {
                      "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                      "type": "boolean"
                    },
                    "matchLabels": {
                      "description": "MatchLabels ensures an object with matching labels is selected.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "policy": {
                      "description": "Policies for selection.",
                      "type": "object",
                      "properties": {
                        "resolution": {
                          "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                          "type": "string",
                          "default": "Required",
                          "enum": [
                            "Required",
                            "Optional"
                          ]
                        },
                        "resolve": {
                          "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                          "type": "string",
                          "enum": [
                            "Always",
                            "IfNotPresent"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                },
                "name": {
                  "description": "Name of the launch template. Conflicts with id.",
                  "type": "string"
                },
                "version": {
                  "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "maxInstanceLifetime": {
              "description": "Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.",
              "type": "number"
            },
            "maxSize": {
              "description": "Maximum size of the Auto Scaling Group.",
              "type": "number"
            },
            "metricsGranularity": {
              "description": "Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.",
              "type": "string"
            },
            "minElbCapacity": {
              "description": "Updates will not wait on ELB instance number changes.\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "minSize": {
              "description": "Minimum size of the Auto Scaling Group.\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "mixedInstancesPolicy": {
              "description": "Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.",
              "type": "object",
              "properties": {
                "instancesDistribution": {
                  "description": "Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.",
                  "type": "object",
                  "properties": {
                    "onDemandAllocationStrategy": {
                      "description": "Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.",
                      "type": "string"
                    },
                    "onDemandBaseCapacity": {
                      "description": "Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.",
                      "type": "number"
                    },
                    "onDemandPercentageAboveBaseCapacity": {
                      "description": "Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.",
                      "type": "number"
                    },
                    "spotAllocationStrategy": {
                      "description": "How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.",
                      "type": "string"
                    },
                    "spotInstancePools": {
                      "description": "Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.",
                      "type": "number"
                    },
                    "spotMaxPrice": {
                      "description": "Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "launchTemplate": {
                  "description": "Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.",
                  "type": "object",
                  "properties": {
                    "launchTemplateSpecification": {
                      "description": "Nested argument defines the Launch Template. Defined below.",
                      "type": "object",
                      "properties": {
                        "launchTemplateId": {
                          "description": "ID of the launch template. Conflicts with launch_template_name.",
                          "type": "string"
                        },
                        "launchTemplateIdRef": {
                          "description": "Reference to a LaunchTemplate in ec2 to populate launchTemplateId.",
                          "type": "object",
                          "required": [
                            "name"
                          ],
                          "properties": {
                            "name": {
                              "description": "Name of the referenced object.",
                              "type": "string"
                            },
                            "policy": {
                              "description": "Policies for referencing.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "launchTemplateIdSelector": {
                          "description": "Selector for a LaunchTemplate in ec2 to populate launchTemplateId.",
                          "type": "object",
                          "properties": {
                            "matchControllerRef": {
                              "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                              "type": "boolean"
                            },
                            "matchLabels": {
                              "description": "MatchLabels ensures an object with matching labels is selected.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "policy": {
                              "description": "Policies for selection.",
                              "type": "object",
                              "properties": {
                                "resolution": {
                                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                  "type": "string",
                                  "default": "Required",
                                  "enum": [
                                    "Required",
                                    "Optional"
                                  ]
                                },
                                "resolve": {
                                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                  "type": "string",
                                  "enum": [
                                    "Always",
                                    "IfNotPresent"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "launchTemplateName": {
                          "description": "Name of the launch template. Conflicts with launch_template_id.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "override": {
                      "description": "List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "instanceRequirements": {
                            "description": "Override the instance type in the Launch Template with instance types that satisfy the requirements.",
                            "type": "object",
                            "properties": {
                              "acceleratorCount": {
                                "description": "Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "acceleratorManufacturers": {
                                "description": "List of accelerator manufacturer names. Default is any manufacturer.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "acceleratorNames": {
                                "description": "List of accelerator names. Default is any acclerator.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "acceleratorTotalMemoryMib": {
                                "description": "Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "acceleratorTypes": {
                                "description": "List of accelerator types. Default is any accelerator type.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "allowedInstanceTypes": {
                                "description": "List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "bareMetal": {
                                "description": "Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.",
                                "type": "string"
                              },
                              "baselineEbsBandwidthMbps": {
                                "description": "Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "burstablePerformance": {
                                "description": "Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.",
                                "type": "string"
                              },
                              "cpuManufacturers": {
                                "description": "List of CPU manufacturer names. Default is any manufacturer.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "excludedInstanceTypes": {
                                "description": "List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "instanceGenerations": {
                                "description": "List of instance generation names. Default is any generation.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "localStorage": {
                                "description": "Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.",
                                "type": "string"
                              },
                              "localStorageTypes": {
                                "description": "List of local storage type names. Default any storage type.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "maxSpotPriceAsPercentageOfOptimalOnDemandPrice": {
                                "description": "The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price",
                                "type": "number"
                              },
                              "memoryGibPerVcpu": {
                                "description": "Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "memoryMib": {
                                "description": "Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "networkBandwidthGbps": {
                                "description": "Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "networkInterfaceCount": {
                                "description": "Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "onDemandMaxPricePercentageOverLowestPrice": {
                                "description": "Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.",
                                "type": "number"
                              },
                              "requireHibernateSupport": {
                                "description": "Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.",
                                "type": "boolean"
                              },
                              "spotMaxPricePercentageOverLowestPrice": {
                                "description": "Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price",
                                "type": "number"
                              },
                              "totalLocalStorageGb": {
                                "description": "Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "vcpuCount": {
                                "description": "Block describing the minimum and maximum number of vCPUs. Default is no maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "instanceType": {
                            "description": "Override the instance type in the Launch Template.",
                            "type": "string"
                          },
                          "launchTemplateSpecification": {
                            "description": "Nested argument defines the Launch Template. Defined below.",
                            "type": "object",
                            "properties": {
                              "launchTemplateId": {
                                "description": "ID of the launch template. Conflicts with launch_template_name.",
                                "type": "string"
                              },
                              "launchTemplateIdRef": {
                                "description": "Reference to a LaunchTemplate in ec2 to populate launchTemplateId.",
                                "type": "object",
                                "required": [
                                  "name"
                                ],
                                "properties": {
                                  "name": {
                                    "description": "Name of the referenced object.",
                                    "type": "string"
                                  },
                                  "policy": {
                                    "description": "Policies for referencing.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "launchTemplateIdSelector": {
                                "description": "Selector for a LaunchTemplate in ec2 to populate launchTemplateId.",
                                "type": "object",
                                "properties": {
                                  "matchControllerRef": {
                                    "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                                    "type": "boolean"
                                  },
                                  "matchLabels": {
                                    "description": "MatchLabels ensures an object with matching labels is selected.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "policy": {
                                    "description": "Policies for selection.",
                                    "type": "object",
                                    "properties": {
                                      "resolution": {
                                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                                        "type": "string",
                                        "default": "Required",
                                        "enum": [
                                          "Required",
                                          "Optional"
                                        ]
                                      },
                                      "resolve": {
                                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                                        "type": "string",
                                        "enum": [
                                          "Always",
                                          "IfNotPresent"
                                        ]
                                      }
                                    },
                                    "additionalProperties": false
                                  }
                                },
                                "additionalProperties": false
                              },
                              "launchTemplateName": {
                                "description": "Name of the launch template. Conflicts with launch_template_id.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "weightedCapacity": {
                            "description": "Number of capacity units, which gives the instance type a proportional weight to other instance types.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "placementGroup": {
              "description": "Name of the placement group into which you'll launch your instances, if any.",
              "type": "string"
            },
            "placementGroupRef": {
              "description": "Reference to a PlacementGroup in ec2 to populate placementGroup.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "placementGroupSelector": {
              "description": "Selector for a PlacementGroup in ec2 to populate placementGroup.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "protectFromScaleIn": {
              "description": "Whether newly launched instances\nare automatically protected from termination by Amazon EC2 Auto Scaling when\nscaling in. For more information about preventing instances from terminating\non scale in, see Using instance scale-in protection\nin the Amazon EC2 Auto Scaling User Guide.",
              "type": "boolean"
            },
            "serviceLinkedRoleArn": {
              "description": "ARN of the service-linked role that the ASG will use to call other AWS services",
              "type": "string"
            },
            "serviceLinkedRoleArnRef": {
              "description": "Reference to a Role in iam to populate serviceLinkedRoleArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "serviceLinkedRoleArnSelector": {
              "description": "Selector for a Role in iam to populate serviceLinkedRoleArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "suspendedProcesses": {
              "description": "List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.\nNote that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tag": {
              "description": "Configuration block(s) containing resource tags. See Tag below for more details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Key",
                    "type": "string"
                  },
                  "propagateAtLaunch": {
                    "description": "Enables propagation of the tag to\nAmazon EC2 instances launched via this ASG",
                    "type": "boolean"
                  },
                  "value": {
                    "description": "Value",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "terminationPolicies": {
              "description": "List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trafficSource": {
              "description": "Attaches one or more traffic sources to the specified Auto Scaling group.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "description": "Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Provides additional context for the value of Identifier.\nThe following lists the valid values:\nelb if identifier is the name of a Classic Load Balancer.\nelbv2 if identifier is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.\nvpc-lattice if identifier is the ARN of a VPC Lattice target group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "vpcZoneIdentifier": {
              "description": "List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "vpcZoneIdentifierRefs": {
              "description": "References to Subnet in ec2 to populate vpcZoneIdentifier.",
              "type": "array",
              "items": {
                "description": "A Reference to a named object.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "Name of the referenced object.",
                    "type": "string"
                  },
                  "policy": {
                    "description": "Policies for referencing.",
                    "type": "object",
                    "properties": {
                      "resolution": {
                        "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                        "type": "string",
                        "default": "Required",
                        "enum": [
                          "Required",
                          "Optional"
                        ]
                      },
                      "resolve": {
                        "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                        "type": "string",
                        "enum": [
                          "Always",
                          "IfNotPresent"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "vpcZoneIdentifierSelector": {
              "description": "Selector for a list of Subnet in ec2 to populate vpcZoneIdentifier.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "waitForCapacityTimeout": {
              "description": "(See also Waiting\nfor Capacity below.",
              "type": "string"
            },
            "waitForElbCapacity": {
              "description": "(Takes\nprecedence over min_elb_capacity behavior.)\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "warmPool": {
              "description": "If this block is configured, add a Warm Pool\nto the specified Auto Scaling group. Defined below",
              "type": "object",
              "properties": {
                "instanceReusePolicy": {
                  "description": "Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.",
                  "type": "object",
                  "properties": {
                    "reuseOnScaleIn": {
                      "description": "Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "maxGroupPreparedCapacity": {
                  "description": "Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.",
                  "type": "number"
                },
                "minSize": {
                  "description": "Minimum size of the Auto Scaling Group.\n(See also Waiting for Capacity below.)",
                  "type": "number"
                },
                "poolState": {
                  "description": "Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxSize) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.maxSize))",
          "message": "spec.forProvider.maxSize is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.minSize) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.minSize))",
          "message": "spec.forProvider.minSize is a required parameter"
        }
      ]
    },
    "status": {
      "description": "AutoscalingGroupStatus defines the observed state of AutoscalingGroup.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "ARN for this Auto Scaling Group",
              "type": "string"
            },
            "availabilityZoneDistribution": {
              "description": "The instance capacity distribution across Availability Zones. See Availability Zone Distribution below for more details.",
              "type": "object",
              "properties": {
                "capacityDistributionStrategy": {
                  "description": "The strategy to use for distributing capacity across the Availability Zones. Valid values are balanced-only and balanced-best-effort. Default is balanced-best-effort.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "availabilityZones": {
              "description": "A list of Availability Zones where instances in the Auto Scaling group can be created. Used for launching into the default VPC subnet in each Availability Zone when not using the vpc_zone_identifier attribute, or for attaching a network interface when an existing network interface ID is specified in a launch template. Conflicts with vpc_zone_identifier.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "capacityRebalance": {
              "description": "Whether capacity rebalance is enabled. Otherwise, capacity rebalance is disabled.",
              "type": "boolean"
            },
            "capacityReservationSpecification": {
              "description": "Demand Capacity Reservations. See Capacity Reservation Specification below for more details.",
              "type": "object",
              "properties": {
                "capacityReservationPreference": {
                  "description": "Capacity Reservation preference helps you use Capacity Reservations efficiently by prioritizing reserved capacity in a Capacity Reservation before using On-Demand capacity. Valid values are default, capacity-reservations-only, capacity-reservations-first and none. Default is default.",
                  "type": "string"
                },
                "capacityReservationTarget": {
                  "description": "Describes a target Capacity Reservation or Capacity Reservation resource group.",
                  "type": "object",
                  "properties": {
                    "capacityReservationIds": {
                      "description": "List of On-Demand Capacity Reservation Ids. Conflicts with capacity_reservation_resource_group_arns.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "capacityReservationResourceGroupArns": {
                      "description": "List of On-Demand Capacity Reservation Resource Group Arns. Conflicts with capacity_reservation_ids.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "context": {
              "description": "Reserved.",
              "type": "string"
            },
            "defaultCooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes before another scaling activity can start.",
              "type": "number"
            },
            "defaultInstanceWarmup": {
              "description": "Amount of time, in seconds, until a newly launched instance can contribute to the Amazon CloudWatch metrics. This delay lets an instance finish initializing before Amazon EC2 Auto Scaling aggregates instance metrics, resulting in more reliable usage data. Set this value equal to the amount of time that it takes for resource consumption to become stable after an instance reaches the InService state. (See Set the default instance warmup for an Auto Scaling group)",
              "type": "number"
            },
            "desiredCapacity": {
              "description": "Number of Amazon EC2 instances that\nshould be running in the group. (See also Waiting for\nCapacity below.)",
              "type": "number"
            },
            "desiredCapacityType": {
              "description": "The unit of measurement for the value specified for desired_capacity. Supported for attribute-based instance type selection only. Valid values: \"units\", \"vcpu\", \"memory-mib\".",
              "type": "string"
            },
            "enabledMetrics": {
              "description": "List of metrics to collect. The allowed values are defined by the underlying AWS API.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "forceDelete": {
              "description": "Allows deleting the Auto Scaling Group without waiting\nfor all instances in the pool to terminate. You can force an Auto Scaling Group to delete\neven if it's in the process of scaling a resource. This bypasses that\nbehavior and potentially leaves resources dangling.",
              "type": "boolean"
            },
            "forceDeleteWarmPool": {
              "description": "Allows deleting the Auto Scaling Group without waiting for all instances in the warm pool to terminate.",
              "type": "boolean"
            },
            "healthCheckGracePeriod": {
              "description": "Time (in seconds) after instance comes into service before checking health.",
              "type": "number"
            },
            "healthCheckType": {
              "description": "\"EC2\" or \"ELB\". Controls how health checking is done.",
              "type": "string"
            },
            "id": {
              "description": "Auto Scaling Group id.",
              "type": "string"
            },
            "ignoreFailedScalingActivities": {
              "description": "Whether to ignore failed Auto Scaling scaling activities while waiting for capacity. The default is false -- failed scaling activities cause errors to be returned.",
              "type": "boolean"
            },
            "initialLifecycleHook": {
              "description": "One or more\nLifecycle Hooks\nto attach to the Auto Scaling Group before instances are launched. The\nsyntax is exactly the same as the separate\naws_autoscaling_lifecycle_hook\nresource, without the autoscaling_group_name attribute. Please note that this will only work when creating\na new Auto Scaling Group. For all other use-cases, please use aws_autoscaling_lifecycle_hook resource.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "defaultResult": {
                    "type": "string"
                  },
                  "heartbeatTimeout": {
                    "type": "number"
                  },
                  "lifecycleTransition": {
                    "type": "string"
                  },
                  "name": {
                    "description": "Name of the Auto Scaling Group. Conflicts with name_prefix.",
                    "type": "string"
                  },
                  "notificationMetadata": {
                    "type": "string"
                  },
                  "notificationTargetArn": {
                    "description": "ARN for this Auto Scaling Group",
                    "type": "string"
                  },
                  "roleArn": {
                    "description": "ARN for this Auto Scaling Group",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "instanceMaintenancePolicy": {
              "description": "If this block is configured, add a instance maintenance policy to the specified Auto Scaling group. Defined below.",
              "type": "object",
              "properties": {
                "maxHealthyPercentage": {
                  "description": "Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.",
                  "type": "number"
                },
                "minHealthyPercentage": {
                  "description": "Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "instanceRefresh": {
              "description": "If this block is configured, start an\nInstance Refresh\nwhen this Auto Scaling Group is updated. Defined below.",
              "type": "object",
              "properties": {
                "preferences": {
                  "description": "Override default parameters for Instance Refresh.",
                  "type": "object",
                  "properties": {
                    "alarmSpecification": {
                      "description": "Alarm Specification for Instance Refresh.",
                      "type": "object",
                      "properties": {
                        "alarms": {
                          "description": "List of Cloudwatch alarms. If any of these alarms goes into ALARM state, Instance Refresh is failed.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "additionalProperties": false
                    },
                    "autoRollback": {
                      "description": "Automatically rollback if instance refresh fails. Defaults to false. This option may only be set to true when specifying a launch_template or mixed_instances_policy.",
                      "type": "boolean"
                    },
                    "checkpointDelay": {
                      "description": "Number of seconds to wait after a checkpoint. Defaults to 3600.",
                      "type": "string"
                    },
                    "checkpointPercentages": {
                      "description": "List of percentages for each checkpoint. Values must be unique and in ascending order. To replace all instances, the final number must be 100.",
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "instanceWarmup": {
                      "description": "Number of seconds until a newly launched instance is configured and ready to use. Default behavior is to use the Auto Scaling Group's health check grace period.",
                      "type": "string"
                    },
                    "maxHealthyPercentage": {
                      "description": "Amount of capacity in the Auto Scaling group that can be in service and healthy, or pending, to support your workload when an instance refresh is in place, as a percentage of the desired capacity of the Auto Scaling group. Values must be between 100 and 200, defaults to 100.",
                      "type": "number"
                    },
                    "minHealthyPercentage": {
                      "description": "Amount of capacity in the Auto Scaling group that must remain healthy during an instance refresh to allow the operation to continue, as a percentage of the desired capacity of the Auto Scaling group. Defaults to 90.",
                      "type": "number"
                    },
                    "scaleInProtectedInstances": {
                      "description": "Behavior when encountering instances protected from scale in are found. Available behaviors are Refresh, Ignore, and Wait. Default is Ignore.",
                      "type": "string"
                    },
                    "skipMatching": {
                      "description": "Replace instances that already have your desired configuration. Defaults to false.",
                      "type": "boolean"
                    },
                    "standbyInstances": {
                      "description": "Behavior when encountering instances in the Standby state in are found. Available behaviors are Terminate, Ignore, and Wait. Default is Ignore.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "strategy": {
                  "description": "Strategy to use for instance refresh. The only allowed value is Rolling. See StartInstanceRefresh Action for more information.",
                  "type": "string"
                },
                "triggers": {
                  "description": "Set of additional property names that will trigger an Instance Refresh. A refresh will always be triggered by a change in any of launch_configuration, launch_template, or mixed_instances_policy.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "launchConfiguration": {
              "description": "Name of the launch configuration to use.",
              "type": "string"
            },
            "launchTemplate": {
              "description": "Nested argument with Launch template specification to use to launch instances. See Launch Template below for more details.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "ID of the launch template. Conflicts with name.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the launch template. Conflicts with id.",
                  "type": "string"
                },
                "version": {
                  "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "loadBalancers": {
              "description": "List of elastic load balancer names to add to the autoscaling\ngroup names. Only valid for classic load balancers. For ALBs, use target_group_arns instead. To remove all load balancer attachments an empty list should be specified.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "maxInstanceLifetime": {
              "description": "Maximum amount of time, in seconds, that an instance can be in service, values must be either equal to 0 or between 86400 and 31536000 seconds.",
              "type": "number"
            },
            "maxSize": {
              "description": "Maximum size of the Auto Scaling Group.",
              "type": "number"
            },
            "metricsGranularity": {
              "description": "Granularity to associate with the metrics to collect. The only valid value is 1Minute. Default is 1Minute.",
              "type": "string"
            },
            "minElbCapacity": {
              "description": "Updates will not wait on ELB instance number changes.\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "minSize": {
              "description": "Minimum size of the Auto Scaling Group.\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "mixedInstancesPolicy": {
              "description": "Configuration block containing settings to define launch targets for Auto Scaling groups. See Mixed Instances Policy below for more details.",
              "type": "object",
              "properties": {
                "instancesDistribution": {
                  "description": "Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.",
                  "type": "object",
                  "properties": {
                    "onDemandAllocationStrategy": {
                      "description": "Strategy to use when launching on-demand instances. Valid values: prioritized, lowest-price. Default: prioritized.",
                      "type": "string"
                    },
                    "onDemandBaseCapacity": {
                      "description": "Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: 0.",
                      "type": "number"
                    },
                    "onDemandPercentageAboveBaseCapacity": {
                      "description": "Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: 100.",
                      "type": "number"
                    },
                    "spotAllocationStrategy": {
                      "description": "How to allocate capacity across the Spot pools. Valid values: lowest-price, capacity-optimized, capacity-optimized-prioritized, and price-capacity-optimized. Default: lowest-price.",
                      "type": "string"
                    },
                    "spotInstancePools": {
                      "description": "Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Only available with spot_allocation_strategy set to lowest-price. Otherwise it must be set to 0, if it has been defined before. Default: 2.",
                      "type": "number"
                    },
                    "spotMaxPrice": {
                      "description": "Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
                "launchTemplate": {
                  "description": "Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.",
                  "type": "object",
                  "properties": {
                    "launchTemplateSpecification": {
                      "description": "Nested argument defines the Launch Template. Defined below.",
                      "type": "object",
                      "properties": {
                        "launchTemplateId": {
                          "description": "ID of the launch template. Conflicts with launch_template_name.",
                          "type": "string"
                        },
                        "launchTemplateName": {
                          "description": "Name of the launch template. Conflicts with launch_template_id.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "override": {
                      "description": "List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "instanceRequirements": {
                            "description": "Override the instance type in the Launch Template with instance types that satisfy the requirements.",
                            "type": "object",
                            "properties": {
                              "acceleratorCount": {
                                "description": "Block describing the minimum and maximum number of accelerators (GPUs, FPGAs, or AWS Inferentia chips). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "acceleratorManufacturers": {
                                "description": "List of accelerator manufacturer names. Default is any manufacturer.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "acceleratorNames": {
                                "description": "List of accelerator names. Default is any acclerator.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "acceleratorTotalMemoryMib": {
                                "description": "Block describing the minimum and maximum total memory of the accelerators. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "acceleratorTypes": {
                                "description": "List of accelerator types. Default is any accelerator type.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "allowedInstanceTypes": {
                                "description": "List of instance types to apply your specified attributes against. All other instance types are ignored, even if they match your specified attributes. You can use strings with one or more wild cards, represented by an asterisk (*), to allow an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are allowing the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are allowing all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is all instance types.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "bareMetal": {
                                "description": "Indicate whether bare metal instace types should be included, excluded, or required. Default is excluded.",
                                "type": "string"
                              },
                              "baselineEbsBandwidthMbps": {
                                "description": "Block describing the minimum and maximum baseline EBS bandwidth, in Mbps. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "burstablePerformance": {
                                "description": "Indicate whether burstable performance instance types should be included, excluded, or required. Default is excluded.",
                                "type": "string"
                              },
                              "cpuManufacturers": {
                                "description": "List of CPU manufacturer names. Default is any manufacturer.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "excludedInstanceTypes": {
                                "description": "List of instance types to exclude. You can use strings with one or more wild cards, represented by an asterisk (*), to exclude an instance type, size, or generation. The following are examples: m5.8xlarge, c5*.*, m5a.*, r*, *3*. For example, if you specify c5*, you are excluding the entire C5 instance family, which includes all C5a and C5n instance types. If you specify m5a.*, you are excluding all the M5a instance types, but not the M5n instance types. Maximum of 400 entries in the list; each entry is limited to 30 characters. Default is no excluded instance types.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "instanceGenerations": {
                                "description": "List of instance generation names. Default is any generation.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "localStorage": {
                                "description": "Indicate whether instance types with local storage volumes are included, excluded, or required. Default is included.",
                                "type": "string"
                              },
                              "localStorageTypes": {
                                "description": "List of local storage type names. Default any storage type.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "maxSpotPriceAsPercentageOfOptimalOnDemandPrice": {
                                "description": "The price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Conflicts with spot_max_price_percentage_over_lowest_price",
                                "type": "number"
                              },
                              "memoryGibPerVcpu": {
                                "description": "Block describing the minimum and maximum amount of memory (GiB) per vCPU. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "memoryMib": {
                                "description": "Block describing the minimum and maximum amount of memory (MiB). Default is no maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "networkBandwidthGbps": {
                                "description": "Block describing the minimum and maximum amount of network bandwidth, in gigabits per second (Gbps). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "networkInterfaceCount": {
                                "description": "Block describing the minimum and maximum number of network interfaces. Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "onDemandMaxPricePercentageOverLowestPrice": {
                                "description": "Price protection threshold for On-Demand Instances. This is the maximum you’ll pay for an On-Demand Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 20.",
                                "type": "number"
                              },
                              "requireHibernateSupport": {
                                "description": "Indicate whether instance types must support On-Demand Instance Hibernation, either true or false. Default is false.",
                                "type": "boolean"
                              },
                              "spotMaxPricePercentageOverLowestPrice": {
                                "description": "Price protection threshold for Spot Instances. This is the maximum you’ll pay for a Spot Instance, expressed as a percentage higher than the cheapest M, C, or R instance type with your specified attributes. When Amazon EC2 Auto Scaling selects instance types with your attributes, we will exclude instance types whose price is higher than your threshold. The parameter accepts an integer, which Amazon EC2 Auto Scaling interprets as a percentage. To turn off price protection, specify a high value, such as 999999. Default is 100. Conflicts with max_spot_price_as_percentage_of_optimal_on_demand_price",
                                "type": "number"
                              },
                              "totalLocalStorageGb": {
                                "description": "Block describing the minimum and maximum total local storage (GB). Default is no minimum or maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              },
                              "vcpuCount": {
                                "description": "Block describing the minimum and maximum number of vCPUs. Default is no maximum.",
                                "type": "object",
                                "properties": {
                                  "max": {
                                    "description": "Maximum.",
                                    "type": "number"
                                  },
                                  "min": {
                                    "description": "Minimum.",
                                    "type": "number"
                                  }
                                },
                                "additionalProperties": false
                              }
                            },
                            "additionalProperties": false
                          },
                          "instanceType": {
                            "description": "Override the instance type in the Launch Template.",
                            "type": "string"
                          },
                          "launchTemplateSpecification": {
                            "description": "Nested argument defines the Launch Template. Defined below.",
                            "type": "object",
                            "properties": {
                              "launchTemplateId": {
                                "description": "ID of the launch template. Conflicts with launch_template_name.",
                                "type": "string"
                              },
                              "launchTemplateName": {
                                "description": "Name of the launch template. Conflicts with launch_template_id.",
                                "type": "string"
                              },
                              "version": {
                                "description": "Template version. Can be version number, $Latest, or $Default. (Default: $Default).",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          },
                          "weightedCapacity": {
                            "description": "Number of capacity units, which gives the instance type a proportional weight to other instance types.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "placementGroup": {
              "description": "Name of the placement group into which you'll launch your instances, if any.",
              "type": "string"
            },
            "predictedCapacity": {
              "description": "Predicted capacity of the group.",
              "type": "number"
            },
            "protectFromScaleIn": {
              "description": "Whether newly launched instances\nare automatically protected from termination by Amazon EC2 Auto Scaling when\nscaling in. For more information about preventing instances from terminating\non scale in, see Using instance scale-in protection\nin the Amazon EC2 Auto Scaling User Guide.",
              "type": "boolean"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "serviceLinkedRoleArn": {
              "description": "ARN of the service-linked role that the ASG will use to call other AWS services",
              "type": "string"
            },
            "suspendedProcesses": {
              "description": "List of processes to suspend for the Auto Scaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer, InstanceRefresh.\nNote that if you suspend either the Launch or Terminate process types, it can prevent your Auto Scaling Group from functioning properly.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tag": {
              "description": "Configuration block(s) containing resource tags. See Tag below for more details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Key",
                    "type": "string"
                  },
                  "propagateAtLaunch": {
                    "description": "Enables propagation of the tag to\nAmazon EC2 instances launched via this ASG",
                    "type": "boolean"
                  },
                  "value": {
                    "description": "Value",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "targetGroupArns": {
              "description": "Set of aws_alb_target_group ARNs, for use with Application or Network Load Balancing. To remove all target group attachments an empty list should be specified.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "terminationPolicies": {
              "description": "List of policies to decide how the instances in the Auto Scaling Group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, OldestLaunchTemplate, AllocationStrategy, Default. Additionally, the ARN of a Lambda function can be specified for custom termination policies.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trafficSource": {
              "description": "Attaches one or more traffic sources to the specified Auto Scaling group.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identifier": {
                    "description": "Identifies the traffic source. For Application Load Balancers, Gateway Load Balancers, Network Load Balancers, and VPC Lattice, this will be the Amazon Resource Name (ARN) for a target group in this account and Region. For Classic Load Balancers, this will be the name of the Classic Load Balancer in this account and Region.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Provides additional context for the value of Identifier.\nThe following lists the valid values:\nelb if identifier is the name of a Classic Load Balancer.\nelbv2 if identifier is the ARN of an Application Load Balancer, Gateway Load Balancer, or Network Load Balancer target group.\nvpc-lattice if identifier is the ARN of a VPC Lattice target group.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "vpcZoneIdentifier": {
              "description": "List of subnet IDs to launch resources in. Subnets automatically determine which availability zones the group will reside. Conflicts with availability_zones.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "waitForCapacityTimeout": {
              "description": "(See also Waiting\nfor Capacity below.",
              "type": "string"
            },
            "waitForElbCapacity": {
              "description": "(Takes\nprecedence over min_elb_capacity behavior.)\n(See also Waiting for Capacity below.)",
              "type": "number"
            },
            "warmPool": {
              "description": "If this block is configured, add a Warm Pool\nto the specified Auto Scaling group. Defined below",
              "type": "object",
              "properties": {
                "instanceReusePolicy": {
                  "description": "Whether instances in the Auto Scaling group can be returned to the warm pool on scale in. The default is to terminate instances in the Auto Scaling group when the group scales in.",
                  "type": "object",
                  "properties": {
                    "reuseOnScaleIn": {
                      "description": "Whether instances in the Auto Scaling group can be returned to the warm pool on scale in.",
                      "type": "boolean"
                    }
                  },
                  "additionalProperties": false
                },
                "maxGroupPreparedCapacity": {
                  "description": "Total maximum number of instances that are allowed to be in the warm pool or in any state except Terminated for the Auto Scaling group.",
                  "type": "number"
                },
                "minSize": {
                  "description": "Minimum size of the Auto Scaling Group.\n(See also Waiting for Capacity below.)",
                  "type": "number"
                },
                "poolState": {
                  "description": "Sets the instance state to transition to after the lifecycle hooks finish. Valid values are: Stopped (default), Running or Hibernated.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "warmPoolSize": {
              "description": "Current size of the warm pool.",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
