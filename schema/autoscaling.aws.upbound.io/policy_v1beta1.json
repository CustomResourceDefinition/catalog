{
  "description": "Policy is the Schema for the Policys API. Provides an AutoScaling Scaling Group resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "PolicySpec defines the desired state of Policy",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "adjustmentType": {
              "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
              "type": "string"
            },
            "autoscalingGroupName": {
              "description": "Name of the autoscaling group.",
              "type": "string"
            },
            "autoscalingGroupNameRef": {
              "description": "Reference to a AutoscalingGroup in autoscaling to populate autoscalingGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "autoscalingGroupNameSelector": {
              "description": "Selector for a AutoscalingGroup in autoscaling to populate autoscalingGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "cooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
              "type": "number"
            },
            "enabled": {
              "description": "Whether the scaling policy is enabled or disabled. Default: true.",
              "type": "boolean"
            },
            "estimatedInstanceWarmup": {
              "description": "Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.",
              "type": "number"
            },
            "metricAggregationType": {
              "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
              "type": "string"
            },
            "minAdjustmentMagnitude": {
              "description": "Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.",
              "type": "number"
            },
            "policyType": {
              "description": "Policy type, either \"SimpleScaling\", \"StepScaling\", \"TargetTrackingScaling\", or \"PredictiveScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"",
              "type": "string"
            },
            "predictiveScalingConfiguration": {
              "description": "Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "maxCapacityBreachBehavior": {
                    "description": "Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.",
                    "type": "string"
                  },
                  "maxCapacityBuffer": {
                    "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.",
                    "type": "string"
                  },
                  "metricSpecification": {
                    "description": "This structure includes the metrics and target utilization to use for predictive scaling.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customizedCapacityMetricSpecification": {
                          "description": "Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "customizedLoadMetricSpecification": {
                          "description": "Customized load metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "customizedScalingMetricSpecification": {
                          "description": "Customized scaling metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedLoadMetricSpecification": {
                          "description": "Predefined load metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedMetricPairSpecification": {
                          "description": "Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedScalingMetricSpecification": {
                          "description": "Predefined scaling metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "targetValue": {
                          "description": "Target value for the metric.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "mode": {
                    "description": "Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.",
                    "type": "string"
                  },
                  "schedulingBufferTime": {
                    "description": "Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "scalingAdjustment": {
              "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
              "type": "number"
            },
            "stepAdjustment": {
              "description": "Set of adjustments that manage\ngroup scaling. These have the following structure:",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "metricIntervalLowerBound": {
                    "description": "Lower bound for the\ndifference between the alarm threshold and the CloudWatch metric.\nWithout a value, AWS will treat this bound as negative infinity.",
                    "type": "string"
                  },
                  "metricIntervalUpperBound": {
                    "description": "Upper bound for the\ndifference between the alarm threshold and the CloudWatch metric.\nWithout a value, AWS will treat this bound as positive infinity. The upper bound\nmust be greater than the lower bound.",
                    "type": "string"
                  },
                  "scalingAdjustment": {
                    "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "targetTrackingConfiguration": {
              "description": "Target tracking policy. These have the following structure:",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "customizedMetricSpecification": {
                    "description": "Customized metric. Conflicts with predefined_metric_specification.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metricDimension": {
                          "description": "Dimensions of the metric.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the dimension.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "metricName": {
                          "description": "Name of the metric.",
                          "type": "string"
                        },
                        "metrics": {
                          "description": "Metrics to include, as a metric data query.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Short name for the metric used in target tracking scaling policy.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Human-readable label for this metric or expression.",
                                "type": "string"
                              },
                              "metricStat": {
                                "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "dimensions": {
                                            "description": "Dimensions of the metric.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the policy.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the dimension.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "metricName": {
                                            "description": "Name of the metric.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "period": {
                                      "description": "The period of the metric in seconds.",
                                      "type": "number"
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "returnData": {
                                "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "namespace": {
                          "description": "Namespace of the metric.",
                          "type": "string"
                        },
                        "period": {
                          "description": "The period of the metric in seconds.",
                          "type": "number"
                        },
                        "statistic": {
                          "description": "Statistic of the metric.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "Unit of the metric.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "disableScaleIn": {
                    "description": "Whether scale in by the target tracking policy is disabled.",
                    "type": "boolean"
                  },
                  "predefinedMetricSpecification": {
                    "description": "Predefined metric. Conflicts with customized_metric_specification.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "predefinedMetricType": {
                          "description": "Metric type.",
                          "type": "string"
                        },
                        "resourceLabel": {
                          "description": "Identifies the resource associated with the metric type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "targetValue": {
                    "description": "Target value for the metric.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "adjustmentType": {
              "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
              "type": "string"
            },
            "cooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
              "type": "number"
            },
            "enabled": {
              "description": "Whether the scaling policy is enabled or disabled. Default: true.",
              "type": "boolean"
            },
            "estimatedInstanceWarmup": {
              "description": "Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.",
              "type": "number"
            },
            "metricAggregationType": {
              "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
              "type": "string"
            },
            "minAdjustmentMagnitude": {
              "description": "Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.",
              "type": "number"
            },
            "policyType": {
              "description": "Policy type, either \"SimpleScaling\", \"StepScaling\", \"TargetTrackingScaling\", or \"PredictiveScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"",
              "type": "string"
            },
            "predictiveScalingConfiguration": {
              "description": "Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "maxCapacityBreachBehavior": {
                    "description": "Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.",
                    "type": "string"
                  },
                  "maxCapacityBuffer": {
                    "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.",
                    "type": "string"
                  },
                  "metricSpecification": {
                    "description": "This structure includes the metrics and target utilization to use for predictive scaling.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customizedCapacityMetricSpecification": {
                          "description": "Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "customizedLoadMetricSpecification": {
                          "description": "Customized load metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "customizedScalingMetricSpecification": {
                          "description": "Customized scaling metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedLoadMetricSpecification": {
                          "description": "Predefined load metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedMetricPairSpecification": {
                          "description": "Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedScalingMetricSpecification": {
                          "description": "Predefined scaling metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "targetValue": {
                          "description": "Target value for the metric.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "mode": {
                    "description": "Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.",
                    "type": "string"
                  },
                  "schedulingBufferTime": {
                    "description": "Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "scalingAdjustment": {
              "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
              "type": "number"
            },
            "stepAdjustment": {
              "description": "Set of adjustments that manage\ngroup scaling. These have the following structure:",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "metricIntervalLowerBound": {
                    "description": "Lower bound for the\ndifference between the alarm threshold and the CloudWatch metric.\nWithout a value, AWS will treat this bound as negative infinity.",
                    "type": "string"
                  },
                  "metricIntervalUpperBound": {
                    "description": "Upper bound for the\ndifference between the alarm threshold and the CloudWatch metric.\nWithout a value, AWS will treat this bound as positive infinity. The upper bound\nmust be greater than the lower bound.",
                    "type": "string"
                  },
                  "scalingAdjustment": {
                    "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "targetTrackingConfiguration": {
              "description": "Target tracking policy. These have the following structure:",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "customizedMetricSpecification": {
                    "description": "Customized metric. Conflicts with predefined_metric_specification.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metricDimension": {
                          "description": "Dimensions of the metric.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the dimension.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "metricName": {
                          "description": "Name of the metric.",
                          "type": "string"
                        },
                        "metrics": {
                          "description": "Metrics to include, as a metric data query.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Short name for the metric used in target tracking scaling policy.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Human-readable label for this metric or expression.",
                                "type": "string"
                              },
                              "metricStat": {
                                "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "dimensions": {
                                            "description": "Dimensions of the metric.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the policy.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the dimension.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "metricName": {
                                            "description": "Name of the metric.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "period": {
                                      "description": "The period of the metric in seconds.",
                                      "type": "number"
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "returnData": {
                                "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "namespace": {
                          "description": "Namespace of the metric.",
                          "type": "string"
                        },
                        "period": {
                          "description": "The period of the metric in seconds.",
                          "type": "number"
                        },
                        "statistic": {
                          "description": "Statistic of the metric.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "Unit of the metric.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "disableScaleIn": {
                    "description": "Whether scale in by the target tracking policy is disabled.",
                    "type": "boolean"
                  },
                  "predefinedMetricSpecification": {
                    "description": "Predefined metric. Conflicts with customized_metric_specification.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "predefinedMetricType": {
                          "description": "Metric type.",
                          "type": "string"
                        },
                        "resourceLabel": {
                          "description": "Identifies the resource associated with the metric type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "targetValue": {
                    "description": "Target value for the metric.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "PolicyStatus defines the observed state of Policy.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "adjustmentType": {
              "description": "Whether the adjustment is an absolute number or a percentage of the current capacity. Valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
              "type": "string"
            },
            "arn": {
              "description": "ARN assigned by AWS to the scaling policy.",
              "type": "string"
            },
            "autoscalingGroupName": {
              "description": "Name of the autoscaling group.",
              "type": "string"
            },
            "cooldown": {
              "description": "Amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.",
              "type": "number"
            },
            "enabled": {
              "description": "Whether the scaling policy is enabled or disabled. Default: true.",
              "type": "boolean"
            },
            "estimatedInstanceWarmup": {
              "description": "Estimated time, in seconds, until a newly launched instance will contribute CloudWatch metrics. Without a value, AWS will default to the group's specified cooldown period.",
              "type": "number"
            },
            "id": {
              "description": "Short name for the metric used in target tracking scaling policy.",
              "type": "string"
            },
            "metricAggregationType": {
              "description": "Aggregation type for the policy's metrics. Valid values are \"Minimum\", \"Maximum\", and \"Average\". Without a value, AWS will treat the aggregation type as \"Average\".",
              "type": "string"
            },
            "minAdjustmentMagnitude": {
              "description": "Minimum value to scale by when adjustment_type is set to PercentChangeInCapacity.",
              "type": "number"
            },
            "policyType": {
              "description": "Policy type, either \"SimpleScaling\", \"StepScaling\", \"TargetTrackingScaling\", or \"PredictiveScaling\". If this value isn't provided, AWS will default to \"SimpleScaling.\"",
              "type": "string"
            },
            "predictiveScalingConfiguration": {
              "description": "Predictive scaling policy configuration to use with Amazon EC2 Auto Scaling.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "maxCapacityBreachBehavior": {
                    "description": "Defines the behavior that should be applied if the forecast capacity approaches or exceeds the maximum capacity of the Auto Scaling group. Valid values are HonorMaxCapacity or IncreaseMaxCapacity. Default is HonorMaxCapacity.",
                    "type": "string"
                  },
                  "maxCapacityBuffer": {
                    "description": "Size of the capacity buffer to use when the forecast capacity is close to or exceeds the maximum capacity. Valid range is 0 to 100. If set to 0, Amazon EC2 Auto Scaling may scale capacity higher than the maximum capacity to equal but not exceed forecast capacity.",
                    "type": "string"
                  },
                  "metricSpecification": {
                    "description": "This structure includes the metrics and target utilization to use for predictive scaling.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customizedCapacityMetricSpecification": {
                          "description": "Customized capacity metric specification. The field is only valid when you use customized_load_metric_specification",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "customizedLoadMetricSpecification": {
                          "description": "Customized load metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "customizedScalingMetricSpecification": {
                          "description": "Customized scaling metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "metricDataQueries": {
                                "description": "List of up to 10 structures that defines custom scaling metric in predictive scaling policy",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "expression": {
                                      "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                      "type": "string"
                                    },
                                    "id": {
                                      "description": "Short name for the metric used in target tracking scaling policy.",
                                      "type": "string"
                                    },
                                    "label": {
                                      "description": "Human-readable label for this metric or expression.",
                                      "type": "string"
                                    },
                                    "metricStat": {
                                      "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metric": {
                                            "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "dimensions": {
                                                  "description": "Dimensions of the metric.",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "properties": {
                                                      "name": {
                                                        "description": "Name of the policy.",
                                                        "type": "string"
                                                      },
                                                      "value": {
                                                        "description": "Value of the dimension.",
                                                        "type": "string"
                                                      }
                                                    },
                                                    "additionalProperties": false
                                                  }
                                                },
                                                "metricName": {
                                                  "description": "Name of the metric.",
                                                  "type": "string"
                                                },
                                                "namespace": {
                                                  "description": "Namespace of the metric.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "stat": {
                                            "description": "Statistic of the metrics to return.",
                                            "type": "string"
                                          },
                                          "unit": {
                                            "description": "Unit of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "returnData": {
                                      "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                      "type": "boolean"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedLoadMetricSpecification": {
                          "description": "Predefined load metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedMetricPairSpecification": {
                          "description": "Metric pair specification from which Amazon EC2 Auto Scaling determines the appropriate scaling metric and load metric to use.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "predefinedScalingMetricSpecification": {
                          "description": "Predefined scaling metric specification.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "predefinedMetricType": {
                                "description": "Metric type.",
                                "type": "string"
                              },
                              "resourceLabel": {
                                "description": "Identifies the resource associated with the metric type.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "targetValue": {
                          "description": "Target value for the metric.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "mode": {
                    "description": "Predictive scaling mode. Valid values are ForecastAndScale and ForecastOnly. Default is ForecastOnly.",
                    "type": "string"
                  },
                  "schedulingBufferTime": {
                    "description": "Amount of time, in seconds, by which the instance launch time can be advanced. Minimum is 0.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "scalingAdjustment": {
              "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
              "type": "number"
            },
            "stepAdjustment": {
              "description": "Set of adjustments that manage\ngroup scaling. These have the following structure:",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "metricIntervalLowerBound": {
                    "description": "Lower bound for the\ndifference between the alarm threshold and the CloudWatch metric.\nWithout a value, AWS will treat this bound as negative infinity.",
                    "type": "string"
                  },
                  "metricIntervalUpperBound": {
                    "description": "Upper bound for the\ndifference between the alarm threshold and the CloudWatch metric.\nWithout a value, AWS will treat this bound as positive infinity. The upper bound\nmust be greater than the lower bound.",
                    "type": "string"
                  },
                  "scalingAdjustment": {
                    "description": "Number of instances by which to scale. adjustment_type determines the interpretation of this number (e.g., as an absolute number or as a percentage of the existing Auto Scaling group size). A positive increment adds to the current capacity and a negative value removes from the current capacity.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "targetTrackingConfiguration": {
              "description": "Target tracking policy. These have the following structure:",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "customizedMetricSpecification": {
                    "description": "Customized metric. Conflicts with predefined_metric_specification.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "metricDimension": {
                          "description": "Dimensions of the metric.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the policy.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the dimension.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "metricName": {
                          "description": "Name of the metric.",
                          "type": "string"
                        },
                        "metrics": {
                          "description": "Metrics to include, as a metric data query.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "expression": {
                                "description": "Math expression used on the returned metric. You must specify either expression or metric_stat, but not both.",
                                "type": "string"
                              },
                              "id": {
                                "description": "Short name for the metric used in target tracking scaling policy.",
                                "type": "string"
                              },
                              "label": {
                                "description": "Human-readable label for this metric or expression.",
                                "type": "string"
                              },
                              "metricStat": {
                                "description": "Structure that defines CloudWatch metric to be used in target tracking scaling policy. You must specify either expression or metric_stat, but not both.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "metric": {
                                      "description": "Structure that defines the CloudWatch metric to return, including the metric name, namespace, and dimensions.",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "dimensions": {
                                            "description": "Dimensions of the metric.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "description": "Name of the policy.",
                                                  "type": "string"
                                                },
                                                "value": {
                                                  "description": "Value of the dimension.",
                                                  "type": "string"
                                                }
                                              },
                                              "additionalProperties": false
                                            }
                                          },
                                          "metricName": {
                                            "description": "Name of the metric.",
                                            "type": "string"
                                          },
                                          "namespace": {
                                            "description": "Namespace of the metric.",
                                            "type": "string"
                                          }
                                        },
                                        "additionalProperties": false
                                      }
                                    },
                                    "period": {
                                      "description": "The period of the metric in seconds.",
                                      "type": "number"
                                    },
                                    "stat": {
                                      "description": "Statistic of the metrics to return.",
                                      "type": "string"
                                    },
                                    "unit": {
                                      "description": "Unit of the metric.",
                                      "type": "string"
                                    }
                                  },
                                  "additionalProperties": false
                                }
                              },
                              "returnData": {
                                "description": "Boolean that indicates whether to return the timestamps and raw data values of this metric, the default is true",
                                "type": "boolean"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "namespace": {
                          "description": "Namespace of the metric.",
                          "type": "string"
                        },
                        "period": {
                          "description": "The period of the metric in seconds.",
                          "type": "number"
                        },
                        "statistic": {
                          "description": "Statistic of the metric.",
                          "type": "string"
                        },
                        "unit": {
                          "description": "Unit of the metric.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "disableScaleIn": {
                    "description": "Whether scale in by the target tracking policy is disabled.",
                    "type": "boolean"
                  },
                  "predefinedMetricSpecification": {
                    "description": "Predefined metric. Conflicts with customized_metric_specification.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "predefinedMetricType": {
                          "description": "Metric type.",
                          "type": "string"
                        },
                        "resourceLabel": {
                          "description": "Identifies the resource associated with the metric type.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "targetValue": {
                    "description": "Target value for the metric.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
