{
  "description": "ObjectBucket is the API for creating S3 buckets.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ObjectBucketSpec defines the desired state of a ObjectBucket.",
      "type": "object",
      "properties": {
        "compositionRef": {
          "description": "A CompositionReference references a Composition.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the Composition.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "parameters": {
          "description": "ObjectBucketParameters are the configurable fields of a ObjectBucket.",
          "type": "object",
          "required": [
            "bucketName"
          ],
          "properties": {
            "bucketDeletionPolicy": {
              "description": "BucketDeletionPolicy determines how buckets should be deleted when Bucket is deleted.\n `DeleteIfEmpty` only deletes the bucket if the bucket is empty.\n `DeleteAll` recursively deletes all objects in the bucket and then removes it.",
              "type": "string",
              "default": "DeleteAll"
            },
            "bucketName": {
              "description": "BucketName is the name of the bucket to create.\nCannot be changed after bucket is created.\nName must be acceptable by the S3 protocol, which follows RFC 1123.\nBe aware that S3 providers may require a unique name across the platform or region.",
              "type": "string"
            },
            "region": {
              "description": "Region is the name of the region where the bucket shall be created.\nThe region must be available in the S3 endpoint.",
              "type": "string"
            },
            "security": {
              "description": "Security defines the security of a service",
              "type": "object",
              "default": {},
              "properties": {
                "allowAllNamespaces": {
                  "description": "AllowAllNamespaces allows the service to be accessible from all namespaces, this supersedes the AllowedNamespaces field",
                  "type": "boolean",
                  "default": false
                },
                "allowedGroups": {
                  "description": "AllowedGroups defines a list of Groups that have limited access to the instance namespace",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedNamespaces": {
                  "description": "AllowedNamespaces defines a list of namespaces from where the service can be reached in the claim namespace",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "allowedUsers": {
                  "description": "AllowedUsers defines a list of Users that have limited access to instance namespace.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "deletionProtection": {
                  "description": "DeletionProtection blocks the deletion of the instance if it is enabled (enabled by default)",
                  "type": "boolean",
                  "default": true
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToRef references a secret to which the connection details will be written.",
          "type": "object",
          "properties": {
            "name": {
              "description": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "x-kubernetes-map-type": "atomic"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ObjectBucketStatus reflects the observed state of a ObjectBucket.",
      "type": "object",
      "properties": {
        "accessUserConditions": {
          "description": "AccessUserConditions contains a copy of the claim's underlying user account conditions.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Message is a human-readable message indicating details about the transition.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "Reason contains a programmatic identifier indicating the reason for the condition's last transition.",
                "type": "string",
                "maxLength": 1024,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "Type of condition.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "bucketConditions": {
          "description": "BucketConditions contains a copy of the claim's underlying bucket conditions.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "Message is a human-readable message indicating details about the transition.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "Reason contains a programmatic identifier indicating the reason for the condition's last transition.",
                "type": "string",
                "maxLength": 1024,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "Type of condition.",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
