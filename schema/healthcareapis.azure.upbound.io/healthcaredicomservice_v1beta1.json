{
  "description": "HealthcareDICOMService is the Schema for the HealthcareDICOMServices API. Manages a Healthcare DICOM (Digital Imaging and Communications in Medicine) Service.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "HealthcareDICOMServiceSpec defines the desired state of HealthcareDICOMService",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "cors": {
              "description": "A cors block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowCredentials": {
                    "description": "Whether to allow credentials in CORS. Defaults to false.",
                    "type": "boolean"
                  },
                  "allowedHeaders": {
                    "description": "A list of allowed headers for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedMethods": {
                    "description": "A list of allowed methods for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedOrigins": {
                    "description": "A list of allowed origins for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "maxAgeInSeconds": {
                    "description": "The maximum age in seconds for the CORS configuration (must be between 0 and 99998 inclusive).",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "dataPartitionsEnabled": {
              "description": "If data partitions are enabled or not. Defaults to false. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "boolean"
            },
            "encryptionKeyUrl": {
              "description": "The URL of the key to use for encryption as part of the customer-managed key encryption settings. For more details, refer to the Azure Customer-Managed Keys Overview.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Identity IDs which should be assigned to this Healthcare DICOM service.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "The type of identity used for the Healthcare DICOM service. Possible values are UserAssigned, SystemAssigned and SystemAssigned, UserAssigned. If UserAssigned is set, an identity_ids must be set as well.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "Specifies the Azure Region where the Healthcare DICOM Service should be created. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "string"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether to enabled public networks when data plane traffic coming from public networks while private endpoint is enabled. Defaults to true.",
              "type": "boolean"
            },
            "storage": {
              "description": "A storage block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fileSystemName": {
                    "description": "The filesystem name of connected storage account. Changing this forces a new Healthcare DICOM Service to be created.",
                    "type": "string"
                  },
                  "storageAccountId": {
                    "description": "The resource ID of connected storage account. Changing this forces a new Healthcare DICOM Service to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the Healthcare DICOM Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "workspaceId": {
              "description": "Specifies the ID of the Healthcare Workspace where the Healthcare DICOM Service should exist. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "string"
            },
            "workspaceIdRef": {
              "description": "Reference to a HealthcareWorkspace in healthcareapis to populate workspaceId.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "workspaceIdSelector": {
              "description": "Selector for a HealthcareWorkspace in healthcareapis to populate workspaceId.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "cors": {
              "description": "A cors block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowCredentials": {
                    "description": "Whether to allow credentials in CORS. Defaults to false.",
                    "type": "boolean"
                  },
                  "allowedHeaders": {
                    "description": "A list of allowed headers for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedMethods": {
                    "description": "A list of allowed methods for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedOrigins": {
                    "description": "A list of allowed origins for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "maxAgeInSeconds": {
                    "description": "The maximum age in seconds for the CORS configuration (must be between 0 and 99998 inclusive).",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "dataPartitionsEnabled": {
              "description": "If data partitions are enabled or not. Defaults to false. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "boolean"
            },
            "encryptionKeyUrl": {
              "description": "The URL of the key to use for encryption as part of the customer-managed key encryption settings. For more details, refer to the Azure Customer-Managed Keys Overview.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Identity IDs which should be assigned to this Healthcare DICOM service.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "type": {
                    "description": "The type of identity used for the Healthcare DICOM service. Possible values are UserAssigned, SystemAssigned and SystemAssigned, UserAssigned. If UserAssigned is set, an identity_ids must be set as well.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "Specifies the Azure Region where the Healthcare DICOM Service should be created. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "string"
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether to enabled public networks when data plane traffic coming from public networks while private endpoint is enabled. Defaults to true.",
              "type": "boolean"
            },
            "storage": {
              "description": "A storage block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fileSystemName": {
                    "description": "The filesystem name of connected storage account. Changing this forces a new Healthcare DICOM Service to be created.",
                    "type": "string"
                  },
                  "storageAccountId": {
                    "description": "The resource ID of connected storage account. Changing this forces a new Healthcare DICOM Service to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the Healthcare DICOM Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        }
      ]
    },
    "status": {
      "description": "HealthcareDICOMServiceStatus defines the observed state of HealthcareDICOMService.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "authentication": {
              "description": "The authentication block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "audience": {
                    "description": "The intended audience to receive authentication tokens for the service. The default value is https://dicom.azurehealthcareapis.azure.com",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "authority": {
                    "description": "The Azure Active Directory (tenant) that serves as the authentication authority to access the service.\nAuthority must be registered to Azure AD and in the following format: https://{Azure-AD-endpoint}/{tenant-id}.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "cors": {
              "description": "A cors block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allowCredentials": {
                    "description": "Whether to allow credentials in CORS. Defaults to false.",
                    "type": "boolean"
                  },
                  "allowedHeaders": {
                    "description": "A list of allowed headers for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedMethods": {
                    "description": "A list of allowed methods for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "allowedOrigins": {
                    "description": "A list of allowed origins for CORS.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "maxAgeInSeconds": {
                    "description": "The maximum age in seconds for the CORS configuration (must be between 0 and 99998 inclusive).",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "dataPartitionsEnabled": {
              "description": "If data partitions are enabled or not. Defaults to false. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "boolean"
            },
            "encryptionKeyUrl": {
              "description": "The URL of the key to use for encryption as part of the customer-managed key encryption settings. For more details, refer to the Azure Customer-Managed Keys Overview.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Healthcare DICOM Service.",
              "type": "string"
            },
            "identity": {
              "description": "An identity block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "identityIds": {
                    "description": "A list of User Assigned Identity IDs which should be assigned to this Healthcare DICOM service.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "principalId": {
                    "description": "The ID of the Healthcare DICOM Service.",
                    "type": "string"
                  },
                  "tenantId": {
                    "description": "The ID of the Healthcare DICOM Service.",
                    "type": "string"
                  },
                  "type": {
                    "description": "The type of identity used for the Healthcare DICOM service. Possible values are UserAssigned, SystemAssigned and SystemAssigned, UserAssigned. If UserAssigned is set, an identity_ids must be set as well.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "Specifies the Azure Region where the Healthcare DICOM Service should be created. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "string"
            },
            "privateEndpoint": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the Healthcare DICOM Service.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the Healthcare DICOM Service. Changing this forces a new Healthcare DICOM Service to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "publicNetworkAccessEnabled": {
              "description": "Whether to enabled public networks when data plane traffic coming from public networks while private endpoint is enabled. Defaults to true.",
              "type": "boolean"
            },
            "serviceUrl": {
              "description": "The url of the Healthcare DICOM Services.",
              "type": "string"
            },
            "storage": {
              "description": "A storage block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "fileSystemName": {
                    "description": "The filesystem name of connected storage account. Changing this forces a new Healthcare DICOM Service to be created.",
                    "type": "string"
                  },
                  "storageAccountId": {
                    "description": "The resource ID of connected storage account. Changing this forces a new Healthcare DICOM Service to be created.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the Healthcare DICOM Service.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "workspaceId": {
              "description": "Specifies the ID of the Healthcare Workspace where the Healthcare DICOM Service should exist. Changing this forces a new Healthcare DICOM Service to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
