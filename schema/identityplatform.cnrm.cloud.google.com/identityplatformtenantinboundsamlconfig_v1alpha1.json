{
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "apiVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "displayName",
        "idpConfig",
        "projectRef",
        "spConfig",
        "tenant"
      ],
      "properties": {
        "displayName": {
          "description": "Human friendly display name.",
          "type": "string"
        },
        "enabled": {
          "description": "If this config allows users to sign in with the provider.",
          "type": "boolean"
        },
        "idpConfig": {
          "description": "SAML IdP configuration when the project acts as the relying party.",
          "type": "object",
          "required": [
            "idpCertificates",
            "idpEntityId",
            "ssoUrl"
          ],
          "properties": {
            "idpCertificates": {
              "description": "The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "x509Certificate": {
                    "description": "The x509 certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "idpEntityId": {
              "description": "Unique identifier for all SAML entities.",
              "type": "string"
            },
            "signRequest": {
              "description": "Indicates if outbounding SAMLRequest should be signed.",
              "type": "boolean"
            },
            "ssoUrl": {
              "description": "URL to send Authentication request to.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "projectRef": {
          "description": "The project that this resource belongs to.",
          "type": "object",
          "oneOf": [
            {
              "required": [
                "name"
              ],
              "not": {
                "required": [
                  "external"
                ]
              }
            },
            {
              "required": [
                "external"
              ],
              "not": {
                "anyOf": [
                  {
                    "required": [
                      "name"
                    ]
                  },
                  {
                    "required": [
                      "namespace"
                    ]
                  }
                ]
              }
            }
          ],
          "properties": {
            "external": {
              "description": "Allowed value: The `name` field of a `Project` resource.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "resourceID": {
          "description": "Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.",
          "type": "string"
        },
        "spConfig": {
          "description": "SAML SP (Service Provider) configuration when the project acts as the relying party to receive\nand accept an authentication assertion issued by a SAML identity provider.",
          "type": "object",
          "required": [
            "callbackUri",
            "spEntityId"
          ],
          "properties": {
            "callbackUri": {
              "description": "Callback URI where responses from IDP are handled. Must start with 'https://'.",
              "type": "string"
            },
            "spCertificates": {
              "description": "The IDP's certificate data to verify the signature in the SAMLResponse issued by the IDP.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "x509Certificate": {
                    "description": "The x509 certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "spEntityId": {
              "description": "Unique identifier for all SAML entities.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "tenant": {
          "description": "Immutable. The name of the tenant where this inbound SAML config resource exists.",
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observation of the resource's current state.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string"
              },
              "message": {
                "description": "Human-readable message indicating details about last transition.",
                "type": "string"
              },
              "reason": {
                "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status is the status of the condition. Can be True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.",
          "type": "integer"
        }
      },
      "additionalProperties": false
    }
  }
}
