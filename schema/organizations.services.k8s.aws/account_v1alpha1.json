{
  "description": "Account is the Schema for the Accounts API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AccountSpec defines the desired state of Account.\n\nContains information about an Amazon Web Services account that is a member\nof an organization.",
      "type": "object",
      "required": [
        "email",
        "name"
      ],
      "properties": {
        "email": {
          "description": "The email address of the owner to assign to the new member account. This\nemail address must not already be associated with another Amazon Web Services\naccount. You must use a valid email address to complete account creation.\n\nThe rules for a valid email address:\n\n   * The address must be a minimum of 6 and a maximum of 64 characters long.\n\n   * All characters must be 7-bit ASCII characters.\n\n   * There must be one and only one @ symbol, which separates the local name\n   from the domain name.\n\nRegex Pattern: `^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$`",
          "type": "string"
        },
        "iamUserAccessToBilling": {
          "description": "If set to ALLOW, the new account enables IAM users to access account billing\ninformation if they have the required permissions. If set to DENY, only the\nroot user of the new account can access account billing information. For\nmore information, see About IAM access to the Billing and Cost Management\nconsole (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/grantaccess.html#ControllingAccessWebsite-Activate)\nin the Amazon Web Services Billing and Cost Management User Guide.\n\nIf you don't specify this parameter, the value defaults to ALLOW, and IAM\nusers and roles with the required permissions can access billing information\nfor the new account.",
          "type": "string"
        },
        "name": {
          "description": "The friendly name of the member account.\n\nRegex Pattern: `^[\\u0020-\\u007E]+$`",
          "type": "string"
        },
        "roleName": {
          "description": "The name of an IAM role that Organizations automatically preconfigures in\nthe new member account. This role trusts the management account, allowing\nusers in the management account to assume the role, as permitted by the management\naccount administrator. The role has administrator permissions in the new\nmember account.\n\nIf you don't specify this parameter, the role name defaults to OrganizationAccountAccessRole.\n\nFor more information about how to use this role to access the member account,\nsee the following links:\n\n   * Creating the OrganizationAccountAccessRole in an invited member account\n   (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_accounts_access.html#orgs_manage_accounts_create-cross-account-role)\n   in the Organizations User Guide\n\n   * Steps 2 and 3 in IAM Tutorial: Delegate access across Amazon Web Services\n   accounts using IAM roles (https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html)\n   in the IAM User Guide\n\nThe regex pattern (http://wikipedia.org/wiki/regex) that is used to validate\nthis parameter. The pattern can include uppercase letters, lowercase letters,\ndigits with no spaces, and any of the following characters: =,.@-\n\nRegex Pattern: `^[\\w+=,.@-]{1,64}$`",
          "type": "string"
        },
        "tags": {
          "description": "A list of tags that you want to attach to the newly created account. For\neach tag in the list, you must specify both a tag key and a value. You can\nset the value to an empty string, but you can't set it to null. For more\ninformation about tagging, see Tagging Organizations resources (https://docs.aws.amazon.com/organizations/latest/userguide/orgs_tagging.html)\nin the Organizations User Guide.\n\nIf any one of the tags is not valid or if you exceed the maximum allowed\nnumber of tags for an account, then the entire request fails and the account\nis not created.",
          "type": "array",
          "items": {
            "description": "A custom key-value pair associated with a resource within your organization.\n\nYou can attach tags to any of the following organization resources.\n\n   * Amazon Web Services account\n\n   * Organizational unit (OU)\n\n   * Organization root\n\n   * Policy",
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "AccountStatus defines the observed state of Account",
      "type": "object",
      "properties": {
        "accountID": {
          "description": "If the account was created successfully, the unique identifier (ID) of the\nnew account.\n\nThe regex pattern (http://wikipedia.org/wiki/regex) for an account ID string\nrequires exactly 12 digits.\n\nRegex Pattern: `^\\d{12}$`",
          "type": "string"
        },
        "ackResourceMetadata": {
          "description": "All CRs managed by ACK have a common `Status.ACKResourceMetadata` member\nthat is used to contain resource sync state, account ownership,\nconstructed ARN for the resource",
          "type": "object",
          "required": [
            "ownerAccountID",
            "region"
          ],
          "properties": {
            "arn": {
              "description": "ARN is the Amazon Resource Name for the resource. This is a\nglobally-unique identifier and is set only by the ACK service controller\nonce the controller has orchestrated the creation of the resource OR\nwhen it has verified that an \"adopted\" resource (a resource where the\nARN annotation was set by the Kubernetes user on the CR) exists and\nmatches the supplied CR's Spec field values.\nhttps://github.com/aws/aws-controllers-k8s/issues/270",
              "type": "string"
            },
            "ownerAccountID": {
              "description": "OwnerAccountID is the AWS Account ID of the account that owns the\nbackend AWS service API resource.",
              "type": "string"
            },
            "region": {
              "description": "Region is the AWS region in which the resource exists or will exist.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "completedTimestamp": {
          "description": "The date and time that the account was created and the request completed.",
          "type": "string",
          "format": "date-time"
        },
        "conditions": {
          "description": "All CRs managed by ACK have a common `Status.Conditions` member that\ncontains a collection of `ackv1alpha1.Condition` objects that describe\nthe various terminal states of the CR and its backend AWS service API\nresource",
          "type": "array",
          "items": {
            "description": "Condition is the common struct used by all CRDs managed by ACK service\ncontrollers to indicate terminal states  of the CR and its backend AWS\nservice API resource",
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type is the type of the Condition",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "createAccountRequestID": {
          "description": "The unique identifier (ID) that references this request. You get this value\nfrom the response of the initial CreateAccount request to create the account.\n\nThe regex pattern (http://wikipedia.org/wiki/regex) for a create account\nrequest ID string requires \"car-\" followed by from 8 to 32 lowercase letters\nor digits.\n\nRegex Pattern: `^car-[a-z0-9]{8,32}$`",
          "type": "string"
        },
        "failureReason": {
          "description": "If the request failed, a description of the reason for the failure.\n\n   * ACCOUNT_LIMIT_EXCEEDED: The account couldn't be created because you\n   reached the limit on the number of accounts in your organization.\n\n   * CONCURRENT_ACCOUNT_MODIFICATION: You already submitted a request with\n   the same information.\n\n   * EMAIL_ALREADY_EXISTS: The account could not be created because another\n   Amazon Web Services account with that email address already exists.\n\n   * FAILED_BUSINESS_VALIDATION: The Amazon Web Services account that owns\n   your organization failed to receive business license validation.\n\n   * GOVCLOUD_ACCOUNT_ALREADY_EXISTS: The account in the Amazon Web Services\n   GovCloud (US) Region could not be created because this Region already\n   includes an account with that email address.\n\n   * IDENTITY_INVALID_BUSINESS_VALIDATION: The Amazon Web Services account\n   that owns your organization can't complete business license validation\n   because it doesn't have valid identity data.\n\n   * INVALID_ADDRESS: The account could not be created because the address\n   you provided is not valid.\n\n   * INVALID_EMAIL: The account could not be created because the email address\n   you provided is not valid.\n\n   * INVALID_PAYMENT_INSTRUMENT: The Amazon Web Services account that owns\n   your organization does not have a supported payment method associated\n   with the account. Amazon Web Services does not support cards issued by\n   financial institutions in Russia or Belarus. For more information, see\n   Managing your Amazon Web Services payments (https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/manage-general.html).\n\n   * INTERNAL_FAILURE: The account could not be created because of an internal\n   failure. Try again later. If the problem persists, contact Amazon Web\n   Services Customer Support.\n\n   * MISSING_BUSINESS_VALIDATION: The Amazon Web Services account that owns\n   your organization has not received Business Validation.\n\n   * MISSING_PAYMENT_INSTRUMENT: You must configure the management account\n   with a valid payment method, such as a credit card.\n\n   * PENDING_BUSINESS_VALIDATION: The Amazon Web Services account that owns\n   your organization is still in the process of completing business license\n   validation.\n\n   * UNKNOWN_BUSINESS_VALIDATION: The Amazon Web Services account that owns\n   your organization has an unknown issue with business license validation.",
          "type": "string"
        },
        "govCloudAccountID": {
          "description": "If the account was created successfully, the unique identifier (ID) of the\nnew account in the Amazon Web Services GovCloud (US) Region.\n\nRegex Pattern: `^\\d{12}$`",
          "type": "string"
        },
        "requestedTimestamp": {
          "description": "The date and time that the request was made for the account creation.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "The status of the asynchronous request to create an Amazon Web Services account.",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
