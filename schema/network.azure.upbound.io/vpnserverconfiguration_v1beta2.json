{
  "description": "VPNServerConfiguration is the Schema for the VPNServerConfigurations API. Manages a VPN Server Configuration.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VPNServerConfigurationSpec defines the desired state of VPNServerConfiguration",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "azureActiveDirectoryAuthentication": {
              "description": "A azure_active_directory_authentication block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "audience": {
                    "description": "The Audience which should be used for authentication.",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "The Issuer which should be used for authentication.",
                    "type": "string"
                  },
                  "tenant": {
                    "description": "The Tenant which should be used for authentication.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "clientRevokedCertificate": {
              "description": "One or more client_revoked_certificate blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name used to uniquely identify this certificate.",
                    "type": "string"
                  },
                  "thumbprint": {
                    "description": "The Thumbprint of the Certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "clientRootCertificate": {
              "description": "One or more client_root_certificate blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name used to uniquely identify this certificate.",
                    "type": "string"
                  },
                  "publicCertData": {
                    "description": "The Public Key Data associated with the Certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "ipsecPolicy": {
              "description": "A ipsec_policy block as defined below.",
              "type": "object",
              "properties": {
                "dhGroup": {
                  "description": "The DH Group, used in IKE Phase 1. Possible values include DHGroup1, DHGroup2, DHGroup14, DHGroup24, DHGroup2048, ECP256, ECP384 and None.",
                  "type": "string"
                },
                "ikeEncryption": {
                  "description": "The IKE encryption algorithm, used for IKE Phase 2. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128 and GCMAES256.",
                  "type": "string"
                },
                "ikeIntegrity": {
                  "description": "The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include GCMAES128, GCMAES256, MD5, SHA1, SHA256 and SHA384.",
                  "type": "string"
                },
                "ipsecEncryption": {
                  "description": "The IPSec encryption algorithm, used for IKE phase 1. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256 and None.",
                  "type": "string"
                },
                "ipsecIntegrity": {
                  "description": "The IPSec integrity algorithm, used for IKE phase 1. Possible values include GCMAES128, GCMAES192, GCMAES256, MD5, SHA1 and SHA256.",
                  "type": "string"
                },
                "pfsGroup": {
                  "description": "The Pfs Group, used in IKE Phase 2. Possible values include ECP256, ECP384, PFS1, PFS2, PFS14, PFS24, PFS2048, PFSMM and None.",
                  "type": "string"
                },
                "saDataSizeKilobytes": {
                  "description": "The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.",
                  "type": "number"
                },
                "saLifetimeSeconds": {
                  "description": "The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "radius": {
              "description": "A radius block as defined below.",
              "type": "object",
              "properties": {
                "clientRootCertificate": {
                  "description": "One or more client_root_certificate blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A name used to uniquely identify this certificate.",
                        "type": "string"
                      },
                      "thumbprint": {
                        "description": "The Thumbprint of the Certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "server": {
                  "description": "One or more server blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "The Address of the Radius Server.",
                        "type": "string"
                      },
                      "score": {
                        "description": "The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.",
                        "type": "number"
                      },
                      "secretSecretRef": {
                        "description": "The Secret used to communicate with the Radius Server.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "serverRootCertificate": {
                  "description": "One or more server_root_certificate blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A name used to uniquely identify this certificate.",
                        "type": "string"
                      },
                      "publicCertData": {
                        "description": "The Public Key Data associated with the Certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpnAuthenticationTypes": {
              "description": "A list of Authentication Types applicable for this VPN Server Configuration. Possible values are AAD (Azure Active Directory), Certificate and Radius.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "vpnProtocols": {
              "description": "A list of VPN Protocols to use for this Server Configuration. Possible values are IkeV2 and OpenVPN.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "azureActiveDirectoryAuthentication": {
              "description": "A azure_active_directory_authentication block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "audience": {
                    "description": "The Audience which should be used for authentication.",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "The Issuer which should be used for authentication.",
                    "type": "string"
                  },
                  "tenant": {
                    "description": "The Tenant which should be used for authentication.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "clientRevokedCertificate": {
              "description": "One or more client_revoked_certificate blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name used to uniquely identify this certificate.",
                    "type": "string"
                  },
                  "thumbprint": {
                    "description": "The Thumbprint of the Certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "clientRootCertificate": {
              "description": "One or more client_root_certificate blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name used to uniquely identify this certificate.",
                    "type": "string"
                  },
                  "publicCertData": {
                    "description": "The Public Key Data associated with the Certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "ipsecPolicy": {
              "description": "A ipsec_policy block as defined below.",
              "type": "object",
              "properties": {
                "dhGroup": {
                  "description": "The DH Group, used in IKE Phase 1. Possible values include DHGroup1, DHGroup2, DHGroup14, DHGroup24, DHGroup2048, ECP256, ECP384 and None.",
                  "type": "string"
                },
                "ikeEncryption": {
                  "description": "The IKE encryption algorithm, used for IKE Phase 2. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128 and GCMAES256.",
                  "type": "string"
                },
                "ikeIntegrity": {
                  "description": "The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include GCMAES128, GCMAES256, MD5, SHA1, SHA256 and SHA384.",
                  "type": "string"
                },
                "ipsecEncryption": {
                  "description": "The IPSec encryption algorithm, used for IKE phase 1. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256 and None.",
                  "type": "string"
                },
                "ipsecIntegrity": {
                  "description": "The IPSec integrity algorithm, used for IKE phase 1. Possible values include GCMAES128, GCMAES192, GCMAES256, MD5, SHA1 and SHA256.",
                  "type": "string"
                },
                "pfsGroup": {
                  "description": "The Pfs Group, used in IKE Phase 2. Possible values include ECP256, ECP384, PFS1, PFS2, PFS14, PFS24, PFS2048, PFSMM and None.",
                  "type": "string"
                },
                "saDataSizeKilobytes": {
                  "description": "The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.",
                  "type": "number"
                },
                "saLifetimeSeconds": {
                  "description": "The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "radius": {
              "description": "A radius block as defined below.",
              "type": "object",
              "properties": {
                "clientRootCertificate": {
                  "description": "One or more client_root_certificate blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A name used to uniquely identify this certificate.",
                        "type": "string"
                      },
                      "thumbprint": {
                        "description": "The Thumbprint of the Certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "server": {
                  "description": "One or more server blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "secretSecretRef"
                    ],
                    "properties": {
                      "address": {
                        "description": "The Address of the Radius Server.",
                        "type": "string"
                      },
                      "score": {
                        "description": "The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.",
                        "type": "number"
                      },
                      "secretSecretRef": {
                        "description": "The Secret used to communicate with the Radius Server.",
                        "type": "object",
                        "required": [
                          "key",
                          "name",
                          "namespace"
                        ],
                        "properties": {
                          "key": {
                            "description": "The key to select.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the secret.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace of the secret.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "serverRootCertificate": {
                  "description": "One or more server_root_certificate blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A name used to uniquely identify this certificate.",
                        "type": "string"
                      },
                      "publicCertData": {
                        "description": "The Public Key Data associated with the Certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpnAuthenticationTypes": {
              "description": "A list of Authentication Types applicable for this VPN Server Configuration. Possible values are AAD (Azure Active Directory), Certificate and Radius.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "vpnProtocols": {
              "description": "A list of VPN Protocols to use for this Server Configuration. Possible values are IkeV2 and OpenVPN.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vpnAuthenticationTypes) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.vpnAuthenticationTypes))",
          "message": "spec.forProvider.vpnAuthenticationTypes is a required parameter"
        }
      ]
    },
    "status": {
      "description": "VPNServerConfigurationStatus defines the observed state of VPNServerConfiguration.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "azureActiveDirectoryAuthentication": {
              "description": "A azure_active_directory_authentication block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "audience": {
                    "description": "The Audience which should be used for authentication.",
                    "type": "string"
                  },
                  "issuer": {
                    "description": "The Issuer which should be used for authentication.",
                    "type": "string"
                  },
                  "tenant": {
                    "description": "The Tenant which should be used for authentication.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "clientRevokedCertificate": {
              "description": "One or more client_revoked_certificate blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name used to uniquely identify this certificate.",
                    "type": "string"
                  },
                  "thumbprint": {
                    "description": "The Thumbprint of the Certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "clientRootCertificate": {
              "description": "One or more client_root_certificate blocks as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "A name used to uniquely identify this certificate.",
                    "type": "string"
                  },
                  "publicCertData": {
                    "description": "The Public Key Data associated with the Certificate.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "id": {
              "description": "The ID of the VPN Server Configuration.",
              "type": "string"
            },
            "ipsecPolicy": {
              "description": "A ipsec_policy block as defined below.",
              "type": "object",
              "properties": {
                "dhGroup": {
                  "description": "The DH Group, used in IKE Phase 1. Possible values include DHGroup1, DHGroup2, DHGroup14, DHGroup24, DHGroup2048, ECP256, ECP384 and None.",
                  "type": "string"
                },
                "ikeEncryption": {
                  "description": "The IKE encryption algorithm, used for IKE Phase 2. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128 and GCMAES256.",
                  "type": "string"
                },
                "ikeIntegrity": {
                  "description": "The IKE encryption integrity algorithm, used for IKE Phase 2. Possible values include GCMAES128, GCMAES256, MD5, SHA1, SHA256 and SHA384.",
                  "type": "string"
                },
                "ipsecEncryption": {
                  "description": "The IPSec encryption algorithm, used for IKE phase 1. Possible values include AES128, AES192, AES256, DES, DES3, GCMAES128, GCMAES192, GCMAES256 and None.",
                  "type": "string"
                },
                "ipsecIntegrity": {
                  "description": "The IPSec integrity algorithm, used for IKE phase 1. Possible values include GCMAES128, GCMAES192, GCMAES256, MD5, SHA1 and SHA256.",
                  "type": "string"
                },
                "pfsGroup": {
                  "description": "The Pfs Group, used in IKE Phase 2. Possible values include ECP256, ECP384, PFS1, PFS2, PFS14, PFS24, PFS2048, PFSMM and None.",
                  "type": "string"
                },
                "saDataSizeKilobytes": {
                  "description": "The IPSec Security Association payload size in KB for a Site-to-Site VPN tunnel.",
                  "type": "number"
                },
                "saLifetimeSeconds": {
                  "description": "The IPSec Security Association lifetime in seconds for a Site-to-Site VPN tunnel.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "location": {
              "description": "The Azure location where this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "radius": {
              "description": "A radius block as defined below.",
              "type": "object",
              "properties": {
                "clientRootCertificate": {
                  "description": "One or more client_root_certificate blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A name used to uniquely identify this certificate.",
                        "type": "string"
                      },
                      "thumbprint": {
                        "description": "The Thumbprint of the Certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "server": {
                  "description": "One or more server blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "address": {
                        "description": "The Address of the Radius Server.",
                        "type": "string"
                      },
                      "score": {
                        "description": "The Score of the Radius Server determines the priority of the server. Ranges from 1 to 30.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "serverRootCertificate": {
                  "description": "One or more server_root_certificate blocks as defined below.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "A name used to uniquely identify this certificate.",
                        "type": "string"
                      },
                      "publicCertData": {
                        "description": "The Public Key Data associated with the Certificate.",
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The Name of the Resource Group in which this VPN Server Configuration should be created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "vpnAuthenticationTypes": {
              "description": "A list of Authentication Types applicable for this VPN Server Configuration. Possible values are AAD (Azure Active Directory), Certificate and Radius.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "vpnProtocols": {
              "description": "A list of VPN Protocols to use for this Server Configuration. Possible values are IkeV2 and OpenVPN.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
