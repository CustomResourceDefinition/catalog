{
  "description": "VirtualNetwork is the Schema for the VirtualNetworks API. Manages a virtual network including any configured subnets. Each subnet can optionally be configured with a security group to be associated with the subnet.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VirtualNetworkSpec defines the desired state of VirtualNetwork",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "addressSpace": {
              "description": "The address space that is used the virtual network. You can supply more than one address space.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "bgpCommunity": {
              "description": "The BGP community attribute in format \u003cas-number\u003e:\u003ccommunity-value\u003e.",
              "type": "string"
            },
            "ddosProtectionPlan": {
              "description": "A ddos_protection_plan block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enable": {
                    "description": "Enable/disable DDoS Protection Plan on Virtual Network.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The ID of DDoS Protection Plan.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "dnsServers": {
              "description": "List of IP addresses of DNS servers",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.",
              "type": "string"
            },
            "encryption": {
              "description": "A encryption block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enforcement": {
                    "description": "Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are DropUnencrypted and AllowUnencrypted.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "flowTimeoutInMinutes": {
              "description": "The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between 4 and 30 minutes.",
              "type": "number"
            },
            "ipAddressPool": {
              "description": "One or two ip_address_pool blocks as defined below. Only one association of each IP type(IPv4 or IPv6) is allowed.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the Network Manager IP Address Management (IPAM) Pool.",
                    "type": "string"
                  },
                  "numberOfIpAddresses": {
                    "description": "The number of IP addresses to allocated to the Virtual Network. The value must be a string that represents a positive number, e.g., \"100\".",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "The location/region where the virtual network is created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "privateEndpointVnetPolicies": {
              "description": "The Private Endpoint VNet Policies for the Virtual Network. Possible values are Disabled and Basic. Defaults to Disabled.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "addressSpace": {
              "description": "The address space that is used the virtual network. You can supply more than one address space.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "bgpCommunity": {
              "description": "The BGP community attribute in format \u003cas-number\u003e:\u003ccommunity-value\u003e.",
              "type": "string"
            },
            "ddosProtectionPlan": {
              "description": "A ddos_protection_plan block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enable": {
                    "description": "Enable/disable DDoS Protection Plan on Virtual Network.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The ID of DDoS Protection Plan.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "dnsServers": {
              "description": "List of IP addresses of DNS servers",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.",
              "type": "string"
            },
            "encryption": {
              "description": "A encryption block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enforcement": {
                    "description": "Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are DropUnencrypted and AllowUnencrypted.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "flowTimeoutInMinutes": {
              "description": "The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between 4 and 30 minutes.",
              "type": "number"
            },
            "ipAddressPool": {
              "description": "One or two ip_address_pool blocks as defined below. Only one association of each IP type(IPv4 or IPv6) is allowed.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ID of the Network Manager IP Address Management (IPAM) Pool.",
                    "type": "string"
                  },
                  "numberOfIpAddresses": {
                    "description": "The number of IP addresses to allocated to the Virtual Network. The value must be a string that represents a positive number, e.g., \"100\".",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "The location/region where the virtual network is created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "privateEndpointVnetPolicies": {
              "description": "The Private Endpoint VNet Policies for the Virtual Network. Possible values are Disabled and Basic. Defaults to Disabled.",
              "type": "string"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        }
      ]
    },
    "status": {
      "description": "VirtualNetworkStatus defines the observed state of VirtualNetwork.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "addressSpace": {
              "description": "The address space that is used the virtual network. You can supply more than one address space.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "bgpCommunity": {
              "description": "The BGP community attribute in format \u003cas-number\u003e:\u003ccommunity-value\u003e.",
              "type": "string"
            },
            "ddosProtectionPlan": {
              "description": "A ddos_protection_plan block as documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enable": {
                    "description": "Enable/disable DDoS Protection Plan on Virtual Network.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The ID of DDoS Protection Plan.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "dnsServers": {
              "description": "List of IP addresses of DNS servers",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "edgeZone": {
              "description": "Specifies the Edge Zone within the Azure Region where this Virtual Network should exist. Changing this forces a new Virtual Network to be created.",
              "type": "string"
            },
            "encryption": {
              "description": "A encryption block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enforcement": {
                    "description": "Specifies if the encrypted Virtual Network allows VM that does not support encryption. Possible values are DropUnencrypted and AllowUnencrypted.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "flowTimeoutInMinutes": {
              "description": "The flow timeout in minutes for the Virtual Network, which is used to enable connection tracking for intra-VM flows. Possible values are between 4 and 30 minutes.",
              "type": "number"
            },
            "guid": {
              "description": "The GUID of the Virtual Network.",
              "type": "string"
            },
            "id": {
              "description": "The Virtual Network ID.",
              "type": "string"
            },
            "ipAddressPool": {
              "description": "One or two ip_address_pool blocks as defined below. Only one association of each IP type(IPv4 or IPv6) is allowed.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "allocatedIpAddressPrefixes": {
                    "description": "The list of IP address prefixes allocated to the Virtual Network.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "description": "The ID of the Network Manager IP Address Management (IPAM) Pool.",
                    "type": "string"
                  },
                  "numberOfIpAddresses": {
                    "description": "The number of IP addresses to allocated to the Virtual Network. The value must be a string that represents a positive number, e.g., \"100\".",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "location": {
              "description": "The location/region where the virtual network is created. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "privateEndpointVnetPolicies": {
              "description": "The Private Endpoint VNet Policies for the Virtual Network. Possible values are Disabled and Basic. Defaults to Disabled.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the virtual network. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "subnet": {
              "description": "Can be specified multiple times to define multiple subnets. Each subnet block supports fields documented below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "addressPrefixes": {
                    "description": "The address prefixes to use for the subnet.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "defaultOutboundAccessEnabled": {
                    "description": "Enable default outbound access to the internet for the subnet. Defaults to true.",
                    "type": "boolean"
                  },
                  "delegation": {
                    "description": "One or more delegation blocks as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "The name of the subnet.",
                          "type": "string"
                        },
                        "serviceDelegation": {
                          "description": "A service_delegation block as defined below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "actions": {
                                "description": "A list of Actions which should be delegated. This list is specific to the service to delegate to. Possible values are Microsoft.Network/networkinterfaces/*, Microsoft.Network/publicIPAddresses/join/action, Microsoft.Network/publicIPAddresses/read, Microsoft.Network/virtualNetworks/read, Microsoft.Network/virtualNetworks/subnets/action, Microsoft.Network/virtualNetworks/subnets/join/action, Microsoft.Network/virtualNetworks/subnets/prepareNetworkPolicies/action, and Microsoft.Network/virtualNetworks/subnets/unprepareNetworkPolicies/action.",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "x-kubernetes-list-type": "set"
                              },
                              "name": {
                                "description": "The name of the subnet.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "id": {
                    "description": "The ID of this subnet.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of the subnet.",
                    "type": "string"
                  },
                  "privateEndpointNetworkPolicies": {
                    "description": "Enable or Disable network policies for the private endpoint on the subnet. Possible values are Disabled, Enabled, NetworkSecurityGroupEnabled and RouteTableEnabled. Defaults to Disabled.",
                    "type": "string"
                  },
                  "privateLinkServiceNetworkPoliciesEnabled": {
                    "description": "Enable or Disable network policies for the private link service on the subnet. Defaults to true.",
                    "type": "boolean"
                  },
                  "routeTableId": {
                    "description": "The ID of the Route Table that should be associated with this subnet.",
                    "type": "string"
                  },
                  "securityGroup": {
                    "description": "The Network Security Group to associate with the subnet. (Referenced by id, i.e. azurerm_network_security_group.example.id)",
                    "type": "string"
                  },
                  "serviceEndpointPolicyIds": {
                    "description": "The list of IDs of Service Endpoint Policies to associate with the subnet.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  },
                  "serviceEndpoints": {
                    "description": "The list of Service endpoints to associate with the subnet. Possible values include: Microsoft.AzureActiveDirectory, Microsoft.AzureCosmosDB, Microsoft.ContainerRegistry, Microsoft.EventHub, Microsoft.KeyVault, Microsoft.ServiceBus, Microsoft.Sql, Microsoft.Storage, Microsoft.Storage.Global and Microsoft.Web.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "x-kubernetes-list-type": "set"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
