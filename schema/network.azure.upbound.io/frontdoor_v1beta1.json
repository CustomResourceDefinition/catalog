{
  "description": "FrontDoor is the Schema for the FrontDoors API. Manages an Azure Front Door (classic) instance.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "FrontDoorSpec defines the desired state of FrontDoor",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "backendPool": {
              "description": "A backend_pool block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backend": {
                    "description": "A backend block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Location of the backend (IP address or FQDN)",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Enable or Disable use of this Backend Routing Rule. Permitted values are true or false. Defaults to true.",
                          "type": "boolean"
                        },
                        "hostHeader": {
                          "description": "The value to use as the host header sent to the backend.",
                          "type": "string"
                        },
                        "httpPort": {
                          "description": "The HTTP TCP port number. Possible values are between 1 - 65535.",
                          "type": "number"
                        },
                        "httpsPort": {
                          "description": "The HTTPS TCP port number. Possible values are between 1 - 65535.",
                          "type": "number"
                        },
                        "priority": {
                          "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy. Defaults to 1.",
                          "type": "number"
                        },
                        "weight": {
                          "description": "Weight of this endpoint for load balancing purposes. Defaults to 50.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "healthProbeName": {
                    "description": "Specifies the name of the backend_pool_health_probe block within this resource to use for this Backend Pool.",
                    "type": "string"
                  },
                  "loadBalancingName": {
                    "description": "Specifies the name of the backend_pool_load_balancing block within this resource to use for this Backend Pool.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the Backend Pool.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolHealthProbe": {
              "description": "A backend_pool_health_probe block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Is this health probe enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "intervalInSeconds": {
                    "description": "The number of seconds between each Health Probe. Defaults to 120.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies the name of the Health Probe.",
                    "type": "string"
                  },
                  "path": {
                    "description": "The path to use for the Health Probe. Default is /.",
                    "type": "string"
                  },
                  "probeMethod": {
                    "description": "Specifies HTTP method the health probe uses when querying the backend pool instances. Possible values include: GET and HEAD. Defaults to GET.",
                    "type": "string"
                  },
                  "protocol": {
                    "description": "Protocol scheme to use for the Health Probe. Possible values are Http and Https. Defaults to Http.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolLoadBalancing": {
              "description": "A backend_pool_load_balancing block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalLatencyMilliseconds": {
                    "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket. Defaults to 0.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies the name of the Load Balancer.",
                    "type": "string"
                  },
                  "sampleSize": {
                    "description": "The number of samples to consider for load balancing decisions. Defaults to 4.",
                    "type": "number"
                  },
                  "successfulSamplesRequired": {
                    "description": "The number of samples within the sample period that must succeed. Defaults to 2.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolSettings": {
              "description": "A backend_pool_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPoolsSendReceiveTimeoutSeconds": {
                    "description": "Specifies the send and receive timeout on forwarding request to the backend. When the timeout is reached, the request fails and returns. Possible values are between 0 - 240. Defaults to 60.",
                    "type": "number"
                  },
                  "enforceBackendPoolsCertificateNameCheck": {
                    "description": "Enforce certificate name check on HTTPS requests to all backend pools, this setting will have no effect on HTTP requests. Permitted values are true or false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "friendlyName": {
              "description": "A friendly name for the Front Door service.",
              "type": "string"
            },
            "frontendEndpoint": {
              "description": "A frontend_endpoint block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostName": {
                    "description": "Specifies the host name of the frontend_endpoint. Must be a domain name. In order to use a name.azurefd.net domain, the name value must match the Front Door name.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the frontend_endpoint.",
                    "type": "string"
                  },
                  "sessionAffinityEnabled": {
                    "description": "Whether to allow session affinity on this host. Valid options are true or false Defaults to false.",
                    "type": "boolean"
                  },
                  "sessionAffinityTtlSeconds": {
                    "description": "The TTL to use in seconds for session affinity, if applicable. Defaults to 0.",
                    "type": "number"
                  },
                  "webApplicationFirewallPolicyLinkId": {
                    "description": "Defines the Web Application Firewall policy ID for each host.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "loadBalancerEnabled": {
              "description": "Should the Front Door Load Balancer be Enabled? Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "routingRule": {
              "description": "A routing_rule block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceptedProtocols": {
                    "description": "Protocol schemes to match for the Backend Routing Rule. Possible values are Http and Https.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "enabled": {
                    "description": "Enable or Disable use of this Backend Routing Rule. Permitted values are true or false. Defaults to true.",
                    "type": "boolean"
                  },
                  "forwardingConfiguration": {
                    "description": "A forwarding_configuration block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "backendPoolName": {
                          "description": "Specifies the name of the Backend Pool to forward the incoming traffic to.",
                          "type": "string"
                        },
                        "cacheDuration": {
                          "description": "Specify the minimum caching duration (in ISO8601 notation e.g. P1DT2H for 1 day and 2 hours). Needs to be greater than 0 and smaller than 365 days. cache_duration works only in combination with cache_enabled set to true.",
                          "type": "string"
                        },
                        "cacheEnabled": {
                          "description": "Specifies whether to Enable caching or not. Valid options are true or false. Defaults to false.",
                          "type": "boolean"
                        },
                        "cacheQueryParameterStripDirective": {
                          "description": "Defines cache behaviour in relation to query string parameters. Valid options are StripAll, StripAllExcept, StripOnly or StripNone. Defaults to StripAll.",
                          "type": "string"
                        },
                        "cacheQueryParameters": {
                          "description": "Specify query parameters (array). Works only in combination with cache_query_parameter_strip_directive set to StripAllExcept or StripOnly.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cacheUseDynamicCompression": {
                          "description": "Whether to use dynamic compression when caching. Valid options are true or false. Defaults to false.",
                          "type": "boolean"
                        },
                        "customForwardingPath": {
                          "description": "Path to use when constructing the request to forward to the backend. This functions as a URL Rewrite. Default behaviour preserves the URL path.",
                          "type": "string"
                        },
                        "forwardingProtocol": {
                          "description": "Protocol to use when redirecting. Valid options are HttpOnly, HttpsOnly, or MatchRequest. Defaults to HttpsOnly.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "frontendEndpoints": {
                    "description": "The names of the frontend_endpoint blocks within this resource to associate with this routing_rule.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "description": "Specifies the name of the Routing Rule.",
                    "type": "string"
                  },
                  "patternsToMatch": {
                    "description": "The route patterns for the Backend Routing Rule.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirectConfiguration": {
                    "description": "A redirect_configuration block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customFragment": {
                          "description": "The destination fragment in the portion of URL after '#'. Set this to add a fragment to the redirect URL.",
                          "type": "string"
                        },
                        "customHost": {
                          "description": "Set this to change the URL for the redirection.",
                          "type": "string"
                        },
                        "customPath": {
                          "description": "The path to retain as per the incoming request, or update in the URL for the redirection.",
                          "type": "string"
                        },
                        "customQueryString": {
                          "description": "Replace any existing query string from the incoming request URL.",
                          "type": "string"
                        },
                        "redirectProtocol": {
                          "description": "Protocol to use when redirecting. Valid options are HttpOnly, HttpsOnly, or MatchRequest.",
                          "type": "string"
                        },
                        "redirectType": {
                          "description": "Status code for the redirect. Valida options are Moved, Found, TemporaryRedirect, PermanentRedirect.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "backendPool": {
              "description": "A backend_pool block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backend": {
                    "description": "A backend block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Location of the backend (IP address or FQDN)",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Enable or Disable use of this Backend Routing Rule. Permitted values are true or false. Defaults to true.",
                          "type": "boolean"
                        },
                        "hostHeader": {
                          "description": "The value to use as the host header sent to the backend.",
                          "type": "string"
                        },
                        "httpPort": {
                          "description": "The HTTP TCP port number. Possible values are between 1 - 65535.",
                          "type": "number"
                        },
                        "httpsPort": {
                          "description": "The HTTPS TCP port number. Possible values are between 1 - 65535.",
                          "type": "number"
                        },
                        "priority": {
                          "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy. Defaults to 1.",
                          "type": "number"
                        },
                        "weight": {
                          "description": "Weight of this endpoint for load balancing purposes. Defaults to 50.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "healthProbeName": {
                    "description": "Specifies the name of the backend_pool_health_probe block within this resource to use for this Backend Pool.",
                    "type": "string"
                  },
                  "loadBalancingName": {
                    "description": "Specifies the name of the backend_pool_load_balancing block within this resource to use for this Backend Pool.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the Backend Pool.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolHealthProbe": {
              "description": "A backend_pool_health_probe block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Is this health probe enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "intervalInSeconds": {
                    "description": "The number of seconds between each Health Probe. Defaults to 120.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies the name of the Health Probe.",
                    "type": "string"
                  },
                  "path": {
                    "description": "The path to use for the Health Probe. Default is /.",
                    "type": "string"
                  },
                  "probeMethod": {
                    "description": "Specifies HTTP method the health probe uses when querying the backend pool instances. Possible values include: GET and HEAD. Defaults to GET.",
                    "type": "string"
                  },
                  "protocol": {
                    "description": "Protocol scheme to use for the Health Probe. Possible values are Http and Https. Defaults to Http.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolLoadBalancing": {
              "description": "A backend_pool_load_balancing block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalLatencyMilliseconds": {
                    "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket. Defaults to 0.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies the name of the Load Balancer.",
                    "type": "string"
                  },
                  "sampleSize": {
                    "description": "The number of samples to consider for load balancing decisions. Defaults to 4.",
                    "type": "number"
                  },
                  "successfulSamplesRequired": {
                    "description": "The number of samples within the sample period that must succeed. Defaults to 2.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolSettings": {
              "description": "A backend_pool_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPoolsSendReceiveTimeoutSeconds": {
                    "description": "Specifies the send and receive timeout on forwarding request to the backend. When the timeout is reached, the request fails and returns. Possible values are between 0 - 240. Defaults to 60.",
                    "type": "number"
                  },
                  "enforceBackendPoolsCertificateNameCheck": {
                    "description": "Enforce certificate name check on HTTPS requests to all backend pools, this setting will have no effect on HTTP requests. Permitted values are true or false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "friendlyName": {
              "description": "A friendly name for the Front Door service.",
              "type": "string"
            },
            "frontendEndpoint": {
              "description": "A frontend_endpoint block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostName": {
                    "description": "Specifies the host name of the frontend_endpoint. Must be a domain name. In order to use a name.azurefd.net domain, the name value must match the Front Door name.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the frontend_endpoint.",
                    "type": "string"
                  },
                  "sessionAffinityEnabled": {
                    "description": "Whether to allow session affinity on this host. Valid options are true or false Defaults to false.",
                    "type": "boolean"
                  },
                  "sessionAffinityTtlSeconds": {
                    "description": "The TTL to use in seconds for session affinity, if applicable. Defaults to 0.",
                    "type": "number"
                  },
                  "webApplicationFirewallPolicyLinkId": {
                    "description": "Defines the Web Application Firewall policy ID for each host.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "loadBalancerEnabled": {
              "description": "Should the Front Door Load Balancer be Enabled? Defaults to true.",
              "type": "boolean"
            },
            "routingRule": {
              "description": "A routing_rule block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceptedProtocols": {
                    "description": "Protocol schemes to match for the Backend Routing Rule. Possible values are Http and Https.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "enabled": {
                    "description": "Enable or Disable use of this Backend Routing Rule. Permitted values are true or false. Defaults to true.",
                    "type": "boolean"
                  },
                  "forwardingConfiguration": {
                    "description": "A forwarding_configuration block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "backendPoolName": {
                          "description": "Specifies the name of the Backend Pool to forward the incoming traffic to.",
                          "type": "string"
                        },
                        "cacheDuration": {
                          "description": "Specify the minimum caching duration (in ISO8601 notation e.g. P1DT2H for 1 day and 2 hours). Needs to be greater than 0 and smaller than 365 days. cache_duration works only in combination with cache_enabled set to true.",
                          "type": "string"
                        },
                        "cacheEnabled": {
                          "description": "Specifies whether to Enable caching or not. Valid options are true or false. Defaults to false.",
                          "type": "boolean"
                        },
                        "cacheQueryParameterStripDirective": {
                          "description": "Defines cache behaviour in relation to query string parameters. Valid options are StripAll, StripAllExcept, StripOnly or StripNone. Defaults to StripAll.",
                          "type": "string"
                        },
                        "cacheQueryParameters": {
                          "description": "Specify query parameters (array). Works only in combination with cache_query_parameter_strip_directive set to StripAllExcept or StripOnly.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cacheUseDynamicCompression": {
                          "description": "Whether to use dynamic compression when caching. Valid options are true or false. Defaults to false.",
                          "type": "boolean"
                        },
                        "customForwardingPath": {
                          "description": "Path to use when constructing the request to forward to the backend. This functions as a URL Rewrite. Default behaviour preserves the URL path.",
                          "type": "string"
                        },
                        "forwardingProtocol": {
                          "description": "Protocol to use when redirecting. Valid options are HttpOnly, HttpsOnly, or MatchRequest. Defaults to HttpsOnly.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "frontendEndpoints": {
                    "description": "The names of the frontend_endpoint blocks within this resource to associate with this routing_rule.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "name": {
                    "description": "Specifies the name of the Routing Rule.",
                    "type": "string"
                  },
                  "patternsToMatch": {
                    "description": "The route patterns for the Backend Routing Rule.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirectConfiguration": {
                    "description": "A redirect_configuration block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customFragment": {
                          "description": "The destination fragment in the portion of URL after '#'. Set this to add a fragment to the redirect URL.",
                          "type": "string"
                        },
                        "customHost": {
                          "description": "Set this to change the URL for the redirection.",
                          "type": "string"
                        },
                        "customPath": {
                          "description": "The path to retain as per the incoming request, or update in the URL for the redirection.",
                          "type": "string"
                        },
                        "customQueryString": {
                          "description": "Replace any existing query string from the incoming request URL.",
                          "type": "string"
                        },
                        "redirectProtocol": {
                          "description": "Protocol to use when redirecting. Valid options are HttpOnly, HttpsOnly, or MatchRequest.",
                          "type": "string"
                        },
                        "redirectType": {
                          "description": "Status code for the redirect. Valida options are Moved, Found, TemporaryRedirect, PermanentRedirect.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backendPool) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.backendPool))",
          "message": "spec.forProvider.backendPool is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backendPoolHealthProbe) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.backendPoolHealthProbe))",
          "message": "spec.forProvider.backendPoolHealthProbe is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backendPoolLoadBalancing) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.backendPoolLoadBalancing))",
          "message": "spec.forProvider.backendPoolLoadBalancing is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.frontendEndpoint) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.frontendEndpoint))",
          "message": "spec.forProvider.frontendEndpoint is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.routingRule) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.routingRule))",
          "message": "spec.forProvider.routingRule is a required parameter"
        }
      ]
    },
    "status": {
      "description": "FrontDoorStatus defines the observed state of FrontDoor.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "backendPool": {
              "description": "A backend_pool block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backend": {
                    "description": "A backend block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "address": {
                          "description": "Location of the backend (IP address or FQDN)",
                          "type": "string"
                        },
                        "enabled": {
                          "description": "Enable or Disable use of this Backend Routing Rule. Permitted values are true or false. Defaults to true.",
                          "type": "boolean"
                        },
                        "hostHeader": {
                          "description": "The value to use as the host header sent to the backend.",
                          "type": "string"
                        },
                        "httpPort": {
                          "description": "The HTTP TCP port number. Possible values are between 1 - 65535.",
                          "type": "number"
                        },
                        "httpsPort": {
                          "description": "The HTTPS TCP port number. Possible values are between 1 - 65535.",
                          "type": "number"
                        },
                        "priority": {
                          "description": "Priority to use for load balancing. Higher priorities will not be used for load balancing if any lower priority backend is healthy. Defaults to 1.",
                          "type": "number"
                        },
                        "weight": {
                          "description": "Weight of this endpoint for load balancing purposes. Defaults to 50.",
                          "type": "number"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "healthProbeName": {
                    "description": "Specifies the name of the backend_pool_health_probe block within this resource to use for this Backend Pool.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the Azure Front Door Backend.",
                    "type": "string"
                  },
                  "loadBalancingName": {
                    "description": "Specifies the name of the backend_pool_load_balancing block within this resource to use for this Backend Pool.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the Backend Pool.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolHealthProbe": {
              "description": "A backend_pool_health_probe block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "description": "Is this health probe enabled? Defaults to true.",
                    "type": "boolean"
                  },
                  "id": {
                    "description": "The ID of the Azure Front Door Backend.",
                    "type": "string"
                  },
                  "intervalInSeconds": {
                    "description": "The number of seconds between each Health Probe. Defaults to 120.",
                    "type": "number"
                  },
                  "name": {
                    "description": "Specifies the name of the Health Probe.",
                    "type": "string"
                  },
                  "path": {
                    "description": "The path to use for the Health Probe. Default is /.",
                    "type": "string"
                  },
                  "probeMethod": {
                    "description": "Specifies HTTP method the health probe uses when querying the backend pool instances. Possible values include: GET and HEAD. Defaults to GET.",
                    "type": "string"
                  },
                  "protocol": {
                    "description": "Protocol scheme to use for the Health Probe. Possible values are Http and Https. Defaults to Http.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolHealthProbes": {
              "description": "A map/dictionary of Backend Pool Health Probe Names (key) to the Backend Pool Health Probe ID (value)",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "backendPoolLoadBalancing": {
              "description": "A backend_pool_load_balancing block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalLatencyMilliseconds": {
                    "description": "The additional latency in milliseconds for probes to fall into the lowest latency bucket. Defaults to 0.",
                    "type": "number"
                  },
                  "id": {
                    "description": "The ID of the Azure Front Door Backend.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the Load Balancer.",
                    "type": "string"
                  },
                  "sampleSize": {
                    "description": "The number of samples to consider for load balancing decisions. Defaults to 4.",
                    "type": "number"
                  },
                  "successfulSamplesRequired": {
                    "description": "The number of samples within the sample period that must succeed. Defaults to 2.",
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPoolLoadBalancingSettings": {
              "description": "A map/dictionary of Backend Pool Load Balancing Setting Names (key) to the Backend Pool Load Balancing Setting ID (value)",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "backendPoolSettings": {
              "description": "A backend_pool_settings block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPoolsSendReceiveTimeoutSeconds": {
                    "description": "Specifies the send and receive timeout on forwarding request to the backend. When the timeout is reached, the request fails and returns. Possible values are between 0 - 240. Defaults to 60.",
                    "type": "number"
                  },
                  "enforceBackendPoolsCertificateNameCheck": {
                    "description": "Enforce certificate name check on HTTPS requests to all backend pools, this setting will have no effect on HTTP requests. Permitted values are true or false.",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "backendPools": {
              "description": "A map/dictionary of Backend Pool Names (key) to the Backend Pool ID (value)",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "cname": {
              "description": "The host that each frontendEndpoint must CNAME to.",
              "type": "string"
            },
            "explicitResourceOrder": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "backendPoolHealthProbeIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "backendPoolIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "backendPoolLoadBalancingIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "frontendEndpointIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "routingRuleIds": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "friendlyName": {
              "description": "A friendly name for the Front Door service.",
              "type": "string"
            },
            "frontendEndpoint": {
              "description": "A frontend_endpoint block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "hostName": {
                    "description": "Specifies the host name of the frontend_endpoint. Must be a domain name. In order to use a name.azurefd.net domain, the name value must match the Front Door name.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the Azure Front Door Backend.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the frontend_endpoint.",
                    "type": "string"
                  },
                  "sessionAffinityEnabled": {
                    "description": "Whether to allow session affinity on this host. Valid options are true or false Defaults to false.",
                    "type": "boolean"
                  },
                  "sessionAffinityTtlSeconds": {
                    "description": "The TTL to use in seconds for session affinity, if applicable. Defaults to 0.",
                    "type": "number"
                  },
                  "webApplicationFirewallPolicyLinkId": {
                    "description": "Defines the Web Application Firewall policy ID for each host.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "frontendEndpoints": {
              "description": "A map/dictionary of Frontend Endpoint Names (key) to the Frontend Endpoint ID (value)",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "headerFrontdoorId": {
              "description": "The unique ID of the Front Door which is embedded into the incoming headers X-Azure-FDID attribute and maybe used to filter traffic sent by the Front Door to your backend.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Azure Front Door Backend.",
              "type": "string"
            },
            "loadBalancerEnabled": {
              "description": "Should the Front Door Load Balancer be Enabled? Defaults to true.",
              "type": "boolean"
            },
            "resourceGroupName": {
              "description": "Specifies the name of the Resource Group in which the Front Door service should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "routingRule": {
              "description": "A routing_rule block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "acceptedProtocols": {
                    "description": "Protocol schemes to match for the Backend Routing Rule. Possible values are Http and Https.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "enabled": {
                    "description": "Enable or Disable use of this Backend Routing Rule. Permitted values are true or false. Defaults to true.",
                    "type": "boolean"
                  },
                  "forwardingConfiguration": {
                    "description": "A forwarding_configuration block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "backendPoolName": {
                          "description": "Specifies the name of the Backend Pool to forward the incoming traffic to.",
                          "type": "string"
                        },
                        "cacheDuration": {
                          "description": "Specify the minimum caching duration (in ISO8601 notation e.g. P1DT2H for 1 day and 2 hours). Needs to be greater than 0 and smaller than 365 days. cache_duration works only in combination with cache_enabled set to true.",
                          "type": "string"
                        },
                        "cacheEnabled": {
                          "description": "Specifies whether to Enable caching or not. Valid options are true or false. Defaults to false.",
                          "type": "boolean"
                        },
                        "cacheQueryParameterStripDirective": {
                          "description": "Defines cache behaviour in relation to query string parameters. Valid options are StripAll, StripAllExcept, StripOnly or StripNone. Defaults to StripAll.",
                          "type": "string"
                        },
                        "cacheQueryParameters": {
                          "description": "Specify query parameters (array). Works only in combination with cache_query_parameter_strip_directive set to StripAllExcept or StripOnly.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "cacheUseDynamicCompression": {
                          "description": "Whether to use dynamic compression when caching. Valid options are true or false. Defaults to false.",
                          "type": "boolean"
                        },
                        "customForwardingPath": {
                          "description": "Path to use when constructing the request to forward to the backend. This functions as a URL Rewrite. Default behaviour preserves the URL path.",
                          "type": "string"
                        },
                        "forwardingProtocol": {
                          "description": "Protocol to use when redirecting. Valid options are HttpOnly, HttpsOnly, or MatchRequest. Defaults to HttpsOnly.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "frontendEndpoints": {
                    "description": "The names of the frontend_endpoint blocks within this resource to associate with this routing_rule.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "id": {
                    "description": "The ID of the Azure Front Door Backend.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Specifies the name of the Routing Rule.",
                    "type": "string"
                  },
                  "patternsToMatch": {
                    "description": "The route patterns for the Backend Routing Rule.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "redirectConfiguration": {
                    "description": "A redirect_configuration block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customFragment": {
                          "description": "The destination fragment in the portion of URL after '#'. Set this to add a fragment to the redirect URL.",
                          "type": "string"
                        },
                        "customHost": {
                          "description": "Set this to change the URL for the redirection.",
                          "type": "string"
                        },
                        "customPath": {
                          "description": "The path to retain as per the incoming request, or update in the URL for the redirection.",
                          "type": "string"
                        },
                        "customQueryString": {
                          "description": "Replace any existing query string from the incoming request URL.",
                          "type": "string"
                        },
                        "redirectProtocol": {
                          "description": "Protocol to use when redirecting. Valid options are HttpOnly, HttpsOnly, or MatchRequest.",
                          "type": "string"
                        },
                        "redirectType": {
                          "description": "Status code for the redirect. Valida options are Moved, Found, TemporaryRedirect, PermanentRedirect.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "routingRules": {
              "description": "A map/dictionary of Routing Rule Names (key) to the Routing Rule ID (value)",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "description": "A mapping of tags to assign to the resource.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
