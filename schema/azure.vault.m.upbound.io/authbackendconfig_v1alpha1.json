{
  "description": "AuthBackendConfig is the Schema for the AuthBackendConfigs API. Configures the Azure Auth Backend in Vault.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AuthBackendConfigSpec defines the desired state of AuthBackendConfig",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "backend": {
              "description": "The path the Azure auth backend being configured was\nmounted at.  Defaults to azure.\nUnique name of the auth backend to configure.",
              "type": "string"
            },
            "backendRef": {
              "description": "Reference to a Backend in auth to populate backend.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "backendSelector": {
              "description": "Selector for a Backend in auth to populate backend.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "clientIdSecretRef": {
              "description": "The client id for credentials to query the Azure APIs.\nCurrently read permissions to query compute resources are required.\nThe client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are required.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "clientSecretSecretRef": {
              "description": "The client secret for credentials to query the\nAzure APIs.\nThe client secret for credentials to query the Azure APIs",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "environment": {
              "description": "The Azure cloud environment. Valid values:\nAzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud,\nAzureGermanCloud.  Defaults to AzurePublicCloud.\nThe Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.",
              "type": "string"
            },
            "identityTokenAudience": {
              "description": "The audience claim value for plugin identity tokens. Requires Vault 1.17+.\nAvailable only for Vault Enterprise\nThe audience claim value.",
              "type": "string"
            },
            "identityTokenTtl": {
              "description": "The TTL of generated identity tokens in seconds.\nDefaults to 1 hour. Uses duration format strings.\nRequires Vault 1.17+. Available only for Vault Enterprise\nThe TTL of generated identity tokens in seconds.",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "resource": {
              "description": "The configured URL for the application registered in\nAzure Active Directory.\nThe configured URL for the application registered in Azure Active Directory.",
              "type": "string"
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "tenantIdSecretRef": {
              "description": "The tenant id for the Azure Active Directory\norganization.\nThe tenant id for the Azure Active Directory organization.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "required": [
            "tenantIdSecretRef"
          ],
          "properties": {
            "backend": {
              "description": "The path the Azure auth backend being configured was\nmounted at.  Defaults to azure.\nUnique name of the auth backend to configure.",
              "type": "string"
            },
            "backendRef": {
              "description": "Reference to a Backend in auth to populate backend.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "backendSelector": {
              "description": "Selector for a Backend in auth to populate backend.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "clientIdSecretRef": {
              "description": "The client id for credentials to query the Azure APIs.\nCurrently read permissions to query compute resources are required.\nThe client id for credentials to query the Azure APIs. Currently read permissions to query compute resources are required.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "clientSecretSecretRef": {
              "description": "The client secret for credentials to query the\nAzure APIs.\nThe client secret for credentials to query the Azure APIs",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "environment": {
              "description": "The Azure cloud environment. Valid values:\nAzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud,\nAzureGermanCloud.  Defaults to AzurePublicCloud.\nThe Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.",
              "type": "string"
            },
            "identityTokenAudience": {
              "description": "The audience claim value for plugin identity tokens. Requires Vault 1.17+.\nAvailable only for Vault Enterprise\nThe audience claim value.",
              "type": "string"
            },
            "identityTokenTtl": {
              "description": "The TTL of generated identity tokens in seconds.\nDefaults to 1 hour. Uses duration format strings.\nRequires Vault 1.17+. Available only for Vault Enterprise\nThe TTL of generated identity tokens in seconds.",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "resource": {
              "description": "The configured URL for the application registered in\nAzure Active Directory.\nThe configured URL for the application registered in Azure Active Directory.",
              "type": "string"
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            },
            "tenantIdSecretRef": {
              "description": "The tenant id for the Azure Active Directory\norganization.\nThe tenant id for the Azure Active Directory organization.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.resource) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.resource))",
          "message": "spec.forProvider.resource is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.tenantIdSecretRef)",
          "message": "spec.forProvider.tenantIdSecretRef is a required parameter"
        }
      ]
    },
    "status": {
      "description": "AuthBackendConfigStatus defines the observed state of AuthBackendConfig.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "backend": {
              "description": "The path the Azure auth backend being configured was\nmounted at.  Defaults to azure.\nUnique name of the auth backend to configure.",
              "type": "string"
            },
            "disableAutomatedRotation": {
              "description": "Cancels all upcoming rotations of the root credential until unset. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nStops rotation of the root credential until set to false.",
              "type": "boolean"
            },
            "environment": {
              "description": "The Azure cloud environment. Valid values:\nAzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud,\nAzureGermanCloud.  Defaults to AzurePublicCloud.\nThe Azure cloud environment. Valid values: AzurePublicCloud, AzureUSGovernmentCloud, AzureChinaCloud, AzureGermanCloud.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "identityTokenAudience": {
              "description": "The audience claim value for plugin identity tokens. Requires Vault 1.17+.\nAvailable only for Vault Enterprise\nThe audience claim value.",
              "type": "string"
            },
            "identityTokenTtl": {
              "description": "The TTL of generated identity tokens in seconds.\nDefaults to 1 hour. Uses duration format strings.\nRequires Vault 1.17+. Available only for Vault Enterprise\nThe TTL of generated identity tokens in seconds.",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "resource": {
              "description": "The configured URL for the application registered in\nAzure Active Directory.\nThe configured URL for the application registered in Azure Active Directory.",
              "type": "string"
            },
            "rotationPeriod": {
              "description": "The amount of time in seconds Vault should wait before rotating the root credential.\nA zero value tells Vault not to rotate the root credential. The minimum rotation period is 10 seconds. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe period of time in seconds between each rotation of the root credential. Cannot be used with rotation_schedule.",
              "type": "number"
            },
            "rotationSchedule": {
              "description": "The schedule, in cron-style time format,\ndefining the schedule on which Vault should rotate the root token. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe cron-style schedule for the root credential to be rotated on. Cannot be used with rotation_period.",
              "type": "string"
            },
            "rotationWindow": {
              "description": "The maximum amount of time in seconds allowed to complete\na rotation when a scheduled token rotation occurs. The default rotation window is\nunbound and the minimum allowable window is 3600. Requires Vault Enterprise 1.19+.\nAvailable only for Vault Enterprise\nThe maximum amount of time in seconds Vault is allowed to complete a rotation once a scheduled rotation is triggered. Can only be used with rotation_schedule.",
              "type": "number"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
