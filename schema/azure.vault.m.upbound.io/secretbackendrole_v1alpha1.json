{
  "description": "SecretBackendRole is the Schema for the SecretBackendRoles API. Creates an azure secret backend role for Vault.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecretBackendRoleSpec defines the desired state of SecretBackendRole",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "applicationObjectId": {
              "description": "Application Object ID for an existing service principal that will\nbe used instead of creating dynamic service principals. If present, azure_roles and permanently_delete will be ignored.\nApplication Object ID for an existing service principal that will be used instead of creating dynamic service principals.",
              "type": "string"
            },
            "azureGroups": {
              "description": "List of Azure groups to be assigned to the generated service principal.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groupName": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "azureRoles": {
              "description": "List of Azure roles to be assigned to the generated service principal.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backend": {
              "description": "Path to the mounted Azure auth backend\nUnique name of the auth backend to configure.",
              "type": "string"
            },
            "backendRef": {
              "description": "Reference to a SecretBackend in azure to populate backend.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "backendSelector": {
              "description": "Selector for a SecretBackend in azure to populate backend.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Human-friendly description of the mount for the backend.",
              "type": "string"
            },
            "explicitMaxTtl": {
              "description": "Specifies the explicit maximum lifetime of the lease and service principal generated using this role. If not set or set to 0, will use the system default (10 years). Requires Vault 1.18+.\nSpecifies the explicit maximum lifetime of the lease and service principal.",
              "type": "string"
            },
            "maxTtl": {
              "description": "–  Specifies the maximum TTL for service principals generated using this role. Accepts time\nsuffixed strings (\"1h\") or an integer number of seconds. Defaults to the system/engine max TTL time.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "permanentlyDelete": {
              "description": "Indicates whether the applications and service principals created by Vault will be permanently\ndeleted when the corresponding leases expire. Defaults to false. For Vault v1.12+.\nIndicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire.",
              "type": "boolean"
            },
            "role": {
              "description": "Name of the Azure role\nName of the role to create",
              "type": "string"
            },
            "signInAudience": {
              "description": "Specifies the security principal types that are allowed to sign in to the application.\nValid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount. Requires Vault 1.16+.\nSpecifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount",
              "type": "string"
            },
            "tags": {
              "description": "- A list of Azure tags to attach to an application. Requires Vault 1.16+.\nComma-separated strings of Azure tags to attach to an application.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ttl": {
              "description": "–  Specifies the default TTL for service principals generated using this role.\nAccepts time suffixed strings (\"1h\") or an integer number of seconds. Defaults to the system/engine default TTL time.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "applicationObjectId": {
              "description": "Application Object ID for an existing service principal that will\nbe used instead of creating dynamic service principals. If present, azure_roles and permanently_delete will be ignored.\nApplication Object ID for an existing service principal that will be used instead of creating dynamic service principals.",
              "type": "string"
            },
            "azureGroups": {
              "description": "List of Azure groups to be assigned to the generated service principal.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groupName": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "azureRoles": {
              "description": "List of Azure roles to be assigned to the generated service principal.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backend": {
              "description": "Path to the mounted Azure auth backend\nUnique name of the auth backend to configure.",
              "type": "string"
            },
            "backendRef": {
              "description": "Reference to a SecretBackend in azure to populate backend.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "backendSelector": {
              "description": "Selector for a SecretBackend in azure to populate backend.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "description": {
              "description": "Human-friendly description of the mount for the backend.",
              "type": "string"
            },
            "explicitMaxTtl": {
              "description": "Specifies the explicit maximum lifetime of the lease and service principal generated using this role. If not set or set to 0, will use the system default (10 years). Requires Vault 1.18+.\nSpecifies the explicit maximum lifetime of the lease and service principal.",
              "type": "string"
            },
            "maxTtl": {
              "description": "–  Specifies the maximum TTL for service principals generated using this role. Accepts time\nsuffixed strings (\"1h\") or an integer number of seconds. Defaults to the system/engine max TTL time.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "permanentlyDelete": {
              "description": "Indicates whether the applications and service principals created by Vault will be permanently\ndeleted when the corresponding leases expire. Defaults to false. For Vault v1.12+.\nIndicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire.",
              "type": "boolean"
            },
            "role": {
              "description": "Name of the Azure role\nName of the role to create",
              "type": "string"
            },
            "signInAudience": {
              "description": "Specifies the security principal types that are allowed to sign in to the application.\nValid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount. Requires Vault 1.16+.\nSpecifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount",
              "type": "string"
            },
            "tags": {
              "description": "- A list of Azure tags to attach to an application. Requires Vault 1.16+.\nComma-separated strings of Azure tags to attach to an application.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ttl": {
              "description": "–  Specifies the default TTL for service principals generated using this role.\nAccepts time suffixed strings (\"1h\") or an integer number of seconds. Defaults to the system/engine default TTL time.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.role) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.role))",
          "message": "spec.forProvider.role is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SecretBackendRoleStatus defines the observed state of SecretBackendRole.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "applicationObjectId": {
              "description": "Application Object ID for an existing service principal that will\nbe used instead of creating dynamic service principals. If present, azure_roles and permanently_delete will be ignored.\nApplication Object ID for an existing service principal that will be used instead of creating dynamic service principals.",
              "type": "string"
            },
            "azureGroups": {
              "description": "List of Azure groups to be assigned to the generated service principal.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "groupName": {
                    "type": "string"
                  },
                  "objectId": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "azureRoles": {
              "description": "List of Azure roles to be assigned to the generated service principal.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "roleId": {
                    "type": "string"
                  },
                  "roleName": {
                    "type": "string"
                  },
                  "scope": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "backend": {
              "description": "Path to the mounted Azure auth backend\nUnique name of the auth backend to configure.",
              "type": "string"
            },
            "description": {
              "description": "Human-friendly description of the mount for the backend.",
              "type": "string"
            },
            "explicitMaxTtl": {
              "description": "Specifies the explicit maximum lifetime of the lease and service principal generated using this role. If not set or set to 0, will use the system default (10 years). Requires Vault 1.18+.\nSpecifies the explicit maximum lifetime of the lease and service principal.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "maxTtl": {
              "description": "–  Specifies the maximum TTL for service principals generated using this role. Accepts time\nsuffixed strings (\"1h\") or an integer number of seconds. Defaults to the system/engine max TTL time.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "permanentlyDelete": {
              "description": "Indicates whether the applications and service principals created by Vault will be permanently\ndeleted when the corresponding leases expire. Defaults to false. For Vault v1.12+.\nIndicates whether the applications and service principals created by Vault will be permanently deleted when the corresponding leases expire.",
              "type": "boolean"
            },
            "role": {
              "description": "Name of the Azure role\nName of the role to create",
              "type": "string"
            },
            "signInAudience": {
              "description": "Specifies the security principal types that are allowed to sign in to the application.\nValid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount. Requires Vault 1.16+.\nSpecifies the security principal types that are allowed to sign in to the application. Valid values are: AzureADMyOrg, AzureADMultipleOrgs, AzureADandPersonalMicrosoftAccount, PersonalMicrosoftAccount",
              "type": "string"
            },
            "tags": {
              "description": "- A list of Azure tags to attach to an application. Requires Vault 1.16+.\nComma-separated strings of Azure tags to attach to an application.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ttl": {
              "description": "–  Specifies the default TTL for service principals generated using this role.\nAccepts time suffixed strings (\"1h\") or an integer number of seconds. Defaults to the system/engine default TTL time.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
