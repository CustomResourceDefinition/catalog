{
  "description": "VirtualGateway is the Schema for the virtualgateways API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "VirtualGatewaySpec defines the desired state of VirtualGateway refers to https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_gateways.html",
      "type": "object",
      "properties": {
        "awsName": {
          "description": "AWSName is the AppMesh VirtualGateway object's name. If unspecified or empty, it defaults to be \"${name}_${namespace}\" of k8s VirtualGateway",
          "type": "string"
        },
        "backendDefaults": {
          "description": "A reference to an object that represents the defaults for backend GatewayRoutes.",
          "type": "object",
          "properties": {
            "clientPolicy": {
              "description": "A reference to an object that represents a client policy.",
              "type": "object",
              "properties": {
                "tls": {
                  "description": "A reference to an object that represents a Transport Layer Security (TLS) client policy.",
                  "type": "object",
                  "required": [
                    "validation"
                  ],
                  "properties": {
                    "certificate": {
                      "description": "A reference to an object that represents TLS certificate.",
                      "type": "object",
                      "properties": {
                        "file": {
                          "description": "An object that represents a TLS cert via a local file",
                          "type": "object",
                          "required": [
                            "certificateChain",
                            "privateKey"
                          ],
                          "properties": {
                            "certificateChain": {
                              "description": "The certificate chain for the certificate.",
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            },
                            "privateKey": {
                              "description": "The private key for a certificate stored on the file system of the virtual Gateway.",
                              "type": "string",
                              "maxLength": 255,
                              "minLength": 1
                            }
                          },
                          "additionalProperties": false
                        },
                        "sds": {
                          "description": "An object that represents a TLS cert via SDS entry",
                          "type": "object",
                          "required": [
                            "secretName"
                          ],
                          "properties": {
                            "secretName": {
                              "description": "The certificate trust chain for a certificate issued via SDS cluster",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    },
                    "enforce": {
                      "description": "Whether the policy is enforced. If unspecified, default settings from AWS API will be applied. Refer to AWS Docs for default settings.",
                      "type": "boolean"
                    },
                    "ports": {
                      "description": "The range of ports that the policy is enforced for.",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64",
                        "maximum": 65535,
                        "minimum": 1
                      }
                    },
                    "validation": {
                      "description": "A reference to an object that represents a TLS validation context.",
                      "type": "object",
                      "required": [
                        "trust"
                      ],
                      "properties": {
                        "subjectAlternativeNames": {
                          "description": "Possible alternative names to consider",
                          "type": "object",
                          "required": [
                            "match"
                          ],
                          "properties": {
                            "match": {
                              "description": "Match is a required field",
                              "type": "object",
                              "required": [
                                "exact"
                              ],
                              "properties": {
                                "exact": {
                                  "description": "Exact is a required field",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        },
                        "trust": {
                          "description": "A reference to an object that represents a TLS validation context trust",
                          "type": "object",
                          "properties": {
                            "acm": {
                              "description": "A reference to an object that represents a TLS validation context trust for an AWS Certicate Manager (ACM) certificate.",
                              "type": "object",
                              "required": [
                                "certificateAuthorityARNs"
                              ],
                              "properties": {
                                "certificateAuthorityARNs": {
                                  "description": "One or more ACM Amazon Resource Name (ARN)s.",
                                  "type": "array",
                                  "maxItems": 3,
                                  "minItems": 1,
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "additionalProperties": false
                            },
                            "file": {
                              "description": "An object that represents a TLS validation context trust for a local file.",
                              "type": "object",
                              "required": [
                                "certificateChain"
                              ],
                              "properties": {
                                "certificateChain": {
                                  "description": "The certificate trust chain for a certificate stored on the file system of the virtual Gateway.",
                                  "type": "string",
                                  "maxLength": 255,
                                  "minLength": 1
                                }
                              },
                              "additionalProperties": false
                            },
                            "sds": {
                              "description": "An object that represents a TLS validation context trust for a SDS certificate",
                              "type": "object",
                              "required": [
                                "secretName"
                              ],
                              "properties": {
                                "secretName": {
                                  "description": "The certificate trust chain for a certificate issued via SDS.",
                                  "type": "string"
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "gatewayRouteSelector": {
          "description": "GatewayRouteSelector selects GatewayRoutes using labels to designate GatewayRoute membership. If not specified it selects all GatewayRoutes in that namespace.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "listeners": {
          "description": "The listener that the virtual gateway is expected to receive inbound traffic from",
          "type": "array",
          "minItems": 0,
          "items": {
            "description": "VirtualGatewayListener refers to https://docs.aws.amazon.com/app-mesh/latest/userguide/virtual_gateways.html",
            "type": "object",
            "required": [
              "portMapping"
            ],
            "properties": {
              "connectionPool": {
                "description": "The connection pool settings for the listener",
                "type": "object",
                "properties": {
                  "grpc": {
                    "description": "Specifies grpc connection pool settings for the virtual gateway listener",
                    "type": "object",
                    "required": [
                      "maxRequests"
                    ],
                    "properties": {
                      "maxRequests": {
                        "description": "Represents the maximum number of inflight requests that an envoy can concurrently support across all the hosts in the upstream cluster",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "http": {
                    "description": "Specifies http connection pool settings for the virtual gateway listener",
                    "type": "object",
                    "required": [
                      "maxConnections"
                    ],
                    "properties": {
                      "maxConnections": {
                        "description": "Represents the maximum number of outbound TCP connections the envoy can establish concurrently with all the hosts in the upstream cluster.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      },
                      "maxPendingRequests": {
                        "description": "Represents the number of overflowing requests after max_connections that an envoy will queue to an upstream cluster.",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      }
                    },
                    "additionalProperties": false
                  },
                  "http2": {
                    "description": "Specifies http2 connection pool settings for the virtual gateway listener",
                    "type": "object",
                    "required": [
                      "maxRequests"
                    ],
                    "properties": {
                      "maxRequests": {
                        "description": "Represents the maximum number of inflight requests that an envoy can concurrently support across all the hosts in the upstream cluster",
                        "type": "integer",
                        "format": "int64",
                        "minimum": 1
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              },
              "healthCheck": {
                "description": "The health check information for the listener.",
                "type": "object",
                "required": [
                  "intervalMillis",
                  "protocol",
                  "timeoutMillis",
                  "unhealthyThreshold"
                ],
                "properties": {
                  "healthyThreshold": {
                    "description": "The number of consecutive successful health checks that must occur before declaring listener healthy.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 10,
                    "minimum": 2
                  },
                  "intervalMillis": {
                    "description": "The time period in milliseconds between each health check execution.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 300000,
                    "minimum": 5000
                  },
                  "path": {
                    "description": "The destination path for the health check request. This value is only used if the specified protocol is http or http2. For any other protocol, this value is ignored.",
                    "type": "string"
                  },
                  "port": {
                    "description": "The destination port for the health check request.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "protocol": {
                    "description": "The protocol for the health check request",
                    "type": "string",
                    "enum": [
                      "grpc",
                      "http",
                      "http2"
                    ]
                  },
                  "timeoutMillis": {
                    "description": "The amount of time to wait when receiving a response from the health check, in milliseconds.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 60000,
                    "minimum": 2000
                  },
                  "unhealthyThreshold": {
                    "description": "The number of consecutive failed health checks that must occur before declaring a virtual Gateway unhealthy.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 10,
                    "minimum": 2
                  }
                },
                "additionalProperties": false
              },
              "portMapping": {
                "description": "The port mapping information for the listener.",
                "type": "object",
                "required": [
                  "port",
                  "protocol"
                ],
                "properties": {
                  "port": {
                    "description": "The port used for the port mapping.",
                    "type": "integer",
                    "format": "int64",
                    "maximum": 65535,
                    "minimum": 1
                  },
                  "protocol": {
                    "description": "The protocol used for the port mapping.",
                    "type": "string",
                    "enum": [
                      "grpc",
                      "http",
                      "http2"
                    ]
                  }
                },
                "additionalProperties": false
              },
              "tls": {
                "description": "A reference to an object that represents the Transport Layer Security (TLS) properties for a listener.",
                "type": "object",
                "required": [
                  "certificate",
                  "mode"
                ],
                "properties": {
                  "certificate": {
                    "description": "A reference to an object that represents a listener's TLS certificate.",
                    "type": "object",
                    "properties": {
                      "acm": {
                        "description": "A reference to an object that represents an AWS Certificate Manager (ACM) certificate.",
                        "type": "object",
                        "required": [
                          "certificateARN"
                        ],
                        "properties": {
                          "certificateARN": {
                            "description": "The Amazon Resource Name (ARN) for the certificate.",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      },
                      "file": {
                        "description": "A reference to an object that represents a local file certificate.",
                        "type": "object",
                        "required": [
                          "certificateChain",
                          "privateKey"
                        ],
                        "properties": {
                          "certificateChain": {
                            "description": "The certificate chain for the certificate.",
                            "type": "string",
                            "maxLength": 255,
                            "minLength": 1
                          },
                          "privateKey": {
                            "description": "The private key for a certificate stored on the file system of the virtual Gateway.",
                            "type": "string",
                            "maxLength": 255,
                            "minLength": 1
                          }
                        },
                        "additionalProperties": false
                      },
                      "sds": {
                        "description": "A reference to an object that represents an SDS issued certificate",
                        "type": "object",
                        "required": [
                          "secretName"
                        ],
                        "properties": {
                          "secretName": {
                            "description": "The certificate trust chain for a certificate issued via SDS cluster",
                            "type": "string"
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "mode": {
                    "description": "ListenerTLS mode",
                    "type": "string",
                    "enum": [
                      "DISABLED",
                      "PERMISSIVE",
                      "STRICT"
                    ]
                  },
                  "validation": {
                    "description": "A reference to an object that represents Validation context",
                    "type": "object",
                    "required": [
                      "trust"
                    ],
                    "properties": {
                      "subjectAlternativeNames": {
                        "description": "Possible alternate names to consider",
                        "type": "object",
                        "required": [
                          "match"
                        ],
                        "properties": {
                          "match": {
                            "description": "Match is a required field",
                            "type": "object",
                            "required": [
                              "exact"
                            ],
                            "properties": {
                              "exact": {
                                "description": "Exact is a required field",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      },
                      "trust": {
                        "type": "object",
                        "properties": {
                          "acm": {
                            "description": "A reference to an object that represents a TLS validation context trust for an AWS Certicate Manager (ACM) certificate.",
                            "type": "object",
                            "required": [
                              "certificateAuthorityARNs"
                            ],
                            "properties": {
                              "certificateAuthorityARNs": {
                                "description": "One or more ACM Amazon Resource Name (ARN)s.",
                                "type": "array",
                                "maxItems": 3,
                                "minItems": 1,
                                "items": {
                                  "type": "string"
                                }
                              }
                            },
                            "additionalProperties": false
                          },
                          "file": {
                            "description": "An object that represents a TLS validation context trust for a local file.",
                            "type": "object",
                            "required": [
                              "certificateChain"
                            ],
                            "properties": {
                              "certificateChain": {
                                "description": "The certificate trust chain for a certificate stored on the file system of the virtual Gateway.",
                                "type": "string",
                                "maxLength": 255,
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          },
                          "sds": {
                            "description": "An object that represents a TLS validation context trust for an SDS system",
                            "type": "object",
                            "required": [
                              "secretName"
                            ],
                            "properties": {
                              "secretName": {
                                "description": "The certificate trust chain for a certificate issued via SDS.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "logging": {
          "description": "The inbound and outbound access logging information for the virtual gateway.",
          "type": "object",
          "properties": {
            "accessLog": {
              "description": "The access log configuration for a virtual Gateway.",
              "type": "object",
              "properties": {
                "file": {
                  "description": "The file object to send virtual gateway access logs to.",
                  "type": "object",
                  "required": [
                    "path"
                  ],
                  "properties": {
                    "format": {
                      "description": "Structured access log output format",
                      "type": "object",
                      "properties": {
                        "json": {
                          "description": "Output specified fields as a JSON object",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "key",
                              "value"
                            ],
                            "properties": {
                              "key": {
                                "description": "The name of the field in the JSON object",
                                "type": "string",
                                "minLength": 1
                              },
                              "value": {
                                "description": "The format string",
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "text": {
                          "description": "Custom format string",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    },
                    "path": {
                      "description": "The file path to write access logs to.",
                      "type": "string",
                      "maxLength": 255,
                      "minLength": 1
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "meshRef": {
          "description": "A reference to k8s Mesh CR that this VirtualGateway belongs to. The admission controller populates it using Meshes's selector, and prevents users from setting this field. \n Populated by the system. Read-only.",
          "type": "object",
          "required": [
            "name",
            "uid"
          ],
          "properties": {
            "name": {
              "description": "Name is the name of Mesh CR",
              "type": "string"
            },
            "uid": {
              "description": "UID is the UID of Mesh CR",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "namespaceSelector": {
          "description": "NamespaceSelector selects Namespaces using labels to designate GatewayRoute membership. This field follows standard label selector semantics; if present but empty, it selects all namespaces.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        },
        "podSelector": {
          "description": "PodSelector selects Pods using labels to designate VirtualGateway membership. This field follows standard label selector semantics: \tif present but empty, it selects all pods within namespace. \tif absent, it selects no pod.",
          "type": "object",
          "properties": {
            "matchExpressions": {
              "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
              "type": "array",
              "items": {
                "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
                "type": "object",
                "required": [
                  "key",
                  "operator"
                ],
                "properties": {
                  "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string"
                  },
                  "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                  },
                  "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "additionalProperties": false
              }
            },
            "matchLabels": {
              "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "VirtualGatewayStatus defines the observed state of VirtualGateway",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "The current VirtualGateway status.",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "Last time the condition transitioned from one status to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A human readable message indicating details about the transition.",
                "type": "string"
              },
              "reason": {
                "description": "The reason for the condition's last transition.",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of VirtualGateway condition.",
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        },
        "observedGeneration": {
          "description": "The generation observed by the VirtualGateway controller.",
          "type": "integer",
          "format": "int64"
        },
        "virtualGatewayARN": {
          "description": "VirtualGatewayARN is the AppMesh VirtualGateway object's Amazon Resource Name",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  },
  "x-kubernetes-preserve-unknown-fields": true
}
