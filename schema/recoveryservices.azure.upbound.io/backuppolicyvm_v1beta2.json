{
  "description": "BackupPolicyVM is the Schema for the BackupPolicyVMs API. Manages an Azure Backup VM Backup Policy.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BackupPolicyVMSpec defines the desired state of BackupPolicyVM",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "backup": {
              "description": "Configures the Policy backup frequency, times \u0026 days as documented in the backup block below.",
              "type": "object",
              "properties": {
                "frequency": {
                  "description": "Sets the backup frequency. Possible values are Hourly, Daily and Weekly.",
                  "type": "string"
                },
                "hourDuration": {
                  "description": "Duration of the backup window in hours. Possible values are between 4 and 24 This is used when frequency is Hourly.",
                  "type": "number"
                },
                "hourInterval": {
                  "description": "Interval in hour at which backup is triggered. Possible values are 4, 6, 8 and 12. This is used when frequency is Hourly.",
                  "type": "number"
                },
                "time": {
                  "description": "The time of day to perform the backup in 24hour format.",
                  "type": "string"
                },
                "weekdays": {
                  "description": "The days of the week to perform backups on. Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday. This is used when frequency is Weekly.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "instantRestoreResourceGroup": {
              "description": "Specifies the instant restore resource group name as documented in the instant_restore_resource_group block below.",
              "type": "object",
              "properties": {
                "prefix": {
                  "description": "The prefix for the instant_restore_resource_group name.",
                  "type": "string"
                },
                "suffix": {
                  "description": "The suffix for the instant_restore_resource_group name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "instantRestoreRetentionDays": {
              "description": "Specifies the instant restore retention range in days. Possible values are between 1 and 5 when policy_type is V1, and 1 to 30 when policy_type is V2.",
              "type": "number"
            },
            "policyType": {
              "description": "Type of the Backup Policy. Possible values are V1 and V2 where V2 stands for the Enhanced Policy. Defaults to V1. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "recoveryVaultName": {
              "description": "Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "recoveryVaultNameRef": {
              "description": "Reference to a Vault in recoveryservices to populate recoveryVaultName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "recoveryVaultNameSelector": {
              "description": "Selector for a Vault in recoveryservices to populate recoveryVaultName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the policy. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "retentionDaily": {
              "description": "Configures the policy daily retention as documented in the retention_daily block below. Required when backup frequency is Daily.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of daily backups to keep. Must be between 7 and 9999.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "retentionMonthly": {
              "description": "Configures the policy monthly retention as documented in the retention_monthly block below.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of monthly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "days": {
                  "description": "The days of the month to retain backups of. Must be between 1 and 31.",
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "includeLastDays": {
                  "description": "Including the last day of the month, default to false.",
                  "type": "boolean"
                },
                "weekdays": {
                  "description": "The weekday backups to retain . Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weeks": {
                  "description": "The weeks of the month to retain backups of. Must be one of First, Second, Third, Fourth, Last.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "retentionWeekly": {
              "description": "Configures the policy weekly retention as documented in the retention_weekly block below. Required when backup frequency is Weekly.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of weekly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "weekdays": {
                  "description": "The weekday backups to retain. Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "retentionYearly": {
              "description": "Configures the policy yearly retention as documented in the retention_yearly block below.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of yearly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "days": {
                  "description": "The days of the month to retain backups of. Must be between 1 and 31.",
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "includeLastDays": {
                  "description": "Including the last day of the month, default to false.",
                  "type": "boolean"
                },
                "months": {
                  "description": "The months of the year to retain backups of. Must be one of January, February, March, April, May, June, July, August, September, October, November and December.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weekdays": {
                  "description": "The weekday backups to retain . Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weeks": {
                  "description": "The weeks of the month to retain backups of. Must be one of First, Second, Third, Fourth, Last.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "tieringPolicy": {
              "description": "A tiering_policy block as defined below.",
              "type": "object",
              "properties": {
                "archivedRestorePoint": {
                  "description": "An archived_restore_point block as defined below.",
                  "type": "object",
                  "properties": {
                    "duration": {
                      "description": "The number of days/weeks/months/years to retain backups in current tier before tiering.",
                      "type": "number"
                    },
                    "durationType": {
                      "description": "The retention duration type. Possible values are Days, Weeks, Months and Years.",
                      "type": "string"
                    },
                    "mode": {
                      "description": "The tiering mode to control automatic tiering of recovery points. Possible values are TierAfter and TierRecommended.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "timezone": {
              "description": "Specifies the timezone. the possible values are defined here. Defaults to UTC",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "backup": {
              "description": "Configures the Policy backup frequency, times \u0026 days as documented in the backup block below.",
              "type": "object",
              "properties": {
                "frequency": {
                  "description": "Sets the backup frequency. Possible values are Hourly, Daily and Weekly.",
                  "type": "string"
                },
                "hourDuration": {
                  "description": "Duration of the backup window in hours. Possible values are between 4 and 24 This is used when frequency is Hourly.",
                  "type": "number"
                },
                "hourInterval": {
                  "description": "Interval in hour at which backup is triggered. Possible values are 4, 6, 8 and 12. This is used when frequency is Hourly.",
                  "type": "number"
                },
                "time": {
                  "description": "The time of day to perform the backup in 24hour format.",
                  "type": "string"
                },
                "weekdays": {
                  "description": "The days of the week to perform backups on. Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday. This is used when frequency is Weekly.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "instantRestoreResourceGroup": {
              "description": "Specifies the instant restore resource group name as documented in the instant_restore_resource_group block below.",
              "type": "object",
              "properties": {
                "prefix": {
                  "description": "The prefix for the instant_restore_resource_group name.",
                  "type": "string"
                },
                "suffix": {
                  "description": "The suffix for the instant_restore_resource_group name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "instantRestoreRetentionDays": {
              "description": "Specifies the instant restore retention range in days. Possible values are between 1 and 5 when policy_type is V1, and 1 to 30 when policy_type is V2.",
              "type": "number"
            },
            "policyType": {
              "description": "Type of the Backup Policy. Possible values are V1 and V2 where V2 stands for the Enhanced Policy. Defaults to V1. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "retentionDaily": {
              "description": "Configures the policy daily retention as documented in the retention_daily block below. Required when backup frequency is Daily.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of daily backups to keep. Must be between 7 and 9999.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "retentionMonthly": {
              "description": "Configures the policy monthly retention as documented in the retention_monthly block below.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of monthly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "days": {
                  "description": "The days of the month to retain backups of. Must be between 1 and 31.",
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "includeLastDays": {
                  "description": "Including the last day of the month, default to false.",
                  "type": "boolean"
                },
                "weekdays": {
                  "description": "The weekday backups to retain . Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weeks": {
                  "description": "The weeks of the month to retain backups of. Must be one of First, Second, Third, Fourth, Last.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "retentionWeekly": {
              "description": "Configures the policy weekly retention as documented in the retention_weekly block below. Required when backup frequency is Weekly.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of weekly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "weekdays": {
                  "description": "The weekday backups to retain. Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "retentionYearly": {
              "description": "Configures the policy yearly retention as documented in the retention_yearly block below.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of yearly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "days": {
                  "description": "The days of the month to retain backups of. Must be between 1 and 31.",
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "includeLastDays": {
                  "description": "Including the last day of the month, default to false.",
                  "type": "boolean"
                },
                "months": {
                  "description": "The months of the year to retain backups of. Must be one of January, February, March, April, May, June, July, August, September, October, November and December.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weekdays": {
                  "description": "The weekday backups to retain . Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weeks": {
                  "description": "The weeks of the month to retain backups of. Must be one of First, Second, Third, Fourth, Last.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "tieringPolicy": {
              "description": "A tiering_policy block as defined below.",
              "type": "object",
              "properties": {
                "archivedRestorePoint": {
                  "description": "An archived_restore_point block as defined below.",
                  "type": "object",
                  "properties": {
                    "duration": {
                      "description": "The number of days/weeks/months/years to retain backups in current tier before tiering.",
                      "type": "number"
                    },
                    "durationType": {
                      "description": "The retention duration type. Possible values are Days, Weeks, Months and Years.",
                      "type": "string"
                    },
                    "mode": {
                      "description": "The tiering mode to control automatic tiering of recovery points. Possible values are TierAfter and TierRecommended.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "timezone": {
              "description": "Specifies the timezone. the possible values are defined here. Defaults to UTC",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backup) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.backup))",
          "message": "spec.forProvider.backup is a required parameter"
        }
      ]
    },
    "status": {
      "description": "BackupPolicyVMStatus defines the observed state of BackupPolicyVM.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "backup": {
              "description": "Configures the Policy backup frequency, times \u0026 days as documented in the backup block below.",
              "type": "object",
              "properties": {
                "frequency": {
                  "description": "Sets the backup frequency. Possible values are Hourly, Daily and Weekly.",
                  "type": "string"
                },
                "hourDuration": {
                  "description": "Duration of the backup window in hours. Possible values are between 4 and 24 This is used when frequency is Hourly.",
                  "type": "number"
                },
                "hourInterval": {
                  "description": "Interval in hour at which backup is triggered. Possible values are 4, 6, 8 and 12. This is used when frequency is Hourly.",
                  "type": "number"
                },
                "time": {
                  "description": "The time of day to perform the backup in 24hour format.",
                  "type": "string"
                },
                "weekdays": {
                  "description": "The days of the week to perform backups on. Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday. This is used when frequency is Weekly.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "id": {
              "description": "The ID of the VM Backup Policy.",
              "type": "string"
            },
            "instantRestoreResourceGroup": {
              "description": "Specifies the instant restore resource group name as documented in the instant_restore_resource_group block below.",
              "type": "object",
              "properties": {
                "prefix": {
                  "description": "The prefix for the instant_restore_resource_group name.",
                  "type": "string"
                },
                "suffix": {
                  "description": "The suffix for the instant_restore_resource_group name.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "instantRestoreRetentionDays": {
              "description": "Specifies the instant restore retention range in days. Possible values are between 1 and 5 when policy_type is V1, and 1 to 30 when policy_type is V2.",
              "type": "number"
            },
            "policyType": {
              "description": "Type of the Backup Policy. Possible values are V1 and V2 where V2 stands for the Enhanced Policy. Defaults to V1. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "recoveryVaultName": {
              "description": "Specifies the name of the Recovery Services Vault to use. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupName": {
              "description": "The name of the resource group in which to create the policy. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "retentionDaily": {
              "description": "Configures the policy daily retention as documented in the retention_daily block below. Required when backup frequency is Daily.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of daily backups to keep. Must be between 7 and 9999.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "retentionMonthly": {
              "description": "Configures the policy monthly retention as documented in the retention_monthly block below.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of monthly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "days": {
                  "description": "The days of the month to retain backups of. Must be between 1 and 31.",
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "includeLastDays": {
                  "description": "Including the last day of the month, default to false.",
                  "type": "boolean"
                },
                "weekdays": {
                  "description": "The weekday backups to retain . Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weeks": {
                  "description": "The weeks of the month to retain backups of. Must be one of First, Second, Third, Fourth, Last.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "retentionWeekly": {
              "description": "Configures the policy weekly retention as documented in the retention_weekly block below. Required when backup frequency is Weekly.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of weekly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "weekdays": {
                  "description": "The weekday backups to retain. Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "retentionYearly": {
              "description": "Configures the policy yearly retention as documented in the retention_yearly block below.",
              "type": "object",
              "properties": {
                "count": {
                  "description": "The number of yearly backups to keep. Must be between 1 and 9999",
                  "type": "number"
                },
                "days": {
                  "description": "The days of the month to retain backups of. Must be between 1 and 31.",
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "includeLastDays": {
                  "description": "Including the last day of the month, default to false.",
                  "type": "boolean"
                },
                "months": {
                  "description": "The months of the year to retain backups of. Must be one of January, February, March, April, May, June, July, August, September, October, November and December.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weekdays": {
                  "description": "The weekday backups to retain . Must be one of Sunday, Monday, Tuesday, Wednesday, Thursday, Friday or Saturday.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                },
                "weeks": {
                  "description": "The weeks of the month to retain backups of. Must be one of First, Second, Third, Fourth, Last.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "x-kubernetes-list-type": "set"
                }
              },
              "additionalProperties": false
            },
            "tieringPolicy": {
              "description": "A tiering_policy block as defined below.",
              "type": "object",
              "properties": {
                "archivedRestorePoint": {
                  "description": "An archived_restore_point block as defined below.",
                  "type": "object",
                  "properties": {
                    "duration": {
                      "description": "The number of days/weeks/months/years to retain backups in current tier before tiering.",
                      "type": "number"
                    },
                    "durationType": {
                      "description": "The retention duration type. Possible values are Days, Weeks, Months and Years.",
                      "type": "string"
                    },
                    "mode": {
                      "description": "The tiering mode to control automatic tiering of recovery points. Possible values are TierAfter and TierRecommended.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "timezone": {
              "description": "Specifies the timezone. the possible values are defined here. Defaults to UTC",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
