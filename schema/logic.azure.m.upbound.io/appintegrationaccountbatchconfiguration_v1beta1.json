{
  "description": "AppIntegrationAccountBatchConfiguration is the Schema for the AppIntegrationAccountBatchConfigurations API. Manages a Logic App Integration Account Batch Configuration.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "AppIntegrationAccountBatchConfigurationSpec defines the desired state of AppIntegrationAccountBatchConfiguration",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "batchGroupName": {
              "description": "The batch group name of the Logic App Integration Batch Configuration. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "integrationAccountName": {
              "description": "The name of the Logic App Integration Account. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "integrationAccountNameRef": {
              "description": "Reference to a AppIntegrationAccount in logic to populate integrationAccountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "integrationAccountNameSelector": {
              "description": "Selector for a AppIntegrationAccount in logic to populate integrationAccountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metadata": {
              "description": "A JSON mapping of any Metadata for this Logic App Integration Account Batch Configuration.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "The name which should be used for this Logic App Integration Account Batch Configuration. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "releaseCriteria": {
              "description": "A release_criteria block as documented below, which is used to select the criteria to meet before processing each batch.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "description": "The batch size in bytes for the Logic App Integration Batch Configuration.",
                  "type": "number"
                },
                "messageCount": {
                  "description": "The message count for the Logic App Integration Batch Configuration.",
                  "type": "number"
                },
                "recurrence": {
                  "description": "A recurrence block as documented below.",
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "description": "The end time of the schedule, formatted as an RFC3339 string.",
                      "type": "string"
                    },
                    "frequency": {
                      "description": "The frequency of the schedule. Possible values are Day, Hour, Minute, Month, NotSpecified, Second, Week and Year.",
                      "type": "string"
                    },
                    "interval": {
                      "description": "The number of frequencys between runs.",
                      "type": "number"
                    },
                    "schedule": {
                      "description": "A schedule block as documented below.",
                      "type": "object",
                      "properties": {
                        "hours": {
                          "description": "A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "minutes": {
                          "description": "A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "monthDays": {
                          "description": "A list of days of the month that the job should execute on.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "monthly": {
                          "description": "A monthly block as documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "week": {
                                "description": "The occurrence of the week within the month.",
                                "type": "number"
                              },
                              "weekday": {
                                "description": "The day of the occurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "weekDays": {
                          "description": "A list of days of the week that the job should execute on. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    },
                    "startTime": {
                      "description": "The start time of the schedule, formatted as an RFC3339 string.",
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The timezone of the start/end time.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Logic App Integration Account Batch Configuration should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "batchGroupName": {
              "description": "The batch group name of the Logic App Integration Batch Configuration. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "integrationAccountName": {
              "description": "The name of the Logic App Integration Account. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "integrationAccountNameRef": {
              "description": "Reference to a AppIntegrationAccount in logic to populate integrationAccountName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "integrationAccountNameSelector": {
              "description": "Selector for a AppIntegrationAccount in logic to populate integrationAccountName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metadata": {
              "description": "A JSON mapping of any Metadata for this Logic App Integration Account Batch Configuration.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "The name which should be used for this Logic App Integration Account Batch Configuration. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "releaseCriteria": {
              "description": "A release_criteria block as documented below, which is used to select the criteria to meet before processing each batch.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "description": "The batch size in bytes for the Logic App Integration Batch Configuration.",
                  "type": "number"
                },
                "messageCount": {
                  "description": "The message count for the Logic App Integration Batch Configuration.",
                  "type": "number"
                },
                "recurrence": {
                  "description": "A recurrence block as documented below.",
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "description": "The end time of the schedule, formatted as an RFC3339 string.",
                      "type": "string"
                    },
                    "frequency": {
                      "description": "The frequency of the schedule. Possible values are Day, Hour, Minute, Month, NotSpecified, Second, Week and Year.",
                      "type": "string"
                    },
                    "interval": {
                      "description": "The number of frequencys between runs.",
                      "type": "number"
                    },
                    "schedule": {
                      "description": "A schedule block as documented below.",
                      "type": "object",
                      "properties": {
                        "hours": {
                          "description": "A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "minutes": {
                          "description": "A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "monthDays": {
                          "description": "A list of days of the month that the job should execute on.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "monthly": {
                          "description": "A monthly block as documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "week": {
                                "description": "The occurrence of the week within the month.",
                                "type": "number"
                              },
                              "weekday": {
                                "description": "The day of the occurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "weekDays": {
                          "description": "A list of days of the week that the job should execute on. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    },
                    "startTime": {
                      "description": "The start time of the schedule, formatted as an RFC3339 string.",
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The timezone of the start/end time.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Logic App Integration Account Batch Configuration should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the referenced object",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "namespace": {
                  "description": "Namespace for the selector",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.batchGroupName) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.batchGroupName))",
          "message": "spec.forProvider.batchGroupName is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.name))",
          "message": "spec.forProvider.name is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.releaseCriteria) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.releaseCriteria))",
          "message": "spec.forProvider.releaseCriteria is a required parameter"
        }
      ]
    },
    "status": {
      "description": "AppIntegrationAccountBatchConfigurationStatus defines the observed state of AppIntegrationAccountBatchConfiguration.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "batchGroupName": {
              "description": "The batch group name of the Logic App Integration Batch Configuration. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Logic App Integration Account Batch Configuration.",
              "type": "string"
            },
            "integrationAccountName": {
              "description": "The name of the Logic App Integration Account. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "metadata": {
              "description": "A JSON mapping of any Metadata for this Logic App Integration Account Batch Configuration.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "name": {
              "description": "The name which should be used for this Logic App Integration Account Batch Configuration. Only Alphanumeric characters allowed. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "releaseCriteria": {
              "description": "A release_criteria block as documented below, which is used to select the criteria to meet before processing each batch.",
              "type": "object",
              "properties": {
                "batchSize": {
                  "description": "The batch size in bytes for the Logic App Integration Batch Configuration.",
                  "type": "number"
                },
                "messageCount": {
                  "description": "The message count for the Logic App Integration Batch Configuration.",
                  "type": "number"
                },
                "recurrence": {
                  "description": "A recurrence block as documented below.",
                  "type": "object",
                  "properties": {
                    "endTime": {
                      "description": "The end time of the schedule, formatted as an RFC3339 string.",
                      "type": "string"
                    },
                    "frequency": {
                      "description": "The frequency of the schedule. Possible values are Day, Hour, Minute, Month, NotSpecified, Second, Week and Year.",
                      "type": "string"
                    },
                    "interval": {
                      "description": "The number of frequencys between runs.",
                      "type": "number"
                    },
                    "schedule": {
                      "description": "A schedule block as documented below.",
                      "type": "object",
                      "properties": {
                        "hours": {
                          "description": "A list containing a single item, which specifies the Hour interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "minutes": {
                          "description": "A list containing a single item which specifies the Minute interval at which this recurrence should be triggered.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "monthDays": {
                          "description": "A list of days of the month that the job should execute on.",
                          "type": "array",
                          "items": {
                            "type": "number"
                          },
                          "x-kubernetes-list-type": "set"
                        },
                        "monthly": {
                          "description": "A monthly block as documented below.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "week": {
                                "description": "The occurrence of the week within the month.",
                                "type": "number"
                              },
                              "weekday": {
                                "description": "The day of the occurrence. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.",
                                "type": "string"
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "weekDays": {
                          "description": "A list of days of the week that the job should execute on. Possible values are Sunday, Monday, Tuesday, Wednesday, Thursday, Friday and Saturday.",
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "x-kubernetes-list-type": "set"
                        }
                      },
                      "additionalProperties": false
                    },
                    "startTime": {
                      "description": "The start time of the schedule, formatted as an RFC3339 string.",
                      "type": "string"
                    },
                    "timeZone": {
                      "description": "The timezone of the start/end time.",
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Logic App Integration Account Batch Configuration should exist. Changing this forces a new resource to be created.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
