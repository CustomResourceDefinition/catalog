{
  "description": "LabServiceLab is the Schema for the LabServiceLabs API. Manages a Lab Service Lab.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "LabServiceLabSpec defines the desired state of LabServiceLab",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "properties": {
            "autoShutdown": {
              "description": "An auto_shutdown block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "disconnectDelay": {
                    "description": "The amount of time a VM will stay running after a user disconnects if this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "idleDelay": {
                    "description": "The amount of time a VM will idle before it is shutdown if this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "noConnectDelay": {
                    "description": "The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "shutdownOnIdle": {
                    "description": "A VM will get shutdown when it has idled for a period of time. Possible values are LowUsage and UserAbsence.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "connectionSetting": {
              "description": "A connection_setting block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientRdpAccess": {
                    "description": "The enabled access level for Client Access over RDP. Possible value is Public.",
                    "type": "string"
                  },
                  "clientSshAccess": {
                    "description": "The enabled access level for Client Access over SSH. Possible value is Public.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of the Lab Service Lab.",
              "type": "string"
            },
            "labPlanId": {
              "description": "The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via labs.azure.com.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "network": {
              "description": "A network block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "subnetId": {
                    "description": "The resource ID of the Subnet for the network profile of the Lab Service Lab.",
                    "type": "string"
                  },
                  "subnetIdRef": {
                    "description": "Reference to a Subnet in network to populate subnetId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "subnetIdSelector": {
                    "description": "Selector for a Subnet in network to populate subnetId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "resourceGroupNameRef": {
              "description": "Reference to a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "resourceGroupNameSelector": {
              "description": "Selector for a ResourceGroup in azure to populate resourceGroupName.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "roster": {
              "description": "A roster block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryGroupId": {
                    "description": "The AAD group ID which this Lab Service Lab roster is populated from.",
                    "type": "string"
                  },
                  "lmsInstance": {
                    "description": "The base URI identifying the lms instance.",
                    "type": "string"
                  },
                  "ltiClientId": {
                    "description": "The unique id of the Azure Lab Service tool in the lms.",
                    "type": "string"
                  },
                  "ltiContextId": {
                    "description": "The unique context identifier for the Lab Service Lab in the lms.",
                    "type": "string"
                  },
                  "ltiRosterEndpoint": {
                    "description": "The URI of the names and roles service endpoint on the lms for the class attached to this Lab Service Lab.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "security": {
              "description": "A security block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "openAccessEnabled": {
                    "description": "Is open access enabled to allow any user or only specified users to register to a Lab Service Lab?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Lab Service Lab.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "title": {
              "description": "The title of the Lab Service Lab.",
              "type": "string"
            },
            "virtualMachine": {
              "description": "A virtual_machine block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalCapabilityGpuDriversInstalled": {
                    "description": "Is flagged to pre-install dedicated GPU drivers? Defaults to false. Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "adminUser": {
                    "description": "An admin_user block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "passwordSecretRef"
                      ],
                      "properties": {
                        "passwordSecretRef": {
                          "description": "The password for the user.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "username": {
                          "description": "The username to use when signing in to Lab Service Lab VMs.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "createOption": {
                    "description": "The create option to indicate what Lab Service Lab VMs are created from. Possible values are Image and TemplateVM. Defaults to Image. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "imageReference": {
                    "description": "An image_reference block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The resource ID of the image. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "offer": {
                          "description": "The image offer if applicable. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The image publisher. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "sku": {
                          "description": "A sku block as defined below.",
                          "type": "string"
                        },
                        "version": {
                          "description": "The image version specified on creation. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "nonAdminUser": {
                    "description": "A non_admin_user block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "passwordSecretRef"
                      ],
                      "properties": {
                        "passwordSecretRef": {
                          "description": "The password for the user.",
                          "type": "object",
                          "required": [
                            "key",
                            "name",
                            "namespace"
                          ],
                          "properties": {
                            "key": {
                              "description": "The key to select.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of the secret.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace of the secret.",
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        },
                        "username": {
                          "description": "The username to use when signing in to Lab Service Lab VMs.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "sharedPasswordEnabled": {
                    "description": "Is the shared password enabled with the same password for all user VMs? Defaults to false. Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "sku": {
                    "description": "A sku block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "capacity": {
                          "description": "The capacity for the SKU. Possible values are between 0 and 400.",
                          "type": "number"
                        },
                        "name": {
                          "description": "The name of the SKU. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "usageQuota": {
                    "description": "The initial quota allocated to each Lab Service Lab user. Defaults to PT0S. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "autoShutdown": {
              "description": "An auto_shutdown block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "disconnectDelay": {
                    "description": "The amount of time a VM will stay running after a user disconnects if this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "idleDelay": {
                    "description": "The amount of time a VM will idle before it is shutdown if this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "noConnectDelay": {
                    "description": "The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "shutdownOnIdle": {
                    "description": "A VM will get shutdown when it has idled for a period of time. Possible values are LowUsage and UserAbsence.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "connectionSetting": {
              "description": "A connection_setting block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientRdpAccess": {
                    "description": "The enabled access level for Client Access over RDP. Possible value is Public.",
                    "type": "string"
                  },
                  "clientSshAccess": {
                    "description": "The enabled access level for Client Access over SSH. Possible value is Public.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of the Lab Service Lab.",
              "type": "string"
            },
            "labPlanId": {
              "description": "The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via labs.azure.com.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "network": {
              "description": "A network block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "subnetId": {
                    "description": "The resource ID of the Subnet for the network profile of the Lab Service Lab.",
                    "type": "string"
                  },
                  "subnetIdRef": {
                    "description": "Reference to a Subnet in network to populate subnetId.",
                    "type": "object",
                    "required": [
                      "name"
                    ],
                    "properties": {
                      "name": {
                        "description": "Name of the referenced object.",
                        "type": "string"
                      },
                      "policy": {
                        "description": "Policies for referencing.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  },
                  "subnetIdSelector": {
                    "description": "Selector for a Subnet in network to populate subnetId.",
                    "type": "object",
                    "properties": {
                      "matchControllerRef": {
                        "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                        "type": "boolean"
                      },
                      "matchLabels": {
                        "description": "MatchLabels ensures an object with matching labels is selected.",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "policy": {
                        "description": "Policies for selection.",
                        "type": "object",
                        "properties": {
                          "resolution": {
                            "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                            "type": "string",
                            "default": "Required",
                            "enum": [
                              "Required",
                              "Optional"
                            ]
                          },
                          "resolve": {
                            "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                            "type": "string",
                            "enum": [
                              "Always",
                              "IfNotPresent"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "roster": {
              "description": "A roster block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryGroupId": {
                    "description": "The AAD group ID which this Lab Service Lab roster is populated from.",
                    "type": "string"
                  },
                  "lmsInstance": {
                    "description": "The base URI identifying the lms instance.",
                    "type": "string"
                  },
                  "ltiClientId": {
                    "description": "The unique id of the Azure Lab Service tool in the lms.",
                    "type": "string"
                  },
                  "ltiContextId": {
                    "description": "The unique context identifier for the Lab Service Lab in the lms.",
                    "type": "string"
                  },
                  "ltiRosterEndpoint": {
                    "description": "The URI of the names and roles service endpoint on the lms for the class attached to this Lab Service Lab.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "security": {
              "description": "A security block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "openAccessEnabled": {
                    "description": "Is open access enabled to allow any user or only specified users to register to a Lab Service Lab?",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Lab Service Lab.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "title": {
              "description": "The title of the Lab Service Lab.",
              "type": "string"
            },
            "virtualMachine": {
              "description": "A virtual_machine block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalCapabilityGpuDriversInstalled": {
                    "description": "Is flagged to pre-install dedicated GPU drivers? Defaults to false. Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "adminUser": {
                    "description": "An admin_user block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "The username to use when signing in to Lab Service Lab VMs.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "createOption": {
                    "description": "The create option to indicate what Lab Service Lab VMs are created from. Possible values are Image and TemplateVM. Defaults to Image. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "imageReference": {
                    "description": "An image_reference block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The resource ID of the image. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "offer": {
                          "description": "The image offer if applicable. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The image publisher. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "sku": {
                          "description": "A sku block as defined below.",
                          "type": "string"
                        },
                        "version": {
                          "description": "The image version specified on creation. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "nonAdminUser": {
                    "description": "A non_admin_user block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "The username to use when signing in to Lab Service Lab VMs.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "sharedPasswordEnabled": {
                    "description": "Is the shared password enabled with the same password for all user VMs? Defaults to false. Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "sku": {
                    "description": "A sku block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "capacity": {
                          "description": "The capacity for the SKU. Possible values are between 0 and 400.",
                          "type": "number"
                        },
                        "name": {
                          "description": "The name of the SKU. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "usageQuota": {
                    "description": "The initial quota allocated to each Lab Service Lab user. Defaults to PT0S. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "publishConnectionDetailsTo": {
          "description": "PublishConnectionDetailsTo specifies the connection secret config which\ncontains a name, metadata and a reference to secret store config to\nwhich any connection details for this managed resource should be written.\nConnection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "configRef": {
              "description": "SecretStoreConfigRef specifies which secret store config should be used\nfor this ConnectionSecret.",
              "type": "object",
              "default": {
                "name": "default"
              },
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "metadata": {
              "description": "Metadata is the metadata for connection secret.",
              "type": "object",
              "properties": {
                "annotations": {
                  "description": "Annotations are the annotations to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.annotations\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "labels": {
                  "description": "Labels are the labels/tags to be added to connection secret.\n- For Kubernetes secrets, this will be used as \"metadata.labels\".\n- It is up to Secret Store implementation for others store types.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "type": {
                  "description": "Type is the SecretType for the connection secret.\n- Only valid for Kubernetes Secret Stores.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "name": {
              "description": "Name is the name of the connection secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.\nThis field is planned to be replaced in a future release in favor of\nPublishConnectionDetailsTo. Currently, both could be set independently\nand connection details would be published to both without affecting\neach other.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.connectionSetting) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.connectionSetting))",
          "message": "spec.forProvider.connectionSetting is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.location) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.location))",
          "message": "spec.forProvider.location is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.security) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.security))",
          "message": "spec.forProvider.security is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.title) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.title))",
          "message": "spec.forProvider.title is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.virtualMachine) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.virtualMachine))",
          "message": "spec.forProvider.virtualMachine is a required parameter"
        }
      ]
    },
    "status": {
      "description": "LabServiceLabStatus defines the observed state of LabServiceLab.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "autoShutdown": {
              "description": "An auto_shutdown block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "disconnectDelay": {
                    "description": "The amount of time a VM will stay running after a user disconnects if this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "idleDelay": {
                    "description": "The amount of time a VM will idle before it is shutdown if this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "noConnectDelay": {
                    "description": "The amount of time a VM will stay running before it is shutdown if no connection is made and this behavior is enabled. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  },
                  "shutdownOnIdle": {
                    "description": "A VM will get shutdown when it has idled for a period of time. Possible values are LowUsage and UserAbsence.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "connectionSetting": {
              "description": "A connection_setting block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "clientRdpAccess": {
                    "description": "The enabled access level for Client Access over RDP. Possible value is Public.",
                    "type": "string"
                  },
                  "clientSshAccess": {
                    "description": "The enabled access level for Client Access over SSH. Possible value is Public.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "description": {
              "description": "The description of the Lab Service Lab.",
              "type": "string"
            },
            "id": {
              "description": "The ID of the Lab Service Lab.",
              "type": "string"
            },
            "labPlanId": {
              "description": "The resource ID of the Lab Plan that is used during resource creation to provide defaults and acts as a permission container when creating a Lab Service Lab via labs.azure.com.",
              "type": "string"
            },
            "location": {
              "description": "The Azure Region where the Lab Service Lab should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "network": {
              "description": "A network block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "loadBalancerId": {
                    "description": "The resource ID of the Load Balancer for the network profile of the Lab Service Lab.",
                    "type": "string"
                  },
                  "publicIpId": {
                    "description": "The resource ID of the Public IP for the network profile of the Lab Service Lab.",
                    "type": "string"
                  },
                  "subnetId": {
                    "description": "The resource ID of the Subnet for the network profile of the Lab Service Lab.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "resourceGroupName": {
              "description": "The name of the Resource Group where the Lab Service Lab should exist. Changing this forces a new resource to be created.",
              "type": "string"
            },
            "roster": {
              "description": "A roster block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "activeDirectoryGroupId": {
                    "description": "The AAD group ID which this Lab Service Lab roster is populated from.",
                    "type": "string"
                  },
                  "lmsInstance": {
                    "description": "The base URI identifying the lms instance.",
                    "type": "string"
                  },
                  "ltiClientId": {
                    "description": "The unique id of the Azure Lab Service tool in the lms.",
                    "type": "string"
                  },
                  "ltiContextId": {
                    "description": "The unique context identifier for the Lab Service Lab in the lms.",
                    "type": "string"
                  },
                  "ltiRosterEndpoint": {
                    "description": "The URI of the names and roles service endpoint on the lms for the class attached to this Lab Service Lab.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "security": {
              "description": "A security block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "openAccessEnabled": {
                    "description": "Is open access enabled to allow any user or only specified users to register to a Lab Service Lab?",
                    "type": "boolean"
                  },
                  "registrationCode": {
                    "description": "The registration code for the Lab Service Lab.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "tags": {
              "description": "A mapping of tags which should be assigned to the Lab Service Lab.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "title": {
              "description": "The title of the Lab Service Lab.",
              "type": "string"
            },
            "virtualMachine": {
              "description": "A virtual_machine block as defined below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalCapabilityGpuDriversInstalled": {
                    "description": "Is flagged to pre-install dedicated GPU drivers? Defaults to false. Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "adminUser": {
                    "description": "An admin_user block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "The username to use when signing in to Lab Service Lab VMs.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "createOption": {
                    "description": "The create option to indicate what Lab Service Lab VMs are created from. Possible values are Image and TemplateVM. Defaults to Image. Changing this forces a new resource to be created.",
                    "type": "string"
                  },
                  "imageReference": {
                    "description": "An image_reference block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The resource ID of the image. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "offer": {
                          "description": "The image offer if applicable. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "publisher": {
                          "description": "The image publisher. Changing this forces a new resource to be created.",
                          "type": "string"
                        },
                        "sku": {
                          "description": "A sku block as defined below.",
                          "type": "string"
                        },
                        "version": {
                          "description": "The image version specified on creation. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "nonAdminUser": {
                    "description": "A non_admin_user block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "username": {
                          "description": "The username to use when signing in to Lab Service Lab VMs.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "sharedPasswordEnabled": {
                    "description": "Is the shared password enabled with the same password for all user VMs? Defaults to false. Changing this forces a new resource to be created.",
                    "type": "boolean"
                  },
                  "sku": {
                    "description": "A sku block as defined below.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "capacity": {
                          "description": "The capacity for the SKU. Possible values are between 0 and 400.",
                          "type": "number"
                        },
                        "name": {
                          "description": "The name of the SKU. Changing this forces a new resource to be created.",
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "usageQuota": {
                    "description": "The initial quota allocated to each Lab Service Lab user. Defaults to PT0S. This value must be formatted as an ISO 8601 string.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
