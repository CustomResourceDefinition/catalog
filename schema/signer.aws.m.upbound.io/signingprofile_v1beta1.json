{
  "description": "SigningProfile is the Schema for the SigningProfiles API. Creates a Signer Signing Profile.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SigningProfileSpec defines the desired state of SigningProfile",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "platformId": {
              "description": "The ID of the platform that is used by the target signing profile.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "signatureValidityPeriod": {
              "description": "The validity period for a signing job. See signature_validity_period Block below for details.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The time unit for signature validity. Valid values: DAYS, MONTHS, YEARS.",
                  "type": "string"
                },
                "value": {
                  "description": "The numerical value of the time unit for signature validity.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "signingMaterial": {
              "description": "The AWS Certificate Manager certificate that will be used to sign code with the new signing profile. See signing_material Block below for details.",
              "type": "object",
              "properties": {
                "certificateArn": {
                  "description": "The Amazon Resource Name (ARN) of the certificates that is used to sign your code.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "signingParameters": {
              "description": "Map of key-value pairs for signing. These can include any information that you want to use during signing.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "platformId": {
              "description": "The ID of the platform that is used by the target signing profile.",
              "type": "string"
            },
            "signatureValidityPeriod": {
              "description": "The validity period for a signing job. See signature_validity_period Block below for details.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The time unit for signature validity. Valid values: DAYS, MONTHS, YEARS.",
                  "type": "string"
                },
                "value": {
                  "description": "The numerical value of the time unit for signature validity.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "signingMaterial": {
              "description": "The AWS Certificate Manager certificate that will be used to sign code with the new signing profile. See signing_material Block below for details.",
              "type": "object",
              "properties": {
                "certificateArn": {
                  "description": "The Amazon Resource Name (ARN) of the certificates that is used to sign your code.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "signingParameters": {
              "description": "Map of key-value pairs for signing. These can include any information that you want to use during signing.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.platformId) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.platformId))",
          "message": "spec.forProvider.platformId is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SigningProfileStatus defines the observed state of SigningProfile.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "The Amazon Resource Name (ARN) for the signing profile.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "platformDisplayName": {
              "description": "A human-readable name for the signing platform associated with the signing profile.",
              "type": "string"
            },
            "platformId": {
              "description": "The ID of the platform that is used by the target signing profile.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "revocationRecord": {
              "description": "Revocation information for a signing profile. See revocation_record Block below for details.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "revocationEffectiveFrom": {
                    "description": "The time when revocation becomes effective.",
                    "type": "string"
                  },
                  "revokedAt": {
                    "description": "The time when the signing profile was revoked.",
                    "type": "string"
                  },
                  "revokedBy": {
                    "description": "The identity of the revoker.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "signatureValidityPeriod": {
              "description": "The validity period for a signing job. See signature_validity_period Block below for details.",
              "type": "object",
              "properties": {
                "type": {
                  "description": "The time unit for signature validity. Valid values: DAYS, MONTHS, YEARS.",
                  "type": "string"
                },
                "value": {
                  "description": "The numerical value of the time unit for signature validity.",
                  "type": "number"
                }
              },
              "additionalProperties": false
            },
            "signingMaterial": {
              "description": "The AWS Certificate Manager certificate that will be used to sign code with the new signing profile. See signing_material Block below for details.",
              "type": "object",
              "properties": {
                "certificateArn": {
                  "description": "The Amazon Resource Name (ARN) of the certificates that is used to sign your code.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "signingParameters": {
              "description": "Map of key-value pairs for signing. These can include any information that you want to use during signing.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "status": {
              "description": "The status of the target signing profile.",
              "type": "string"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "version": {
              "description": "The current version of the signing profile.",
              "type": "string"
            },
            "versionArn": {
              "description": "The signing profile ARN, including the profile version.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
