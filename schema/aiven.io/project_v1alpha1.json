{
  "description": "Project is the Schema for the projects API.\nInfo \"Exposes secret keys\": `PROJECT_CA_CERT`",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ProjectSpec defines the desired state of Project",
      "type": "object",
      "properties": {
        "accountId": {
          "description": "Account ID",
          "type": "string",
          "maxLength": 32
        },
        "authSecretRef": {
          "description": "Authentication reference to Aiven token in a secret",
          "type": "object",
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "billingAddress": {
          "description": "Billing name and address of the project",
          "type": "string",
          "maxLength": 1000
        },
        "billingCurrency": {
          "description": "Billing currency",
          "type": "string",
          "enum": [
            "AUD",
            "CAD",
            "CHF",
            "DKK",
            "EUR",
            "GBP",
            "NOK",
            "SEK",
            "USD"
          ]
        },
        "billingEmails": {
          "description": "Billing contact emails of the project",
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        },
        "billingExtraText": {
          "description": "Extra text to be included in all project invoices, e.g. purchase order or cost center number",
          "type": "string",
          "maxLength": 1000
        },
        "billingGroupId": {
          "description": "BillingGroup ID",
          "type": "string",
          "maxLength": 36,
          "minLength": 36,
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "cardId": {
          "description": "Credit card ID; The ID may be either last 4 digits of the card or the actual ID",
          "type": "string",
          "maxLength": 64
        },
        "cloud": {
          "description": "Target cloud, example: aws-eu-central-1",
          "type": "string",
          "maxLength": 256
        },
        "connInfoSecretTarget": {
          "description": "Secret configuration.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "Annotations added to the secret",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-preserve-unknown-fields": true
            },
            "labels": {
              "description": "Labels added to the secret",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-preserve-unknown-fields": true
            },
            "name": {
              "description": "Name of the secret resource to be created. By default, it is equal to the resource name",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Value is immutable"
                }
              ]
            },
            "prefix": {
              "description": "Prefix for the secret's keys.\nAdded \"as is\" without any transformations.\nBy default, is equal to the kind name in uppercase + underscore, e.g. `KAFKA_`, `REDIS_`, etc.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "connInfoSecretTargetDisabled": {
          "description": "When true, the secret containing connection information will not be created, defaults to false. This field cannot be changed after resource creation.",
          "type": "boolean",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "connInfoSecretTargetDisabled is immutable."
            }
          ]
        },
        "copyFromProject": {
          "description": "Project name from which to copy settings to the new project",
          "type": "string",
          "maxLength": 63,
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "countryCode": {
          "description": "Billing country code of the project",
          "type": "string",
          "maxLength": 2,
          "minLength": 2
        },
        "tags": {
          "description": "Tags are key-value pairs that allow you to categorize projects",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "technicalEmails": {
          "description": "Technical contact emails of the project",
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "has(oldSelf.connInfoSecretTargetDisabled) == has(self.connInfoSecretTargetDisabled)",
          "message": "connInfoSecretTargetDisabled can only be set during resource creation."
        }
      ]
    },
    "status": {
      "description": "ProjectStatus defines the observed state of Project",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "availableCredits": {
          "description": "Available credirs",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions represent the latest available observations of an Project state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "country": {
          "description": "Country name",
          "type": "string"
        },
        "estimatedBalance": {
          "description": "Estimated balance",
          "type": "string"
        },
        "paymentMethod": {
          "description": "Payment method name",
          "type": "string"
        },
        "vatId": {
          "description": "EU VAT Identification Number",
          "type": "string",
          "maxLength": 64
        }
      },
      "additionalProperties": false
    }
  }
}
