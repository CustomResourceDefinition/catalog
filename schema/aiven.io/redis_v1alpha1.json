{
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "properties": {
        "authSecretRef": {
          "additionalProperties": false,
          "properties": {
            "key": {
              "minLength": 1,
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object"
        },
        "cloudName": {
          "maxLength": 256,
          "type": "string"
        },
        "connInfoSecretTarget": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "disk_space": {
          "format": "^[1-9][0-9]*(GiB|G)*",
          "type": "string"
        },
        "maintenanceWindowDow": {
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "type": "string"
        },
        "maintenanceWindowTime": {
          "maxLength": 8,
          "type": "string"
        },
        "plan": {
          "maxLength": 128,
          "type": "string"
        },
        "project": {
          "format": "^[a-zA-Z0-9_-]*$",
          "maxLength": 63,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVPCRef": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "namespace": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVpcId": {
          "maxLength": 36,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "serviceIntegrations": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "integrationType": {
                "enum": [
                  "read_replica"
                ],
                "type": "string"
              },
              "sourceServiceName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "type": "object"
          },
          "maxItems": 1,
          "type": "array",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "terminationProtection": {
          "type": "boolean"
        },
        "userConfig": {
          "additionalProperties": false,
          "properties": {
            "additional_backup_regions": {
              "items": {
                "type": "string"
              },
              "maxItems": 1,
              "type": "array"
            },
            "ip_filter": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "network": {
                    "maxLength": 43,
                    "type": "string"
                  }
                },
                "required": [
                  "network"
                ],
                "type": "object"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "migration": {
              "additionalProperties": false,
              "properties": {
                "dbname": {
                  "maxLength": 63,
                  "type": "string"
                },
                "host": {
                  "maxLength": 255,
                  "type": "string"
                },
                "ignore_dbs": {
                  "maxLength": 2048,
                  "type": "string"
                },
                "method": {
                  "enum": [
                    "dump",
                    "replication"
                  ],
                  "type": "string"
                },
                "password": {
                  "maxLength": 256,
                  "type": "string"
                },
                "port": {
                  "maximum": 65535,
                  "minimum": 1,
                  "type": "integer"
                },
                "ssl": {
                  "type": "boolean"
                },
                "username": {
                  "maxLength": 256,
                  "type": "string"
                }
              },
              "required": [
                "host",
                "port"
              ],
              "type": "object"
            },
            "private_access": {
              "additionalProperties": false,
              "properties": {
                "prometheus": {
                  "type": "boolean"
                },
                "redis": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "privatelink_access": {
              "additionalProperties": false,
              "properties": {
                "prometheus": {
                  "type": "boolean"
                },
                "redis": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "project_to_fork_from": {
              "maxLength": 63,
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "public_access": {
              "additionalProperties": false,
              "properties": {
                "prometheus": {
                  "type": "boolean"
                },
                "redis": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "recovery_basebackup_name": {
              "maxLength": 128,
              "pattern": "^[a-zA-Z0-9-_:.]+$",
              "type": "string"
            },
            "redis_acl_channels_default": {
              "enum": [
                "allchannels",
                "resetchannels"
              ],
              "type": "string"
            },
            "redis_io_threads": {
              "maximum": 32,
              "minimum": 1,
              "type": "integer"
            },
            "redis_lfu_decay_time": {
              "maximum": 120,
              "minimum": 1,
              "type": "integer"
            },
            "redis_lfu_log_factor": {
              "maximum": 100,
              "minimum": 0,
              "type": "integer"
            },
            "redis_maxmemory_policy": {
              "enum": [
                "noeviction",
                "allkeys-lru",
                "volatile-lru",
                "allkeys-random",
                "volatile-random",
                "volatile-ttl",
                "volatile-lfu",
                "allkeys-lfu"
              ],
              "type": "string"
            },
            "redis_notify_keyspace_events": {
              "maxLength": 32,
              "pattern": "^[KEg\\$lshzxeA]*$",
              "type": "string"
            },
            "redis_number_of_databases": {
              "maximum": 128,
              "minimum": 1,
              "type": "integer"
            },
            "redis_persistence": {
              "enum": [
                "off",
                "rdb"
              ],
              "type": "string"
            },
            "redis_pubsub_client_output_buffer_limit": {
              "maximum": 512,
              "minimum": 32,
              "type": "integer"
            },
            "redis_ssl": {
              "type": "boolean"
            },
            "redis_timeout": {
              "maximum": 31536000,
              "minimum": 0,
              "type": "integer"
            },
            "service_to_fork_from": {
              "maxLength": 64,
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "static_ips": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "project"
      ],
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "conditions",
        "state"
      ],
      "type": "object"
    }
  },
  "type": "object"
}
