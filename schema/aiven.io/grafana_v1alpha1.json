{
  "description": "Grafana is the Schema for the grafanas API.\nInfo \"Exposes secret keys\": `GRAFANA_HOST`, `GRAFANA_PORT`, `GRAFANA_USER`, `GRAFANA_PASSWORD`, `GRAFANA_URI`, `GRAFANA_HOSTS`",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "GrafanaSpec defines the desired state of Grafana",
      "type": "object",
      "required": [
        "plan",
        "project"
      ],
      "properties": {
        "authSecretRef": {
          "description": "Authentication reference to Aiven token in a secret",
          "type": "object",
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "cloudName": {
          "description": "Cloud the service runs in.",
          "type": "string",
          "maxLength": 256
        },
        "connInfoSecretTarget": {
          "description": "Secret configuration.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "annotations": {
              "description": "Annotations added to the secret",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-preserve-unknown-fields": true
            },
            "labels": {
              "description": "Labels added to the secret",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-preserve-unknown-fields": true
            },
            "name": {
              "description": "Name of the secret resource to be created. By default, it is equal to the resource name",
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Value is immutable"
                }
              ]
            },
            "prefix": {
              "description": "Prefix for the secret's keys.\nAdded \"as is\" without any transformations.\nBy default, is equal to the kind name in uppercase + underscore, e.g. `KAFKA_`, `REDIS_`, etc.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "connInfoSecretTargetDisabled": {
          "description": "When true, the secret containing connection information will not be created, defaults to false. This field cannot be changed after resource creation.",
          "type": "boolean",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "connInfoSecretTargetDisabled is immutable."
            }
          ]
        },
        "disk_space": {
          "description": "The disk space of the service, possible values depend on the service type, the cloud provider and the project.\nReducing will result in the service re-balancing.\nThe removal of this field does not change the value.",
          "type": "string",
          "pattern": "(?i)^[1-9][0-9]*(GiB|G)?$"
        },
        "maintenanceWindowDow": {
          "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
          "type": "string",
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ]
        },
        "maintenanceWindowTime": {
          "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
          "type": "string",
          "maxLength": 8
        },
        "plan": {
          "description": "Subscription plan.",
          "type": "string",
          "maxLength": 128
        },
        "powered": {
          "description": "Determines the power state of the service. When `true` (default), the service is running.\nWhen `false`, the service is powered off.\nFor more information please see [Aiven documentation](https://aiven.io/docs/platform/concepts/service-power-cycle).\nNote that:\n- When set to `false` the annotation `controllers.aiven.io/instance-is-running` is also set to `false`.\n- Services cannot be created in a powered off state. The value is ignored during creation.\n- It is highly recommended to not run dependent resources when the service is powered off.\n  Creating a new resource or updating an existing resource that depends on a powered off service will result in an error.\n  Existing resources will need to be manually recreated after the service is powered on.\n- Existing secrets will not be updated or removed when the service is powered off.\n- For Kafka services with backups: Topic configuration, schemas and connectors are all backed up, but not the data in topics. All topic data is lost on power off.\n- For Kafka services without backups: Topic configurations including all topic data is lost on power off.",
          "type": "boolean",
          "default": true
        },
        "project": {
          "description": "Identifies the project this resource belongs to",
          "type": "string",
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "projectVPCRef": {
          "description": "ProjectVPCRef reference to ProjectVPC resource to use its ID as ProjectVPCID automatically",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "namespace": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "projectVpcId": {
          "description": "Identifier of the VPC the service should be in, if any.",
          "type": "string",
          "maxLength": 36
        },
        "serviceIntegrations": {
          "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
          "type": "array",
          "maxItems": 1,
          "items": {
            "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
            "type": "object",
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "properties": {
              "integrationType": {
                "type": "string",
                "enum": [
                  "read_replica"
                ]
              },
              "sourceServiceName": {
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "tags": {
          "description": "Tags are key-value pairs that allow you to categorize services.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "technicalEmails": {
          "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "object",
            "required": [
              "email"
            ],
            "properties": {
              "email": {
                "description": "Email address.",
                "type": "string",
                "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
              }
            },
            "additionalProperties": false
          }
        },
        "terminationProtection": {
          "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.",
          "type": "boolean"
        },
        "userConfig": {
          "description": "Cassandra specific user configuration options",
          "type": "object",
          "properties": {
            "additional_backup_regions": {
              "description": "Additional Cloud Regions for Backup Replication",
              "type": "array",
              "maxItems": 1,
              "items": {
                "type": "string"
              }
            },
            "alerting_enabled": {
              "description": "DEPRECATED: setting has no effect with Grafana 11 and onward. Enable or disable Grafana legacy alerting functionality. This should not be enabled with unified_alerting_enabled.",
              "type": "boolean"
            },
            "alerting_error_or_timeout": {
              "description": "Default error or timeout setting for new alerting rules",
              "type": "string",
              "enum": [
                "alerting",
                "keep_state"
              ]
            },
            "alerting_max_annotations_to_keep": {
              "description": "Max number of alert annotations that Grafana stores. 0 (default) keeps all alert annotations.",
              "type": "integer",
              "maximum": 1000000,
              "minimum": 0
            },
            "alerting_nodata_or_nullvalues": {
              "description": "Default value for 'no data or null values' for new alerting rules",
              "type": "string",
              "enum": [
                "alerting",
                "keep_state",
                "no_data",
                "ok"
              ]
            },
            "allow_embedding": {
              "description": "Allow embedding Grafana dashboards with iframe/frame/object/embed tags. Disabled by default to limit impact of clickjacking",
              "type": "boolean"
            },
            "auth_azuread": {
              "description": "Azure AD OAuth integration",
              "type": "object",
              "required": [
                "auth_url",
                "client_id",
                "client_secret",
                "token_url"
              ],
              "properties": {
                "allow_sign_up": {
                  "description": "Automatically sign-up users on successful sign-in",
                  "type": "boolean"
                },
                "allowed_domains": {
                  "description": "Allowed domains",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "allowed_groups": {
                  "description": "Require users to belong to one of given groups",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "auth_url": {
                  "description": "Authorization URL",
                  "type": "string",
                  "maxLength": 2048
                },
                "client_id": {
                  "description": "Client ID from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "description": "Client secret from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "token_url": {
                  "description": "Token URL",
                  "type": "string",
                  "maxLength": 2048
                }
              },
              "additionalProperties": false
            },
            "auth_basic_enabled": {
              "description": "Enable or disable basic authentication form, used by Grafana built-in login",
              "type": "boolean"
            },
            "auth_generic_oauth": {
              "description": "Generic OAuth integration",
              "type": "object",
              "required": [
                "api_url",
                "auth_url",
                "client_id",
                "client_secret",
                "token_url"
              ],
              "properties": {
                "allow_sign_up": {
                  "description": "Automatically sign-up users on successful sign-in",
                  "type": "boolean"
                },
                "allowed_domains": {
                  "description": "Allowed domains",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "allowed_organizations": {
                  "description": "Require user to be member of one of the listed organizations",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "api_url": {
                  "description": "API URL",
                  "type": "string",
                  "maxLength": 2048
                },
                "auth_url": {
                  "description": "Authorization URL",
                  "type": "string",
                  "maxLength": 2048
                },
                "auto_login": {
                  "description": "Allow users to bypass the login screen and automatically log in",
                  "type": "boolean"
                },
                "client_id": {
                  "description": "Client ID from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "description": "Client secret from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "name": {
                  "description": "Name of the OAuth integration",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^[a-zA-Z0-9_\\- ]+$"
                },
                "scopes": {
                  "description": "OAuth scopes",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "token_url": {
                  "description": "Token URL",
                  "type": "string",
                  "maxLength": 2048
                },
                "use_refresh_token": {
                  "description": "Set to true to use refresh token and check access token expiration.",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "auth_github": {
              "description": "Github Auth integration",
              "type": "object",
              "required": [
                "client_id",
                "client_secret"
              ],
              "properties": {
                "allow_sign_up": {
                  "description": "Automatically sign-up users on successful sign-in",
                  "type": "boolean"
                },
                "allowed_organizations": {
                  "description": "Require users to belong to one of given organizations",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "auto_login": {
                  "description": "Allow users to bypass the login screen and automatically log in",
                  "type": "boolean"
                },
                "client_id": {
                  "description": "Client ID from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "description": "Client secret from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "skip_org_role_sync": {
                  "description": "Stop automatically syncing user roles",
                  "type": "boolean"
                },
                "team_ids": {
                  "description": "Require users to belong to one of given team IDs",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "additionalProperties": false
            },
            "auth_gitlab": {
              "description": "GitLab Auth integration",
              "type": "object",
              "required": [
                "allowed_groups",
                "client_id",
                "client_secret"
              ],
              "properties": {
                "allow_sign_up": {
                  "description": "Automatically sign-up users on successful sign-in",
                  "type": "boolean"
                },
                "allowed_groups": {
                  "description": "Require users to belong to one of given groups",
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "api_url": {
                  "description": "This only needs to be set when using self hosted GitLab",
                  "type": "string",
                  "maxLength": 2048
                },
                "auth_url": {
                  "description": "This only needs to be set when using self hosted GitLab",
                  "type": "string",
                  "maxLength": 2048
                },
                "client_id": {
                  "description": "Client ID from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "description": "Client secret from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "token_url": {
                  "description": "This only needs to be set when using self hosted GitLab",
                  "type": "string",
                  "maxLength": 2048
                }
              },
              "additionalProperties": false
            },
            "auth_google": {
              "description": "Google Auth integration",
              "type": "object",
              "required": [
                "allowed_domains",
                "client_id",
                "client_secret"
              ],
              "properties": {
                "allow_sign_up": {
                  "description": "Automatically sign-up users on successful sign-in",
                  "type": "boolean"
                },
                "allowed_domains": {
                  "description": "Domains allowed to sign-in to this Grafana",
                  "type": "array",
                  "maxItems": 64,
                  "items": {
                    "type": "string"
                  }
                },
                "client_id": {
                  "description": "Client ID from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "description": "Client secret from provider",
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                }
              },
              "additionalProperties": false
            },
            "cookie_samesite": {
              "description": "Cookie SameSite attribute: 'strict' prevents sending cookie for cross-site requests, effectively disabling direct linking from other sites to Grafana. 'lax' is the default value.",
              "type": "string",
              "enum": [
                "lax",
                "none",
                "strict"
              ]
            },
            "custom_domain": {
              "description": "Serve the web frontend using a custom CNAME pointing to the Aiven DNS name",
              "type": "string",
              "maxLength": 255
            },
            "dashboard_previews_enabled": {
              "description": "Enable browsing of dashboards in grid (pictures) mode. This feature is new in Grafana 9 and is quite resource intensive. It may cause low-end plans to work more slowly while the dashboard previews are rendering.",
              "type": "boolean"
            },
            "dashboard_scenes_enabled": {
              "description": "Enable use of the Grafana Scenes Library as the dashboard engine. i.e. the `dashboardScene` feature flag. Upstream blog post at https://grafana.com/blog/2024/10/31/grafana-dashboards-are-now-powered-by-scenes-big-changes-same-ui/",
              "type": "boolean"
            },
            "dashboards_min_refresh_interval": {
              "description": "Signed sequence of decimal numbers, followed by a unit suffix (ms, s, m, h, d), e.g. 30s, 1h",
              "type": "string",
              "maxLength": 16,
              "pattern": "^[0-9]+(ms|s|m|h|d)$"
            },
            "dashboards_versions_to_keep": {
              "description": "Dashboard versions to keep per dashboard",
              "type": "integer",
              "maximum": 100,
              "minimum": 1
            },
            "dataproxy_send_user_header": {
              "description": "Send 'X-Grafana-User' header to data source",
              "type": "boolean"
            },
            "dataproxy_timeout": {
              "description": "Timeout for data proxy requests in seconds",
              "type": "integer",
              "maximum": 90,
              "minimum": 15
            },
            "date_formats": {
              "description": "Grafana date format specifications",
              "type": "object",
              "properties": {
                "default_timezone": {
                  "description": "Default time zone for user preferences. Value 'browser' uses browser local time zone.",
                  "type": "string",
                  "maxLength": 64,
                  "pattern": "(?i)^([a-zA-Z_]+/){1,2}[a-zA-Z_-]+$|^(Etc/)?(UTC|GMT)([+-](\\d){1,2})?$|^(Factory)$|^(browser)$"
                },
                "full_date": {
                  "description": "Moment.js style format string for cases where full date is shown",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_day": {
                  "description": "Moment.js style format string used when a time requiring day accuracy is shown",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_hour": {
                  "description": "Moment.js style format string used when a time requiring hour accuracy is shown",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_minute": {
                  "description": "Moment.js style format string used when a time requiring minute accuracy is shown",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_month": {
                  "description": "Moment.js style format string used when a time requiring month accuracy is shown",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_second": {
                  "description": "Moment.js style format string used when a time requiring second accuracy is shown",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_year": {
                  "description": "Moment.js style format string used when a time requiring year accuracy is shown",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                }
              },
              "additionalProperties": false
            },
            "disable_gravatar": {
              "description": "Set to true to disable gravatar. Defaults to false (gravatar is enabled)",
              "type": "boolean"
            },
            "editors_can_admin": {
              "description": "Editors can manage folders, teams and dashboards created by them",
              "type": "boolean"
            },
            "external_image_storage": {
              "description": "External image store settings",
              "type": "object",
              "required": [
                "access_key",
                "bucket_url",
                "provider",
                "secret_key"
              ],
              "properties": {
                "access_key": {
                  "description": "S3 access key. Requires permissions to the S3 bucket for the s3:PutObject and s3:PutObjectAcl actions",
                  "type": "string",
                  "maxLength": 4096,
                  "pattern": "^[A-Z0-9]+$"
                },
                "bucket_url": {
                  "description": "Bucket URL for S3",
                  "type": "string",
                  "maxLength": 2048
                },
                "provider": {
                  "description": "External image store provider",
                  "type": "string",
                  "enum": [
                    "s3"
                  ]
                },
                "secret_key": {
                  "description": "S3 secret key",
                  "type": "string",
                  "maxLength": 4096,
                  "pattern": "^[A-Za-z0-9/+=]+$"
                }
              },
              "additionalProperties": false
            },
            "google_analytics_ua_id": {
              "description": "Google Analytics ID",
              "type": "string",
              "maxLength": 64,
              "pattern": "^(G|UA|YT|MO)-[a-zA-Z0-9-]+$"
            },
            "ip_filter": {
              "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
              "type": "array",
              "maxItems": 8000,
              "items": {
                "description": "CIDR address block, either as a string, or in a dict with an optional description field",
                "type": "object",
                "required": [
                  "network"
                ],
                "properties": {
                  "description": {
                    "description": "Description for IP filter list entry",
                    "type": "string",
                    "maxLength": 1024
                  },
                  "network": {
                    "description": "CIDR address block",
                    "type": "string",
                    "maxLength": 43
                  }
                },
                "additionalProperties": false
              }
            },
            "metrics_enabled": {
              "description": "Enable Grafana's /metrics endpoint",
              "type": "boolean"
            },
            "oauth_allow_insecure_email_lookup": {
              "description": "Enforce user lookup based on email instead of the unique ID provided by the IdP. This setup introduces significant security risks, such as potential phishing, spoofing, and other data breaches.",
              "type": "boolean"
            },
            "private_access": {
              "description": "Allow access to selected service ports from private networks",
              "type": "object",
              "properties": {
                "grafana": {
                  "description": "Allow clients to connect to grafana with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "privatelink_access": {
              "description": "Allow access to selected service components through Privatelink",
              "type": "object",
              "properties": {
                "grafana": {
                  "description": "Enable grafana",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "project_to_fork_from": {
              "description": "Name of another project to fork a service from. This has effect only when a new service is being created.",
              "type": "string",
              "maxLength": 63,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Value is immutable"
                }
              ]
            },
            "public_access": {
              "description": "Allow access to selected service ports from the public Internet",
              "type": "object",
              "properties": {
                "grafana": {
                  "description": "Allow clients to connect to grafana from the public internet for service nodes that are in a project VPC or another type of private network",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "recovery_basebackup_name": {
              "description": "Name of the basebackup to restore in forked service",
              "type": "string",
              "maxLength": 128,
              "pattern": "^[a-zA-Z0-9-_:.]+$"
            },
            "service_log": {
              "description": "Store logs for the service so that they are available in the HTTP API and console.",
              "type": "boolean"
            },
            "service_to_fork_from": {
              "description": "Name of another service to fork from. This has effect only when a new service is being created.",
              "type": "string",
              "maxLength": 64,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Value is immutable"
                }
              ]
            },
            "smtp_server": {
              "description": "SMTP server settings",
              "type": "object",
              "required": [
                "from_address",
                "host",
                "port"
              ],
              "properties": {
                "from_address": {
                  "description": "Address used for sending emails",
                  "type": "string",
                  "maxLength": 319,
                  "pattern": "^[A-Za-z0-9_\\-\\.+\\'\u0026]+@(([\\da-zA-Z])([_\\w-]{,62})\\.){,127}(([\\da-zA-Z])[_\\w-]{,61})?([\\da-zA-Z]\\.((xn\\-\\-[a-zA-Z\\d]+)|([a-zA-Z\\d]{2,})))$"
                },
                "from_name": {
                  "description": "Name used in outgoing emails, defaults to Grafana",
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^[^\\x00-\\x1F]+$"
                },
                "host": {
                  "description": "Server hostname or IP",
                  "type": "string",
                  "maxLength": 255
                },
                "password": {
                  "description": "Password for SMTP authentication",
                  "type": "string",
                  "maxLength": 255,
                  "pattern": "^[^\\x00-\\x1F]+$"
                },
                "port": {
                  "description": "SMTP server port",
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "skip_verify": {
                  "description": "Skip verifying server certificate. Defaults to false",
                  "type": "boolean"
                },
                "starttls_policy": {
                  "description": "Either OpportunisticStartTLS, MandatoryStartTLS or NoStartTLS. Default is OpportunisticStartTLS.",
                  "type": "string",
                  "enum": [
                    "MandatoryStartTLS",
                    "NoStartTLS",
                    "OpportunisticStartTLS"
                  ]
                },
                "username": {
                  "description": "Username for SMTP authentication",
                  "type": "string",
                  "maxLength": 255,
                  "pattern": "^[^\\x00-\\x1F]+$"
                }
              },
              "additionalProperties": false
            },
            "static_ips": {
              "description": "Use static public IP addresses",
              "type": "boolean"
            },
            "unified_alerting_enabled": {
              "description": "Enable or disable Grafana unified alerting functionality. By default this is enabled and any legacy alerts will be migrated on upgrade to Grafana 9+. To stay on legacy alerting, set unified_alerting_enabled to false and alerting_enabled to true. See https://grafana.com/docs/grafana/latest/alerting/ for more details.",
              "type": "boolean"
            },
            "user_auto_assign_org": {
              "description": "Auto-assign new users on signup to main organization. Defaults to false",
              "type": "boolean"
            },
            "user_auto_assign_org_role": {
              "description": "Set role for new signups. Defaults to Viewer",
              "type": "string",
              "enum": [
                "Admin",
                "Editor",
                "Viewer"
              ]
            },
            "viewers_can_edit": {
              "description": "Users with view-only permission can edit but not save dashboards",
              "type": "boolean"
            },
            "wal": {
              "description": "Setting to enable/disable Write-Ahead Logging. The default value is false (disabled).",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "has(oldSelf.connInfoSecretTargetDisabled) == has(self.connInfoSecretTargetDisabled)",
          "message": "connInfoSecretTargetDisabled can only be set during resource creation."
        }
      ]
    },
    "status": {
      "description": "ServiceStatus defines the observed state of service",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of a service state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "state": {
          "description": "Service state",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
