{
  "type": "object",
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "type": "object",
      "required": [
        "plan",
        "project"
      ],
      "properties": {
        "authSecretRef": {
          "type": "object",
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "cloudName": {
          "type": "string",
          "maxLength": 256
        },
        "connInfoSecretTarget": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "annotations": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-preserve-unknown-fields": true
            },
            "labels": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-preserve-unknown-fields": true
            },
            "name": {
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Value is immutable"
                }
              ]
            },
            "prefix": {
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "connInfoSecretTargetDisabled": {
          "type": "boolean",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "connInfoSecretTargetDisabled is immutable."
            }
          ]
        },
        "disk_space": {
          "type": "string",
          "pattern": "(?i)^[1-9][0-9]*(GiB|G)?$"
        },
        "maintenanceWindowDow": {
          "type": "string",
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ]
        },
        "maintenanceWindowTime": {
          "type": "string",
          "maxLength": 8
        },
        "plan": {
          "type": "string",
          "maxLength": 128
        },
        "project": {
          "type": "string",
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "projectVPCRef": {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "namespace": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "projectVpcId": {
          "type": "string",
          "maxLength": 36
        },
        "serviceIntegrations": {
          "type": "array",
          "maxItems": 1,
          "items": {
            "type": "object",
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "properties": {
              "integrationType": {
                "type": "string",
                "enum": [
                  "read_replica"
                ]
              },
              "sourceServiceName": {
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "technicalEmails": {
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "object",
            "required": [
              "email"
            ],
            "properties": {
              "email": {
                "type": "string",
                "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
              }
            },
            "additionalProperties": false
          }
        },
        "terminationProtection": {
          "type": "boolean"
        },
        "userConfig": {
          "type": "object",
          "properties": {
            "additional_backup_regions": {
              "type": "array",
              "maxItems": 1,
              "items": {
                "type": "string"
              }
            },
            "alerting_enabled": {
              "type": "boolean"
            },
            "alerting_error_or_timeout": {
              "type": "string",
              "enum": [
                "alerting",
                "keep_state"
              ]
            },
            "alerting_max_annotations_to_keep": {
              "type": "integer",
              "maximum": 1000000,
              "minimum": 0
            },
            "alerting_nodata_or_nullvalues": {
              "type": "string",
              "enum": [
                "alerting",
                "keep_state",
                "no_data",
                "ok"
              ]
            },
            "allow_embedding": {
              "type": "boolean"
            },
            "auth_azuread": {
              "type": "object",
              "required": [
                "auth_url",
                "client_id",
                "client_secret",
                "token_url"
              ],
              "properties": {
                "allow_sign_up": {
                  "type": "boolean"
                },
                "allowed_domains": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "allowed_groups": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "auth_url": {
                  "type": "string",
                  "maxLength": 2048
                },
                "client_id": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "token_url": {
                  "type": "string",
                  "maxLength": 2048
                }
              },
              "additionalProperties": false
            },
            "auth_basic_enabled": {
              "type": "boolean"
            },
            "auth_generic_oauth": {
              "type": "object",
              "required": [
                "api_url",
                "auth_url",
                "client_id",
                "client_secret",
                "token_url"
              ],
              "properties": {
                "allow_sign_up": {
                  "type": "boolean"
                },
                "allowed_domains": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "allowed_organizations": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "api_url": {
                  "type": "string",
                  "maxLength": 2048
                },
                "auth_url": {
                  "type": "string",
                  "maxLength": 2048
                },
                "auto_login": {
                  "type": "boolean"
                },
                "client_id": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "name": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^[a-zA-Z0-9_\\- ]+$"
                },
                "scopes": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "token_url": {
                  "type": "string",
                  "maxLength": 2048
                },
                "use_refresh_token": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "auth_github": {
              "type": "object",
              "required": [
                "client_id",
                "client_secret"
              ],
              "properties": {
                "allow_sign_up": {
                  "type": "boolean"
                },
                "allowed_organizations": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "auto_login": {
                  "type": "boolean"
                },
                "client_id": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "skip_org_role_sync": {
                  "type": "boolean"
                },
                "team_ids": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "integer"
                  }
                }
              },
              "additionalProperties": false
            },
            "auth_gitlab": {
              "type": "object",
              "required": [
                "allowed_groups",
                "client_id",
                "client_secret"
              ],
              "properties": {
                "allow_sign_up": {
                  "type": "boolean"
                },
                "allowed_groups": {
                  "type": "array",
                  "maxItems": 50,
                  "items": {
                    "type": "string"
                  }
                },
                "api_url": {
                  "type": "string",
                  "maxLength": 2048
                },
                "auth_url": {
                  "type": "string",
                  "maxLength": 2048
                },
                "client_id": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "token_url": {
                  "type": "string",
                  "maxLength": 2048
                }
              },
              "additionalProperties": false
            },
            "auth_google": {
              "type": "object",
              "required": [
                "allowed_domains",
                "client_id",
                "client_secret"
              ],
              "properties": {
                "allow_sign_up": {
                  "type": "boolean"
                },
                "allowed_domains": {
                  "type": "array",
                  "maxItems": 64,
                  "items": {
                    "type": "string"
                  }
                },
                "client_id": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                },
                "client_secret": {
                  "type": "string",
                  "maxLength": 1024,
                  "pattern": "^[\\040-\\176]+$"
                }
              },
              "additionalProperties": false
            },
            "cookie_samesite": {
              "type": "string",
              "enum": [
                "lax",
                "none",
                "strict"
              ]
            },
            "custom_domain": {
              "type": "string",
              "maxLength": 255
            },
            "dashboard_previews_enabled": {
              "type": "boolean"
            },
            "dashboard_scenes_enabled": {
              "type": "boolean"
            },
            "dashboards_min_refresh_interval": {
              "type": "string",
              "maxLength": 16,
              "pattern": "^[0-9]+(ms|s|m|h|d)$"
            },
            "dashboards_versions_to_keep": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1
            },
            "dataproxy_send_user_header": {
              "type": "boolean"
            },
            "dataproxy_timeout": {
              "type": "integer",
              "maximum": 90,
              "minimum": 15
            },
            "date_formats": {
              "type": "object",
              "properties": {
                "default_timezone": {
                  "type": "string",
                  "maxLength": 64,
                  "pattern": "(?i)^([a-zA-Z_]+/){1,2}[a-zA-Z_-]+$|^(Etc/)?(UTC|GMT)([+-](\\d){1,2})?$|^(Factory)$|^(browser)$"
                },
                "full_date": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_day": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_hour": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_minute": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_month": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_second": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                },
                "interval_year": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^(([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|LTS|LT|LL?L?L?|l{1,4}|[-+/T,;.: ]?)*)$"
                }
              },
              "additionalProperties": false
            },
            "disable_gravatar": {
              "type": "boolean"
            },
            "editors_can_admin": {
              "type": "boolean"
            },
            "external_image_storage": {
              "type": "object",
              "required": [
                "access_key",
                "bucket_url",
                "provider",
                "secret_key"
              ],
              "properties": {
                "access_key": {
                  "type": "string",
                  "maxLength": 4096,
                  "pattern": "^[A-Z0-9]+$"
                },
                "bucket_url": {
                  "type": "string",
                  "maxLength": 2048
                },
                "provider": {
                  "type": "string",
                  "enum": [
                    "s3"
                  ]
                },
                "secret_key": {
                  "type": "string",
                  "maxLength": 4096,
                  "pattern": "^[A-Za-z0-9/+=]+$"
                }
              },
              "additionalProperties": false
            },
            "google_analytics_ua_id": {
              "type": "string",
              "maxLength": 64,
              "pattern": "^(G|UA|YT|MO)-[a-zA-Z0-9-]+$"
            },
            "ip_filter": {
              "type": "array",
              "maxItems": 2048,
              "items": {
                "type": "object",
                "required": [
                  "network"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "maxLength": 1024
                  },
                  "network": {
                    "type": "string",
                    "maxLength": 43
                  }
                },
                "additionalProperties": false
              }
            },
            "metrics_enabled": {
              "type": "boolean"
            },
            "oauth_allow_insecure_email_lookup": {
              "type": "boolean"
            },
            "private_access": {
              "type": "object",
              "properties": {
                "grafana": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "privatelink_access": {
              "type": "object",
              "properties": {
                "grafana": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "project_to_fork_from": {
              "type": "string",
              "maxLength": 63,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Value is immutable"
                }
              ]
            },
            "public_access": {
              "type": "object",
              "properties": {
                "grafana": {
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "recovery_basebackup_name": {
              "type": "string",
              "maxLength": 128,
              "pattern": "^[a-zA-Z0-9-_:.]+$"
            },
            "service_log": {
              "type": "boolean"
            },
            "service_to_fork_from": {
              "type": "string",
              "maxLength": 64,
              "pattern": "^[a-z][-a-z0-9]{0,63}$|^$",
              "x-kubernetes-validations": [
                {
                  "rule": "self == oldSelf",
                  "message": "Value is immutable"
                }
              ]
            },
            "smtp_server": {
              "type": "object",
              "required": [
                "from_address",
                "host",
                "port"
              ],
              "properties": {
                "from_address": {
                  "type": "string",
                  "maxLength": 319,
                  "pattern": "^[A-Za-z0-9_\\-\\.+\\'\u0026]+@(([\\da-zA-Z])([_\\w-]{,62})\\.){,127}(([\\da-zA-Z])[_\\w-]{,61})?([\\da-zA-Z]\\.((xn\\-\\-[a-zA-Z\\d]+)|([a-zA-Z\\d]{2,})))$"
                },
                "from_name": {
                  "type": "string",
                  "maxLength": 128,
                  "pattern": "^[^\\x00-\\x1F]+$"
                },
                "host": {
                  "type": "string",
                  "maxLength": 255
                },
                "password": {
                  "type": "string",
                  "maxLength": 255,
                  "pattern": "^[^\\x00-\\x1F]+$"
                },
                "port": {
                  "type": "integer",
                  "maximum": 65535,
                  "minimum": 1
                },
                "skip_verify": {
                  "type": "boolean"
                },
                "starttls_policy": {
                  "type": "string",
                  "enum": [
                    "MandatoryStartTLS",
                    "NoStartTLS",
                    "OpportunisticStartTLS"
                  ]
                },
                "username": {
                  "type": "string",
                  "maxLength": 255,
                  "pattern": "^[^\\x00-\\x1F]+$"
                }
              },
              "additionalProperties": false
            },
            "static_ips": {
              "type": "boolean"
            },
            "unified_alerting_enabled": {
              "type": "boolean"
            },
            "user_auto_assign_org": {
              "type": "boolean"
            },
            "user_auto_assign_org_role": {
              "type": "string",
              "enum": [
                "Admin",
                "Editor",
                "Viewer"
              ]
            },
            "viewers_can_edit": {
              "type": "boolean"
            },
            "wal": {
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "has(oldSelf.connInfoSecretTargetDisabled) == has(self.connInfoSecretTargetDisabled)",
          "message": "connInfoSecretTargetDisabled can only be set during resource creation."
        }
      ]
    },
    "status": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "state": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
