{
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "properties": {
        "authSecretRef": {
          "additionalProperties": false,
          "properties": {
            "key": {
              "minLength": 1,
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object"
        },
        "autoscaler": {
          "type": "object"
        },
        "clickhouseKafka": {
          "additionalProperties": false,
          "properties": {
            "tables": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "auto_offset_reset": {
                    "enum": [
                      "beginning",
                      "earliest",
                      "end",
                      "largest",
                      "latest",
                      "smallest"
                    ],
                    "type": "string"
                  },
                  "columns": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "maxLength": 40,
                          "minLength": 1,
                          "type": "string"
                        },
                        "type": {
                          "maxLength": 1000,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type"
                      ],
                      "type": "object"
                    },
                    "maxItems": 100,
                    "type": "array"
                  },
                  "data_format": {
                    "enum": [
                      "Avro",
                      "AvroConfluent",
                      "CSV",
                      "JSONAsString",
                      "JSONCompactEachRow",
                      "JSONCompactStringsEachRow",
                      "JSONEachRow",
                      "JSONStringsEachRow",
                      "MsgPack",
                      "Parquet",
                      "RawBLOB",
                      "TSKV",
                      "TSV",
                      "TabSeparated"
                    ],
                    "type": "string"
                  },
                  "date_time_input_format": {
                    "enum": [
                      "basic",
                      "best_effort",
                      "best_effort_us"
                    ],
                    "type": "string"
                  },
                  "group_name": {
                    "maxLength": 249,
                    "minLength": 1,
                    "type": "string"
                  },
                  "handle_error_mode": {
                    "enum": [
                      "default",
                      "stream"
                    ],
                    "type": "string"
                  },
                  "max_block_size": {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "max_rows_per_message": {
                    "maximum": 1000000000,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "name": {
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                  },
                  "num_consumers": {
                    "maximum": 10,
                    "minimum": 1,
                    "type": "integer"
                  },
                  "poll_max_batch_size": {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "poll_max_timeout_ms": {
                    "maximum": 30000,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "skip_broken_messages": {
                    "maximum": 1000000000,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "thread_per_consumer": {
                    "type": "boolean"
                  },
                  "topics": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "name": {
                          "maxLength": 249,
                          "minLength": 1,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ],
                      "type": "object"
                    },
                    "maxItems": 100,
                    "type": "array"
                  }
                },
                "required": [
                  "columns",
                  "data_format",
                  "group_name",
                  "name",
                  "topics"
                ],
                "type": "object"
              },
              "maxItems": 400,
              "type": "array"
            }
          },
          "type": "object"
        },
        "clickhousePostgresql": {
          "additionalProperties": false,
          "properties": {
            "databases": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "database": {
                    "maxLength": 63,
                    "minLength": 1,
                    "type": "string"
                  },
                  "schema": {
                    "maxLength": 63,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "maxItems": 10,
              "type": "array"
            }
          },
          "type": "object"
        },
        "datadog": {
          "additionalProperties": false,
          "properties": {
            "datadog_dbm_enabled": {
              "type": "boolean"
            },
            "datadog_pgbouncer_enabled": {
              "type": "boolean"
            },
            "datadog_tags": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "comment": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "tag": {
                    "maxLength": 200,
                    "minLength": 1,
                    "type": "string"
                  }
                },
                "required": [
                  "tag"
                ],
                "type": "object"
              },
              "maxItems": 32,
              "type": "array"
            },
            "exclude_consumer_groups": {
              "items": {
                "type": "string"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "exclude_topics": {
              "items": {
                "type": "string"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "include_consumer_groups": {
              "items": {
                "type": "string"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "include_topics": {
              "items": {
                "type": "string"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "kafka_custom_metrics": {
              "items": {
                "type": "string"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "max_jmx_metrics": {
              "maximum": 100000,
              "minimum": 10,
              "type": "integer"
            },
            "mirrormaker_custom_metrics": {
              "items": {
                "type": "string"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "opensearch": {
              "additionalProperties": false,
              "properties": {
                "cluster_stats_enabled": {
                  "type": "boolean"
                },
                "index_stats_enabled": {
                  "type": "boolean"
                },
                "pending_task_stats_enabled": {
                  "type": "boolean"
                },
                "pshard_stats_enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "redis": {
              "additionalProperties": false,
              "properties": {
                "command_stats_enabled": {
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "destinationEndpointId": {
          "maxLength": 36,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "destinationProjectName": {
          "maxLength": 63,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "destinationServiceName": {
          "maxLength": 64,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "externalAWSCloudwatchMetrics": {
          "additionalProperties": false,
          "properties": {
            "dropped_metrics": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "field": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "metric": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                },
                "required": [
                  "field",
                  "metric"
                ],
                "type": "object"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "extra_metrics": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "field": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "metric": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                },
                "required": [
                  "field",
                  "metric"
                ],
                "type": "object"
              },
              "maxItems": 1024,
              "type": "array"
            }
          },
          "type": "object"
        },
        "integrationType": {
          "enum": [
            "alertmanager",
            "autoscaler",
            "caching",
            "cassandra_cross_service_cluster",
            "clickhouse_kafka",
            "clickhouse_postgresql",
            "dashboard",
            "datadog",
            "datasource",
            "external_aws_cloudwatch_logs",
            "external_aws_cloudwatch_metrics",
            "external_elasticsearch_logs",
            "external_google_cloud_logging",
            "external_opensearch_logs",
            "flink",
            "flink_external_kafka",
            "flink_external_postgresql",
            "internal_connectivity",
            "jolokia",
            "kafka_connect",
            "kafka_logs",
            "kafka_mirrormaker",
            "logs",
            "m3aggregator",
            "m3coordinator",
            "metrics",
            "opensearch_cross_cluster_replication",
            "opensearch_cross_cluster_search",
            "prometheus",
            "read_replica",
            "rsyslog",
            "schema_registry_proxy",
            "stresstester",
            "thanosquery",
            "thanosstore",
            "vmalert"
          ],
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "kafkaConnect": {
          "additionalProperties": false,
          "properties": {
            "kafka_connect": {
              "additionalProperties": false,
              "properties": {
                "config_storage_topic": {
                  "maxLength": 249,
                  "type": "string"
                },
                "group_id": {
                  "maxLength": 249,
                  "type": "string"
                },
                "offset_storage_topic": {
                  "maxLength": 249,
                  "type": "string"
                },
                "status_storage_topic": {
                  "maxLength": 249,
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "kafkaLogs": {
          "additionalProperties": false,
          "properties": {
            "kafka_topic": {
              "maxLength": 249,
              "minLength": 1,
              "type": "string"
            },
            "selected_log_fields": {
              "items": {
                "type": "string"
              },
              "maxItems": 5,
              "type": "array"
            }
          },
          "required": [
            "kafka_topic"
          ],
          "type": "object"
        },
        "kafkaMirrormaker": {
          "additionalProperties": false,
          "properties": {
            "cluster_alias": {
              "maxLength": 128,
              "pattern": "^[a-zA-Z0-9_.-]+$",
              "type": "string"
            },
            "kafka_mirrormaker": {
              "additionalProperties": false,
              "properties": {
                "consumer_auto_offset_reset": {
                  "enum": [
                    "earliest",
                    "latest"
                  ],
                  "type": "string"
                },
                "consumer_fetch_min_bytes": {
                  "maximum": 5242880,
                  "minimum": 1,
                  "type": "integer"
                },
                "consumer_max_poll_records": {
                  "maximum": 20000,
                  "minimum": 100,
                  "type": "integer"
                },
                "producer_batch_size": {
                  "maximum": 5242880,
                  "minimum": 0,
                  "type": "integer"
                },
                "producer_buffer_memory": {
                  "maximum": 134217728,
                  "minimum": 5242880,
                  "type": "integer"
                },
                "producer_compression_type": {
                  "enum": [
                    "gzip",
                    "lz4",
                    "none",
                    "snappy",
                    "zstd"
                  ],
                  "type": "string"
                },
                "producer_linger_ms": {
                  "maximum": 5000,
                  "minimum": 0,
                  "type": "integer"
                },
                "producer_max_request_size": {
                  "maximum": 268435456,
                  "minimum": 0,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "logs": {
          "additionalProperties": false,
          "properties": {
            "elasticsearch_index_days_max": {
              "maximum": 10000,
              "minimum": 1,
              "type": "integer"
            },
            "elasticsearch_index_prefix": {
              "maxLength": 1024,
              "minLength": 1,
              "pattern": "^[a-z0-9][a-z0-9-_.]+$",
              "type": "string"
            },
            "selected_log_fields": {
              "items": {
                "type": "string"
              },
              "maxItems": 5,
              "type": "array"
            }
          },
          "type": "object"
        },
        "metrics": {
          "additionalProperties": false,
          "properties": {
            "database": {
              "maxLength": 40,
              "pattern": "^[_A-Za-z0-9][-_A-Za-z0-9]{0,39}$",
              "type": "string"
            },
            "retention_days": {
              "maximum": 10000,
              "minimum": 0,
              "type": "integer"
            },
            "ro_username": {
              "maxLength": 40,
              "pattern": "^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$",
              "type": "string"
            },
            "source_mysql": {
              "additionalProperties": false,
              "properties": {
                "telegraf": {
                  "additionalProperties": false,
                  "properties": {
                    "gather_event_waits": {
                      "type": "boolean"
                    },
                    "gather_file_events_stats": {
                      "type": "boolean"
                    },
                    "gather_index_io_waits": {
                      "type": "boolean"
                    },
                    "gather_info_schema_auto_inc": {
                      "type": "boolean"
                    },
                    "gather_innodb_metrics": {
                      "type": "boolean"
                    },
                    "gather_perf_events_statements": {
                      "type": "boolean"
                    },
                    "gather_process_list": {
                      "type": "boolean"
                    },
                    "gather_slave_status": {
                      "type": "boolean"
                    },
                    "gather_table_io_waits": {
                      "type": "boolean"
                    },
                    "gather_table_lock_waits": {
                      "type": "boolean"
                    },
                    "gather_table_schema": {
                      "type": "boolean"
                    },
                    "perf_events_statements_digest_text_limit": {
                      "maximum": 2048,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "perf_events_statements_limit": {
                      "maximum": 4000,
                      "minimum": 1,
                      "type": "integer"
                    },
                    "perf_events_statements_time_limit": {
                      "maximum": 2592000,
                      "minimum": 1,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "username": {
              "maxLength": 40,
              "pattern": "^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$",
              "type": "string"
            }
          },
          "type": "object"
        },
        "project": {
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "sourceEndpointID": {
          "maxLength": 36,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "sourceProjectName": {
          "maxLength": 63,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "sourceServiceName": {
          "maxLength": 64,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        }
      },
      "required": [
        "integrationType",
        "project"
      ],
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "id": {
          "type": "string"
        }
      },
      "required": [
        "conditions",
        "id"
      ],
      "type": "object"
    }
  },
  "type": "object"
}
