{
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "properties": {
        "authSecretRef": {
          "additionalProperties": false,
          "properties": {
            "key": {
              "minLength": 1,
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object"
        },
        "cloudName": {
          "maxLength": 256,
          "type": "string"
        },
        "connInfoSecretTarget": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "disk_space": {
          "format": "^[1-9][0-9]*(GiB|G)*",
          "type": "string"
        },
        "maintenanceWindowDow": {
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "type": "string"
        },
        "maintenanceWindowTime": {
          "maxLength": 8,
          "type": "string"
        },
        "plan": {
          "maxLength": 128,
          "type": "string"
        },
        "project": {
          "format": "^[a-zA-Z0-9_-]*$",
          "maxLength": 63,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVPCRef": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "namespace": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVpcId": {
          "maxLength": 36,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "serviceIntegrations": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "integrationType": {
                "enum": [
                  "read_replica"
                ],
                "type": "string"
              },
              "sourceServiceName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "type": "object"
          },
          "maxItems": 1,
          "type": "array",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "terminationProtection": {
          "type": "boolean"
        },
        "userConfig": {
          "additionalProperties": false,
          "properties": {
            "additional_backup_regions": {
              "items": {
                "type": "string"
              },
              "maxItems": 1,
              "type": "array"
            },
            "custom_domain": {
              "maxLength": 255,
              "type": "string"
            },
            "disable_replication_factor_adjustment": {
              "type": "boolean"
            },
            "index_patterns": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "max_index_count": {
                    "minimum": 0,
                    "type": "integer"
                  },
                  "pattern": {
                    "maxLength": 1024,
                    "pattern": "^[A-Za-z0-9-_.*?]+$",
                    "type": "string"
                  },
                  "sorting_algorithm": {
                    "enum": [
                      "alphabetical",
                      "creation_date"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "max_index_count",
                  "pattern"
                ],
                "type": "object"
              },
              "maxItems": 512,
              "type": "array"
            },
            "index_template": {
              "additionalProperties": false,
              "properties": {
                "mapping_nested_objects_limit": {
                  "maximum": 100000,
                  "minimum": 0,
                  "type": "integer"
                },
                "number_of_replicas": {
                  "maximum": 29,
                  "minimum": 0,
                  "type": "integer"
                },
                "number_of_shards": {
                  "maximum": 1024,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "ip_filter": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "network": {
                    "maxLength": 43,
                    "type": "string"
                  }
                },
                "required": [
                  "network"
                ],
                "type": "object"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "keep_index_refresh_interval": {
              "type": "boolean"
            },
            "max_index_count": {
              "minimum": 0,
              "type": "integer"
            },
            "opensearch": {
              "additionalProperties": false,
              "properties": {
                "action_auto_create_index_enabled": {
                  "type": "boolean"
                },
                "action_destructive_requires_name": {
                  "type": "boolean"
                },
                "cluster_max_shards_per_node": {
                  "maximum": 10000,
                  "minimum": 100,
                  "type": "integer"
                },
                "cluster_routing_allocation_node_concurrent_recoveries": {
                  "maximum": 16,
                  "minimum": 2,
                  "type": "integer"
                },
                "email_sender_name": {
                  "maxLength": 40,
                  "pattern": "^[a-zA-Z0-9-_]+$",
                  "type": "string"
                },
                "email_sender_password": {
                  "maxLength": 1024,
                  "pattern": "^[^\\x00-\\x1F]+$",
                  "type": "string"
                },
                "email_sender_username": {
                  "maxLength": 320,
                  "pattern": "^[A-Za-z0-9_\\-\\.+\\'&]+@(([\\da-zA-Z])([_\\w-]{,62})\\.){,127}(([\\da-zA-Z])[_\\w-]{,61})?([\\da-zA-Z]\\.((xn\\-\\-[a-zA-Z\\d]+)|([a-zA-Z\\d]{2,})))$",
                  "type": "string"
                },
                "http_max_content_length": {
                  "maximum": 2147483647,
                  "minimum": 1,
                  "type": "integer"
                },
                "http_max_header_size": {
                  "maximum": 262144,
                  "minimum": 1024,
                  "type": "integer"
                },
                "http_max_initial_line_length": {
                  "maximum": 65536,
                  "minimum": 1024,
                  "type": "integer"
                },
                "indices_fielddata_cache_size": {
                  "maximum": 100,
                  "minimum": 3,
                  "type": "integer"
                },
                "indices_memory_index_buffer_size": {
                  "maximum": 40,
                  "minimum": 3,
                  "type": "integer"
                },
                "indices_queries_cache_size": {
                  "maximum": 40,
                  "minimum": 3,
                  "type": "integer"
                },
                "indices_query_bool_max_clause_count": {
                  "maximum": 4096,
                  "minimum": 64,
                  "type": "integer"
                },
                "indices_recovery_max_bytes_per_sec": {
                  "maximum": 400,
                  "minimum": 40,
                  "type": "integer"
                },
                "indices_recovery_max_concurrent_file_chunks": {
                  "maximum": 5,
                  "minimum": 2,
                  "type": "integer"
                },
                "override_main_response_version": {
                  "type": "boolean"
                },
                "reindex_remote_whitelist": {
                  "items": {
                    "type": "string"
                  },
                  "maxItems": 32,
                  "type": "array"
                },
                "script_max_compilations_rate": {
                  "maxLength": 1024,
                  "type": "string"
                },
                "search_max_buckets": {
                  "maximum": 20000,
                  "minimum": 1,
                  "type": "integer"
                },
                "thread_pool_analyze_queue_size": {
                  "maximum": 2000,
                  "minimum": 10,
                  "type": "integer"
                },
                "thread_pool_analyze_size": {
                  "maximum": 128,
                  "minimum": 1,
                  "type": "integer"
                },
                "thread_pool_force_merge_size": {
                  "maximum": 128,
                  "minimum": 1,
                  "type": "integer"
                },
                "thread_pool_get_queue_size": {
                  "maximum": 2000,
                  "minimum": 10,
                  "type": "integer"
                },
                "thread_pool_get_size": {
                  "maximum": 128,
                  "minimum": 1,
                  "type": "integer"
                },
                "thread_pool_search_queue_size": {
                  "maximum": 2000,
                  "minimum": 10,
                  "type": "integer"
                },
                "thread_pool_search_size": {
                  "maximum": 128,
                  "minimum": 1,
                  "type": "integer"
                },
                "thread_pool_search_throttled_queue_size": {
                  "maximum": 2000,
                  "minimum": 10,
                  "type": "integer"
                },
                "thread_pool_search_throttled_size": {
                  "maximum": 128,
                  "minimum": 1,
                  "type": "integer"
                },
                "thread_pool_write_queue_size": {
                  "maximum": 2000,
                  "minimum": 10,
                  "type": "integer"
                },
                "thread_pool_write_size": {
                  "maximum": 128,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "opensearch_dashboards": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "max_old_space_size": {
                  "maximum": 2048,
                  "minimum": 64,
                  "type": "integer"
                },
                "opensearch_request_timeout": {
                  "maximum": 120000,
                  "minimum": 5000,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "opensearch_version": {
              "enum": [
                "1",
                "2"
              ],
              "type": "string"
            },
            "private_access": {
              "additionalProperties": false,
              "properties": {
                "opensearch": {
                  "type": "boolean"
                },
                "opensearch_dashboards": {
                  "type": "boolean"
                },
                "prometheus": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "privatelink_access": {
              "additionalProperties": false,
              "properties": {
                "opensearch": {
                  "type": "boolean"
                },
                "opensearch_dashboards": {
                  "type": "boolean"
                },
                "prometheus": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "project_to_fork_from": {
              "maxLength": 63,
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "public_access": {
              "additionalProperties": false,
              "properties": {
                "opensearch": {
                  "type": "boolean"
                },
                "opensearch_dashboards": {
                  "type": "boolean"
                },
                "prometheus": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "recovery_basebackup_name": {
              "maxLength": 128,
              "pattern": "^[a-zA-Z0-9-_:.]+$",
              "type": "string"
            },
            "service_to_fork_from": {
              "maxLength": 64,
              "type": "string",
              "x-kubernetes-validations": [
                {
                  "message": "Value is immutable",
                  "rule": "self == oldSelf"
                }
              ]
            },
            "static_ips": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "project"
      ],
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "conditions",
        "state"
      ],
      "type": "object"
    }
  },
  "type": "object"
}
