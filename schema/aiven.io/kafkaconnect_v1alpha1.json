{
  "properties": {
    "apiVersion": {
      "type": "string"
    },
    "kind": {
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "additionalProperties": false,
      "properties": {
        "authSecretRef": {
          "additionalProperties": false,
          "properties": {
            "key": {
              "minLength": 1,
              "type": "string"
            },
            "name": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object"
        },
        "cloudName": {
          "maxLength": 256,
          "type": "string"
        },
        "maintenanceWindowDow": {
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ],
          "type": "string"
        },
        "maintenanceWindowTime": {
          "maxLength": 8,
          "type": "string"
        },
        "plan": {
          "maxLength": 128,
          "type": "string"
        },
        "project": {
          "format": "^[a-zA-Z0-9_-]*$",
          "maxLength": 63,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVPCRef": {
          "additionalProperties": false,
          "properties": {
            "name": {
              "minLength": 1,
              "type": "string"
            },
            "namespace": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "projectVpcId": {
          "maxLength": 36,
          "type": "string",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "serviceIntegrations": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "integrationType": {
                "enum": [
                  "read_replica"
                ],
                "type": "string"
              },
              "sourceServiceName": {
                "maxLength": 64,
                "minLength": 1,
                "type": "string"
              }
            },
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "type": "object"
          },
          "maxItems": 1,
          "type": "array",
          "x-kubernetes-validations": [
            {
              "message": "Value is immutable",
              "rule": "self == oldSelf"
            }
          ]
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "terminationProtection": {
          "type": "boolean"
        },
        "userConfig": {
          "additionalProperties": false,
          "properties": {
            "additional_backup_regions": {
              "items": {
                "type": "string"
              },
              "maxItems": 1,
              "type": "array"
            },
            "ip_filter": {
              "items": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "maxLength": 1024,
                    "type": "string"
                  },
                  "network": {
                    "maxLength": 43,
                    "type": "string"
                  }
                },
                "required": [
                  "network"
                ],
                "type": "object"
              },
              "maxItems": 1024,
              "type": "array"
            },
            "kafka_connect": {
              "additionalProperties": false,
              "properties": {
                "connector_client_config_override_policy": {
                  "enum": [
                    "None",
                    "All"
                  ],
                  "type": "string"
                },
                "consumer_auto_offset_reset": {
                  "enum": [
                    "earliest",
                    "latest"
                  ],
                  "type": "string"
                },
                "consumer_fetch_max_bytes": {
                  "maximum": 104857600,
                  "minimum": 1048576,
                  "type": "integer"
                },
                "consumer_isolation_level": {
                  "enum": [
                    "read_uncommitted",
                    "read_committed"
                  ],
                  "type": "string"
                },
                "consumer_max_partition_fetch_bytes": {
                  "maximum": 104857600,
                  "minimum": 1048576,
                  "type": "integer"
                },
                "consumer_max_poll_interval_ms": {
                  "maximum": 2147483647,
                  "minimum": 1,
                  "type": "integer"
                },
                "consumer_max_poll_records": {
                  "maximum": 10000,
                  "minimum": 1,
                  "type": "integer"
                },
                "offset_flush_interval_ms": {
                  "maximum": 100000000,
                  "minimum": 1,
                  "type": "integer"
                },
                "offset_flush_timeout_ms": {
                  "maximum": 2147483647,
                  "minimum": 1,
                  "type": "integer"
                },
                "producer_batch_size": {
                  "maximum": 5242880,
                  "minimum": 0,
                  "type": "integer"
                },
                "producer_buffer_memory": {
                  "maximum": 134217728,
                  "minimum": 5242880,
                  "type": "integer"
                },
                "producer_compression_type": {
                  "enum": [
                    "gzip",
                    "snappy",
                    "lz4",
                    "zstd",
                    "none"
                  ],
                  "type": "string"
                },
                "producer_linger_ms": {
                  "maximum": 5000,
                  "minimum": 0,
                  "type": "integer"
                },
                "producer_max_request_size": {
                  "maximum": 67108864,
                  "minimum": 131072,
                  "type": "integer"
                },
                "session_timeout_ms": {
                  "maximum": 2147483647,
                  "minimum": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            },
            "private_access": {
              "additionalProperties": false,
              "properties": {
                "kafka_connect": {
                  "type": "boolean"
                },
                "prometheus": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "privatelink_access": {
              "additionalProperties": false,
              "properties": {
                "jolokia": {
                  "type": "boolean"
                },
                "kafka_connect": {
                  "type": "boolean"
                },
                "prometheus": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "public_access": {
              "additionalProperties": false,
              "properties": {
                "kafka_connect": {
                  "type": "boolean"
                },
                "prometheus": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "static_ips": {
              "type": "boolean"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "project"
      ],
      "type": "object"
    },
    "status": {
      "additionalProperties": false,
      "properties": {
        "conditions": {
          "items": {
            "additionalProperties": false,
            "properties": {
              "lastTransitionTime": {
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "format": "int64",
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "state": {
          "type": "string"
        }
      },
      "required": [
        "conditions",
        "state"
      ],
      "type": "object"
    }
  },
  "type": "object"
}
