{
  "description": "KafkaConnect is the Schema for the kafkaconnects API",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "KafkaConnectSpec defines the desired state of KafkaConnect",
      "type": "object",
      "required": [
        "plan",
        "project"
      ],
      "properties": {
        "authSecretRef": {
          "description": "Authentication reference to Aiven token in a secret",
          "type": "object",
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "cloudName": {
          "description": "Cloud the service runs in.",
          "type": "string",
          "maxLength": 256
        },
        "maintenanceWindowDow": {
          "description": "Day of week when maintenance operations should be performed. One monday, tuesday, wednesday, etc.",
          "type": "string",
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ]
        },
        "maintenanceWindowTime": {
          "description": "Time of day when maintenance operations should be performed. UTC time in HH:mm:ss format.",
          "type": "string",
          "maxLength": 8
        },
        "plan": {
          "description": "Subscription plan.",
          "type": "string",
          "maxLength": 128
        },
        "powered": {
          "description": "Determines the power state of the service. When `true` (default), the service is running.\nWhen `false`, the service is powered off.\nFor more information please see [Aiven documentation](https://aiven.io/docs/platform/concepts/service-power-cycle).\nNote that:\n- When set to `false` the annotation `controllers.aiven.io/instance-is-running` is also set to `false`.\n- Services cannot be created in a powered off state. The value is ignored during creation.\n- It is highly recommended to not run dependent resources when the service is powered off.\n  Creating a new resource or updating an existing resource that depends on a powered off service will result in an error.\n  Existing resources will need to be manually recreated after the service is powered on.\n- Existing secrets will not be updated or removed when the service is powered off.\n- For Kafka services with backups: Topic configuration, schemas and connectors are all backed up, but not the data in topics. All topic data is lost on power off.\n- For Kafka services without backups: Topic configurations including all topic data is lost on power off.",
          "type": "boolean",
          "default": true
        },
        "project": {
          "description": "Identifies the project this resource belongs to",
          "type": "string",
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "projectVPCRef": {
          "description": "ProjectVPCRef reference to ProjectVPC resource to use its ID as ProjectVPCID automatically",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "minLength": 1
            },
            "namespace": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "projectVpcId": {
          "description": "Identifier of the VPC the service should be in, if any.",
          "type": "string",
          "maxLength": 36
        },
        "serviceIntegrations": {
          "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
          "type": "array",
          "maxItems": 1,
          "items": {
            "description": "Service integrations to specify when creating a service. Not applied after initial service creation",
            "type": "object",
            "required": [
              "integrationType",
              "sourceServiceName"
            ],
            "properties": {
              "integrationType": {
                "type": "string",
                "enum": [
                  "read_replica"
                ]
              },
              "sourceServiceName": {
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "tags": {
          "description": "Tags are key-value pairs that allow you to categorize services.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "technicalEmails": {
          "description": "Defines the email addresses that will receive alerts about upcoming maintenance updates or warnings about service instability.",
          "type": "array",
          "maxItems": 10,
          "items": {
            "type": "object",
            "required": [
              "email"
            ],
            "properties": {
              "email": {
                "description": "Email address.",
                "type": "string",
                "pattern": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"
              }
            },
            "additionalProperties": false
          }
        },
        "terminationProtection": {
          "description": "Prevent service from being deleted. It is recommended to have this enabled for all services.",
          "type": "boolean"
        },
        "userConfig": {
          "description": "KafkaConnect specific user configuration options",
          "type": "object",
          "properties": {
            "additional_backup_regions": {
              "description": "Deprecated. Additional Cloud Regions for Backup Replication",
              "type": "array",
              "maxItems": 1,
              "items": {
                "type": "string"
              }
            },
            "ip_filter": {
              "description": "Allow incoming connections from CIDR address block, e.g. '10.20.0.0/16'",
              "type": "array",
              "maxItems": 8000,
              "items": {
                "description": "CIDR address block, either as a string, or in a dict with an optional description field",
                "type": "object",
                "required": [
                  "network"
                ],
                "properties": {
                  "description": {
                    "description": "Description for IP filter list entry",
                    "type": "string",
                    "maxLength": 1024
                  },
                  "network": {
                    "description": "CIDR address block",
                    "type": "string",
                    "maxLength": 43
                  }
                },
                "additionalProperties": false
              }
            },
            "kafka_connect": {
              "description": "Kafka Connect configuration values",
              "type": "object",
              "properties": {
                "connector_client_config_override_policy": {
                  "description": "Defines what client configurations can be overridden by the connector. Default is None",
                  "type": "string",
                  "enum": [
                    "All",
                    "None"
                  ]
                },
                "consumer_auto_offset_reset": {
                  "description": "What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server. Default is earliest",
                  "type": "string",
                  "enum": [
                    "earliest",
                    "latest"
                  ]
                },
                "consumer_fetch_max_bytes": {
                  "description": "Records are fetched in batches by the consumer, and if the first record batch in the first non-empty partition of the fetch is larger than this value, the record batch will still be returned to ensure that the consumer can make progress. As such, this is not a absolute maximum.",
                  "type": "integer",
                  "maximum": 104857600,
                  "minimum": 1048576
                },
                "consumer_isolation_level": {
                  "description": "Transaction read isolation level. read_uncommitted is the default, but read_committed can be used if consume-exactly-once behavior is desired.",
                  "type": "string",
                  "enum": [
                    "read_committed",
                    "read_uncommitted"
                  ]
                },
                "consumer_max_partition_fetch_bytes": {
                  "description": "Records are fetched in batches by the consumer.If the first record batch in the first non-empty partition of the fetch is larger than this limit, the batch will still be returned to ensure that the consumer can make progress.",
                  "type": "integer",
                  "maximum": 104857600,
                  "minimum": 1048576
                },
                "consumer_max_poll_interval_ms": {
                  "description": "The maximum delay in milliseconds between invocations of poll() when using consumer group management (defaults to 300000).",
                  "type": "integer",
                  "maximum": 2147483647,
                  "minimum": 1
                },
                "consumer_max_poll_records": {
                  "description": "The maximum number of records returned in a single call to poll() (defaults to 500).",
                  "type": "integer",
                  "maximum": 10000,
                  "minimum": 1
                },
                "offset_flush_interval_ms": {
                  "description": "The interval at which to try committing offsets for tasks (defaults to 60000).",
                  "type": "integer",
                  "maximum": 100000000,
                  "minimum": 1
                },
                "offset_flush_timeout_ms": {
                  "description": "Maximum number of milliseconds to wait for records to flush and partition offset data to be committed to offset storage before cancelling the process and restoring the offset data to be committed in a future attempt (defaults to 5000).",
                  "type": "integer",
                  "maximum": 2147483647,
                  "minimum": 1
                },
                "producer_batch_size": {
                  "description": "This setting gives the upper bound of the batch size to be sent. If there are fewer than this many bytes accumulated for this partition, the producer will 'linger' for the linger.ms time waiting for more records to show up. A batch size of zero will disable batching entirely (defaults to 16384).",
                  "type": "integer",
                  "maximum": 5242880,
                  "minimum": 0
                },
                "producer_buffer_memory": {
                  "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the broker (defaults to 33554432).",
                  "type": "integer",
                  "maximum": 134217728,
                  "minimum": 5242880
                },
                "producer_compression_type": {
                  "description": "Specify the default compression type for producers. This configuration accepts the standard compression codecs ('gzip', 'snappy', 'lz4', 'zstd'). It additionally accepts 'none' which is the default and equivalent to no compression.",
                  "type": "string",
                  "enum": [
                    "gzip",
                    "lz4",
                    "none",
                    "snappy",
                    "zstd"
                  ]
                },
                "producer_linger_ms": {
                  "description": "This setting gives the upper bound on the delay for batching: once there is batch.size worth of records for a partition it will be sent immediately regardless of this setting, however if there are fewer than this many bytes accumulated for this partition the producer will 'linger' for the specified time waiting for more records to show up. Defaults to 0.",
                  "type": "integer",
                  "maximum": 5000,
                  "minimum": 0
                },
                "producer_max_request_size": {
                  "description": "This setting will limit the number of record batches the producer will send in a single request to avoid sending huge requests.",
                  "type": "integer",
                  "maximum": 67108864,
                  "minimum": 131072
                },
                "scheduled_rebalance_max_delay_ms": {
                  "description": "The maximum delay that is scheduled in order to wait for the return of one or more departed workers before rebalancing and reassigning their connectors and tasks to the group. During this period the connectors and tasks of the departed workers remain unassigned. Defaults to 5 minutes.",
                  "type": "integer",
                  "maximum": 600000,
                  "minimum": 0
                },
                "session_timeout_ms": {
                  "description": "The timeout in milliseconds used to detect failures when using Kafka’s group management facilities (defaults to 10000).",
                  "type": "integer",
                  "maximum": 2147483647,
                  "minimum": 1
                }
              },
              "additionalProperties": false
            },
            "plugin_versions": {
              "description": "The plugin selected by the user",
              "type": "array",
              "items": {
                "description": "A Kafka Connect plugin",
                "type": "object",
                "required": [
                  "plugin_name",
                  "version"
                ],
                "properties": {
                  "plugin_name": {
                    "description": "The name of the plugin",
                    "type": "string",
                    "maxLength": 128,
                    "pattern": "^[^\\r\\n]*$"
                  },
                  "version": {
                    "description": "The version of the plugin",
                    "type": "string",
                    "maxLength": 128,
                    "pattern": "^[^\\r\\n]*$"
                  }
                },
                "additionalProperties": false
              }
            },
            "private_access": {
              "description": "Allow access to selected service ports from private networks",
              "type": "object",
              "properties": {
                "kafka_connect": {
                  "description": "Allow clients to connect to kafka_connect with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                  "type": "boolean"
                },
                "prometheus": {
                  "description": "Allow clients to connect to prometheus with a DNS name that always resolves to the service's private IP addresses. Only available in certain network locations",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "privatelink_access": {
              "description": "Allow access to selected service components through Privatelink",
              "type": "object",
              "properties": {
                "jolokia": {
                  "description": "Enable jolokia",
                  "type": "boolean"
                },
                "kafka_connect": {
                  "description": "Enable kafka_connect",
                  "type": "boolean"
                },
                "prometheus": {
                  "description": "Enable prometheus",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "public_access": {
              "description": "Allow access to selected service ports from the public Internet",
              "type": "object",
              "properties": {
                "kafka_connect": {
                  "description": "Allow clients to connect to kafka_connect from the public internet for service nodes that are in a project VPC or another type of private network",
                  "type": "boolean"
                },
                "prometheus": {
                  "description": "Allow clients to connect to prometheus from the public internet for service nodes that are in a project VPC or another type of private network",
                  "type": "boolean"
                }
              },
              "additionalProperties": false
            },
            "secret_providers": {
              "description": "Configure external secret providers in order to reference external secrets in connector configuration. Currently Hashicorp Vault (provider: vault, auth_method: token) and AWS Secrets Manager (provider: aws, auth_method: credentials) are supported. Secrets can be referenced in connector config with ${\u003cprovider_name\u003e:\u003csecret_path\u003e:\u003ckey_name\u003e}",
              "type": "array",
              "items": {
                "description": "Configure external secret providers in order to reference external secrets in connector configuration. Currently Hashicorp Vault and AWS Secrets Manager are supported.",
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "aws": {
                    "description": "AWS secret provider configuration",
                    "type": "object",
                    "required": [
                      "auth_method",
                      "region"
                    ],
                    "properties": {
                      "access_key": {
                        "description": "Access key used to authenticate with aws",
                        "type": "string",
                        "maxLength": 128
                      },
                      "auth_method": {
                        "description": "Auth method of the vault secret provider",
                        "type": "string",
                        "enum": [
                          "credentials"
                        ]
                      },
                      "region": {
                        "description": "Region used to lookup secrets with AWS SecretManager",
                        "type": "string",
                        "maxLength": 64
                      },
                      "secret_key": {
                        "description": "Secret key used to authenticate with aws",
                        "type": "string",
                        "maxLength": 128
                      }
                    },
                    "additionalProperties": false
                  },
                  "name": {
                    "description": "Name of the secret provider. Used to reference secrets in connector config.",
                    "type": "string"
                  },
                  "vault": {
                    "description": "Vault secret provider configuration",
                    "type": "object",
                    "required": [
                      "address",
                      "auth_method"
                    ],
                    "properties": {
                      "address": {
                        "description": "Address of the Vault server",
                        "type": "string",
                        "maxLength": 65536,
                        "minLength": 1
                      },
                      "auth_method": {
                        "description": "Auth method of the vault secret provider",
                        "type": "string",
                        "enum": [
                          "token"
                        ]
                      },
                      "engine_version": {
                        "description": "KV Secrets Engine version of the Vault server instance",
                        "type": "integer",
                        "enum": [
                          1,
                          2
                        ]
                      },
                      "prefix_path_depth": {
                        "description": "Prefix path depth of the secrets Engine. Default is 1. If the secrets engine path has more than one segment it has to be increased to the number of segments.",
                        "type": "integer"
                      },
                      "token": {
                        "description": "Token used to authenticate with vault and auth method `token`.",
                        "type": "string",
                        "maxLength": 256
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            },
            "service_log": {
              "description": "Store logs for the service so that they are available in the HTTP API and console.",
              "type": "boolean"
            },
            "static_ips": {
              "description": "Use static public IP addresses",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ServiceStatus defines the observed state of service",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "Conditions represent the latest available observations of a service state",
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "state": {
          "description": "Service state",
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  }
}
