{
  "description": "ClickhouseGrant is the Schema for the ClickhouseGrants API\nWarning: Due to the way ClickHouse operates, updating this resource first revokes the existing privileges.",
  "type": "object",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "ClickhouseGrantSpec defines the desired state of ClickhouseGrant",
      "type": "object",
      "required": [
        "project",
        "serviceName"
      ],
      "properties": {
        "authSecretRef": {
          "description": "Authentication reference to Aiven token in a secret",
          "type": "object",
          "required": [
            "key",
            "name"
          ],
          "properties": {
            "key": {
              "type": "string",
              "minLength": 1
            },
            "name": {
              "type": "string",
              "minLength": 1
            }
          },
          "additionalProperties": false
        },
        "privilegeGrants": {
          "description": "Configuration to grant a privilege. Privileges not in the manifest are revoked. Existing privileges are retained; new ones are granted.",
          "type": "array",
          "items": {
            "description": "PrivilegeGrant represents the privileges to be granted to users or roles.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#granting-privilege-syntax).",
            "type": "object",
            "required": [
              "database",
              "grantees",
              "privileges"
            ],
            "properties": {
              "columns": {
                "description": "The column that the grant refers to.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "database": {
                "description": "The database that the grant refers to.",
                "type": "string"
              },
              "grantees": {
                "description": "List of grantees (users or roles) to grant the privilege to.",
                "type": "array",
                "minItems": 1,
                "items": {
                  "description": "Grantee represents a user or a role to which privileges or roles are granted.\nWarning \"Ambiguity in the `GRANT` syntax\":\nDue to [an ambiguity](https://github.com/aiven/ospo-tracker/issues/350) in the GRANT syntax in ClickHouse,\nusers and roles should not share the same name.\nIt is unclear whether a grant applies to the user or the role.",
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "privileges": {
                "description": "The privileges to grant, i.e. `INSERT`, `SELECT`.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#assigning-role-syntax).",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "table": {
                "description": "The tables that the grant refers to. To grant a privilege on all tables in a database, omit this field instead of writing `table: \"*\"`.",
                "type": "string"
              },
              "withGrantOption": {
                "description": "If true, then the grantee (user or role) get the permission to execute the `GRANT` query.\nUsers can grant privileges of the same scope they have and less.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#granting-privilege-syntax)",
                "type": "boolean"
              }
            },
            "additionalProperties": false,
            "x-kubernetes-validations": [
              {
                "rule": "!has(self.columns) || (has(self.columns) \u0026\u0026 has(self.table))",
                "message": "`table` must be set if `columns` are set"
              }
            ]
          }
        },
        "project": {
          "description": "Identifies the project this resource belongs to",
          "type": "string",
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9_-]+$",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        },
        "roleGrants": {
          "description": "Configuration to grant a role. Role grants not in the manifest are revoked. Existing role grants are retained; new ones are granted.",
          "type": "array",
          "items": {
            "description": "RoleGrant represents the roles to be assigned to users or roles.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#assigning-role-syntax)",
            "type": "object",
            "required": [
              "grantees",
              "roles"
            ],
            "properties": {
              "grantees": {
                "description": "List of grantees (users or roles) to grant the privilege to.",
                "type": "array",
                "minItems": 1,
                "items": {
                  "description": "Grantee represents a user or a role to which privileges or roles are granted.\nWarning \"Ambiguity in the `GRANT` syntax\":\nDue to [an ambiguity](https://github.com/aiven/ospo-tracker/issues/350) in the GRANT syntax in ClickHouse,\nusers and roles should not share the same name.\nIt is unclear whether a grant applies to the user or the role.",
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string"
                    },
                    "user": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "roles": {
                "description": "List of roles to grant to the grantees.",
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "string"
                }
              },
              "withAdminOption": {
                "description": "If true, the grant is executed with `ADMIN OPTION` privilege.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#admin-option)",
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        },
        "serviceName": {
          "description": "Specifies the name of the service that this resource belongs to",
          "type": "string",
          "maxLength": 63,
          "pattern": "^[a-z][-a-z0-9]+$",
          "x-kubernetes-validations": [
            {
              "rule": "self == oldSelf",
              "message": "Value is immutable"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "ClickhouseGrantStatus defines the observed state of ClickhouseGrant",
      "type": "object",
      "required": [
        "conditions"
      ],
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.\n---\nThis struct is intended for direct use as an array at the field path .status.conditions.  For example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the observations of a foo's current state.\n\t    // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    // +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t    // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t    // other fields\n\t}",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "type": "string",
                "maxLength": 32768
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64",
                "minimum": 0
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "type": "string",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ]
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\n---\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions can be\nuseful (see .node.status.conditions), the ability to deconflict is important.\nThe regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)",
                "type": "string",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$"
              }
            },
            "additionalProperties": false
          }
        },
        "state": {
          "description": "The previous applied grants to revoke. Do not edit",
          "type": "object",
          "properties": {
            "privilegeGrants": {
              "description": "Configuration to grant a privilege. Privileges not in the manifest are revoked. Existing privileges are retained; new ones are granted.",
              "type": "array",
              "items": {
                "description": "PrivilegeGrant represents the privileges to be granted to users or roles.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#granting-privilege-syntax).",
                "type": "object",
                "required": [
                  "database",
                  "grantees",
                  "privileges"
                ],
                "properties": {
                  "columns": {
                    "description": "The column that the grant refers to.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "database": {
                    "description": "The database that the grant refers to.",
                    "type": "string"
                  },
                  "grantees": {
                    "description": "List of grantees (users or roles) to grant the privilege to.",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "description": "Grantee represents a user or a role to which privileges or roles are granted.\nWarning \"Ambiguity in the `GRANT` syntax\":\nDue to [an ambiguity](https://github.com/aiven/ospo-tracker/issues/350) in the GRANT syntax in ClickHouse,\nusers and roles should not share the same name.\nIt is unclear whether a grant applies to the user or the role.",
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "privileges": {
                    "description": "The privileges to grant, i.e. `INSERT`, `SELECT`.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#assigning-role-syntax).",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "table": {
                    "description": "The tables that the grant refers to. To grant a privilege on all tables in a database, omit this field instead of writing `table: \"*\"`.",
                    "type": "string"
                  },
                  "withGrantOption": {
                    "description": "If true, then the grantee (user or role) get the permission to execute the `GRANT` query.\nUsers can grant privileges of the same scope they have and less.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#granting-privilege-syntax)",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false,
                "x-kubernetes-validations": [
                  {
                    "rule": "!has(self.columns) || (has(self.columns) \u0026\u0026 has(self.table))",
                    "message": "`table` must be set if `columns` are set"
                  }
                ]
              }
            },
            "roleGrants": {
              "description": "Configuration to grant a role. Role grants not in the manifest are revoked. Existing role grants are retained; new ones are granted.",
              "type": "array",
              "items": {
                "description": "RoleGrant represents the roles to be assigned to users or roles.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#assigning-role-syntax)",
                "type": "object",
                "required": [
                  "grantees",
                  "roles"
                ],
                "properties": {
                  "grantees": {
                    "description": "List of grantees (users or roles) to grant the privilege to.",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "description": "Grantee represents a user or a role to which privileges or roles are granted.\nWarning \"Ambiguity in the `GRANT` syntax\":\nDue to [an ambiguity](https://github.com/aiven/ospo-tracker/issues/350) in the GRANT syntax in ClickHouse,\nusers and roles should not share the same name.\nIt is unclear whether a grant applies to the user or the role.",
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string"
                        },
                        "user": {
                          "type": "string"
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "roles": {
                    "description": "List of roles to grant to the grantees.",
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string"
                    }
                  },
                  "withAdminOption": {
                    "description": "If true, the grant is executed with `ADMIN OPTION` privilege.\n[See](https://clickhouse.com/docs/en/sql-reference/statements/grant#admin-option)",
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  }
}
