{
  "description": "Bot is the Schema for the Bots API. Provides an Amazon Lex bot resource.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "BotSpec defines the desired state of Bot",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "abortStatement": {
              "description": "The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The text of the message.",
                        "type": "string"
                      },
                      "contentType": {
                        "description": "The content type of the message string.",
                        "type": "string"
                      },
                      "groupNumber": {
                        "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseCard": {
                  "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "childDirected": {
              "description": "By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.",
              "type": "boolean"
            },
            "clarificationPrompt": {
              "description": "The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.",
              "type": "object",
              "properties": {
                "maxAttempts": {
                  "description": "The number of times to prompt the user for information.",
                  "type": "number"
                },
                "message": {
                  "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The text of the message.",
                        "type": "string"
                      },
                      "contentType": {
                        "description": "The content type of the message string.",
                        "type": "string"
                      },
                      "groupNumber": {
                        "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseCard": {
                  "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "createVersion": {
              "description": "Determines if a new bot version is created when the initial resource is created and on each update. Defaults to false.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of the bot. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "detectSentiment": {
              "description": "When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is false.",
              "type": "boolean"
            },
            "enableModelImprovements": {
              "description": "Set to true to enable access to natural language understanding improvements. When you set the enable_model_improvements parameter to true you can use the nlu_intent_confidence_threshold parameter to configure confidence scores. For more information, see Confidence Scores. You can only set the enable_model_improvements parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the Amazon Lex Bot PutBot API Docs.",
              "type": "boolean"
            },
            "idleSessionTtlInSeconds": {
              "description": "The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is 300. Must be a number between 60 and 86400 (inclusive).",
              "type": "number"
            },
            "intent": {
              "description": "A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "intentName": {
                    "description": "The name of the intent. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "intentVersion": {
                    "description": "The version of the intent. Must be less than or equal to 64 characters in length.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "locale": {
              "description": "Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see Amazon Lex Bot PutBot API Docs. Default is en-US.",
              "type": "string"
            },
            "nluIntentConfidenceThreshold": {
              "description": "Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see Amazon Lex Bot PutBot API Docs This value requires enable_model_improvements to be set to true and the default is 0. Must be a float between 0 and 1.",
              "type": "number"
            },
            "processBehavior": {
              "description": "If you set the process_behavior element to BUILD, Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn't build it. Default is SAVE.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "voiceId": {
              "description": "The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Available Voices in the Amazon Polly Developer Guide.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "abortStatement": {
              "description": "The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The text of the message.",
                        "type": "string"
                      },
                      "contentType": {
                        "description": "The content type of the message string.",
                        "type": "string"
                      },
                      "groupNumber": {
                        "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseCard": {
                  "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "childDirected": {
              "description": "By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.",
              "type": "boolean"
            },
            "clarificationPrompt": {
              "description": "The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.",
              "type": "object",
              "properties": {
                "maxAttempts": {
                  "description": "The number of times to prompt the user for information.",
                  "type": "number"
                },
                "message": {
                  "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The text of the message.",
                        "type": "string"
                      },
                      "contentType": {
                        "description": "The content type of the message string.",
                        "type": "string"
                      },
                      "groupNumber": {
                        "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseCard": {
                  "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "createVersion": {
              "description": "Determines if a new bot version is created when the initial resource is created and on each update. Defaults to false.",
              "type": "boolean"
            },
            "description": {
              "description": "A description of the bot. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "detectSentiment": {
              "description": "When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is false.",
              "type": "boolean"
            },
            "enableModelImprovements": {
              "description": "Set to true to enable access to natural language understanding improvements. When you set the enable_model_improvements parameter to true you can use the nlu_intent_confidence_threshold parameter to configure confidence scores. For more information, see Confidence Scores. You can only set the enable_model_improvements parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the Amazon Lex Bot PutBot API Docs.",
              "type": "boolean"
            },
            "idleSessionTtlInSeconds": {
              "description": "The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is 300. Must be a number between 60 and 86400 (inclusive).",
              "type": "number"
            },
            "intent": {
              "description": "A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "intentName": {
                    "description": "The name of the intent. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "intentVersion": {
                    "description": "The version of the intent. Must be less than or equal to 64 characters in length.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "locale": {
              "description": "Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see Amazon Lex Bot PutBot API Docs. Default is en-US.",
              "type": "string"
            },
            "nluIntentConfidenceThreshold": {
              "description": "Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see Amazon Lex Bot PutBot API Docs This value requires enable_model_improvements to be set to true and the default is 0. Must be a float between 0 and 1.",
              "type": "number"
            },
            "processBehavior": {
              "description": "If you set the process_behavior element to BUILD, Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn't build it. Default is SAVE.",
              "type": "string"
            },
            "voiceId": {
              "description": "The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Available Voices in the Amazon Polly Developer Guide.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.abortStatement) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.abortStatement))",
          "message": "spec.forProvider.abortStatement is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.childDirected) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.childDirected))",
          "message": "spec.forProvider.childDirected is a required parameter"
        },
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.intent) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.intent))",
          "message": "spec.forProvider.intent is a required parameter"
        }
      ]
    },
    "status": {
      "description": "BotStatus defines the observed state of Bot.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "abortStatement": {
              "description": "The message that Amazon Lex uses to abort a conversation. Attributes are documented under statement.",
              "type": "object",
              "properties": {
                "message": {
                  "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The text of the message.",
                        "type": "string"
                      },
                      "contentType": {
                        "description": "The content type of the message string.",
                        "type": "string"
                      },
                      "groupNumber": {
                        "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseCard": {
                  "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "arn": {
              "type": "string"
            },
            "checksum": {
              "description": "Checksum identifying the version of the bot that was created. The checksum is not\nincluded as an argument because the resource will add it automatically when updating the bot.",
              "type": "string"
            },
            "childDirected": {
              "description": "By specifying true, you confirm that your use of Amazon Lex is related to a website, program, or other application that is directed or targeted, in whole or in part, to children under age 13 and subject to COPPA. For more information see the Amazon Lex FAQ and the Amazon Lex PutBot API Docs.",
              "type": "boolean"
            },
            "clarificationPrompt": {
              "description": "The message that Amazon Lex uses when it doesn't understand the user's request. Attributes are documented under prompt.",
              "type": "object",
              "properties": {
                "maxAttempts": {
                  "description": "The number of times to prompt the user for information.",
                  "type": "number"
                },
                "message": {
                  "description": "A set of messages, each of which provides a message string and its type.\nYou can specify the message string in plain text or in Speech Synthesis Markup Language (SSML).\nAttributes are documented under message.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "content": {
                        "description": "The text of the message.",
                        "type": "string"
                      },
                      "contentType": {
                        "description": "The content type of the message string.",
                        "type": "string"
                      },
                      "groupNumber": {
                        "description": "Identifies the message group that the message belongs to. When a group\nis assigned to a message, Amazon Lex returns one message from each group in the response.",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "responseCard": {
                  "description": "The response card. Amazon Lex will substitute session attributes and\nslot values into the response card. For more information, see\nExample: Using a Response Card.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "createVersion": {
              "description": "Determines if a new bot version is created when the initial resource is created and on each update. Defaults to false.",
              "type": "boolean"
            },
            "createdDate": {
              "description": "The date when the bot version was created.",
              "type": "string"
            },
            "description": {
              "description": "A description of the bot. Must be less than or equal to 200 characters in length.",
              "type": "string"
            },
            "detectSentiment": {
              "description": "When set to true user utterances are sent to Amazon Comprehend for sentiment analysis. If you don't specify detectSentiment, the default is false.",
              "type": "boolean"
            },
            "enableModelImprovements": {
              "description": "Set to true to enable access to natural language understanding improvements. When you set the enable_model_improvements parameter to true you can use the nlu_intent_confidence_threshold parameter to configure confidence scores. For more information, see Confidence Scores. You can only set the enable_model_improvements parameter in certain Regions. If you set the parameter to true, your bot has access to accuracy improvements. For more information see the Amazon Lex Bot PutBot API Docs.",
              "type": "boolean"
            },
            "failureReason": {
              "description": "If status is FAILED, Amazon Lex provides the reason that it failed to build the bot.",
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "idleSessionTtlInSeconds": {
              "description": "The maximum time in seconds that Amazon Lex retains the data gathered in a conversation. Default is 300. Must be a number between 60 and 86400 (inclusive).",
              "type": "number"
            },
            "intent": {
              "description": "A set of Intent objects. Each intent represents a command that a user can express. Attributes are documented under intent. Can have up to 250 Intent objects.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "intentName": {
                    "description": "The name of the intent. Must be less than or equal to 100 characters in length.",
                    "type": "string"
                  },
                  "intentVersion": {
                    "description": "The version of the intent. Must be less than or equal to 64 characters in length.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "lastUpdatedDate": {
              "description": "The date when the $LATEST version of this bot was updated.",
              "type": "string"
            },
            "locale": {
              "description": "Specifies the target locale for the bot. Any intent used in the bot must be compatible with the locale of the bot. For available locales, see Amazon Lex Bot PutBot API Docs. Default is en-US.",
              "type": "string"
            },
            "nluIntentConfidenceThreshold": {
              "description": "Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents in a PostContent or PostText response. AMAZON.FallbackIntent and AMAZON.KendraSearchIntent are only inserted if they are configured for the bot. For more information see Amazon Lex Bot PutBot API Docs This value requires enable_model_improvements to be set to true and the default is 0. Must be a float between 0 and 1.",
              "type": "number"
            },
            "processBehavior": {
              "description": "If you set the process_behavior element to BUILD, Amazon Lex builds the bot so that it can be run. If you set the element to SAVE Amazon Lex saves the bot, but doesn't build it. Default is SAVE.",
              "type": "string"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "status": {
              "description": "When you send a request to create or update a bot, Amazon Lex sets the status response\nelement to BUILDING. After Amazon Lex builds the bot, it sets status to READY. If Amazon Lex can't\nbuild the bot, it sets status to FAILED. Amazon Lex returns the reason for the failure in the\nfailure_reason response element.",
              "type": "string"
            },
            "version": {
              "description": "The version of the bot.",
              "type": "string"
            },
            "voiceId": {
              "description": "The Amazon Polly voice ID that you want Amazon Lex to use for voice interactions with the user. The locale configured for the voice must match the locale of the bot. For more information, see Available Voices in the Amazon Polly Developer Guide.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
