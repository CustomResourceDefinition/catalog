{
  "description": "Certificate is the Schema for the Certificates API. Requests and manages a certificate from Amazon Certificate Manager (ACM).",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "CertificateSpec defines the desired state of Certificate",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "deletionPolicy": {
          "description": "DeletionPolicy specifies what will happen to the underlying external\nwhen this managed resource is deleted - either \"Delete\" or \"Orphan\" the\nexternal resource.\nThis field is planned to be deprecated in favor of the ManagementPolicies\nfield in a future release. Currently, both could be set independently and\nnon-default values would be honored if the feature flag is enabled.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223",
          "type": "string",
          "default": "Delete",
          "enum": [
            "Orphan",
            "Delete"
          ]
        },
        "forProvider": {
          "type": "object",
          "required": [
            "region"
          ],
          "properties": {
            "certificateAuthorityArn": {
              "description": "ARN of an ACM PCA",
              "type": "string"
            },
            "certificateAuthorityArnRef": {
              "description": "Reference to a CertificateAuthority in acmpca to populate certificateAuthorityArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "certificateAuthorityArnSelector": {
              "description": "Selector for a CertificateAuthority in acmpca to populate certificateAuthorityArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "certificateBody": {
              "description": "Certificate's PEM-formatted public key",
              "type": "string"
            },
            "certificateChain": {
              "description": "Certificate's PEM-formatted chain",
              "type": "string"
            },
            "domainName": {
              "description": "Domain name for which the certificate should be issued",
              "type": "string"
            },
            "earlyRenewalDuration": {
              "description": "Amount of time to start automatic renewal process before expiration.\nHas no effect if less than 60 days.\nRepresented by either\na subset of RFC 3339 duration supporting years, months, and days (e.g., P90D),\nor a string such as 2160h.",
              "type": "string"
            },
            "keyAlgorithm": {
              "description": "Specifies the algorithm of the public and private key pair that your Amazon issued certificate uses to encrypt data. See ACM Certificate characteristics for more details.",
              "type": "string"
            },
            "options": {
              "description": "Configuration block used to set certificate options. Detailed below.",
              "type": "object",
              "properties": {
                "certificateTransparencyLoggingPreference": {
                  "description": "Whether certificate details should be added to a certificate transparency log. Valid values are ENABLED or DISABLED. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.",
                  "type": "string"
                },
                "export": {
                  "description": "Whether the certificate can be exported. Valid values are ENABLED or DISABLED (default). Note Issuing an exportable certificate is subject to additional charges. See AWS Certificate Manager pricing for more details.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "privateKeySecretRef": {
              "description": "Certificate's PEM-formatted private key",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "subjectAlternativeNames": {
              "description": "Set of domains that should be SANs in the issued certificate.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "validationMethod": {
              "description": "Which method to use for validation. DNS or EMAIL are valid.",
              "type": "string"
            },
            "validationOption": {
              "description": "Configuration block used to specify information about the initial validation of each domain name. Detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "domainName": {
                    "description": "Fully qualified domain name (FQDN) in the certificate.",
                    "type": "string"
                  },
                  "validationDomain": {
                    "description": "Domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the domain_name value or a superdomain of the domain_name value. For example, if you request a certificate for \"testing.example.com\", you can specify \"example.com\" for this value.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "certificateAuthorityArn": {
              "description": "ARN of an ACM PCA",
              "type": "string"
            },
            "certificateAuthorityArnRef": {
              "description": "Reference to a CertificateAuthority in acmpca to populate certificateAuthorityArn.",
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "Name of the referenced object.",
                  "type": "string"
                },
                "policy": {
                  "description": "Policies for referencing.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "certificateAuthorityArnSelector": {
              "description": "Selector for a CertificateAuthority in acmpca to populate certificateAuthorityArn.",
              "type": "object",
              "properties": {
                "matchControllerRef": {
                  "description": "MatchControllerRef ensures an object with the same controller reference\nas the selecting object is selected.",
                  "type": "boolean"
                },
                "matchLabels": {
                  "description": "MatchLabels ensures an object with matching labels is selected.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "policy": {
                  "description": "Policies for selection.",
                  "type": "object",
                  "properties": {
                    "resolution": {
                      "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                      "type": "string",
                      "default": "Required",
                      "enum": [
                        "Required",
                        "Optional"
                      ]
                    },
                    "resolve": {
                      "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                      "type": "string",
                      "enum": [
                        "Always",
                        "IfNotPresent"
                      ]
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "certificateBody": {
              "description": "Certificate's PEM-formatted public key",
              "type": "string"
            },
            "certificateChain": {
              "description": "Certificate's PEM-formatted chain",
              "type": "string"
            },
            "domainName": {
              "description": "Domain name for which the certificate should be issued",
              "type": "string"
            },
            "earlyRenewalDuration": {
              "description": "Amount of time to start automatic renewal process before expiration.\nHas no effect if less than 60 days.\nRepresented by either\na subset of RFC 3339 duration supporting years, months, and days (e.g., P90D),\nor a string such as 2160h.",
              "type": "string"
            },
            "keyAlgorithm": {
              "description": "Specifies the algorithm of the public and private key pair that your Amazon issued certificate uses to encrypt data. See ACM Certificate characteristics for more details.",
              "type": "string"
            },
            "options": {
              "description": "Configuration block used to set certificate options. Detailed below.",
              "type": "object",
              "properties": {
                "certificateTransparencyLoggingPreference": {
                  "description": "Whether certificate details should be added to a certificate transparency log. Valid values are ENABLED or DISABLED. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.",
                  "type": "string"
                },
                "export": {
                  "description": "Whether the certificate can be exported. Valid values are ENABLED or DISABLED (default). Note Issuing an exportable certificate is subject to additional charges. See AWS Certificate Manager pricing for more details.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "privateKeySecretRef": {
              "description": "Certificate's PEM-formatted private key",
              "type": "object",
              "required": [
                "key",
                "name",
                "namespace"
              ],
              "properties": {
                "key": {
                  "description": "The key to select.",
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                },
                "namespace": {
                  "description": "Namespace of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "subjectAlternativeNames": {
              "description": "Set of domains that should be SANs in the issued certificate.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "validationMethod": {
              "description": "Which method to use for validation. DNS or EMAIL are valid.",
              "type": "string"
            },
            "validationOption": {
              "description": "Configuration block used to specify information about the initial validation of each domain name. Detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "domainName": {
                    "description": "Fully qualified domain name (FQDN) in the certificate.",
                    "type": "string"
                  },
                  "validationDomain": {
                    "description": "Domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the domain_name value or a superdomain of the domain_name value. For example, if you request a certificate for \"testing.example.com\", you can specify \"example.com\" for this value.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nThis field is planned to replace the DeletionPolicy field in a future\nrelease. Currently, both could be set independently and non-default\nvalues would be honored if the feature flag is enabled. If both are\ncustom, the DeletionPolicy field will be ignored.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "name": "default"
          },
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            },
            "policy": {
              "description": "Policies for referencing.",
              "type": "object",
              "properties": {
                "resolution": {
                  "description": "Resolution specifies whether resolution of this reference is required.\nThe default is 'Required', which means the reconcile will fail if the\nreference cannot be resolved. 'Optional' means this reference will be\na no-op if it cannot be resolved.",
                  "type": "string",
                  "default": "Required",
                  "enum": [
                    "Required",
                    "Optional"
                  ]
                },
                "resolve": {
                  "description": "Resolve specifies when this reference should be resolved. The default\nis 'IfNotPresent', which will attempt to resolve the reference only when\nthe corresponding field is not present. Use 'Always' to resolve the\nreference on every reconcile.",
                  "type": "string",
                  "enum": [
                    "Always",
                    "IfNotPresent"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name",
            "namespace"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            },
            "namespace": {
              "description": "Namespace of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "status": {
      "description": "CertificateStatus defines the observed state of Certificate.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "arn": {
              "description": "ARN of the certificate",
              "type": "string"
            },
            "certificateAuthorityArn": {
              "description": "ARN of an ACM PCA",
              "type": "string"
            },
            "certificateBody": {
              "description": "Certificate's PEM-formatted public key",
              "type": "string"
            },
            "certificateChain": {
              "description": "Certificate's PEM-formatted chain",
              "type": "string"
            },
            "domainName": {
              "description": "Domain name for which the certificate should be issued",
              "type": "string"
            },
            "domainValidationOptions": {
              "description": "Set of domain validation objects which can be used to complete certificate validation.\nCan have more than one element, e.g., if SANs are defined.\nOnly set if DNS-validation was used.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "domainName": {
                    "description": "Fully qualified domain name (FQDN) in the certificate.",
                    "type": "string"
                  },
                  "resourceRecordName": {
                    "description": "The name of the DNS record to create to validate the certificate",
                    "type": "string"
                  },
                  "resourceRecordType": {
                    "description": "The type of DNS record to create",
                    "type": "string"
                  },
                  "resourceRecordValue": {
                    "description": "The value the DNS record needs to have",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "earlyRenewalDuration": {
              "description": "Amount of time to start automatic renewal process before expiration.\nHas no effect if less than 60 days.\nRepresented by either\na subset of RFC 3339 duration supporting years, months, and days (e.g., P90D),\nor a string such as 2160h.",
              "type": "string"
            },
            "id": {
              "description": "ARN of the certificate",
              "type": "string"
            },
            "keyAlgorithm": {
              "description": "Specifies the algorithm of the public and private key pair that your Amazon issued certificate uses to encrypt data. See ACM Certificate characteristics for more details.",
              "type": "string"
            },
            "notAfter": {
              "description": "Expiration date and time of the certificate.",
              "type": "string"
            },
            "notBefore": {
              "description": "Start of the validity period of the certificate.",
              "type": "string"
            },
            "options": {
              "description": "Configuration block used to set certificate options. Detailed below.",
              "type": "object",
              "properties": {
                "certificateTransparencyLoggingPreference": {
                  "description": "Whether certificate details should be added to a certificate transparency log. Valid values are ENABLED or DISABLED. See https://docs.aws.amazon.com/acm/latest/userguide/acm-concepts.html#concept-transparency for more details.",
                  "type": "string"
                },
                "export": {
                  "description": "Whether the certificate can be exported. Valid values are ENABLED or DISABLED (default). Note Issuing an exportable certificate is subject to additional charges. See AWS Certificate Manager pricing for more details.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "pendingRenewal": {
              "description": "true if a Private certificate eligible for managed renewal is within the early_renewal_duration period.",
              "type": "boolean"
            },
            "region": {
              "description": "Region where this resource will be managed. Defaults to the Region set in the provider configuration.\nRegion is the region you'd like your resource to be created in.",
              "type": "string"
            },
            "renewalEligibility": {
              "description": "Whether the certificate is eligible for managed renewal.",
              "type": "string"
            },
            "renewalSummary": {
              "description": "Contains information about the status of ACM's managed renewal for the certificate.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "renewalStatus": {
                    "description": "The status of ACM's managed renewal of the certificate",
                    "type": "string"
                  },
                  "renewalStatusReason": {
                    "description": "The reason that a renewal request was unsuccessful or is pending",
                    "type": "string"
                  },
                  "updatedAt": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "status": {
              "description": "Status of the certificate.",
              "type": "string"
            },
            "subjectAlternativeNames": {
              "description": "Set of domains that should be SANs in the issued certificate.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "tags": {
              "description": "Key-value map of resource tags.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "tagsAll": {
              "description": "Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "type": {
              "description": "Source of the certificate.",
              "type": "string"
            },
            "validationEmails": {
              "description": "List of addresses that received a validation email. Only set if EMAIL validation was used.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "validationMethod": {
              "description": "Which method to use for validation. DNS or EMAIL are valid.",
              "type": "string"
            },
            "validationOption": {
              "description": "Configuration block used to specify information about the initial validation of each domain name. Detailed below.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "domainName": {
                    "description": "Fully qualified domain name (FQDN) in the certificate.",
                    "type": "string"
                  },
                  "validationDomain": {
                    "description": "Domain name that you want ACM to use to send you validation emails. This domain name is the suffix of the email addresses that you want ACM to use. This must be the same as the domain_name value or a superdomain of the domain_name value. For example, if you request a certificate for \"testing.example.com\", you can specify \"example.com\" for this value.",
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
