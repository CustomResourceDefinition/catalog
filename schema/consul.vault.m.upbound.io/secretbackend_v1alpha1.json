{
  "description": "SecretBackend is the Schema for the SecretBackends API. Creates a Consul secret backend for Vault.",
  "type": "object",
  "required": [
    "spec"
  ],
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "SecretBackendSpec defines the desired state of SecretBackend",
      "type": "object",
      "required": [
        "forProvider"
      ],
      "properties": {
        "forProvider": {
          "type": "object",
          "properties": {
            "address": {
              "description": "Specifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\".\nSpecifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\".",
              "type": "string"
            },
            "allowedManagedKeys": {
              "description": "Set of managed key registry entry names that the mount in question is allowed to access\nList of managed key registry entry names that the mount in question is allowed to access",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "allowedResponseHeaders": {
              "description": "List of headers to allow, allowing a plugin to include\nthem in the response.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacRequestKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacResponseKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bootstrap": {
              "description": "Denotes that the resource is used to bootstrap the Consul ACL system.\nDenotes a backend resource that is used to bootstrap the Consul ACL system. Only one resource may be used to bootstrap.",
              "type": "boolean"
            },
            "caCert": {
              "description": "CA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.\nCA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.",
              "type": "string"
            },
            "clientCertSecretRef": {
              "description": "Client certificate used for Consul's TLS communication, must be x509 PEM encoded and if\nthis is set you need to also set client_key.\nClient certificate used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "clientKeySecretRef": {
              "description": "Client key used for Consul's TLS communication, must be x509 PEM encoded and if this is set\nyou need to also set client_cert.\nClient key used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "defaultLeaseTtlSeconds": {
              "description": "Default lease duration for tokens and secrets in seconds\nDefault lease duration for secrets in seconds",
              "type": "number"
            },
            "delegatedAuthAccessors": {
              "description": "List of allowed authentication mount accessors the\nbackend can request delegated authentication for.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "description": "A human-friendly description for this backend.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "externalEntropyAccess": {
              "description": "Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source\nEnable the secrets engine to access Vault's external entropy source",
              "type": "boolean"
            },
            "forceNoCache": {
              "description": "If set to true, disables caching.",
              "type": "boolean"
            },
            "identityTokenKey": {
              "description": "The key to use for signing plugin workload identity tokens. If\nnot provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.\nThe key to use for signing plugin workload identity tokens",
              "type": "string"
            },
            "listingVisibility": {
              "description": "Specifies whether to show this mount in the UI-specific\nlisting endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.\nSpecifies whether to show this mount in the UI-specific listing endpoint",
              "type": "string"
            },
            "local": {
              "description": "Boolean flag that can be explicitly set to true to enforce local mount in HA environment\nSpecifies if the secret backend is local only",
              "type": "boolean"
            },
            "maxLeaseTtlSeconds": {
              "description": "Maximum possible lease duration for tokens and secrets in seconds\nMaximum possible lease duration for secrets in seconds",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "Specifies mount type specific options that are passed to the backend\nSpecifies mount type specific options that are passed to the backend",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "passthroughRequestHeaders": {
              "description": "List of headers to allow and pass from the request to\nthe plugin.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "path": {
              "description": "The unique location this backend should be mounted at. Must not begin or end with a /. Defaults\nto consul.\nUnique name of the Vault Consul mount to configure",
              "type": "string"
            },
            "pluginVersion": {
              "description": "Specifies the semantic version of the plugin to use, e.g. \"v1.0.0\".\nIf unspecified, the server will select any matching unversioned plugin that may have been\nregistered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.\nSpecifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
              "type": "string"
            },
            "scheme": {
              "description": "Specifies the URL scheme to use. Defaults to http.\nSpecifies the URL scheme to use. Defaults to \"http\".",
              "type": "string"
            },
            "sealWrap": {
              "description": "Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability\nEnable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
              "type": "boolean"
            },
            "tokenSecretRef": {
              "description": "The Consul management token this backend should use to issue new tokens. This field is required\nwhen bootstrap is false.\nSpecifies the Consul token to use when managing or issuing new tokens.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "initProvider": {
          "description": "THIS IS A BETA FIELD. It will be honored\nunless the Management Policies feature flag is disabled.\nInitProvider holds the same fields as ForProvider, with the exception\nof Identifier and other resource reference fields. The fields that are\nin InitProvider are merged into ForProvider when the resource is created.\nThe same fields are also added to the terraform ignore_changes hook, to\navoid updating them after creation. This is useful for fields that are\nrequired on creation, but we do not desire to update them after creation,\nfor example because of an external controller is managing them, like an\nautoscaler.",
          "type": "object",
          "properties": {
            "address": {
              "description": "Specifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\".\nSpecifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\".",
              "type": "string"
            },
            "allowedManagedKeys": {
              "description": "Set of managed key registry entry names that the mount in question is allowed to access\nList of managed key registry entry names that the mount in question is allowed to access",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "allowedResponseHeaders": {
              "description": "List of headers to allow, allowing a plugin to include\nthem in the response.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacRequestKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacResponseKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bootstrap": {
              "description": "Denotes that the resource is used to bootstrap the Consul ACL system.\nDenotes a backend resource that is used to bootstrap the Consul ACL system. Only one resource may be used to bootstrap.",
              "type": "boolean"
            },
            "caCert": {
              "description": "CA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.\nCA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.",
              "type": "string"
            },
            "clientCertSecretRef": {
              "description": "Client certificate used for Consul's TLS communication, must be x509 PEM encoded and if\nthis is set you need to also set client_key.\nClient certificate used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_key.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "clientKeySecretRef": {
              "description": "Client key used for Consul's TLS communication, must be x509 PEM encoded and if this is set\nyou need to also set client_cert.\nClient key used for Consul's TLS communication, must be x509 PEM encoded and if this is set you need to also set client_cert.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "defaultLeaseTtlSeconds": {
              "description": "Default lease duration for tokens and secrets in seconds\nDefault lease duration for secrets in seconds",
              "type": "number"
            },
            "delegatedAuthAccessors": {
              "description": "List of allowed authentication mount accessors the\nbackend can request delegated authentication for.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "description": "A human-friendly description for this backend.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "externalEntropyAccess": {
              "description": "Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source\nEnable the secrets engine to access Vault's external entropy source",
              "type": "boolean"
            },
            "forceNoCache": {
              "description": "If set to true, disables caching.",
              "type": "boolean"
            },
            "identityTokenKey": {
              "description": "The key to use for signing plugin workload identity tokens. If\nnot provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.\nThe key to use for signing plugin workload identity tokens",
              "type": "string"
            },
            "listingVisibility": {
              "description": "Specifies whether to show this mount in the UI-specific\nlisting endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.\nSpecifies whether to show this mount in the UI-specific listing endpoint",
              "type": "string"
            },
            "local": {
              "description": "Boolean flag that can be explicitly set to true to enforce local mount in HA environment\nSpecifies if the secret backend is local only",
              "type": "boolean"
            },
            "maxLeaseTtlSeconds": {
              "description": "Maximum possible lease duration for tokens and secrets in seconds\nMaximum possible lease duration for secrets in seconds",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "Specifies mount type specific options that are passed to the backend\nSpecifies mount type specific options that are passed to the backend",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "passthroughRequestHeaders": {
              "description": "List of headers to allow and pass from the request to\nthe plugin.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "path": {
              "description": "The unique location this backend should be mounted at. Must not begin or end with a /. Defaults\nto consul.\nUnique name of the Vault Consul mount to configure",
              "type": "string"
            },
            "pluginVersion": {
              "description": "Specifies the semantic version of the plugin to use, e.g. \"v1.0.0\".\nIf unspecified, the server will select any matching unversioned plugin that may have been\nregistered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.\nSpecifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
              "type": "string"
            },
            "scheme": {
              "description": "Specifies the URL scheme to use. Defaults to http.\nSpecifies the URL scheme to use. Defaults to \"http\".",
              "type": "string"
            },
            "sealWrap": {
              "description": "Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability\nEnable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
              "type": "boolean"
            },
            "tokenSecretRef": {
              "description": "The Consul management token this backend should use to issue new tokens. This field is required\nwhen bootstrap is false.\nSpecifies the Consul token to use when managing or issuing new tokens.",
              "type": "object",
              "required": [
                "key",
                "name"
              ],
              "properties": {
                "key": {
                  "type": "string"
                },
                "name": {
                  "description": "Name of the secret.",
                  "type": "string"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        "managementPolicies": {
          "description": "THIS IS A BETA FIELD. It is on by default but can be opted out\nthrough a Crossplane feature flag.\nManagementPolicies specify the array of actions Crossplane is allowed to\ntake on the managed and external resources.\nSee the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223\nand this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md",
          "type": "array",
          "default": [
            "*"
          ],
          "items": {
            "description": "A ManagementAction represents an action that the Crossplane controllers\ncan take on an external resource.",
            "type": "string",
            "enum": [
              "Observe",
              "Create",
              "Update",
              "Delete",
              "LateInitialize",
              "*"
            ]
          }
        },
        "providerConfigRef": {
          "description": "ProviderConfigReference specifies how the provider that will be used to\ncreate, observe, update, and delete this managed resource should be\nconfigured.",
          "type": "object",
          "default": {
            "kind": "ClusterProviderConfig",
            "name": "default"
          },
          "required": [
            "kind",
            "name"
          ],
          "properties": {
            "kind": {
              "description": "Kind of the referenced object.",
              "type": "string"
            },
            "name": {
              "description": "Name of the referenced object.",
              "type": "string"
            }
          },
          "additionalProperties": false
        },
        "writeConnectionSecretToRef": {
          "description": "WriteConnectionSecretToReference specifies the namespace and name of a\nSecret to which any connection details for this managed resource should\nbe written. Connection details frequently include the endpoint, username,\nand password required to connect to the managed resource.",
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "description": "Name of the secret.",
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "x-kubernetes-validations": [
        {
          "rule": "!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.address) || (has(self.initProvider) \u0026\u0026 has(self.initProvider.address))",
          "message": "spec.forProvider.address is a required parameter"
        }
      ]
    },
    "status": {
      "description": "SecretBackendStatus defines the observed state of SecretBackend.",
      "type": "object",
      "properties": {
        "atProvider": {
          "type": "object",
          "properties": {
            "accessor": {
              "description": "Accessor of the mount",
              "type": "string"
            },
            "address": {
              "description": "Specifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\".\nSpecifies the address of the Consul instance, provided as \"host:port\" like \"127.0.0.1:8500\".",
              "type": "string"
            },
            "allowedManagedKeys": {
              "description": "Set of managed key registry entry names that the mount in question is allowed to access\nList of managed key registry entry names that the mount in question is allowed to access",
              "type": "array",
              "items": {
                "type": "string"
              },
              "x-kubernetes-list-type": "set"
            },
            "allowedResponseHeaders": {
              "description": "List of headers to allow, allowing a plugin to include\nthem in the response.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacRequestKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the request data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the request data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "auditNonHmacResponseKeys": {
              "description": "Specifies the list of keys that will not be HMAC'd by audit devices in the response data object.\nSpecifies the list of keys that will not be HMAC'd by audit devices in the response data object.",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "bootstrap": {
              "description": "Denotes that the resource is used to bootstrap the Consul ACL system.\nDenotes a backend resource that is used to bootstrap the Consul ACL system. Only one resource may be used to bootstrap.",
              "type": "boolean"
            },
            "caCert": {
              "description": "CA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.\nCA certificate to use when verifying Consul server certificate, must be x509 PEM encoded.",
              "type": "string"
            },
            "defaultLeaseTtlSeconds": {
              "description": "Default lease duration for tokens and secrets in seconds\nDefault lease duration for secrets in seconds",
              "type": "number"
            },
            "delegatedAuthAccessors": {
              "description": "List of allowed authentication mount accessors the\nbackend can request delegated authentication for.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "description": "A human-friendly description for this backend.\nHuman-friendly description of the mount for the backend.",
              "type": "string"
            },
            "disableRemount": {
              "description": "If set, opts out of mount migration on path updates.\nSee here for more info on Mount Migration\nIf set, opts out of mount migration on path updates.",
              "type": "boolean"
            },
            "externalEntropyAccess": {
              "description": "Boolean flag that can be explicitly set to true to enable the secrets engine to access Vault's external entropy source\nEnable the secrets engine to access Vault's external entropy source",
              "type": "boolean"
            },
            "forceNoCache": {
              "description": "If set to true, disables caching.",
              "type": "boolean"
            },
            "id": {
              "type": "string"
            },
            "identityTokenKey": {
              "description": "The key to use for signing plugin workload identity tokens. If\nnot provided, this will default to Vault's OIDC default key. Requires Vault Enterprise 1.16+.\nThe key to use for signing plugin workload identity tokens",
              "type": "string"
            },
            "listingVisibility": {
              "description": "Specifies whether to show this mount in the UI-specific\nlisting endpoint. Valid values are unauth or hidden. If not set, behaves like hidden.\nSpecifies whether to show this mount in the UI-specific listing endpoint",
              "type": "string"
            },
            "local": {
              "description": "Boolean flag that can be explicitly set to true to enforce local mount in HA environment\nSpecifies if the secret backend is local only",
              "type": "boolean"
            },
            "maxLeaseTtlSeconds": {
              "description": "Maximum possible lease duration for tokens and secrets in seconds\nMaximum possible lease duration for secrets in seconds",
              "type": "number"
            },
            "namespace": {
              "description": "The namespace to provision the resource in.\nThe value should not contain leading or trailing forward slashes.\nThe namespace is always relative to the provider's configured namespace.\nAvailable only for Vault Enterprise.\nTarget namespace. (requires Enterprise)",
              "type": "string"
            },
            "options": {
              "description": "Specifies mount type specific options that are passed to the backend\nSpecifies mount type specific options that are passed to the backend",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "x-kubernetes-map-type": "granular"
            },
            "passthroughRequestHeaders": {
              "description": "List of headers to allow and pass from the request to\nthe plugin.\nList of headers to allow and pass from the request to the plugin",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "path": {
              "description": "The unique location this backend should be mounted at. Must not begin or end with a /. Defaults\nto consul.\nUnique name of the Vault Consul mount to configure",
              "type": "string"
            },
            "pluginVersion": {
              "description": "Specifies the semantic version of the plugin to use, e.g. \"v1.0.0\".\nIf unspecified, the server will select any matching unversioned plugin that may have been\nregistered, the latest versioned plugin registered, or a built-in plugin in that order of precedence.\nSpecifies the semantic version of the plugin to use, e.g. 'v1.0.0'",
              "type": "string"
            },
            "scheme": {
              "description": "Specifies the URL scheme to use. Defaults to http.\nSpecifies the URL scheme to use. Defaults to \"http\".",
              "type": "string"
            },
            "sealWrap": {
              "description": "Boolean flag that can be explicitly set to true to enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability\nEnable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions of the resource.",
          "type": "array",
          "items": {
            "description": "A Condition that may apply to a resource.",
            "type": "object",
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time this condition transitioned from one\nstatus to another.",
                "type": "string",
                "format": "date-time"
              },
              "message": {
                "description": "A Message containing details about this condition's last transition from\none status to another, if any.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "type": "integer",
                "format": "int64"
              },
              "reason": {
                "description": "A Reason for this condition's last transition from one status to another.",
                "type": "string"
              },
              "status": {
                "description": "Status of this condition; is it currently True, False, or Unknown?",
                "type": "string"
              },
              "type": {
                "description": "Type of this condition. At most one of each condition type may apply to\na resource at any point in time.",
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the latest metadata.generation\nwhich resulted in either a ready state, or stalled due to error\nit can not recover from without human intervention.",
          "type": "integer",
          "format": "int64"
        }
      },
      "additionalProperties": false
    }
  }
}
